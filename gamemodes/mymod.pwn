
/*
                             Master Roleplay Gaming
                                  
                                    [2017]

                Modun gelitirici Doukan'dr izinsiz kullanlmaz! //DEAKTF yazarak bulabilirsin.
*/
//--------------------------[ SCRIPT VERSION INFO ]--------------------------
#define 					SERVER_VERSION 						"v1.0"
#define 					TEAMSPEAK 							"-"
#define 					WEBSITE 							"-"
//------------------------------[ MYSQL BLGLER ]------------------------------
#define						SQL_HOST							"localhost"
#define 					SQL_USER 							"root"
#define 					SQL_PASS 							""
#define 					SQL_DB 								"master"
//--------------------------------[ INCLUDES ]-------------------------------
#include 					<a_samp>
#include 					<a_zones>
#include 					<streamer>
#include 					<foreach>
#include 					<progress>
#include 					<ZCMD>
#include 					<YSI/y_timers>
#include 					<yom_buttons>
#include 					<sscanf2>
#include 					<a_mysql>
#include                    <mSelection>
//--------------------------------[ DEFINES ]--------------------------------
#pragma tabsize 0
#define                     MAX_GATES                           (101)
#define                     MAX_OBJ 1001
#define 					TimeFactor 							(60)
#define 					MAX_HOUSES 							(100)
#define                     DIALOGMEGAFON                       (1236)
#define                     MAX_MDS                             (100)
#define 					MAX_DMAPICONS 						(200)
#define 					MAX_DDOORS 							(1000)
#define 					INVALID_HOUSE_ID 					(-1)
#define 					MAX_NOP_WARNINGS 					(4)
#define 					FACTION_PAY_PER_RANK 				(100)
#define 					MAX_PLAYERVEHICLES 					(10)
#define 					MAX_PLAYERTOYS 						(8)
#define 					MAX_PLAYER_ATTOBJECTS 				(8)
#define 					MAX_MODS 							(15)
#define 					MAX_DEALERSHIPVEHICLES 				(10)
#define 					MAX_CARDEALERSHIPS 					(15)
#define 					MAX_GANG_VEHICLES 					(16)
#define 					INVALID_PLAYER_VEHICLE_ID 			(0)
#define 					NEW_VULNERABLE 						(24)
#define 					TIME_TO_CLAIM 						(1)
#define          		    RENT_COST       					(350)
#define 					TIME_TO_TAKEOVER 					(10)
#define 					MAX_FAMILY 							(14)
#define 					MAX_POINTS 							(9)
#define 					TEMP_RESYNC_VW 						(3453)
#define 					MAX_MODS 							(15)
#define 					MAX_BARRICADES						(10)
#define                     MAX_KUKE                            (10)
#define                     MAX_ENGEL                           (10)
#define 					VEHICLE_RESPAWN 					(2700)
#define 					MAX_REPORTS  						(1000)
#define 					INVALID_REPORT_ID 					(-1)
#define 					REPORTSMENU 						(10031)
#define 					NOOB_SKIN 							(311)
#pragma 					dynamic 							(26384)
#define						vdolap 			 					(2042)
#define						vdolap1			 					(2043)
#define						vdolap2			 					(2044)
#define						vdolap3			 					(2045)
#define						vdolap4			 					(2046)
#define 					TRANSPARENT_VIP 					0xC93CCE00
#define 					COLOR_VIP 							0xC93CCEFF
#define 					DEDEKTIF 							1
#define 					AVUKAT 								2
#define 					HAYATKADINI 						3
#define 					UYUSTURUCUSATICISI 					4
#define 					TAMIRCI 							7
#define 					BODYGUARD 							8
#define 					SILAHSATICISI 						9
#define 					BOKSOR 								12
#define 					UYUSTURUCUKACAKCISI 				14
#define 					TAKSICI 							17
#define 					ZANAATKAR 							18
#define 					BARMEN 								19
#define 					KAMYONSOFORU 						20
#define 					PIZZACI 							21
#define 					MAX_RADAR        					20
#define 					MAX_PING 							800
#define 					MAX_YERDEKI_SILAH 					150
#define SpeedCheck(%0,%1,%2,%3,%4) floatround(floatsqroot(%4?(%0*%0+%1*%1+%2*%2):(%0*%0+%1*%1) ) *%3*1.6)

			/*  ---------------- MySQL THREADS ----------------- */
#define             		THREAD_NO_RESULT		         	(1)
#define             		THREAD_CONFIRM_USERNAME             (2)
#define 					THREAD_LOGIN_ATTEMPT 				(3)
#define             		THREAD_REGISTER_ACCOUNT         	(4)
#define             		THREAD_SAVE_ACCOUNT_CHAIN_1     	(5)
#define             		THREAD_SAVE_ACCOUNT_CHAIN_2     	(6)
#define             		THREAD_SAVE_ACCOUNT_CHAIN_3     	(7)
#define             		THREAD_SAVE_ACCOUNT_CHAIN_4     	(8)
#define             		THREAD_SAVE_ACCOUNT_CHAIN_5     	(9)
#define           		  	THREAD_SAVING_FINISHED          	(10)
#define            		 	THREAD_LOAD_P_ITEMS_CHAIN_1    		(11)
#define           		  	THREAD_OFFLINE_KILLS      		    (12)
#define            			THREAD_DELETE_PLAYER_OBJECT         (13)
#define            			THREAD_LOAD_P_ITEMS_CHAIN_2    		(14)
#define           			THREAD_CHECK_BANNED                 (15)
#define            		 	THREAD_OFFLINE_IP_CHECK             (16)
#define             		THREAD_OFFLINE_BAN                  (17)
#define            		 	THREAD_OFFLINE_WARN                 (18)
#define             		THREAD_OFFLINE_FINE                 (19)
#define             		THREAD_LOAD_P_ITEMS_CHAIN_3         (20)
#define             		THREAD_GET_STATS                    (21)
#define             		THREAD_OFFLINE_PRISON               (22)
#define             		THREAD_REFERRAL_MENU                (23)
#define             		THREAD_GIVE_REF_TOKENS              (24)
#define             		THREAD_LITERALLY_GIVE_REFTOKEN      (25)
#define             		THREAD_OFFLINE_UNINVITE             (26)
#define             		THREAD_FULLY_UNINVITE               (27)
#define             		THREAD_OFFLINE_FLAG                 (28)
#define             		THREAD_CHECK_NEW_NAME               (29)
#define             		THREAD_CONFIRMED_NAMECHANGE         (30)
#define             		THREAD_CHECK_NAME_PASSWORD          (31)
#define             		THREAD_FULLY_CHANGE_PASSWORD        (32)
#define             		THREAD_LIST_NAMECHANGES           	(33)
#define             		THREAD_OFFLINE_KILLS_2           	(34)
#define             		THREAD_MDC_CHECK           			(35)
			/*  ---------------- WALK STYLES ----------------- */
#define 					WALK_DEFAULT    					(0)
#define 					WALK_NORMAL     					(1)
#define 					WALK_PED       						(2)
#define 					WALK_GANGSTA   						(3)
#define 					WALK_GANGSTA2  						(4)
#define 					WALK_OLD       						(5)
#define 					WALK_FAT_OLD   						(6)
#define 					WALK_FAT      						(7)
#define 					WALK_LADY     						(8)
#define 					WALK_LADY2    						(9)
#define 					WALK_WHORE    						(10)
#define 					WALK_WHORE2   						(11)
#define 					WALK_DRUNK     						(12)
#define 					WALK_BLIND     						(13)
			/*  ---------------- TIMERS ----------------- */
#define						TYPE_TPMATRUNTIMER 					(1)
#define						TYPE_TPDRUGRUNTIMER 				(2)
#define						TYPE_ARMSTIMER 						(3)
#define						TYPE_GIVEWEAPONTIMER 				(4)
#define						TYPE_HOSPITALTIMER 					(5)
#define						TYPE_FLOODPROTECTION 				(7)
#define 					TYPE_GUARDTIMER 					(9)
#define						TYPE_TPTRUCKRUNTIMER 				(10)
#define 					TYPE_SELLMATSTIMER 					(12)
#define 					TYPE_TPPIZZARUNTIMER 				(13)
#define 					TYPE_PIZZATIMER 					(14)
#define						TYPE_SELLMYTIMER 					(15)
			/*  ---------------- DIALOGS ----------------- */
#define						MAINMENU 							(4070)
#define						MAINMENU2 							(4071)
#define						INFO_DIALOG 						(32767)
#define						JOBHELPMENU 						(10000)
#define						DETECTIVEJOB 						(10001)
#define						DETECTIVEJOB2 						(10002)
#define						DETECTIVEJOB3 						(10003)
#define						LAWYERJOB 							(10004)
#define						LAWYERJOB2 							(10005)
#define						LAWYERJOB3 							(10006)
#define						WHOREJOB 							(10007)
#define						WHOREJOB2 							(10008)
#define						WHOREJOB3 							(10009)
#define						DRUGDEALERJOB 						(10010)
#define						DRUGDEALERJOB2 						(10011)
#define						DRUGDEALERJOB3 						(10012)
#define						MECHANICJOB 						(10013)
#define						MECHANICJOB2 						(10014)
#define						MECHANICJOB3 						(10015)
#define						BODYGUARDJOB 						(10016)
#define						BODYGUARDJOB2 						(10017)
#define						BODYGUARDJOB3 						(10018)
#define						ARMSDEALERJOB 						(10019)
#define						ARMSDEALERJOB2 						(10020)
#define						ARMSDEALERJOB3 						(10021)
#define						BOXERJOB 							(10022)
#define						BOXERJOB2 							(10023)
#define						BOXERJOB3 							(10024)
#define						TAXIJOB 							(10025)
#define						TAXIJOB2 							(10026)
#define						TAXIJOB3 							(10027)
#define						SMUGGLEJOB 							(10028)
#define						SMUGGLEJOB2 						(10029)
#define						SMUGGLEJOB3 						(10030)
#define						CRAFTJOB 							(10031)
#define						BARTENDERJOB 						(10032)
#define						TRUCKERJOB 							(10033)
#define						TIRJOB 							    (13456)
#define						CIMENTOJOB 							(13457)
#define						PIZZAJOB 							(10034)
#define						DIALOG_SHOW_NAMECHANGES 			(8927)
#define						SAN_DUTYMENU 						(5510)
#define						FINDJOB 							(10035)
#define						HARITA 							    (10036)
#define						SIGNCHECK 							(6561)
#define						DIALOG_HUNT_QUESTION 				(852)
#define						DIALOG_HUNT_PRIZE 					(853)
#define						DIALOG_NAMECHANGE 					(261)
#define						DIALOG_NAMECHANGE2 					(262)
#define						DIALOG_SAN_CLOTHES 					(2289)
#define						FAMILYSKINDIALOG 					(5640)
#define						DOORLOCK 							(5000)
#define						DIALOG_CDGLOCKBUY 					(1310)
#define						DIALOG_CDGLOCKMENU 					(1309)
#define						GTRACKCAR 							(19102)
#define						FIGHTMENU 							(22222)
#define 					COLORMENU		(1111)
#define						STOREMENU 							(999)
#define						REGISTRATION_MENU_ONE 				(27301)
#define						REGISTRATION_MENU_TWO 				(27302)
#define						REGISTRATION_MENU_THREE 			(27303)
#define						REGISTRATION_MENU_FOUR 				(27304)
#define						REGISTRATION_MENU_FIVE 				(27305)
#define						GOVLOCKERMENU 						(4012)
#define						GOVEQUIPMENU 						(4013)
#define						GOVSKINMENU 						(4114)
#define						FINDDEALERSHIPMENU 					(4115)
#define						FINDCARTUNINGMENU 					(4116)
#define						DIALOG_ADMAIN						(32700)
#define						DIALOG_ADLIST						(32701)
#define						DIALOG_ADPLACE	 					(32702)
#define						DIALOG_ADPLACEP	 					(32703)
#define						DIALOG_ADSEARCH	 					(32704)
#define						DIALOG_ADSEARCHLIST 				(32705)
#define						DIALOG_ADFINAL	 					(32706)
#define						DIALOG_LICENSE_BUY 					(10040)
#define						NMUTE 								(4100)
#define						ADMUTE 								(4101)
#define						GOTOPLAYERCAR 						(19103)
#define						VEHICLESTORAGE 						(19104)
#define						REMOVEKEYS 							(4395)
#define						GIVEKEYS 							(4394)
#define						MPSPAYTICKETSCOP 					(4392)
#define						MPSPAYTICKETS 						(4393)
#define						TRACKCAR 							(19101)
#define						UNMODCARMENU 						(4388)
#define						DIALOG_CDLOCKBUY 					(1312)
#define						DIALOG_CDLOCKMENU 					(1311)
#define						DIALOG_CDGLOCKBUY 					(1310)
#define						DIALOG_CDGLOCKMENU 					(1309)
#define						DELETEPLAYERCAR 					(19110)
#define						DIALOG_REFSHOP 						(14555)
#define						TOYS 					 			(10131)
#define						DELETETOY 					 		(10132)
#define						WEARTOY 					 		(10133)
#define						BUYTOYS 					 		(10134)
#define						BUYTOYS2 					 		(10135)
#define						BUYTOYS3 					 		(10136)
#define						BUYTOYSGOLD 					 	(10137)
#define						BUYTOYSGOLD2 					 	(10138)
#define						BUYTOYSGOLD3 					 	(10139)
#define						EDITTOYS 					 		(10140)
#define						EDITTOYS2 					 		(10141)
#define						EDITTOYSBONE 					 	(10142)
/*#define					EDITTOYSPX 					 		(10143)
#define						EDITTOYSPY 					 		(10144)
#define						EDITTOYSPZ 					 		(10145)
#define						EDITTOYSRX 					 		(10146)
#define						EDITTOYSRY 					 		(10147)
#define						EDITTOYSRZ 					 		(10148)
#define						EDITTOYSSX							(30765)
#define						EDITTOYSSY							(30766)
#define						EDITTOYSSZ							(30767) */
#define						BUYTOYSCOP 					 		(10153)
#define						BUYTOYSCOP2 					 	(10154)
#define						BUYTOYSCOP3 					 	(10155)
#define						DIALOG_RADIOMENU_START 				(2800)
#define						DIALOG_RADIOMENU_SEARCH 			(2798)
#define						DIALOG_RADIOMENU_SEARCHLIST 		(2799)
#define						DIALOG_RADIOMENU_GENRE 				(2801)
#define						DIALOG_RADIOMENU_PLAY 				(2802)
#define						DIALOG_MP3_START 					(2803)
#define						DIALOG_MP3_SEARCH 					(2804)
#define						DIALOG_MP3_SEARCHLIST 				(2805)
#define						DIALOG_MP3_GENRE 					(2806)
#define						DIALOG_MP3_PLAY 					(2807)
#define						DIALOG_BOOMBOX_START 				(2808)
#define						DIALOG_BOOMBOX_SEARCH 				(2809)
#define						DIALOG_BOOMBOX_SEARCHLIST 			(2810)
#define						DIALOG_BOOMBOX_GENRE 				(2811)
#define						DIALOG_BOOMBOX_PLAY 				(2812)
#define						DIALOG_CDEDIT 						(1329)
#define						DIALOG_CDUPGRADE 					(1328)
#define						DIALOG_CDTILL 						(1327)
#define						DIALOG_CDEDITCARS 					(1326)
#define						DIALOG_CDEDITONE 					(1325)
#define						DIALOG_CDEDITMODEL 					(1324)
#define						DIALOG_CDEDITCOST 					(1323)
#define						DIALOG_CDEDITPARK 					(1322)
#define						DIALOG_CDDELVEH 					(1321)
#define						DIALOG_CDNEWVEH 					(1320)
#define						DIALOG_CDRADIUS 					(1319)
#define						DIALOG_CDNAME 						(1318)
#define						DIALOG_CDPRICE 						(1317)
#define						DIALOG_CDBUY 						(1316)
#define						DIALOG_CDWITHDRAW 					(1315)
#define						DIALOG_CDDEPOSIT 					(1314)
#define						DIALOG_CDSELL 						(1313)
#define						DUTYMENU 							(555)
#define						DUTYMENU2 							(666)
#define						DUTYMENU3 							(777)
#define						DUTYMENU4 							(888)
#define						DUTYMENU5 							(11111)
#define						FDUTYMENU 							(111)
#define						FDUTYMENU2 							(222)
#define						FDUTYMENU3 							(333)
#define						FDUTYMENU4 							(444)
#define						FDUTYMENU5 							(6666)
#define						LSFMDMENU 							(7777)
#define						LSFMDSKINS 							(9999)
#define						LSFMDGEAR 							(2000)
#define						MDC_START_ID 					 	(10098)
#define						MDC_MAIN 					 		(10099)
#define						MDC_FIND 							(10100)
#define						MDC_MEMBERS 					 	(10101)
#define						MDC_BLANK 					 		(10102)
#define						MDC_WARRANTS 					 	(10103)
#define						MDC_CHECK 					 		(10104)
#define						MDC_LICENSES 					 	(10105)
#define						MDC_LSPD 					 		(10106)
#define						MDC_SFPD 		 					(10107)
#define						MDC_FBI 		 					(10108)
#define						MDC_LSFMD 		 					(10109)
#define						MDC_MESSAGE 						(10110)
#define						MDC_SMS 		 					(10111)
#define						MDC_BOLOLIST 						(10112)
#define						MDC_ISSUE 		 					(10113)
#define						MDC_DELETE 		 					(10114)
#define						MDC_DEL_WARRANT 					(10115)
#define						MDC_DEL_BOLO 						(10116)
#define						MDC_LOGOUT 		 					(10117)
#define						MDC_CREATE 		 					(10118)
#define						MDC_CIVILIANS 						(10119)
#define						MDC_ISSUE_SLOT 					 	(10120)
#define						MDC_MESSAGE_2 						(10121)
#define						MDC_SMS_2 		 					(10122)
#define						MDC_BOLO 		 					(10123)
#define						MDC_BOLO_SLOT 						(10124)
#define						MDC_END_ID 							(10125)
#define						FMDC 								(10156)
#define						DRINKLISTDIALOG 					(10127)
#define						DRINKDIALOG 						(10128)
#define						TIPDIALOG 		 					(10129)
#define						DIALOG_LOADTRUCK 					(18301)
#define						DIALOG_LOADTRUCKL 					(18302)
#define						DIALOG_LOADTRUCKI 					(18303)
#define						SOUND_MUSIC1 		 				(1097)
#define						SOUND_OFF 		 					(1098)
#define						TEXT       		 					(3333)
//                           ADMIN COLORS
/////////////////////////////////////////////////////////////////////////////
#define						COLOR_A8						0x5ECEED00
#define						COLOR_A7						0x1959D000
#define						COLOR_A6						0x8F009C00
#define						COLOR_A5					    0xBC002600
#define						COLOR_A4						0xFFF48B00
#define						COLOR_A3						0x129E0000
#define						COLOR_A2						0xB9600000
#define						COLOR_A1						0xFFFFFF00
#define						COLOR_A0					    0xFFFFFF00
////////////////////////////////////////////////////////////////////////////

			/*  ---------------- COLORS ----------------- */
#define						TEAM_HIT_COLOR						0xFFFFFF00
#define						COLOR_GRAD1							0xB4B5B7FF
#define						COLOR_GRAD2							0xBFC0C2FF
#define						COLOR_GRAD3							0xCBCCCEFF
#define						COLOR_GRAD4							0xD8D8D8FF
#define						COLOR_GRAD5							0xE3E3E3FF
#define						COLOR_GRAD6							0xF0F0F0FF
#define						COLOR_GREY							0xAFAFAFAA
#define						COLOR_RED							0xAA3333AA
#define						COLOR_ORANGE						0xFF8000FF
#define						COLOR_YELLOW						0xFFFF00AA
#define						COLOR_FORSTATS						0xFFFF91AA
#define						COLOR_HOUSEGREEN					0x00E605AA
#define						COLOR_GREEN							0x33AA33AA
#define						COLOR_LIGHTGREEN					0x9ACD32AA
#define						COLOR_CYAN							0x5ECEED00
#define						COLOR_PURPLE						0xC2A2DAAA
#define						COLOR_BLACK							0x000000AA
#define						COLOR_WHITE							0xFFFFFFAA
#define						COLOR_FADE1							0xE6E6E6E6
#define						COLOR_FADE2							0xC8C8C8C8
#define						COLOR_FADE3							0xAAAAAAAA
#define						COLOR_FADE4							0x8C8C8C8C
#define						COLOR_FADE5							0x6E6E6E6E
#define						COLOR_LIGHTRED						0xFF6347AA
#define						COLOR_NEWS							0xFFA500AA
#define						COLOR_TWWHITE						0xFFFFFFAA
#define						TEAM_NEWS_COLOR						0x049C7100
#define						COLOR_TWYELLOW						0xFFFF00AA
#define						COLOR_TWPINK						0xE75480AA
#define						COLOR_TWRED							0xFF0000AA
#define						COLOR_TWBROWN						0x654321AA
#define						COLOR_TWGRAY						0x808080AA
#define						COLOR_TWOLIVE						0x808000AA
#define						COLOR_TWPURPLE						0x800080AA
#define						COLOR_TWTAN							0xD2B48CAA
#define						COLOR_TWAQUA						0x00FFFFAA
#define						COLOR_TWORANGE						0xFF8C00AA
#define						COLOR_TWAZURE						0x007FFFAA
#define						COLOR_TWGREEN						0x008000AA
#define						COLOR_TWBLUE						0x0000FFAA
#define						COLOR_TWBLACK						0x000000AA
#define						COLOR_LIGHTBLUE						0x33CCFFAA
#define						TEAM_CYAN_COLOR						0xFF8282AA
#define						FIND_COLOR							0xB90000FF
#define						TEAM_AZTECAS_COLOR					0x01FCFFC8
#define						TEAM_TAXI_COLOR						0xF2FF0000
#define						TEAM_CYAN_COLOR						0xFF8282AA
#define						DEPTRADIO							0xFFD7004A
#define						RADIO								0x8D8DFFFF
#define						COLOR_DBLUE							0x1959D000
#define						COLOR_ALLDEPT						0xFF8282AA
#define						TEAM_BLUE_COLOR						0x1959D000
#define						TEAM_FBI_COLOR						0x8D8DFF00
#define						TEAM_MED_COLOR						0xFF828200
#define						TEAM_APRISON_COLOR					0x9C791200
#define						COLOR_NG							0x9ACD3200
#define						COLOR_REPORT						0xFFFF91FF
#define						COLOR_NEWBIE						0x1959D000
#define						TEAM_ORANGE_COLOR					0xFF800000
#define						COLOR_PINK							0xFF66FFAA
#define						COLOR_OOC							0xE0FFFFAA
#define						COP_GREEN_COLOR						0x33AA33AA
#define						PUBLICRADIO_COLOR					0x6DFB6DFF
#define						TEAM_GROVE_COLOR					0x00D900C8
#define						COLOR_REALRED						0xFF0606FF
#define						TEAM_GREEN_COLOR					0xFFFFFFAA
#define						TEAM_ORANGE_COLOR					0xFF800000
#define						WANTED_COLOR						0xFF0000FF
#define						COLOR_GOV							0xE8E79BAA
			/*  ---------------- Aduty Admin Color ----------------- */
/* #define COLOR_A1  0x80804000
#define COLOR_A2 0xFF80C000
#define COLOR_A3 0x80808000
#define COLOR_A4 0x00800000
#define COLOR_A5 0xFF2B2B00
#define COLOR_A6 0x71000000
#define COLOR_A7 0x80008000
#define COLOR_A8 0x00C1C100
#define COLOR_A9 0x8080C000 */
			/*  ---------------- CHECKPOINTS ----------------- */
#define 					CHECKPOINT_NONE 					(0)
#define 					CHECKPOINT_HOME 					(12)
#define 					CHECKPOINT_HITMAN 					(123)
#define 					CHECKPOINT_LOADTRUCK 				(97651)
#define 					CHECKPOINT_RETURNTRUCK 				(97652)
#define 					CHECKPOINT_TIRBITIS 				(91653)
#define 					CHECKPOINT_BETONBITIS 				(91654)
			/*  ---------------- MISC ----------------- */
#define strcpy(%0,%1,%2) \
    strcat((%0[0] = '\0', %0), %1, %2)
#define HOLDING(%0) \
    ((newkeys & (%0)) == (%0))
#define RELEASED(%0) \
    (((newkeys & (%0)) != (%0)) && ((oldkeys & (%0)) == (%0)))
#define PRESSED(%0) \
    (((newkeys & (%0)) == (%0)) && ((oldkeys & (%0)) != (%0)))

#define 					ini_SetString(%0,%1,%2)				if(%2[0]) fwrite(%0, %1), fputchar(%0, '=', false) && fwrite(%0, %2) && fwrite(%0, "\r\n")
#define 					ini_SetInteger(%0,%1,%2,%3)        	format(%1, sizeof(%1), "%s=%d\r\n", %2, %3) && fwrite(%0, %1)
#define 					ini_SetFloat(%0,%1,%2,%3)          	format(%1, sizeof(%1), "%s=%.0f\r\n", %2, %3) && fwrite(%0, %1)
#define 					ResetMoneyBar 						ResetPlayerMoney
#define 					UpdateMoneyBar 						GivePlayerMoney
#define 					GetPlayerCash(%0) 					PlayerInfo[%0][pCash]
#define 					GivePlayerCash(%0,%1) 				PlayerInfo[%0][pCash] += (%1)
#define 					GetVehicleName(%0) 					VehicleName[GetVehicleModel(%0)-400]
#define 					SetPVarInt(%0,%1,0); 				DeletePVar(%0,%1);
//---------------------------[ NATIVES ]----------------------------
native 						WP_Hash(buffer[], len, const str[]);
native 						gpci(playerid, const serial[], maxlen);
//--------------------------[ VARIABLES ]---------------------------
enum kanalenum
{
	kName[32],
	kAcceptName[32],
	bool:kCount
};

new Text:TDEditor_TD[256]; // textdraw

new bool:flying[MAX_PLAYERS];
new BankRobTimer[MAX_PLAYERS];

new Text:giristxt[128]; // giri textdraw

new HelperKanal[MAX_PLAYERS][kanalenum];

new
	engine,
	lights,
	alarm,
	doors,
	bonnet,
	boot,
	objective
;


///////////////////////////
new oEdit[MAX_PLAYERS];
new oEditID[MAX_PLAYERS]; // Object's ID
new Float:oPos[MAX_PLAYERS][3];
new Float:oRot[MAX_PLAYERS][3];
new oldoID;
new Float:oldodX, Float:oldodY, Float:oldodZ, Float:oldodRX, Float:oldodRY, Float:oldodRZ;
/////////////////////////////////////////////////////////////////////////////////////////////


//LSPD YEN NTEROR KAPILAR
new LSPDLobby[10];
new LSPDLobbyStatus;
new LSPDLobbyStatus2;
new LSPDLobbyStatus3;
new LSPDCells[4];
new LSPDCellsStatus;
new LSPDOffice[2];
new LSPDOfficeStatus[2];
new LSPDChief[4];
new LSPDChiefStatus;

enum objInfo
{
	obj,
	Text3D:oText,
	oModel,
	Float:oX,
	Float:oY,
	Float:oZ,
	Float:oRX,
	Float:oRY,
	Float:oRZ,
}
new ObjInfo[MAX_OBJ][objInfo];

// new Object[MAX_PLAYERS];

new Text:TutTxtDraw[54];
new Text:ObjectsLoadingTD[8];// elleme az
new Text:txtAnimHelper;
// new Text:GPS[MAX_PLAYERS];
new ghour = 0;
new shifthour = 0;
new timeshift = 0;
new iAdverTimer;
new pointboundaries[9];
new PSeconds, PMinutes, PHours;

new PaintballTeam[MAX_PLAYERS];
new EventTeam[MAX_PLAYERS];
new PlayerDragged[MAX_PLAYERS];
new PlayerDraggedBy[MAX_PLAYERS];
new IsCopDragging[MAX_PLAYERS];
new JustSuicided[MAX_PLAYERS];
new LastSMS[MAX_PLAYERS];
new IsVehicleWindowsDown[MAX_VEHICLES]; // 0 = yes, 1 = no.
//new dildo; deaktif
new AntiTK;
new HouseKey[MAX_PLAYERS];
new Text3D:Helper[MAX_PLAYERS];
new walktime[MAX_PLAYERS];
new TotalLogin, TotalConnect, TotalAutoBan, TotalRegister,MaxPlayersConnected,MPDay,MPMonth,MPYear,TotalUptime,PlayerCars;
new Jackpot = 0;
new HHcheckUsed = 0;
new GlobalMOTD[128];
new AdminMOTD[128];
new Lawyers = 0;
new Mechanics = 0;
new Medics = 0;
new TaxiDrivers = 0;
new BusDrivers = 0;
//new nonewbie = 0;
new noooc = 1;
new nextteam;
new callcost = 1;
new cchargetime = 60;
new txtcost = 2;

new
	g_MySQLConnections[2]; // Array for future use.
new
	gaPaintballGameTimer[7],
	gaPaintballGameTimeRemaining[7],
	gaPaintballTimerHandles[7];

new VehicleStatus[MAX_VEHICLES char] = 0; // 0 == none, 1 == vehicle dead about to respawn
new Bar:LoadTruckBar[MAX_PLAYERS] = INVALID_BAR_ID;
new LoadTruckTime[MAX_PLAYERS];
new TruckDeliver[MAX_PLAYERS];
new TruckUsed[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new TirUsed[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new CimentoUsed[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new TruckContents[MAX_VEHICLES] = 0;
new FBILobbyLeft, FBILobbyLeftBTN[2], FBILobbyRight, FBILobbyRightBTN[2], FBIPrivate[2], FBIPrivateBTN[2];
new lspdcopsonly;
new lspdeveryone;
new lspddoor1;
new lspddoor2;
new Float:Positions[14][3];
new Barricade[MAX_BARRICADES];
new Kuke[MAX_KUKE];
new Engel[MAX_ENGEL];
new LSPDVehicles[45];
new FBIVehicles[25];
new LSFMDVehicles[42];
new SANVehicles[12];
new GovVehicles[18];
new LSPDGate;
new LSPDGate2;
new SAHGate1;
new SAHGate2;
new FBIGate1;
new FBIGate2;
new LSPDGateStatus;
new LSPDGate2Status;
new SAHGate1Status;
new SAHGate2Status;
new FBIGate1Status;
new FBIGate2Status;
new TruckerVehicles[37];
new TirVehicles[37];
new CimentoVehicles[20];
new VehicleBomb[MAX_VEHICLES char] = 0;
new PlacedVehicleBomb[MAX_PLAYERS] = INVALID_VEHICLE_ID;
new VehicleRadioStation[MAX_VEHICLES] = 0;
new vehicleMods[212][MAX_MODS][4];
new AdminRelogPassword[MAX_PLAYERS][129];
new AdminLoggedInBefore[MAX_PLAYERS];
new CreatedCars[50];
new CreatedCarsCount;
new gPlayerAccount[MAX_PLAYERS];
new gPlayerLogTries[MAX_PLAYERS];
new gPlayerLogged[MAX_PLAYERS];
//new Float:MenuTime[MAX_PLAYERS];
new InsideMainMenu[MAX_PLAYERS];
new InsideTut[MAX_PLAYERS];
new ActiveChatbox[MAX_PLAYERS];
new PlayerCuffed[MAX_PLAYERS];
new Spectate[MAX_PLAYERS];
new Spectating[MAX_PLAYERS];
new GettingSpectated[MAX_PLAYERS];
new InsideShamal[MAX_PLAYERS];
new HouseOffer[MAX_PLAYERS];
new NOPTrigger[MAX_PLAYERS];
new House[MAX_PLAYERS];
new HousePrice[MAX_PLAYERS];
new hInviteOffer[MAX_PLAYERS];
new hInviteHouse[MAX_PLAYERS];
//new hInviteSlot[MAX_PLAYERS];
new playerTabbed[MAX_PLAYERS];
new playerTabbedTime[MAX_PLAYERS];
new playerAFK[MAX_PLAYERS];
new shutdown;
new playerAFKTime[MAX_PLAYERS];
new playerLastTyped[MAX_PLAYERS];
new playerConnectedS[MAX_PLAYERS];
new playerSeconds[MAX_PLAYERS];
new pCurrentWeapon[MAX_PLAYERS];
new Float:HHcheckFloats[MAX_PLAYERS][6];
new HHcheckInt[MAX_PLAYERS];
new HHcheckVW[MAX_PLAYERS];
new gPlayerCheckpointStatus[MAX_PLAYERS];
new Float:TeleportDest[MAX_PLAYERS][3];
new Float:TeleportDest2[MAX_PLAYERS][3];
new TeleportDestInt[MAX_PLAYERS];
new TeleportDestInt2[MAX_PLAYERS];
new JetPack[MAX_PLAYERS];
new TextSpamTimes[MAX_PLAYERS];
new TextSpamUnmute[MAX_PLAYERS];
new CommandSpamTimes[MAX_PLAYERS];
new CommandSpamUnmute[MAX_PLAYERS];
new gLastCar[MAX_PLAYERS];
new GettingJob[MAX_PLAYERS];
/* new pmokuma[MAX_PLAYERS]; // DEKATF */
new GettingJob2[MAX_PLAYERS];
new PayCheckCode[MAX_PLAYERS];
new AdminDuty[MAX_PLAYERS];
new FindTimePoints[MAX_PLAYERS];
new FindingPlayer[MAX_PLAYERS];
new FindTime[MAX_PLAYERS];
new UsedFind[MAX_PLAYERS];
new Condom[MAX_PLAYERS];
new SexOffer[MAX_PLAYERS];
new SexPrice[MAX_PLAYERS];
new SexWarn[MAX_PLAYERS][MAX_PLAYERS];
new Text3D:SANews3DText;
new gFam[MAX_PLAYERS];
new InviteOffer[MAX_PLAYERS];
new InviteFaction[MAX_PLAYERS];
new InviteFamily[MAX_PLAYERS];
new LockStatus[MAX_VEHICLES];
new PotOffer[MAX_PLAYERS];
new PotPrice[MAX_PLAYERS];
new PotGram[MAX_PLAYERS];
new CrackOffer[MAX_PLAYERS];
new CrackPrice[MAX_PLAYERS];
new CrackGram[MAX_PLAYERS];
new CrackWarn[MAX_PLAYERS][MAX_PLAYERS];
new PotWarn[MAX_PLAYERS][MAX_PLAYERS];
new JobDuty[MAX_PLAYERS];
new WantLawyer[MAX_PLAYERS];
new CallLawyer[MAX_PLAYERS];
new HelperPM[MAX_PLAYERS];
new SpeakerPhone[MAX_PLAYERS];
new JailPrice[MAX_PLAYERS];
new DefendOffer[MAX_PLAYERS];
new DefendPrice[MAX_PLAYERS];
new CP[MAX_PLAYERS];
new GuardOffer[MAX_PLAYERS];
new GuardPrice[MAX_PLAYERS];
new GuardWarn[MAX_PLAYERS][MAX_PLAYERS];
new GunOffer[MAX_PLAYERS];
new GunId[MAX_PLAYERS];
new GunMats[MAX_PLAYERS];
new MatsOffer[MAX_PLAYERS];
new MatsPrice[MAX_PLAYERS];
new MatsAmount[MAX_PLAYERS];
new MatsWarn[MAX_PLAYERS][MAX_PLAYERS];
// new IsRented[MAX_VEHICLES], RentedBy[MAX_VEHICLES][24];  [DEAKTF]
new InRing = 0;
new BoxDelay = 0;
new RoundStarted = 0;
new Boxer1 = INVALID_PLAYER_ID;
new Boxer2 = INVALID_PLAYER_ID;
new PlayerBoxing[MAX_PLAYERS];
new BoxOffer[MAX_PLAYERS];
new BoxWaitTime[MAX_PLAYERS];
new UsedWeed[MAX_PLAYERS];
new UsedCrack[MAX_PLAYERS];
new PlayerStoned[MAX_PLAYERS];
new TransportDuty[MAX_PLAYERS];
new TransportValue[MAX_PLAYERS];
new TransportMoney[MAX_PLAYERS];
new TransportTime[MAX_PLAYERS];
new TransportCost[MAX_PLAYERS];
new TransportDriver[MAX_PLAYERS];
new ConsumingMoney[MAX_PLAYERS];
new BusCallTime[MAX_PLAYERS];
new BusAccepted[MAX_PLAYERS];
new TaxiCallTime[MAX_PLAYERS];
new TaxiAccepted[MAX_PLAYERS];
new TaxiCall = 999;
new BusCall = 999;
new MechanicCall = 999;
new MedicCall = 999;
new TaxiWarn[MAX_PLAYERS][MAX_PLAYERS];
new DrinkOffer[MAX_PLAYERS];
new DrinkWarn[MAX_PLAYERS][MAX_PLAYERS];
new PayWarn[MAX_PLAYERS][MAX_PLAYERS];
new Float:StopaniFloats[MAX_PLAYERS][3];
new CraftOffer[MAX_PLAYERS];
new CraftId[MAX_PLAYERS];
new CraftMats[MAX_PLAYERS];
new CraftName[MAX_PLAYERS][50];
new VehicleSpawned[MAX_PLAYERS];
new VehicleOffer[MAX_PLAYERS];
new VehicleId[MAX_PLAYERS];
new VehiclePrice[MAX_PLAYERS];
new ListItemReleaseId[MAX_PLAYERS][50];
new GiveKeysTo[MAX_PLAYERS];
new ListItemTrackId[MAX_PLAYERS][50];
new RepairOffer[MAX_PLAYERS];
new RepairPrice[MAX_PLAYERS];
new RepairCar[MAX_PLAYERS];
new RepairWarn[MAX_PLAYERS][MAX_PLAYERS];
new OnDuty[MAX_PLAYERS];
new ConnectedToPC[MAX_PLAYERS];
new PlayerCuffedTime[MAX_PLAYERS];
new PhoneOnline[MAX_PLAYERS];
new pTazer[MAX_PLAYERS];
new pTazerReplace[MAX_PLAYERS];
new TazerTimeout[MAX_PLAYERS];
new TicketOffer[MAX_PLAYERS];
new RentableCar[10];
new TicketMoney[MAX_PLAYERS];
new arr_Towing[MAX_PLAYERS];
new arr_Engine[MAX_VEHICLES];
new Fixr[MAX_PLAYERS];
new gBug[MAX_PLAYERS];
new GotHit[MAX_PLAYERS];
new GoChase[MAX_PLAYERS];
new GetChased[MAX_PLAYERS];
new HitOffer[MAX_PLAYERS];
new HitToGet[MAX_PLAYERS];
new gNews[MAX_PLAYERS];
new JustReported[MAX_PLAYERS];
new NewbieTimer[MAX_PLAYERS];
new gNewbie[MAX_PLAYERS];
new Float:EventFloats[MAX_PLAYERS][6]; // 0 = EventLastR 1 = EventLastX 2 = EventLastY 3 = EventLastZ 4 = EventLastH 5 = EventLastA
new EventLastInt[MAX_PLAYERS];
new EventLastVW[MAX_PLAYERS];
new Mobile[MAX_PLAYERS];
new CellTime[MAX_PLAYERS];
new CalledCops[MAX_PLAYERS];
new CopsCallTime[MAX_PLAYERS];
new CalledMedics[MAX_PLAYERS];
new MedicsCallTime[MAX_PLAYERS];
new Music[MAX_PLAYERS];
new PlayerTied[MAX_PLAYERS];
new gRadio[MAX_PLAYERS];
new CallCost[MAX_PLAYERS];
new szAdvert[MAX_PLAYERS][128];
new IsBoundsShowingFFC[MAX_PLAYERS];
new IsBoundsShowingMP1[MAX_PLAYERS];
new IsBoundsShowingMF1[MAX_PLAYERS];
new IsBoundsShowingMP2[MAX_PLAYERS];
new IsBoundsShowingMF2[MAX_PLAYERS];
new IsBoundsShowingAEC[MAX_PLAYERS];
new IsBoundsShowingDH[MAX_PLAYERS];
new IsBoundsShowingCL[MAX_PLAYERS];
new IsBoundsShowingDF[MAX_PLAYERS];
new GlobalChat[MAX_PLAYERS];
new GlobalChatTimer[MAX_PLAYERS];
new EMSCallTime[MAX_PLAYERS];
new EMSAccepted[MAX_PLAYERS];
new MedicCallTime[MAX_PLAYERS];
new MedicAccepted[MAX_PLAYERS];
new MechanicCallTime[MAX_PLAYERS];
new DivorceOffer[MAX_PLAYERS];
new MarryWitness[MAX_PLAYERS];
new MarryWitnessOffer[MAX_PLAYERS];
new MarriageCeremoney[MAX_PLAYERS];
new ProposeOffer[MAX_PLAYERS];
new ProposedTo[MAX_PLAYERS];
new GotProposedBy[MAX_PLAYERS];
new slotselection[MAX_PLAYERS];
new ServiceTime[MAX_PLAYERS];
new WasHereForPaycheck[MAX_PLAYERS];
new SignedPaycheck[MAX_PLAYERS];
new MissedPaychecks[MAX_PLAYERS];
new LiveOffer[MAX_PLAYERS];
new IsTheReporter[MAX_PLAYERS];
new TalkingLive[MAX_PLAYERS];
new HidePM[MAX_PLAYERS];
new Backup[MAX_PLAYERS];
new RadarActive[MAX_PLAYERS];
new RadarWarning[MAX_PLAYERS];
/* new Text:RadarTitle[MAX_PLAYERS];
new Text:RadarContext[MAX_PLAYERS]; */
new FindingJob[MAX_PLAYERS];
new FindingDealership[MAX_PLAYERS];
new ShakeHandRequest[MAX_PLAYERS];
new ShakeHandStyle[MAX_PLAYERS];
new TutorialProgress[MAX_PLAYERS];
new Float:ValidArmor[MAX_PLAYERS];
new PhonePrivacy[MAX_PLAYERS];
new MP3Station[MAX_PLAYERS];
new BoomBoxSet[MAX_PLAYERS];
// new PizzaVehicles[12];
new Bar:PizzaBar[MAX_PLAYERS];
new Float: fVehSpeed[MAX_PLAYERS];
new Float:PlayerPos[MAX_PLAYERS][6];
new Float:TelePos[MAX_PLAYERS][6];
new levelexp = 4;
// Gate
new gEdit[MAX_PLAYERS];
new gEditID[MAX_PLAYERS];
new Float:gPos[MAX_PLAYERS][3];
new Float:gRot[MAX_PLAYERS][3];
// Hz Limiti Sistemi
new Speedlimit[MAX_PLAYERS];
// Gz balama
new Blindfolded[MAX_PLAYERS];
// Benzin Sistemi
#define FUEL_PRICE 4
new RefuelingVehiclePrice[MAX_PLAYERS];
new Float: Fuel[MAX_VEHICLES] = 100.0;
new isrefuelling[MAX_PLAYERS] = 0;
new Bar:FuelBar[MAX_PLAYERS] = INVALID_BAR_ID;
new RefuelingVehicleTimer[MAX_PLAYERS];
// VP
new VIPisci[MAX_PLAYERS];//VIP MESLEK
new VipVehicles[14];
// Textdraw
// Radar
enum rInfo
{
	Float:tX,
	Float:tY,
	Float:tZ,
	Float:tRX,
	Float:tRY,
	Float:tRZ,
	Float:rRadio,
	rVelMax,
	rCreado
}
new RadarInfo[MAX_RADAR][rInfo];
new Text:Foto;
new LimiteSuperado[MAX_PLAYERS];
// Boombox Sistemi
new Boombox[MAX_PLAYERS];
new BoomboxObject[MAX_PLAYERS];
new BoomboxStream[MAX_PLAYERS];
new BoomboxPlayer[MAX_PLAYERS];
new BoomboxURL[MAX_PLAYERS][256];
new Float:bpos[MAX_PLAYERS][4];
//resimli skin
new SkinList = mS_INVALID_LISTID;
// admin fly
forward AdminFly(playerid);
forward Float:SetPlayerToFacePos(playerid, Float:X, Float:Y);
///////////////////////////

//hile testi
new KontrolEdildi[MAX_PLAYERS];
forward KontrolEdiver(playerid);
stock OyuncuIsmiNedir(playerid) {
	new isim[MAX_PLAYER_NAME];
	GetPlayerName(playerid, isim, MAX_PLAYER_NAME);
	return isim;
}
// Ara Kullanlmaz Halde
new Float: explodehealth;
// Gieler
new Giseler[6];
//Color Sistemi Kodlayan By Yusuf
new ColorList[][121] =
{
    "{000000}000 {F5F5F5}001 {2A77A1}002 {840410}003 {263739}004 {86446E}005 {D78E10}006 {4C75B7}007 {BDBEC6}008 {5E7072}009\n",
    "{46597A}010 {656A79}011 {5D7E8D}012 {58595A}013 {D6DAD6}014 {9CA1A3}015 {335F3F}016 {730E1A}017 {7B0A2A}018 {9F9D94}019\n",
    "{3B4E78}020 {732E3E}021 {691E3B}022 {96918C}023 {515459}024 {3F3E45}025 {A5A9A7}026 {635C5A}027 {3D4A68}028 {979592}029\n",
    "{421F21}030 {5F272B}031 {8494AB}032 {767B7C}033 {646464}034 {5A5752}035 {252527}036 {2D3A35}037 {93A396}038 {6D7A88}039\n",
    "{221918}040 {6F675F}041 {7C1C2A}042 {5F0A15}043 {193826}044 {5D1B20}045 {9D9872}046 {7A7560}047 {989586}048 {ADB0B0}049\n",
    "{848988}050 {304F45}051 {4D6268}052 {162248}053 {272F4B}054 {7D6256}055 {9EA4AB}056 {9C8D71}057 {6D1822}058 {4E6881}059\n",
    "{9C9C98}060 {917347}061 {661C26}062 {949D9F}063 {A4A7A5}064 {8E8C46}065 {341A1E}066 {6A7A8C}067 {AAAD8E}068 {AB988F}069\n",
    "{851F2E}070 {6F8297}071 {585853}072 {9AA790}073 {601A23}074 {20202C}075 {A4A096}076 {AA9D84}077 {78222B}078 {0E316D}079\n",
    "{722A3F}080 {7B715E}081 {741D28}082 {1E2E32}083 {4D322F}084 {7C1B44}085 {2E5B20}086 {395A83}087 {6D2837}088 {A7A28F}089\n",
    "{AFB1B1}090 {364155}091 {6D6C6E}092 {0F6A89}093 {204B6B}094 {2B3E57}095 {9B9F9D}096 {6C8495}097 {4D8495}098 {AE9B7F}099\n",
    "{406C8F}100 {1F253B}101 {AB9276}102 {134573}103 {96816C}104 {64686A}105 {105082}106 {A19983}107 {385694}108 {525661}109\n",
    "{7F6956}110 {8C929A}111 {596E87}112 {473532}113 {44624F}114 {730A27}115 {223457}116 {640D1B}117 {A3ADC6}118 {695853}119\n",
    "{9B8B80}120 {620B1C}121 {5B5D5E}122 {624428}123 {731827}124 {1B376D}125 {EC6AAE}126 {000000}127 {177517}128 {210606}129\n",
    "{125478}130 {452A0D}131 {571E1E}132 {010701}133 {25225A}134 {2C89AA}135 {8A4DBD}136 {35963A}137 {B7B7B7}138 {464C8D}139\n",
    "{84888C}140 {817867}141 {817A26}142 {6A506F}143 {583E6F}144 {8CB972}145 {824F78}146 {6D276A}147 {1E1D13}148 {1E1306}149\n",
    "{1F2518}150 {2C4531}151 {1E4C99}152 {2E5F43}153 {1E9948}154 {1E9999}155 {999976}156 {7C8499}157 {992E1E}158 {2C1E08}159\n",
    "{142407}160 {993E4D}161 {1E4C99}162 {198181}163 {1A292A}164 {16616F}165 {1B6687}166 {6C3F99}167 {481A0E}168 {7A7399}169\n",
    "{746D99}170 {53387E}171 {222407}172 {3E190C}173 {46210E}174 {991E1E}175 {8D4C8D}176 {805B80}177 {7B3E7E}178 {3C1737}179\n",
    "{733517}180 {781818}181 {83341A}182 {8E2F1C}183 {7E3E53}184 {7C6D7C}185 {020C02}186 {072407}187 {163012}188 {16301B}189\n",
    "{642B4F}190 {368452}191 {999590}192 {818D96}193 {99991E}194 {7F994C}195 {839292}196 {788222}197 {2B3C99}198 {3A3A0B}199\n",
    "{8A794E}200 {0E1F49}201 {15371C}202 {15273A}203 {375775}204 {060820}205 {071326}206 {20394B}207 {2C5089}208 {15426C}209\n",
    "{103250}210 {241663}211 {692015}212 {8C8D94}213 {516013}214 {090F02}215 {8C573A}216 {52888E}217 {995C52}218 {99581E}219\n",
    "{993A63}220 {998F4E}221 {99311E}222 {0D1842}223 {521E1E}224 {42420D}225 {4C991E}226 {082A1D}227 {96821D}228 {197F19}229\n",
    "{3B141F}230 {745217}231 {893F8D}232 {7E1A6C}233 {0B370B}234 {27450D}235 {071F24}236 {784573}237 {8A653A}238 {732617}239\n",
    "{319490}240 {56941D}241 {59163D}242 {1B8A2F}243 {38160B}244 {041804}245 {355D8E}246 {2E3F5B}247 {561A28}248 {4E0E27}249\n",
    "{706C67}250 {3B3E42}251 {2E2D33}252 {7B7E7D}253 {4A4442}254 {28344E}255\n"
};
// SLAH BIRAKMA SSTEM
enum silahInfos
{
	slModel,
	Float:slX,
	Float:slY,
	Float:slZ,
	slVW,
	slINT,
	slObje,
	Aktif
}
new YerdekiSilahlar[MAX_YERDEKI_SILAH][silahInfos];
new SilahObjeleri[47][0] =
{
	{0},
	{331},
	{333},
	{334},
	{335},
	{336},
	{337},
	{338},
	{339},
	{341},
	{321},
	{322},
	{323},
	{324},
	{325},
	{326},
	{342},
	{343},
	{344},
	{0},
	{0},
	{0},
	{346},
	{347},
	{348},
	{349},
	{350},
	{351},
	{352},
	{353},
	{355},
	{356},
	{372},
	{357},
	{358},
	{359},
	{360},
	{361},
	{362},
	{363},
	{364},
	{365},
	{366},
	{367},
	{368},
	{368},
	{371}
};
new bool:SilahKontrol[MAX_PLAYERS][44];
new BigEar[MAX_PLAYERS];
//--------------------------[ ARRAYS ]---------------------------
new
	Float:AdminPrisonFloat[18][3] = {
		{215.664749, 1806.403198, 1618.534423},
		{211.635513, 1806.531005, 1618.534423},
		{207.159301, 1806.923339, 1618.535888},
		{201.544662, 1806.452758, 1618.535888},
		{197.230133, 1806.381225, 1618.535888},
		{193.142883, 1806.796752, 1618.535888},
		{215.664749, 1806.403198, 1614.260375},
		{211.635513, 1806.531005, 1614.260375},
		{207.159301, 1806.923339, 1614.260375},
		{201.544662, 1806.452758, 1614.260375},
		{197.230133, 1806.381225, 1614.260375},
		{193.142883, 1806.796752, 1614.260375},
		{215.664749, 1806.403198, 1609.985473},
		{211.635513, 1806.531005, 1609.985473},
		{207.159301, 1806.923339, 1609.985473},
		{201.544662, 1806.452758, 1609.985473},
		{197.230133, 1806.381225, 1609.985473},
		{193.142883, 1806.796752, 1609.985473}
};

#if defined TREASURE_HUNT_ENABLED
new
	iHuntLocation,
	iHuntPickup,
	Text3D: lHunt,
	Float: fTreasureHuntLS[79][3] = {
		{1229.6487, 2656.6077, 10.8203},
		{723.9209, -1827.9728, -11.1979},
		{975.8365, -1553.5372, 21.5021},
		{2838.0945, -2355.9885, 42.7344},
		{2864.8975, -2125.0532, 5.9132},
		{2839.2737, -1333.6603, 11.1132},
		{305.7408, -1348.6904, 53.3819},
		{300.4908, -1343.3966, 60.0211},
		{567.0254, -1368.8667, 52.4344},
		{-574.8304, -1484.6580, 14.3438},
		{-1848.4028, -1708.3975, 41.1117},
		{-84.5177, -102.4145, 6.4844},
		{359.0852, -1401.2878, 20.4090},
		{-406.8927, -1448.9119, 50.9145},
		{2783.3496, -1246.1157, 62.2969},
		{2750.9673, -2261.2080, 42.2668},
		{2423.9233, -2283.6018, 42.4465},
		{2258.9204, -2458.7249, 42.1496},
		{1627.6660, -2286.4536, 94.1270},
		{680.0054, 824.4684, -42.9609},
		{-84.7650, -223.2539, 80.1250},
		{-1062.0853, -696.3816, 56.3359},
		{-744.2923, -796.8502, 152.1255},
		{-609.9691, -789.1779, 79.9550},
		{1019.3333, -301.4924, 77.3594},
		{2351.4570, -653.0359, 128.0547},
		{2751.4368, -2189.9272, 46.2275},
		{1498.1407, -1665.2388, 34.0469},
		{598.8820, -1266.4218, 64.1859},
		{1094.6667, -675.9512, 110.1484},
		{65.3320, -1820.0994, -57.3189},
		{302.2582, 1035.6158, 1104.5601},
		{-1094.6779, 606.7272, 1116.5078},
		{1094.1510, -2036.9094, 82.7574},
		{1786.7986, -1303.2233, 13.5532},
		{1956.6277, -1199.6770, 16.5859},
		{2216.9233, -1190.1036, 33.5313},
		{2708.2070, -2187.5305, 27.9262},
		{1846.2129, -1135.9796, 51.8616},
		{1986.8707, -1114.6799, 35.6250},
		{2179.1436, -2008.8317, 32.4801},
		{2216.3784, -2698.1467, 17.8828},
		{603.2033, -1628.5216, 28.0547},
		{660.7752, -1602.5293, 20.3269},
		{688.5105, -1607.3796, 22.0391},
		{1654.8735, -1638.1479, 83.7813},
		{1671.3395, -1344.6774, 158.4766},
		{1651.7982, -1271.9119, 167.5547},
		{1681.6056, -1223.9996, 167.5547},
		{1278.5238, -1697.4240, 39.4375},
		{1481.8771, -1790.1433, 156.7533},
		{1764.0298, -2286.3223, 26.7960},
		{2202.5444, -2330.3840, 33.7149},
		{2280.8369, -1952.3245, 21.2188},
		{2737.8037, -1760.2153, 44.1507},
		{2840.6848, -2538.9077, 18.2075},
		{2745.8557, -1689.5879, 30.6551},
		{2660.9539, -1458.9890, 79.3805},
		{2606.5115, -1299.3252, 81.1481},
		{1099.8422, -824.3608, 114.4477},
		{939.5084, -910.8499, 80.7187},
		{309.7915, -1146.1421, 92.0492},
		{-1412.3374, -23.8541, 6.0000},
		{-2483.6931, -1549.5001, 401.5734},
		{-2753.6919, -2000.8949, 40.9872},
		{-2712.7534, -344.6357, 54.4080},
		{-1026.7931, -705.2756, 135.5049},
		{2072.7185, -1000.6807, 58.9766},
		{919.1627, -1021.8905, 107.5781},
		{-84.5577, -223.3596, 80.1250},
		{2505.3049, -2640.7354, 13.8623},
		{1474.5920, -2287.0769, 42.4205},
		{2590.4080, -632.3589, 133.3495},
		{-534.0347, -102.9933, 63.2969},
		{323.5139, -1131.3894, 80.9141},
		{194.7249, -1230.7240, 76.0469},
		{226.2876, -1186.0181, 72.0313},
		{955.2682, -719.9095, 122.2109},
		{1334.1615, -650.9788, 108.2632}
};
#endif

new Songs[7][1] = {
{1187},
{1185},
{1183},
{1097},
{1076},
{1068},
{1062}
};

new CIV[] = {7,19,20,23,73,101,122};
new STD1[] = {0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3};
new STD2[] = {0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3, 3, 3};
new STD3[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3};
new STD4[] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 3};
new SELLCAR1[] = { 100, 112, 124, 134, 147, 157, 163, 176, 189, 194, 200 };
new SELLCAR2[] = { 209, 213, 225, 237, 245, 256, 261, 272, 287, 298, 300 };
new SELLCAR3[] = { 305, 317, 321, 337, 345, 355, 367, 375, 386, 396, 400 };
new SELLCAR4[] = { 407, 412, 427, 437, 442, 456, 461, 475, 489, 491, 500 };


static const VehicleName[212][] = {
	"Landstalker","Bravura","Buffalo","Linerunner","Perennial","Sentinel","Dumper","Firetruck","Trashmaster","Stretch",
	"Manana","Infernus","Voodoo","Pony","Mule","Cheetah","Ambulance","Leviathan","Moonbeam","Esperanto","Taxi",
	"Washington","Bobcat","Mr Whoopee","BF Injection","Hunter","Premier","Enforcer","Securicar","Banshee","Predator",
	"Bus","Rhino","Barracks","Hotknife","Trailer","Previon","Coach","Cabbie","Stallion","Rumpo","RC Bandit", "Romero",
	"Packer","Monster","Admiral","Squalo","Seasparrow","Pizzaboy","Tram","Trailer","Turismo","Speeder","Reefer","Tropic","Flatbed",
	"Yankee","Caddy","Solair","Berkley's RC Van","Skimmer","PCJ-600","Faggio","Freeway","RC Baron","RC Raider",
	"Glendale","Oceanic","Sanchez","Sparrow","Patriot","Quad","Coastguard","Dinghy","Hermes","Sabre","Rustler",
	"ZR-350","Walton","Regina","Comet","BMX","Burrito","Camper","Marquis","Baggage","Dozer","Maverick","News Chopper",
	"Rancher","FBI Rancher","Virgo","Greenwood","Jetmax","Hotring Racer","Sandking","Blista Compact","Police Maverick",
	"Boxville","Benson","Mesa","RC Goblin","Hotring Racer A","Hotring Racer B","Bloodring Banger","Rancher","Super GT",
	"Elegant","Journey","Bike","Mountain Bike","Beagle","Cropduster","Stuntplane","Tanker","Road Train","Nebula","Majestic",
	"Buccaneer","Shamal","Hydra","FCR-900","NRG-500","HPV-1000","Cement Truck","Tow Truck","Fortune","Cadrona","FBI Truck",
	"Willard","Forklift","Tractor","Combine","Feltzer","Remington","Slamvan","Blade","Freight","Streak","Vortex","Vincent",
	"Bullet","Clover","Sadler","Firetruck","Hustler","Intruder","Primo","Cargobob","Tampa","Sunrise","Merit","Utility",
	"Nevada","Yosemite","Windsor","Monster A","Monster B","Uranus","Jester","Sultan","Stratum","Elegy","Raindance","RC Tiger",
	"Flash","Tahoma","Savanna","Bandito","Freight","Trailer","Kart","Mower","Duneride","Sweeper","Broadway",
	"Tornado","AT-400","DFT-30","Huntley","Stafford","BF-400","Newsvan","Tug","Trailer","Emperor","Wayfarer",
	"Euros","Hotdog","Club","Trailer","Trailer","Andromada","Dodo","RCCam","Launch","Police Car (LSPD)","Police Car (SFPD)",
	"Police Car (LVPD)","Police Ranger","Picador","S.W.A.T. Van","Alpha","Phoenix","Glendale","Sadler","Luggage Trailer A",
	"Luggage Trailer B","Stair Trailer","Boxville","Farm Plow","Utility Trailer"
};

new Peds[217][1] = {
{299},
{288},//TEAM_ADMIN
{286},{287},{228},{113},{120},{147},{294},{227},{61},{171},
{247},//CIVILIANS DOWN HERE
{248},{100},{256},{263},{262},{261},{260},{259},{258},{257},{256},{255},
{253},{252},{251},{249},{246},{245},{244},{243},{242},{241},{240},{239},
{238},{237},{236},{235},{234},{233},{232},{231},{230},{229},
{226},{225},{173},{174},{175},{224},{223},{222},{221},{220},{219},{218},
{217},{216},{215},{214},{213},{212},{211},{210},{209},
{207},{206},{205},{204},{203},{202},{201},{200},{199},{198},{197},{196},
{195},{194},{193},{192},{191},{190},{189},{185},{184},{183},
{182},{181},{180},{179},{178},{176},{172},{170},{168},{167},{162},
{161},{160},{159},{158},{157},{156},{155},{154},{153},{152},{151},
{146},{145},{144},{143},{142},{141},{140},{139},{138},{137},{136},{135},
{134},{133},{132},{131},{130},{129},{128},{254},{99},{97},{96},{95},{94},
{92},{90},{89},{88},{87},{85},{84},{83},{82},{81},{80},{79},{78},{77},{76},
{75},{73},{72},{69},{68},{67},{66},{64},{63},{62},{58},{57},{56},{55},
{54},{53},{52},{51},{50},{49},{45},{44},{43},{41},{39},{38},{37},{36},{35},
{34},{33},{32},{31},{30},{29},{28},{27},{26},{25},{24},{23},{22},{21},{20},
{19},{18},{17},{16},{15},{14},{13},{12},{11},{10},{1},{2},
{290},//ROSE
{291},//PAUL
{292},//CESAR
{293},//OGLOC
{187},
{296},//JIZZY
{297},//MADDOGG
{298},//CAT
{299}//ZERO
};

enum VehicleRadioEnum
{
	radioname[32],
	radiourl[256],
	listeners
}

 new VehicleRadioListing[10][VehicleRadioEnum] = { // bunlar gzksn diye
// Master Radyo (0-9)
{"Joy Trk","http://provisioning.streamtheworld.com/pls/JOY_TURK128AAC.pls"},
{"PowerTrk","http://icast.powergroup.com.tr/PowerTurk/mpeg/128/home"},
{"TRT FM","http://trtcanlifm-lh.akamaihd.net/i/TRTFM_1@181846/master.m3u8"},
{"Joy Trk Akustik","http://provisioning.streamtheworld.com/pls/JOYTURK_AKUSTIKAAC.pls"},
{"Efkar FM","http://provisioning.streamtheworld.com/pls/EFKARAAC.pls"},
{"Number1 Trk","http://46.20.4.61/listen.pls"},
{"Kral Pop","http://46.20.3.201/listen.pls"},
{"Show Radyo","http://46.20.3.228/listen.pls"},
{"Joy FM","http://provisioning.streamtheworld.com/pls/JOY_FMAAC.pls"},
{"Virgin Radio","http://provisioning.streamtheworld.com/pls/VIRGIN_RADIOAAC.pls"}
};
/* // Blues 10-19)
{"1.FM - Blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1270282"},
{"BellyUp4Blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=11408"},
{"CALMRADIO - BLUES","http://yp.shoutcast.com/sbin/tunein-station.pls?id=205177"},
{"KOQX Blues Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1271824"},
{"GotRadio - Bit 'O Blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=533805"},
{"radioio blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1278494"},
{"Polskie Radio - Blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1044755"},
{"Big Blue Swing","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377377"},
{"City Sounds Radio Blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=20151"},
{"Calm Radio Blues","http://yp.shoutcast.com/sbin/tunein-station.pls?id=205177"},

// Classical (20-29)
{"CLASSICAL 102","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1676910"},
{"Iowa Public Radio Classical","http://yp.shoutcast.com/sbin/tunein-station.pls?id=177883"},
{"181.FM Classic Hits","http://yp.shoutcast.com/sbin/tunein-station.pls?id=213419"},
{"Cinemix","http://yp.shoutcast.com/sbin/tunein-station.pls?id=614375"},
{"Venice Classic Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1704166"},
{"Solo Piano SKY.FM.","http://yp.shoutcast.com/sbin/tunein-station.pls?id=600682"},
{"Mostly Classical - SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=744232"},
{"Adagio.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=212505"},
{"Classical 96.3FM CFMZ","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2271823"},
{"Abacus.fm Mozart Piano","http://yp.shoutcast.com/sbin/tunein-station.pls?id=119965"},

// Country (30-39)
{"181.FM Kickin' Country","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1283687"},
{"Always Country","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1274260"},
{"COUNTRY 108","http://yp.shoutcast.com/sbin/tunein-station.pls?id=668943"},
{"181.FM Highway 181","http://yp.shoutcast.com/sbin/tunein-station.pls?id=147942"},
{"HPR1","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1270526"},
{"Radio Positiva Sertaneja","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2890335"},
{"1.FM Country","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1274603"},
{"Boot Liquor","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377561"},
{"Absolute COUNTRY Hits","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1268458"},
{"181.FM Real Country","http://yp.shoutcast.com/sbin/tunein-station.pls?id=163622"},

// Decades (40-49)
{"Big R Radio Warm 101.6","http://yp.shoutcast.com/sbin/tunein-station.pls?id=33097"},
{"Big R Radio The Hawk","http://yp.shoutcast.com/sbin/tunein-station.pls?id=211531"},
{"Big R Radio 100.7 The Mix","http://yp.shoutcast.com/sbin/tunein-station.pls?id=61826"},
{"Abacus.fm Vintage Jazz","http://yp.shoutcast.com/sbin/tunein-station.pls?id=242774"},
{"Oldies104","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1271826"},
{"1.FM 50s and 60s","http://yp.shoutcast.com/sbin/tunein-station.pls?id=37833"},
{"The Doo-Wop Express","http://yp.shoutcast.com/sbin/tunein-station.pls?id=727560"},
{"Beatles Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1273220"},
{"1.FM 80s Channel","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1274599"},
{"SKY.FM 80s","http://yp.shoutcast.com/sbin/tunein-station.pls?id=737152"},

// Easy Listening (50-59)
{"Slow Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1658657"},
{"MUSIK.LOUNGE","http://yp.shoutcast.com/sbin/tunein-station.pls?id=130940"},
{"Blue FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=48138"},
{"SKY.FM Mostly Classical","http://yp.shoutcast.com/sbin/tunein-station.pls?id=744232"},
{"Radio227 Easy Listening","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2313198"},
{"COOL93","http://yp.shoutcast.com/sbin/tunein-station.pls?id=63135"},
{"KLUX 89.5HD -","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1697"},
{"AbidingRadio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=470854"},
{"Lounge Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1288934"},
{"1.FM The Chillout Loung","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1268725"},

// Electronic (60-69)
{"TechnoBase.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377200"},
{"Vocal Trance","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1177953"},
{"MUSIK.HOUSE Funky","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2128868"},
{"Trance Channel","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1193516"},
{"HouseTime.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377360"},
{"dubstep.fm","http://yp.shoutcast.com/sbin/tunein-station.pls?id=7225"},
{"54House.FM.","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2808203"},
{"#MUSIK.DRUMSTEP","http://yp.shoutcast.com/sbin/tunein-station.pls?id=46883"},
{"HardBase.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377430"},
{"Techno4Ever Main","http://yp.shoutcast.com/sbin/tunein-station.pls?id=226769"},

// Folk (70-79)
{"Radio Free Vermont","http://yp.shoutcast.com/sbin/tunein-station.pls?id=168942"},
{"Pink Narodna Muzika","http://yp.shoutcast.com/sbin/tunein-station.pls?id=883729"},
{"Dzungla Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1279638"},
{"Folk Alley","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1273365"},
{"Radio BN","http://yp.shoutcast.com/sbin/tunein-station.pls?id=29949"},
{"Radio Glas Drine","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1841408"},
{"COOL radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=550002"},
{"AM 1710 Antioch OT","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2699"},
{"A&P Radio Network","http://yp.shoutcast.com/sbin/tunein-station.pls?id=563824"},
{"New Age SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=412093"},

// Inspirational (80-89)
{"Russian Christian Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1280598"},
{"AbidingRadio INSTRUMENTAL","http://yp.shoutcast.com/sbin/tunein-station.pls?id=470854"},
{"1-ONE NATION FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1988533"},
{"XL Radio Gurbani Kirtan","http://yp.shoutcast.com/sbin/tunein-station.pls?id=272693"},
{"Radio Lumiere Miami","http://yp.shoutcast.com/sbin/tunein-station.pls?id=341387"},
{"Ancient Faith Music","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2010550"},
{"Bautista Radio 89.7 FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=347942"},
{"Radio Nueva Vida","http://yp.shoutcast.com/sbin/tunein-station.pls?id=208506"},
{"ChristianRock","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1266649"},
{"FBC Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=95154"},

// International (90-99)
{"Arabic Music Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=326370"},
{"SEOULFM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=246183"},
{"Radio CARERA NUMBER ONE","http://yp.shoutcast.com/sbin/tunein-station.pls?id=289391"},
{"Schlagerhoelle","http://yp.shoutcast.com/sbin/tunein-station.pls?id=702040"},
{"Ballermann-Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=63072"},
{"RADIONL","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281197"},
{"RaDioTEENTAAL","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1268068"},
{"Tutku Fm","http://yp.shoutcast.com/sbin/tunein-station.pls?id=21994"},
{"Radio Jacaro","http://yp.shoutcast.com/sbin/tunein-station.pls?id=228698"},
{"BeirutNights","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1168254"},

// Jazz (100-109)
{"SMOOTHJAZZ","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1339789"},
{"Absolutely Smooth Jazz SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=496891"},
{"SwissGroove","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1269641"},
{"Dinner Jazz Excursion","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1272149"},
{"181.fm The Breeze","http://yp.shoutcast.com/sbin/tunein-station.pls?id=133405"},
{"A1Smooth","http://yp.shoutcast.com/sbin/tunein-station.pls?id=348116"},
{"SmoothLounge","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1339960"},
{"1.FM Bay Smooth Jazz","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1271416"},
{"CROOZE","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1269135"},
{"Jazz Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1256018"},

// Latin (110-119)
{"Salsa SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=835183"},
{"La X Estereo 100 Pura Salsa","http://yp.shoutcast.com/sbin/tunein-station.pls?id=96644"},
{"Reggaeton 24/7","http://yp.shoutcast.com/sbin/tunein-station.pls?id=56349"},
{"LATINO FM EN DIRECTO","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1280049"},
{"Suave 107.3 FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1593716"},
{"LA PACHANGUERA FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2147665"},
{"XHBIO FIESTA MEXICANA","http://yp.shoutcast.com/sbin/tunein-station.pls?id=338824"},
{"Latin.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=381441"},
{"MKM CARAIBE","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1818724"},
{"FUSION","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2919730"},

// Metal (120-129)
{"MUSIK.ROCK","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1275071"},
{"RockRadio1","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1105299"},
{"METAL ONLY","http://yp.shoutcast.com/sbin/tunein-station.pls?id=477309"},
{"RockRadio1","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1105299"},
{"ChroniX GRIT Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2187022"},
{"MUSIK.METAL","http://yp.shoutcast.com/sbin/tunein-station.pls?id=141469"},
{"Hard Rock Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=625229"},
{"Death.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2885733"},
{"Big R Radio 80s Metal FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=278974"},
{"1.FM High Voltage","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1272098"},

// Misc (130-139)
{"TOP100","http://yp.shoutcast.com/sbin/tunein-station.pls?id=239589"},
{"TOP 100 ReaLCasT","http://yp.shoutcast.com/sbin/tunein-station.pls?id=242423"},
{"NeoFM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=548973"},
{"radioparty.pl","http://yp.shoutcast.com/sbin/tunein-station.pls?id=97678"},
{"Desetka Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377246"},
{"Adom 106.3FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=292951"},
{"Joy FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=3730"},
{"RADIO INFERNO MANELE","http://yp.shoutcast.com/sbin/tunein-station.pls?id=293251"},
{"Narodni radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=31307"},
{"RaDYO DoGu MiX","http://yp.shoutcast.com/sbin/tunein-station.pls?id=245201"},

// New Age (140-149)
{"Nirvana Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1272871"},
{"Radio Art","http://yp.shoutcast.com/sbin/tunein-station.pls?id=411208"},
{"Trancemission.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1272865"},
{"Pianorama","http://yp.shoutcast.com/sbin/tunein-station.pls?id=27717"},
{"RADIO GAIA","http://yp.shoutcast.com/sbin/tunein-station.pls?id=187880"},
{"M2 CHILLOUT","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1279147"},
{"Underground Eighties","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377340"},
{"Digital Relax","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1254140"},
{"meditation.fm","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2269332"},
{"1.FM Flashback Alternatives","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1268764"},

// Pop (150-159)
{"181.FM - POWER 181","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1283896"},
{"Radio Paloma","http://yp.shoutcast.com/sbin/tunein-station.pls?id=710507"},
{"MUSIK.MAIN","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1275878"},
{".977 The Hitz Channel","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1280356"},
{"Lux FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=967434"},
{"Radio VHR","http://yp.shoutcast.com/sbin/tunein-station.pls?id=117838"},
{"Radio Paloma","http://yp.shoutcast.com/sbin/tunein-station.pls?id=710507"},
{"ChartHits.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=43280"},
{"Top Hits Music SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=728272"},
{"Pop Radio One","http://yp.shoutcast.com/sbin/tunein-station.pls?id=128879"},

// Public Radio (160-169)
{"WUNC FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1271964"},
{"KPBS","http://yp.shoutcast.com/sbin/tunein-station.pls?id=632915"},
{"89.7 WUWM HD","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1278952"},
{"WHRO","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1544465"},
{"KCRW ECLECTIC24","http://yp.shoutcast.com/sbin/tunein-station.pls?id=56697"},
{"SomaFM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377771"},
{"WKCR","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2100812"},
{"Rete Sport","http://yp.shoutcast.com/sbin/tunein-station.pls?id=3090344"},
{"North Country Public Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=857520"},
{"RIPR","http://yp.shoutcast.com/sbin/tunein-station.pls?id=232368"},

// R&B/Urban (170-179)
{"DEFJAY.DE","http://yp.shoutcast.com/sbin/tunein-station.pls?id=65456"},
{"Amped FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=178297"},
{"HIT104","http://yp.shoutcast.com/sbin/tunein-station.pls?id=663859"},
{"BreakZ.us","http://yp.shoutcast.com/sbin/tunein-station.pls?id=127014"},
{"181.fm True R&B","http://yp.shoutcast.com/sbin/tunein-station.pls?id=83968"},
{"1POWER","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1283516"},
{"BlackBeats.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1543115"},
{"Lenz Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1273477"},
{"DEFJAY.COM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=616366"},
{"Spin 1038","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1328653"},

// Rap (180-189)
{"HOT 108 JAMZ","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1281016"},
{"MUSIK.JAM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1269742"},
{"181.FM The BEAT","http://yp.shoutcast.com/sbin/tunein-station.pls?id=166078"},
{"Smoothbeats","http://yp.shoutcast.com/sbin/tunein-station.pls?id=9054"},
{"108.FM THE HITLIST","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1282490"},
{"TrueHipHop","http://yp.shoutcast.com/sbin/tunein-station.pls?id=3083251"},
{"A1Jamz","http://yp.shoutcast.com/sbin/tunein-station.pls?id=49567"},
{"True Beats","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1267461"},
{"MKM URBAN","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1818926"},
{"G'D UP RADIO","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1504548"},

// Reggae (190-199)
{"Roots Reggae SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=695657"},
{"La Grosse Radio Reggae","http://yp.shoutcast.com/sbin/tunein-station.pls?id=5661"},
{"BigUpRadio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1269793"},
{"Raggakings","http://yp.shoutcast.com/sbin/tunein-station.pls?id=123431"},
{"PONdENDS","http://yp.shoutcast.com/sbin/tunein-station.pls?id=221874"},
{"Reggae141","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1280855"},
{"Reggae Radio Rasta","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1266989"},
{"1.FM ReggaeTrade","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1272779"},
{"Raggakings","http://yp.shoutcast.com/sbin/tunein-station.pls?id=123431"},
{"Black Roots Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=231554"},

// Rock (200-209)
{"181.FM - The Buzz","http://yp.shoutcast.com/sbin/tunein-station.pls?id=37586"},
{"NOISEfm.pl","http://yp.shoutcast.com/sbin/tunein-station.pls?id=3121111"},
{"Radio Paradise","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1354805"},
{"MUSIK.ROCK","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1275071"},
{"181.FM Good Time Oldies","http://yp.shoutcast.com/sbin/tunein-station.pls?id=25287"},
{"181.fm Rock 181","http://yp.shoutcast.com/sbin/tunein-station.pls?id=302754"},
{"ROCKY FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=684390"},
{"ChroniX Aggression","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1377260"},
{"Rockenfolie","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2865"},
{"80s SKY.FM","http://yp.shoutcast.com/sbin/tunein-station.pls?id=737152"},

// Talk (210-219)
{"Alex Jones","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1026951"},
{"AM 1710 Antioch","http://yp.shoutcast.com/sbin/tunein-station.pls?id=2699"},
{"89.3 KPCC","http://yp.shoutcast.com/sbin/tunein-station.pls?id=179361"},
{"The Very Best Of Art Bell","http://yp.shoutcast.com/sbin/tunein-station.pls?id=47835"},
{"KCRW ALL NEWS","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1279013"},
{"2GB Sydney Talk","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1346749"},
{"Broadband Comedy Network","http://yp.shoutcast.com/sbin/tunein-station.pls?id=3095781"},
{"181.FM Comedy Club","http://yp.shoutcast.com/sbin/tunein-station.pls?id=52807"},
{"Social Crime Radio","http://yp.shoutcast.com/sbin/tunein-station.pls?id=179709"},
{"Radio Carlin","http://yp.shoutcast.com/sbin/tunein-station.pls?id=1495362"} */
// };

enum pCrime
{
	pBplayer[32],
	pAccusing[32],
	pAccusedof[32],
	pVictim[32],
};
new PlayerCrime[MAX_PLAYERS][pCrime];


enum EventInfoEnum
{
	EventAdvisor,
	EventStatus,
	EventType,
	EventJT[128],
	Float: EventHealth,
	Float: EventArmor,
	Float: EventPositionX,
	Float: EventPositionY,
	Float: EventPositionZ,
	EventInterior,
	EventWorld,
	EventWeapons[5],
	EventTeamColor[2],
    EventTeamSkin[2],
    EventLimit,
    EventTime,
	EventFootRace,
    EventPlayers,
    EventRequest,
    EventStartRequest,
    EventCreator,
    EventStaff[5],
    EventJoinStaff,
    VipOnly,
    Float: EventTeamPosX1,
    Float: EventTeamPosY1,
    Float: EventTeamPosZ1,
    Float: EventTeamPosX2,
    Float: EventTeamPosY2,
    Float: EventTeamPosZ2,
    EventFaction,
    EventFamily,
    EventToggleHeal,
	EventToggleAnims
}
new EventInfo[EventInfoEnum];

enum reportinfo
{
	HasBeenUsed,
	Report[128],
	ReportFrom,
	CheckingReport,
 	TimeToExpire,
	BeingUsed,
	ReportExpireTimer,
	ReplyTimerr,
	BugReport
}

new Reports[MAX_REPORTS][reportinfo];
new ListItemReportId[MAX_PLAYERS][40];
new CancelReport[MAX_PLAYERS];

enum Spikes
{
	Float:sX,
	Float:sY,
	Float:sZ,
	sObjectID,
	sDeployedBy[MAX_PLAYER_NAME],
	sDeployedAt[MAX_ZONE_NAME]
}
new SpikeStrips[10][Spikes];

enum fInfo
{
	FamilyTaken,
	FamilyName[42],
	FamilyMOTD[65],
	FamilyColor,
	FamilyTurfTokens,
	FamilyLeader[MAX_PLAYER_NAME],
	FamilyMembers,
	Float:FamilySpawn[4],
	FamilyInterior,
	FamilyCash,
	FamilyBank,
	FamilyMats,
	FamilyPot,
	FamilyCrack,
	Float:FamilySafe[3],
	FamilyUSafe,
	FamilyRank1[20],
	FamilyRank2[20],
	FamilyRank3[20],
	FamilyRank4[20],
	FamilyRank5[20],
	FamilyRank6[20],
	FamilyPickup,
	FamilyMaxSkins,
	FamilySkins[8],
	Float: FamilyEntrance[4],
	Float: FamilyExit[4],
	FamilyEntrancePickup,
	FamilyExitPickup,
	Text3D:FamilyEntranceText,
	Text3D:FamilyExitText,
	FamilyCustomMap,
	FamilyVirtualWorld,
	FamilyResetSpawns,
	FamilyGuns[10],
};
new FamilyInfo[MAX_FAMILY][fInfo];

enum gateInfo
{
	gGate,
	Text3D:gText,
	gModel,
	Float:gCX,
	Float:gCY,
	Float:gCZ,
	Float:gCRX,
	Float:gCRY,
	Float:gCRZ,
	Float:gOX,
	Float:gOY,
	Float:gOZ,
	Float:gORX,
	Float:gORY,
	Float:gORZ,
	gPassword[256],
	Float:gSpeed,
	gStatus
}
new GateInfo[MAX_GATES][gateInfo];

enum cdInfo
{
	cdOwned,
	cdOwner[MAX_PLAYER_NAME],
	Float: cdEntranceX,
	Float: cdEntranceY,
	Float: cdEntranceZ,
	Float: cdExitX,
	Float: cdExitY,
	Float: cdExitZ,
	cdMessage[128],
	cdTill,
	cdInterior,
	Float: cdVehicleSpawn[4],
	Float: cdRadius,
	cdPrice,
	Float: cdVehicleSpawnX[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnY[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnZ[MAX_DEALERSHIPVEHICLES],
	Float: cdVehicleSpawnAngle[MAX_DEALERSHIPVEHICLES],
	cdVehicleModel[MAX_DEALERSHIPVEHICLES],
	cdVehicleCost[MAX_DEALERSHIPVEHICLES],
	cdVehicleId[MAX_DEALERSHIPVEHICLES], // non-saved
	cdPickupID, // non-saved
	Text3D:cdTextLabel, // non-saved
	Text3D:cdVehicleLabel[MAX_DEALERSHIPVEHICLES], // non-saved
	cdDonator,
};
new CarDealershipInfo[MAX_CARDEALERSHIPS][cdInfo];

enum fvInfo
{
    fvId,
	fvModelId,
	Float: fvSpawnx,
	Float: fvSpawny,
	Float: fvSpawnz,
	Float: fvSpawna,
	Float: fvSpawnxtmp,
	Float: fvSpawnytmp,
	Float: fvSpawnztmp,
	Float: fvSpawnatmp,
	fvLock,
	fvLocked,
	fvPaintJob,
	fvColor1,
	fvColor2,
	fvMods[MAX_MODS],
	fvPrice,
	fvImpounded,
	Float:fvFuel
};

new FamilyVehicleInfo[MAX_FAMILY][MAX_GANG_VEHICLES][fvInfo];

enum fPoint
{
	Float:Pointx,
	Float:Pointy,
	Float:Pointz,
	Type,
	Vulnerable,
	MatPoint,
	CratePoint,
	Announced,
	ClaimerId,
	ClaimerTeam,
	TimeToClaim,
	TimeLeft,
	Owner[32],
	PlayerNameCapping[MAX_PLAYER_NAME],
	CapperName[MAX_PLAYER_NAME],
	Name[32],
	TakeOverTimerStarted,
	TakeOverTimer,
	Text3D:TextLabel,
	CaptureTimerEx2,
	Stock,
	//Text3D:CaptureProccess,
	Text3D:CaptureProgress,
	CaptureProccessEx,
	Float: Capturex,
	Float: Capturey,
	Float: Capturez,
	PointPickupID,
	Bar:PointBarID,
}
new Points[MAX_POINTS][fPoint];


enum hNews
{
	hTaken1,
	hTaken2,
	hTaken3,
	hTaken4,
	hTaken5,
	hTaken6,
	hTaken7,
	hTaken8,
	hTaken9,
	hTaken10,
	hTaken11,
	hTaken12,
	hTaken13,
	hTaken14,
	hTaken15,
	hTaken16,
	hTaken17,
	hTaken18,
	hTaken19,
	hTaken20,
	hTaken21,
	hAdd1[64],
	hAdd2[64],
	hAdd3[64],
	hAdd4[64],
	hAdd5[64],
	hAdd6[64],
	hAdd7[64],
	hAdd8[64],
	hAdd9[64],
	hAdd10[64],
	hAdd11[64],
	hAdd12[64],
	hAdd13[64],
	hAdd14[64],
	hAdd15[64],
	hAdd16[64],
	hAdd17[64],
	hAdd18[64],
	hAdd19[64],
	hAdd20[64],
	hAdd21[64],
	hContact1[64],
	hContact2[64],
	hContact3[64],
	hContact4[64],
	hContact5[64],
	hContact6[64],
	hContact7[64],
	hContact8[64],
	hContact9[64],
	hContact10[64],
	hContact11[64],
	hContact12[64],
	hContact13[64],
	hContact14[64],
	hContact15[64],
	hContact16[64],
	hContact17[64],
	hContact18[64],
	hContact19[64],
	hContact20[64],
	hContact21[64],
};
new News[hNews];

enum HoldingEnumAll
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

new HoldingObjectsCop[14][HoldingEnumAll] = {
{18642,100,"Taser1"},
{19141,250,"SWAT Kask1"},
{19142,250,"SWAT Zrh1"},
{18636,100,"Polis Kepi1"},
{19099,100,"Polis Kepi2"},
{19100,100,"Polis Kepi3"},
{18637,100,"Polis Kalkan1"},
{19161,100,"Polis apkas1"},
{19162,100,"Polis apkas2"},
{19200,100,"Polis Kask1"},
{19138,100,"Polis Gzl1"},
{19139,100,"Polis Gzl2"},
{19140,100,"Polis Gzl3"},
{19347,250,"Rozet"}
};

new HoldingObjectsAll[240][HoldingEnumAll] = {
{18642,100,"Taser1"},
{18643,1000,"Lazer aretleyicisi1"},
{19080,1000,"Lazer aretleyicisi2"},
{19081,1000,"Lazer aretleyicisi3"},
{19082,1000,"Lazer aretleyicisi4"},
{19083,1000,"Lazer aretleyicisi5"},
{19084,1000,"Lazer aretleyicisi6"},
{19086,500,"Dildo1"},
{18675,1000,"Puf Duman"},
{19701,1000,"Kk Alev"},
{18693,1000,"Byk Alev"},
{18698,1000,"Bcekler"},
{18708,1000,"Baloncuklar"},
{19141,250,"SWAT Kask1"},
{19142,250,"SWAT Zrh1"},
{18636,100,"Polis Kepi1"},
{19099,100,"Polis Kepi2"},
{19100,100,"Polis Kepi3"},
{18637,100,"Polis Kalkan1"},
{19161,100,"Polis apkas1"},
{19162,100,"Polis apkas2"},
{19200,100,"Polis Kask1"},
{19138,100,"Polis Gzl1"},
{19139,100,"Polis Gzl2"},
{19140,100,"Polis Gzl3"},
{19347,250,"Rozet"},
{18632,100,"Olta"},
{18633,150,"Ingiliz Anahtar"},
{18634,100,"Levye"},
{18635,100,"eki"},
{18638,50,"Koruyucu Balk"},
{19093,50,"Koruyucu Balk2"},
{19160,50,"Koruyucu Balk3"},
{18639,50,"Siyah apka"},
{18640,70,"Sa"},
{18975,70,"Sa2"},
{19136,70,"Sa3"},
{19274,70,"Sa4"},
{18641,100,"Elfeneri"},
{18644,500,"Tornavida"},
{18865,50,"Cep Telefonu1"},
{18866,50,"Cep Telefonu2"},
{18867,50,"Cep Telefonu3"},
{18868,50,"Cep Telefonu4"},
{18869,50,"Cep Telefonu5"},
{18870,100,"Cep Telefonu6"},
{18871,100,"Cep Telefonu7"},
{18872,100,"Cep Telefonu8"},
{18873,100,"Cep Telefonu9"},
{18874,100,"Cep Telefonu10"},
{18875,75,"ar Cihaz"},
{18890,50,"Tarak"},
{18891,50,"Bandana1"},
{18892,50,"Bandana2"},
{18893,50,"Bandana3"},
{18894,50,"Bandana4"},
{18895,50,"Bandana5"},
{18896,50,"Bandana6"},
{18897,50,"Bandana7"},
{18898,50,"Bandana8"},
{18899,50,"Bandana9"},
{18900,50,"Bandana10"},
{18901,75,"Bandana11"},
{18902,75,"Bandana12"},
{18903,75,"Bandana13"},
{18904,75,"Bandana14"},
{18905,75,"Bandana15"},
{18906,75,"Bandana16"},
{18907,75,"Bandana17"},
{18908,75,"Bandana18"},
{18909,75,"Bandana19"},
{18910,75,"Bandana20"},
{18911,100,"Maske1"},
{18912,100,"Maske2"},
{18913,100,"Maske3"},
{18914,100,"Maske4"},
{18915,100,"Maske5"},
{18916,100,"Maske6"},
{18917,100,"Maske7"},
{18918,100,"Maske8"},
{18919,100,"Maske9"},
{18920,100,"Maske10"},
{18921,50,"Bere1"},
{18922,50,"Bere2"},
{18923,75,"Bere3"},
{18924,100,"Bere4"},
{18925,100,"Bere5"},
{18926,50,"apka1"},
{18927,50,"apka2"},
{18928,50,"apka3"},
{18929,50,"apka4"},
{18930,50,"apka5"},
{18931,100,"apka6"},
{18932,100,"apka7"},
{18933,100,"apka8"},
{18934,100,"apka9"},
{18935,100,"apka10"},
{18936,50,"Kask1"},
{18937,75,"Kask2"},
{18938,100,"Kask3"},
{18939,75,"Ters apka1"},
{18940,75,"Ters apka2"},
{18941,75,"Ters apka3"},
{18942,100,"Ters apka4"},
{18943,100,"Ters apka5"},
{18944,100,"Hasr apka1"},
{18945,125,"Hasr apka2"},
{18946,150,"Hasr apka3"},
{18947,100,"Ftr apka1"},
{18948,100,"Ftr apka2"},
{18949,100,"Ftr apka3"},
{18950,100,"Ftr apka4"},
{18951,100,"Ftr apka5"},
{18952,150,"Boks Kask"},
{18953,50,"rme apka1"},
{18954,75,"rme apka2"},
{18955,75,"Hippi apkas1"},
{18956,75,"Hippi apkas2"},
{18957,75,"Hippi apkas3"},
{18958,75,"Hippi apkas4"},
{18959,75,"Hippi apkas5"},
{18960,100,"Kep apka1"},
{18961,75,"Kamyoncu apkas1"},
{18962,75,"Kovboy apkas2"},
{18964,100,"Kurukafa Bere1"},
{18965,125,"Kurukafa Bere2"},
{18966,150,"Kurukafa Bere3"},
{18967,100,"Erkek apkas1"},
{18968,100,"Erkek apkas2"},
{18969,100,"Erkek apkas3"},
{18970,200,"Kaplan apka"},
{18971,100,"Cool apka1"},
{18972,125,"Cool apka2"},
{18973,150,"Cool apka3"},
{18974,1000,"Zorro Maskesi1"},
{18645,150,"Motorcu Kask"},
{18976,100,"Motorcu Kask2"},
{18977,100,"Motorcu Kask3"},
{18978,125,"Motorcu Kask4"},
{18979,150,"Motorcu Kask5"},
{19006,50,"Gzlk1"},
{19007,50,"Gzlk2"},
{19008,50,"Gzlk3"},
{19009,50,"Gzlk4"},
{19010,50,"Gzlk5"},
{19011,50,"Gzlk6"},
{19012,50,"Gzlk7"},
{19013,50,"Gzlk8"},
{19014,50,"Gzlk9"},
{19015,50,"Gzlk10"},
{19016,100,"Gzlk11"},
{19017,100,"Gzlk12"},
{19018,100,"Gzlk13"},
{19019,100,"Gzlk14"},
{19020,100,"Gzlk15"},
{19021,100,"Gzlk16"},
{19022,100,"Gzlk17"},
{19023,100,"Gzlk18"},
{19024,100,"Gzlk19"},
{19025,100,"Gzlk20"},
{19026,150,"Gzlk21"},
{19027,150,"Gzlk22"},
{19028,150,"Gzlk23"},
{19029,150,"Gzlk24"},
{19030,150,"Gzlk25"},
{19031,150,"Gzlk26"},
{19032,150,"Gzlk27"},
{19033,150,"Gzlk28"},
{19034,150,"Gzlk29"},
{19035,150,"Gzlk30"},
{19036,200,"Hokey Maskesi1"},
{19037,200,"Hokey Maskesi2"},
{19038,200,"Hokey Maskesi3"},
{19039,50,"Saat1"},
{19040,50,"Saat2"},
{19041,50,"Saat3"},
{19042,50,"Saat4"},
{19043,50,"Saat5"},
{19044,50,"Saat6"},
{19045,50,"Saat7"},
{19046,100,"Saat8"},
{19047,100,"Saat9"},
{19048,100,"Saat10"},
{19049,100,"Saat11"},
{19050,100,"Saat12"},
{19051,100,"Saat13"},
{19052,100,"Saat14"},
{19053,100,"Saat15"},
{19064,1000, "Noel apkas1"},
{19065,2000, "Noel apkas2"},
{19066,300, "Noel apkas3"},
{19067,100, "Kapon1"},
{19068,100, "Kapon2"},
{19069,100, "Kapon3"},
{19078,750, "Papaan1"},
{19079,750, "Papaan2"},
{19085,500, "Korsan Band"},
{19090,150, "Mavi Ponpon"},
{19091,150, "Krmz Ponpon"},
{19092,150, "Yeil Ponpon"},
{19094,200, "Hamburger apkas"},
{19095,50, "Kovboy apkas1"},
{19096,50, "Kovboy apkas3"},
{19097,100, "Kovboy apkas4"},
{19098,100, "Kovboy apkas5"},
{19101,200, "Ordu Kask1"},
{19102,200, "Ordu Kask2"},
{19103,200, "Ordu Kask3"},
{19104,200, "Ordu Kask4"},
{19105,200, "Ordu Kask5"},
{19106,200, "Ordu Kask6"},
{19107,400, "Ordu Kask7"},
{19108,400, "Ordu Kask8"},
{19109,400, "Ordu Kask9"},
{19110,400, "Ordu Kask10"},
{19111,400, "Ordu Kask11"},
{19112,400, "Ordu Kask12"},
{19113,100, "Komik Kask1"},
{19114,200, "Komik Kask2"},
{19115,300, "Komik Kask3"},
{19116,50, "Dz Kask1"},
{19117,50, "Dz Kask2"},
{19118,75, "Dz Kask3"},
{19119,100, "Dz Kask4"},
{19120,100, "Dz Kask5"},
{19137,500, "Tavuku apkas"},
{19163,100, "Siyah Maske"},
{1210,50, "Evrak antas"},
{19421,50, "Kulaklk1"},
{19422,50, "Kulaklk2"},
{19423,50, "Kulaklk3"},
{19424,50, "Kulaklk4"},
{19350,50, "Byk1"},
{19351,50, "Byk2"},
{19352,50, "Ftr"},
{19349,50, "Tekli Gzlk"},
{19317,50, "Bass gitar"},
{371,500, "Backpack"},
{3044,500, "Sigara"},
{3027,500, "Sarma Sigara"}
};

enum HoldingEnum
{
	holdingmodelid,
	holdingprice,
	holdingmodelname[24]
}

new HoldingObjects[220][HoldingEnum] = {
{18643,150000,"Lazer aretleyicisi1"},
{19080,150000,"Lazer aretleyicisi2"},
{19081,150000,"Lazer aretleyicisi3"},
{19082,150000,"Lazer aretleyicisi4"},
{19083,150000,"Lazer aretleyicisi5"},
{19084,150000,"Lazer aretleyicisi6"},
{18632,100,"Olta"},
{18633,150,"Ingiliz Anahtar"},
{18634,100,"Levye"},
{18635,100,"eki"},
{18638,50,"Koruyucu Kask"},
{19093,50,"Koruyucu Kask2"},
{19160,50,"Koruyucu Kask3"},
{18639,50,"Siyah apka"},
{18640,70,"Sa"},
{18975,70,"Sa2"},
{19136,70,"Sa3"},
{19274,70,"Sa4"},
{18641,100,"Elfeneri"},
{18644,500,"Tornavida"},
{18865,50,"Cep Telefonu1"},
{18866,50,"Cep Telefonu2"},
{18867,50,"Cep Telefonu3"},
{18868,50,"Cep Telefonu4"},
{18869,50,"Cep Telefonu5"},
{18870,100,"Cep Telefonu6"},
{18871,100,"Cep Telefonu7"},
{18872,100,"Cep Telefonu8"},
{18873,100,"Cep Telefonu9"},
{18874,100,"Cep Telefonu10"},
{18875,75,"ar Cihaz"},
{18890,50,"Tarak"},
{18891,50,"Bandana1"},
{18892,50,"Bandana2"},
{18893,50,"Bandana3"},
{18894,50,"Bandana4"},
{18895,50,"Bandana5"},
{18896,50,"Bandana6"},
{18897,50,"Bandana7"},
{18898,50,"Bandana8"},
{18899,50,"Bandana9"},
{18900,50,"Bandana10"},
{18901,75,"Bandana11"},
{18902,75,"Bandana12"},
{18903,75,"Bandana13"},
{18904,75,"Bandana14"},
{18905,75,"Bandana15"},
{18906,75,"Bandana16"},
{18907,75,"Bandana17"},
{18908,75,"Bandana18"},
{18909,75,"Bandana19"},
{18910,75,"Bandana20"},
{18911,100,"Maske1"},
{18912,100,"Maske2"},
{18913,100,"Maske3"},
{18914,100,"Maske4"},
{18915,100,"Maske5"},
{18916,100,"Maske6"},
{18917,100,"Maske7"},
{18918,100,"Maske8"},
{18919,100,"Maske9"},
{18920,100,"Maske10"},
{18921,50,"Bere1"},
{18922,50,"Bere2"},
{18923,75,"Bere3"},
{18924,100,"Bere4"},
{18925,100,"Bere5"},
{18926,50,"apka1"},
{18927,50,"apka2"},
{18928,50,"apka3"},
{18929,50,"apka4"},
{18930,50,"apka5"},
{18931,100,"apka6"},
{18932,100,"apka7"},
{18933,100,"apka8"},
{18934,100,"apka9"},
{18935,100,"apka10"},
{18936,50,"Kask1"},
{18937,75,"Kask2"},
{18938,100,"Kask3"},
{18939,75,"Ters apka1"},
{18940,75,"Ters apka2"},
{18941,75,"Ters apka3"},
{18942,100,"Ters apka4"},
{18943,100,"Ters apka5"},
{18944,100,"Hasr apka1"},
{18945,125,"Hasr apka2"},
{18946,150,"Hasr apka3"},
{18947,100,"Ftr apka1"},
{18948,100,"Ftr apka2"},
{18949,100,"Ftr apka3"},
{18950,100,"Ftr apka4"},
{18951,100,"Ftr apka5"},
{18952,150,"Boks Kask"},
{18953,50,"rme apka1"},
{18954,75,"rme apka2"},
{18955,75,"Hippi apkas1"},
{18956,75,"Hippi apkas2"},
{18957,75,"Hippi apkas3"},
{18958,75,"Hippi apkas4"},
{18959,75,"Hippi apkas5"},
{18960,100,"Kep apka1"},
{18961,75,"Kamyoncu apkas1"},
{18962,75,"Kovboy apkas2"},
{18964,100,"Kurukafa Bere1"},
{18965,125,"Kurukafa Bere2"},
{18966,150,"Kurukafa Bere3"},
{18967,100,"Erkek apkas1"},
{18968,100,"Erkek apkas2"},
{18969,100,"Erkek apkas3"},
{18970,200,"Kaplan apka"},
{18971,100,"Cool apka1"},
{18972,125,"Cool apka2"},
{18973,150,"Cool apka3"},
{18974,1000,"Zorro Maskesi1"},
{18645,150,"Motorcu Kask"},
{18976,100,"Motorcu Kask2"},
{18977,100,"Motorcu Kask3"},
{18978,125,"Motorcu Kask4"},
{18979,150,"Motorcu Kask5"},
{19006,50,"Gzlk1"},
{19007,50,"Gzlk2"},
{19008,50,"Gzlk3"},
{19009,50,"Gzlk4"},
{19010,50,"Gzlk5"},
{19011,50,"Gzlk6"},
{19012,50,"Gzlk7"},
{19013,50,"Gzlk8"},
{19014,50,"Gzlk9"},
{19015,50,"Gzlk10"},
{19016,100,"Gzlk11"},
{19017,100,"Gzlk12"},
{19018,100,"Gzlk13"},
{19019,100,"Gzlk14"},
{19020,100,"Gzlk15"},
{19021,100,"Gzlk16"},
{19022,100,"Gzlk17"},
{19023,100,"Gzlk18"},
{19024,100,"Gzlk19"},
{19025,100,"Gzlk20"},
{19026,150,"Gzlk21"},
{19027,150,"Gzlk22"},
{19028,150,"Gzlk23"},
{19029,150,"Gzlk24"},
{19030,150,"Gzlk25"},
{19031,150,"Gzlk26"},
{19032,150,"Gzlk27"},
{19033,150,"Gzlk28"},
{19034,150,"Gzlk29"},
{19035,150,"Gzlk30"},
{19036,200,"Hokey Maskesi1"},
{19037,200,"Hokey Maskesi2"},
{19038,200,"Hokey Maskesi3"},
{19039,50,"Saat1"},
{19040,50,"Saat2"},
{19041,50,"Saat3"},
{19042,50,"Saat4"},
{19043,50,"Saat5"},
{19044,50,"Saat6"},
{19045,50,"Saat7"},
{19046,100,"Saat8"},
{19047,100,"Saat9"},
{19048,100,"Saat10"},
{19049,100,"Saat11"},
{19050,100,"Saat12"},
{19051,100,"Saat13"},
{19052,100,"Saat14"},
{19053,100,"Saat15"},
{19064,1000, "Noel apkas1"},
{19065,2000, "Noel apkas2"},
{19066,300, "Noel apkas3"},
{19067,100, "Kapon1"},
{19068,100, "Kapon2"},
{19069,100, "Kapon3"},
{19078,750, "Papaan1"},
{19079,750, "Papaan2"},
{19085,500, "Korsan Band"},
{19090,150, "Mavi Ponpon"},
{19091,150, "Krmz Ponpon"},
{19092,150, "Yeil Ponpon"},
{19094,200, "Hamburger apkas"},
{19095,50, "Kovboy apkas1"},
{19096,50, "Kovboy apkas3"},
{19097,100, "Kovboy apkas4"},
{19098,100, "Kovboy apkas5"},
{19101,200, "Ordu Kask1"},
{19102,200, "Ordu Kask2"},
{19103,200, "Ordu Kask3"},
{19104,200, "Ordu Kask4"},
{19105,200, "Ordu Kask5"},
{19106,200, "Ordu Kask6"},
{19107,400, "Ordu Kask7"},
{19108,400, "Ordu Kask8"},
{19109,400, "Ordu Kask9"},
{19110,400, "Ordu Kask10"},
{19111,400, "Ordu Kask11"},
{19112,400, "Ordu Kask12"},
{19113,100, "Komik Kask1"},
{19114,200, "Komik Kask2"},
{19115,300, "Komik Kask3"},
{19116,50, "Dz Kask1"},
{19117,50, "Dz Kask2"},
{19118,75, "Dz Kask3"},
{19119,100, "Dz Kask4"},
{19120,100, "Dz Kask5"},
{19137,500, "Tavuku apkas"},
{19163,100, "Siyah Maske"},
{1210,50, "Evrak antas"},
{19421,50, "Kulaklk1"},
{19422,50, "Kulaklk2"},
{19423,50, "Kulaklk3"},
{19424,50, "Kulaklk4"},
{19350,50, "Byk1"},
{19351,50, "Byk2"},
{19352,50, "Ftr"},
{19349,50, "Tekli Gzlk"},
{19317,50, "Bass gitar"},
{371,500, "Backpack"},
{3044,500, "Sigara"},
{3027,500, "Sarma Sigara"}
};

new HoldingBones[][] = {
	"Yok",
	"Omurga",
	"Kafa",
	"Sol st kol",
	"Sa st kol",
	"Sol el",
	"Sa el",
	"Sol uyluk",
	"Sa uyluk",
	"Sol ayak",
	"Sa ayak",
	"Sa baldr",
	"Sol baldr",
	"Sol n kol",
	"Sa n kol",
	"Sol kprck kemii",
	"Sa kprck kemii",
	"Boyun",
	"ene"
};

enum pInfo
{
	pKey[129],
	pLevel,
	pAdmin,
	pAdminName[32],
	pBanAppealer,
	pGangMod,
	pDonator,
	pBanned,
	pPermaBanned,
	pDisabled,
	pIP[16],
	pReg,
	pID,
 	pTut,
	pSex,
	pAge,
	pSkin,
	Float:pPos_x,
	Float:pPos_y,
	Float:pPos_z,
	Float:pPos_r,
	pConnectTime,
	pRespect,
	pNumber,
	pWarns,
	pGang,
	pFaction,
	pLeader,
	pRank,
	pJob,
	pJob2,
	gPupgrade,
	Float:pSarmor,
	pCash,
	pBank,
	pInsurance,
	pCrimes,
	pArrested,
	pWantedLevel,
	Float:pHealth,
	Float:pArmor,
	pPot,
	pCrack,
	pPackages,
	pCrates,
	pRadio,
	pRadioFreq,
	pPhoneBook,
	pDice,
	pCDPlayer,
	pMats,
	pRope,
	pCigar,
	pSprunk,
	pSpraycan,
	pHouse,
	pHouse2,
	pRenting,
	pInt,
	pVW,
	pJailed,
	pJailTime,
	pGuns[12],
	pAGuns[12],
	pPayCheck,
	pPayReady,
	pHospital,
	pDetSkill,
	pLawSkill,
	pSexSkill,
	pDrugsSkill,
	pSmugSkill,
	pArmsSkill,
	pMechSkill,
	pBoxSkill,
	pTruckSkill,
	pCarSkill,
	//pCraftSkill,
	pLawyerTime,
	pLawyerFreeTime,
	pDrugsTime,
	pMechTime,
	pSexTime,
	pCarTime,
	pLockCar, // non-saved
	pWeedObject,
	Float: pWeedPos[3],
	pWeedVW,
	pWeedInt,
	pWeedGrowth,
	pWSeeds,
	pWins,
	pLoses,
	pFightStyle,
	pScrewdriver,
	pSmslog,
	pTire,
	pFirstaid,
	pRccam,
	pReceiver,
	pGPS,
	pSweep,
	pSweepLeft,
	pBugged,
	pVehicleKeys,
	pVehicleKeysFrom,
	pDuty,
	pCarLic,
	pFlyLic,
	pBoatLic,
	pGunLic,
	pDivision,
	pLiveBanned,
	pTicketTime,
	pHeadValue,
	pContractBy[32],
	pContractDetail[64],
	pC4,
	pC4Get,
	pC4Used,
	pBombs,
	pCHits,
	pFHits,
	pPrisonedBy[MAX_PLAYER_NAME],
	pPrisonReason[128],
	pAcceptReport,
	pTrashReport,
	pAccent,
	pNMute,
	pNMuteTotal,
	pADMute,
	pADMuteTotal,
	pRMuted,
	pRMutedTotal,
	pRMutedTime,
	pSpeedo,
	pGCMuted,
	pGCMutedTime,
	pCallsAccepted,
	pHelper,
	pPatientsDelivered,
	pTriageTime,
	pMarried,
	pMarriedTo[MAX_PLAYER_NAME],
	pKillLog0[128],
	pKillLog1[128],
	pKillLog2[128],
	pKillLog3[128],
	pKillLog4[128],
	pKillLog5[128],
	pKillLog6[128],
	pKillLog7[128],
	pKillLog8[128],
	pKillLog9[128],
	pFlag[128],
	pReferredBy[MAX_PLAYER_NAME],
	pRefTokens,
	pRefTokensOffline,
	pWalkStyle,
	pGate1,
	pGate2,
	pGate3,
	Newbiepuan,
	pmka,
	pmokuka,
	pBlindfold,
	pGas
};
new PlayerInfo[MAX_PLAYERS + 1][pInfo];

/*enum mdInfo
{
	mdID,
	mdModel,
	mdFaction,
	Float: mdPosX,
	Float: mdPosY,
	Float: mdPosZ,
	Float: mdRotX,
	Float: mdRotY,
	Float: mdRotZ,
	Float: mdPosMX,
	Float: mdPosMY,
	Float: mdPosMZ,
	Float: mdRotMX,
	Float: mdRotMY,
	Float: mdRotMZ
	mdInt,
	mdVW
};
new MDI[MAX_MDS][mdInfo];*/

enum pvInfo
{
    Float:pvPosX,
	Float:pvPosY,
	Float:pvPosZ,
 	Float:pvPosAngle,
	pvId,
	pvRealID,
	pvModelId,
	pvLock,
	pvLocked,
	pvPaintJob,
	pvColor1,
	pvColor2,
	pvMods[MAX_MODS],
	pvAllowedplayerid,
	pvPark,
	pvNumberPlate[32],
	pvPrice,
	pvTicket,
	pvWeapons[3],
	pvWepUpgrade,
	pvImpounded,
	pvSpawned,
	pvDisabled,
	Float: pvFuel,
};
new PlayerVehicleInfo[MAX_PLAYERS+1][MAX_PLAYERVEHICLES][pvInfo];

enum ptInfo
{
    ptModelID,
    ptRealID,
	ptBone,
    Float:ptPosX,
	Float:ptPosY,
	Float:ptPosZ,
	Float:ptRotX,
	Float:ptRotY,
	Float:ptRotZ,
	Float:ptScaleX,
	Float:ptScaleY,
	Float:ptScaleZ,
};
new PlayerToyInfo[MAX_PLAYERS+1][MAX_PLAYERTOYS][ptInfo];

enum hInfo
{
	hOwned,
	hLevel,
	hHInteriorWorld,
	hCustomInterior,
	hDescription[8],
	hOwner[MAX_PLAYER_NAME],
	Float: hExteriorX,
	Float: hExteriorY,
	Float: hExteriorZ,
	Float: hExteriorR,
	Float: hInteriorX,
	Float: hInteriorY,
	Float: hInteriorZ,
	Float: hInteriorR,
	hLock,
	hRentable,
	hRentFee,
	hValue,
	hSafeMoney,
	hPot,
	hCrack,
	hMaterials,
	hWeapons[5],
	hGLUpgrade,
	hPickupID,
	Text3D: hTextID,
	hCustomExterior
};
new HouseInfo[MAX_HOUSES][hInfo];

enum dmpInfo
{
	dmpMapIconID,
	Float: dmpPosX,
	Float: dmpPosY,
	Float: dmpPosZ,
	dmpMarkerType,
	dmpColor,
	dmpVW,
	dmpInt,
}
new DMPInfo[MAX_DMAPICONS][dmpInfo];

enum ddInfo
{
	ddDescription[128],
	ddPickupID,
	Text3D: ddTextID,
	ddCustomInterior,
	ddExteriorVW,
	ddExteriorInt,
	ddInteriorVW,
	ddInteriorInt,
	Float: ddExteriorX,
	Float: ddExteriorY,
	Float: ddExteriorZ,
	Float: ddExteriorA,
	Float: ddInteriorX,
	Float: ddInteriorY,
	Float: ddInteriorZ,
	Float: ddInteriorA,
	ddCustomExterior,
	ddVIP,
	ddGang,
	ddFaction,
	ddAdmin,
	ddWanted,
	ddVehicleAble,
	ddColor,
	ddPickupModel,
	ddPass[24],
	ddLocked,
	ddNotEditable,
};
new DDoorsInfo[MAX_DDOORS][ddInfo];

enum bbInfo
{
    Float:bbPosX,
	Float:bbPosY,
	Float:bbPosZ,
	bbInt,
	bbVW,
	bbStation,
	bbSetBy,
	bbObject,
};
new BoomboxInfo[MAX_PLAYERS][bbInfo];

new OneSeatVehicles[38] =
{
    425, 430, 432, 441, 446, 448, 452, 453,
	454, 464, 465, 472, 473, 476, 481, 484,
	485, 486, 493, 501, 509, 510, 519, 520,
	530, 531, 532, 539, 553, 564, 568, 571,
	572, 574, 583, 592, 594, 595
};

stock SaveObjects()
{
	new idx = 1, File:file;
	new string[256];
	while(idx < MAX_OBJ)
	{
	    format(string, sizeof(string), "	CreateDynamicObject(%d,%f,%f,%f,%f,%f,%f);\r\n",
        ObjInfo[idx][oModel],
        ObjInfo[idx][oX],
        ObjInfo[idx][oY],
        ObjInfo[idx][oZ],
        ObjInfo[idx][oRX],
        ObjInfo[idx][oRY],
        ObjInfo[idx][oRZ]);
        if(idx == 1)
	    {
	        file = fopen("objects.cfg", io_write);
	    }
	    else
	    {
	    	file = fopen("objects.cfg", io_append);
	    }
		fwrite(file, string);
		fclose(file);
		idx++;
	}
	print("Objects saved successfully.");
	return 1;
}

stock SaveObjects22()
{
	new idx = 1, File:file;
	new string[256];
	while(idx < MAX_OBJ)
	{
	    format(string, sizeof(string), "%d|%f|%f|%f|%f|%f|%f\r\n",
        ObjInfo[idx][oModel],
        ObjInfo[idx][oX],
        ObjInfo[idx][oY],
        ObjInfo[idx][oZ],
        ObjInfo[idx][oRX],
        ObjInfo[idx][oRY],
        ObjInfo[idx][oRZ]);
        if(idx == 1)
	    {
	        file = fopen("objects22.cfg", io_write);
	    }
	    else
	    {
	    	file = fopen("objects22.cfg", io_append);
	    }
		fwrite(file, string);
		fclose(file);
		idx++;
	}
	print("Objects saved successfully.");
	return 1;
}

stock IsRentableCar(vehicleid)
{
    for(new i=0; i<10; i++)
    {
        if(vehicleid == RentableCar[i]) return 1;
    }
    return 0;
}

stock CanAffordRental(playerid)
{
	new
		Money1;
	Money1 = GetPlayerMoney(playerid);
	if (Money1 >= RENT_COST){
	    return 1;
	}
	return 0;
}

stock GetNearestVehicle(playerid)
{
	static
	    Float:x[2],
	    Float:y[2],
	    Float:z[2];

	for (new i = 1; i != MAX_VEHICLES; i ++)
	{
	    if (!GetVehicleModel(i))
	        continue;

		if (GetPlayerInterior(playerid) != GetVehicleInterior(i))
		    continue;

		if (GetPlayerVirtualWorld(playerid) != GetVehicleVirtualWorld(i))
		    continue;

		GetVehiclePos(i, x[0], y[0], z[0]);
		GetVehicleModelInfo(GetVehicleModel(i), VEHICLE_MODEL_INFO_SIZE, x[1], y[1], z[1]);

		if (IsPlayerInRangeOfPoint(playerid, floatsqroot(x[1] + y[1] + z[1]), x[0], y[0], z[0]))
		{
		    return i;
		}
	}
	return INVALID_VEHICLE_ID;
}

stock GetVehicleBoot(vehicleid, &Float:x, &Float:y, &Float:z)
{
	if (!GetVehicleModel(vehicleid) || vehicleid == INVALID_VEHICLE_ID)
	    return (x = 0.0, y = 0.0, z = 0.0), 0;

	static
	    Float:pos[7]
	;
	GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, pos[0], pos[1], pos[2]);
	GetVehiclePos(vehicleid, pos[3], pos[4], pos[5]);
	GetVehicleZAngle(vehicleid, pos[6]);

	x = pos[3] - (floatsqroot(pos[1] + pos[1]) * floatsin(-pos[6], degrees));
	y = pos[4] - (floatsqroot(pos[1] + pos[1]) * floatcos(-pos[6], degrees));
 	z = pos[5];

	return 1;
}


stock IsRentedCar(vehicleid)
{
	if (IsRented[vehicleid])
		return 1;
	return 0;
}

stock SendNearbyMessage(playerid, Float:radius, string[], col1, col2, col3, col4, col5)
{
	new Float:x, Float:y, Float:z;
	GetPlayerPos(playerid, x, y, z);
	new Float:ix, Float:iy, Float:iz;
	new Float:cx, Float:cy, Float:cz;
	foreach(Player, i)
	{
	    if(IsPlayerConnected(i))
	    {
	        if(GetPlayerInterior(playerid) == GetPlayerInterior(i) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(i))
	        {
				GetPlayerPos(i, ix, iy, iz);
				cx = (x - ix);
				cy = (y - iy);
				cz = (z - iz);
				if(((cx < radius/16) && (cx > -radius/16)) && ((cy < radius/16) && (cy > -radius/16)) && ((cz < radius/16) && (cz > -radius/16)))
				{
				    SendClientMessage(i, col1, string);
				}
				else if(((cx < radius/8) && (cx > -radius/8)) && ((cy < radius/8) && (cy > -radius/8)) && ((cz < radius/8) && (cz > -radius/8)))
				{
				    SendClientMessage(i, col2, string);
				}
				else if(((cx < radius/4) && (cx > -radius/4)) && ((cy < radius/4) && (cy > -radius/4)) && ((cz < radius/4) && (cz > -radius/4)))
				{
				    SendClientMessage(i, col3, string);
				}
				else if(((cx < radius/2) && (cx > -radius/2)) && ((cy < radius/2) && (cy > -radius/2)) && ((cz < radius/2) && (cz > -radius/2)))
				{
				    SendClientMessage(i, col4, string);
				}
				else if(((cx < radius) && (cx > -radius)) && ((cy < radius) && (cy > -radius)) && ((cz < radius) && (cz > -radius)))
				{
				    SendClientMessage(i, col5, string);
				}
			}
	    }
	}
	return 1;
}

stock RPALN(playerid)
{
	new name[32];
	if(PlayerInfo[playerid][pAdmin] == 1) format(name, sizeof(name), "Level 1 Admin");
	else if(PlayerInfo[playerid][pAdmin] == 2) format(name, sizeof(name), "Level 2 Admin");
	else if(PlayerInfo[playerid][pAdmin] == 3) format(name, sizeof(name), "Level 3 Admin");
	else if(PlayerInfo[playerid][pAdmin] == 4) format(name, sizeof(name), "Level 4 Admin");
	else if(PlayerInfo[playerid][pAdmin] == 5) format(name, sizeof(name), "Level 5 Admin");
	else if(PlayerInfo[playerid][pAdmin] == 6) format(name, sizeof(name), "Level 6 Admin");
    else if(PlayerInfo[playerid][pAdmin] == 7) format(name, sizeof(name), "Level 7 Admin");
    else if(PlayerInfo[playerid][pAdmin] == 8) format(name, sizeof(name), "Level 8 Admin");
    else if(PlayerInfo[playerid][pAdmin] == 9) format(name, sizeof(name), "Server Owner");
	return name;
}

public OnPlayerEditDynamicObject(playerid, objectid, response, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	new string[128], idx = gEditID[playerid];
	if(gEdit[playerid] == 2)
	{
	 	if(response == EDIT_RESPONSE_UPDATE)
		{
		    SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
		}
		else if(response == EDIT_RESPONSE_CANCEL)
		{
			SetDynamicObjectPos(objectid, gPos[playerid][0], gPos[playerid][1], gPos[playerid][2]);
			SetDynamicObjectRot(objectid, gRot[playerid][0], gRot[playerid][1], gRot[playerid][2]);
			gPos[playerid][0] = 0; gPos[playerid][1] = 0; gPos[playerid][2] = 0;
			gRot[playerid][0] = 0; gRot[playerid][1] = 0; gRot[playerid][2] = 0;
			format(string, sizeof(string), "%d ID'li gateyi dzenlemekten vazgetin!", idx);
			SendClientMessage(playerid, COLOR_WHITE,string);
			gEdit[playerid] = 0;
			gEditID[playerid] = 0;
		}
		else if(response == EDIT_RESPONSE_FINAL)
		{
			SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
		    GateInfo[idx][gOX] = x;
			GateInfo[idx][gOY] = y;
			GateInfo[idx][gOZ] = z;
			GateInfo[idx][gORX] = rx;
			GateInfo[idx][gORY] = ry;
			GateInfo[idx][gORZ] = rz;
			gEdit[playerid] = 0;
			gEditID[playerid] = 0;
			format(string, sizeof(string), "%d ID'li gatenin kapanma pozisyonunu ayarladn!", idx);
		    SendClientMessage(playerid, COLOR_WHITE,string);
		    SaveGates();
		    GateInfo[idx][gStatus] = 1;
		}
	}
	if(gEdit[playerid] == 1)
	{
	 	if(response == EDIT_RESPONSE_UPDATE)
		{
		    SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
		}
		else if(response == EDIT_RESPONSE_CANCEL)
		{
			SetDynamicObjectPos(objectid, gPos[playerid][0], gPos[playerid][1], gPos[playerid][2]);
			SetDynamicObjectRot(objectid, gRot[playerid][0], gRot[playerid][1], gRot[playerid][2]);
			gPos[playerid][0] = 0; gPos[playerid][1] = 0; gPos[playerid][2] = 0;
			gRot[playerid][0] = 0; gRot[playerid][1] = 0; gRot[playerid][2] = 0;
			format(string, sizeof(string), "%d ID'li gateyi dzenlemekten vazgetin!", idx);
			SendClientMessage(playerid, COLOR_WHITE,string);
			gEdit[playerid] = 0;
			gEditID[playerid] = 0;
		}
		else if(response == EDIT_RESPONSE_FINAL)
		{
			SetDynamicObjectPos(objectid, x, y, z);
			SetDynamicObjectRot(objectid, rx, ry, rz);
		    GateInfo[idx][gCX] = x;
			GateInfo[idx][gCY] = y;
			GateInfo[idx][gCZ] = z;
			GateInfo[idx][gCRX] = rx;
			GateInfo[idx][gCRY] = ry;
			GateInfo[idx][gCRZ] = rz;
			if(IsValidDynamic3DTextLabel(GateInfo[idx][gText])) DestroyDynamic3DTextLabel(GateInfo[idx][gText]);
			format(string, sizeof(string), "{E1EE31}Kiisel Kap\n{1AEDE9}Numaras: {FFFFFF}[ %d ]", idx);
			GateInfo[idx][gText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], 10);
		    gEdit[playerid] = 0;
		    gEditID[playerid] = 0;
		    format(string, sizeof(string), "%d ID'li gatenin alma pozisyonunu ayarladn!", idx);
		    SendClientMessage(playerid, COLOR_WHITE,string);
		    SaveGates();
		    GateInfo[idx][gStatus] = 0;
		}
	}
	return 1;
}

stock LoadGates()
{
	new dinfo[15][128];
	new string[256];
	new File:file = fopen("gates.cfg", io_read);
	if(file)
	{
	    new idx = 1;
		while(idx < MAX_GATES)
		{
		    fread(file, string);
		    split(string, dinfo, '|');
            GateInfo[idx][gModel] = strval(dinfo[0]);
			GateInfo[idx][gCX] = floatstr(dinfo[1]);
			GateInfo[idx][gCY] = floatstr(dinfo[2]);
			GateInfo[idx][gCZ] = floatstr(dinfo[3]);
			GateInfo[idx][gCRX] = floatstr(dinfo[4]);
			GateInfo[idx][gCRY] = floatstr(dinfo[5]);
			GateInfo[idx][gCRZ] = floatstr(dinfo[6]);
			GateInfo[idx][gOX] = floatstr(dinfo[7]);
			GateInfo[idx][gOY] = floatstr(dinfo[8]);
			GateInfo[idx][gOZ] = floatstr(dinfo[9]);
			GateInfo[idx][gORX] = floatstr(dinfo[10]);
			GateInfo[idx][gORY] = floatstr(dinfo[11]);
			GateInfo[idx][gORZ] = floatstr(dinfo[12]);
			format(GateInfo[idx][gPassword], 256, "%s", dinfo[13]);
			GateInfo[idx][gSpeed] = floatstr(dinfo[14]);
			if(GateInfo[idx][gModel]) // If gate exists
			{
			    format(string, sizeof(string), "{E1EE31}Kiisel Kap\n{1AEDE9}Numaras: {FFFFFF}[ %d ]", idx);
				GateInfo[idx][gGate] = CreateDynamicObject(GateInfo[idx][gModel], GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], GateInfo[idx][gCRX], GateInfo[idx][gCRY], GateInfo[idx][gCRZ]);
				GateInfo[idx][gText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], 10);
				GateInfo[idx][gStatus] = 0;
			}
			idx++;
	    }
	}
}

stock SaveGates()
{
	new idx = 1, File:file;
	new string[256];
	while(idx < MAX_GATES)
	{
	    format(string, sizeof(string), "%d|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%s|%f\r\n",
		GateInfo[idx][gModel],
		GateInfo[idx][gCX],
		GateInfo[idx][gCY],
		GateInfo[idx][gCZ],
		GateInfo[idx][gCRX],
		GateInfo[idx][gCRY],
		GateInfo[idx][gCRZ],
		GateInfo[idx][gOX],
		GateInfo[idx][gOY],
		GateInfo[idx][gOZ],
		GateInfo[idx][gORX],
		GateInfo[idx][gORY],
		GateInfo[idx][gORZ],
		GateInfo[idx][gPassword],
		GateInfo[idx][gSpeed]);
		GateInfo[idx][gStatus] = 0;
	    if(idx == 1)
	    {
	        file = fopen("gates.cfg", io_write);
	    }
	    else
	    {
	    	file = fopen("gates.cfg", io_append);
	    }
		fwrite(file, string);
		fclose(file);
		idx++;
	}
	return 1;
}
forward ProxDetector5(Float:radi, playerid, string[],string2[],col1,col2,col3,col4,col5);
public ProxDetector5(Float:radi, playerid, string[],string2[],col1,col2,col3,col4,col5)
{
	if(IsPlayerConnected(playerid))
	{
		new ProxString[512];
		new Float:posx, Float:posy, Float:posz;
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(IsPlayerConnected(i))
			{
				if(!BigEar[i])
				{
					GetPlayerPos(i, posx, posy, posz);
					tempposx = (oldposx -posx);
					tempposy = (oldposy -posy);
					tempposz = (oldposz -posz);
					format(ProxString, sizeof(ProxString), "%s%s%s", string, GetPlayerNameEx(playerid), string2);
					if (((tempposx < radi/16) && (tempposx > -radi/16)) && ((tempposy < radi/16) && (tempposy > -radi/16)) && ((tempposz < radi/16) && (tempposz > -radi/16)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col1, ProxString);
						}
					}
					else if (((tempposx < radi/8) && (tempposx > -radi/8)) && ((tempposy < radi/8) && (tempposy > -radi/8)) && ((tempposz < radi/8) && (tempposz > -radi/8)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col2, ProxString);
						}
					}
					else if (((tempposx < radi/4) && (tempposx > -radi/4)) && ((tempposy < radi/4) && (tempposy > -radi/4)) && ((tempposz < radi/4) && (tempposz > -radi/4)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col3, ProxString);
						}
					}
					else if (((tempposx < radi/2) && (tempposx > -radi/2)) && ((tempposy < radi/2) && (tempposy > -radi/2)) && ((tempposz < radi/2) && (tempposz > -radi/2)))
					{
					    if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
					    {
							SendClientMessage(i, col4, ProxString);
						}
					}
					else if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
					{
                        if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid))
                        {
							SendClientMessage(i, col5, ProxString);
						}
					}
    			}
				else
				{
					SendClientMessage(i, col1, ProxString);
				}
			}
		}
	}
	return 1;
}

forward LSPDLobbyTimer();
public LSPDLobbyTimer()
{
	if(LSPDLobbyStatus == 1)
    {
    	MoveDynamicObject(LSPDLobby[0], 253.18507385254, 108.53353881836, 1003.5809326172, 2);
    	MoveDynamicObject(LSPDLobby[1], 253.16732788086, 109.68534088135, 1003.5809326172, 2);
    	LSPDLobbyStatus = 0;
    	foreach(Player, i)
    	{
			if(IsPlayerInRangeOfPoint(i, 15, 253.18507385254, 108.53353881836, 1003.5809326172) || IsPlayerInRangeOfPoint(i, 3, 253.16732788086, 109.68534088135, 1003.5809326172))
			{
				SendClientMessage(i, COLOR_PURPLE, "* Lobi kaps otomatik olarak kapanr. (( LSPD Lobi ))");
			}
		}
    }
	return 1;
}
//TAYMIR
forward LSPDLobbyTimer2();
public LSPDLobbyTimer2()
{
	if(LSPDLobbyStatus2 == 1)
    {
    	MoveDynamicObject(LSPDLobby[2], 239.63652038574, 118.1950302124, 1003.5809326172, 2);
    	MoveDynamicObject(LSPDLobby[3], 239.63296508789, 117.00688171387, 1003.5809326172, 2);
    	LSPDLobbyStatus2 = 0;
    	foreach(Player, i)
    	{
			if(IsPlayerInRangeOfPoint(i, 15, 239.63652038574, 118.1950302124, 1003.5809326172) || IsPlayerInRangeOfPoint(i, 3, 239.63296508789, 117.00688171387, 1003.5809326172))
			{
				SendClientMessage(i, COLOR_PURPLE, "* Lobi kaps otomatik olarak kapanr. (( LSPD Lobi ))");
			}
		}
    }
	return 1;
}

//TAYMIR2
forward LSPDLobbyTimer3();
public LSPDLobbyTimer3()
{
	if(LSPDLobbyStatus3 == 1)
    {
    	MoveDynamicObject(LSPDLobby[4], 264.32269287109, 112.54183959961, 1003.6422119141, 2);
    	MoveDynamicObject(LSPDLobby[5], 267.33877563477, 112.54633331299, 1003.6422119141, 2);
    	LSPDLobbyStatus3 = 0;
    	foreach(Player, i)
    	{
			if(IsPlayerInRangeOfPoint(i, 15, 264.32269287109, 112.54183959961, 1003.6422119141) || IsPlayerInRangeOfPoint(i, 3, 267.33877563477, 112.54633331299, 1003.6422119141))
			{
				SendClientMessage(i, COLOR_PURPLE, "* Lobi kaps otomatik olarak kapanr. (( LSPD Lobi ))");
			}
		}
    }
	return 1;
}


forward fallsonracrack(i,anim); public fallsonracrack(i,anim)
{
	if (anim == 0)
	{
		ApplyAnimation(i,"PED","KO_shot_stom",4.1,0,1,1,1,1,1);
		SetTimerEx("fallsonracrack", 9000, false, "ii", i, 1);
	}
	if (anim == 1)
	{
		SetPVarInt(i, "IsFrozen", 0);
		ClearAnimations(i);
		TogglePlayerControllable(i, 1);
	}
 	return 1;
}

forward EmoteMe(playerid,Float:radius,message[]);
public EmoteMe(playerid,Float:radius,message[])
{
	new string[128];
	new string2[128];
    format(string, sizeof(string), "* ");
	format(string2, sizeof(string2), " %s", message);
	ProxDetector5(15.0, playerid, string,string2,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
}

forward PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z);
public PlayerToPoint(Float:radi, playerid, Float:x, Float:y, Float:z)
{
    if(IsPlayerConnected(playerid))
	{
		new Float:oldposx, Float:oldposy, Float:oldposz;
		new Float:tempposx, Float:tempposy, Float:tempposz;
		GetPlayerPos(playerid, oldposx, oldposy, oldposz);
		tempposx = (oldposx -x);
		tempposy = (oldposy -y);
		tempposz = (oldposz -z);
		if (((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
		{
			return 1;
		}
	}
	return 0;
}

forward	ShutUp(slot);
public ShutUp(slot)
{
	switch(slot)
	{
		case 11:
		{
		SetDynamicObjectRot(Giseler[0],0.00000, 90.00000, 84.93570);
		}
		case 12:
		{
		SetDynamicObjectRot(Giseler[1],0.00000, -90.00000, 86.76000);
		}
		case 13:
		{
		SetDynamicObjectRot(Giseler[2],0.00000, 91.00000, 126.00000);
		}
		case 14:
		{
		SetDynamicObjectRot(Giseler[3],0.00000, 90.00000, 129.67500);
		}
		case 15:
		{
		SetDynamicObjectRot(Giseler[4],0.00000, 90.00000, 341.32001);
		}
		case 16:
		{
		SetDynamicObjectRot(Giseler[5],0.00000, 91.00000, 341.17999);
		}
	}
	return 1;
}

stock CrearFotoMulta(Float:fx,Float:fy,Float:fz,Float:frx,Float:fry,Float:frz,Float:fradio,fvelmax)
{
    new r, string[128];
	for(r=0; r < MAX_RADAR; r++)
	if(!RadarInfo[r][rCreado]) break;
	CreateDynamicObject(18880,fx,fy,fz-1,frx,fry,frz);
	RadarInfo[r][rCreado] = 1;
	RadarInfo[r][tX] = fx;
	RadarInfo[r][tY] = fy;
	RadarInfo[r][tZ] = fz;
	RadarInfo[r][tRX] = frx;
	RadarInfo[r][tRY] = fry;
	RadarInfo[r][tRZ] = frz;
	RadarInfo[r][rRadio] = fradio;
	RadarInfo[r][rVelMax] = fvelmax;
	format(string, sizeof(string), "{007AFF}[HIZ RADARI]\n{00FF00}Maximum Hz: {FFFFFF}%d{00FF00} MP/H", fvelmax);
	Create3DTextLabel(string,0xFFFFFFF7,fx,fy,fz +7,100,0,0);
	return 1;
}

forward FotoMultaON();
public FotoMultaON()
{
	for(new i; i< MAX_RADAR; i++){
	    if(RadarInfo[i][rCreado]){
			for(new d,e=GetMaxPlayers(); d<e; d++){
				if(IsPlayerConnected(d) && IsPlayerInRangeOfPoint(d,RadarInfo[i][rRadio],RadarInfo[i][tX],RadarInfo[i][tY],RadarInfo[i][tZ]) && IsPlayerInAnyVehicle(d)){
					if(SacarVelocidad(d) > RadarInfo[i][rVelMax] && !LimiteSuperado[d]){
					    LimitedeVelocidadpa(d, RadarInfo[i][rVelMax], SacarVelocidad(d));
					    LimiteSuperado[d] = 1;
					}
					else if(SacarVelocidad(d) < RadarInfo[i][rVelMax] && LimiteSuperado[d]){
					    LimiteSuperado[d] = 0;
					}
				}
			}
		}
	}
	return 1;
}

forward LimitedeVelocidadpa(playerid, velmax, velactual);
public LimitedeVelocidadpa(playerid, velmax, velactual)
{
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
	if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pFaction] != 2) 
	{
		TextDrawShowForPlayer(playerid, Foto);
		SetTimerEx("TiempoFoto", 6000, false, "i", playerid);
		SetTimerEx("QuitarCamara", 100, false, "i", playerid);
		PlayerInfo[playerid][pWantedLevel] += 1;
  SetPlayerWantedLevel(playerid,GetPlayerWantedLevel(playerid) + 1); 
		SendClientMessage(playerid, COLOR_WHITE, "Hz Radarna Yakalandnz ! Arandnz Bilgisi LSPD'e Bildirildi!");
	}
  }
	return 1;
}

forward TiempoFoto(playerid);
public TiempoFoto(playerid)
{
    LimiteSuperado[playerid] = 0;
    return 1;
}
forward QuitarCamara(playerid);
public QuitarCamara(playerid)
{
    TextDrawHideForPlayer(playerid,Foto);
    return 1;
}

stock SacarVelocidad(playerid)
{
	new Float:vX, Float:vY, Float:vZ, Float:Velocidad;
	GetVehicleVelocity(GetPlayerVehicleID(playerid), vX, vY, vZ);
	Velocidad = floatmul(floatsqroot(floatadd(floatadd(floatpower(vX, 2), floatpower(vY, 2)),  floatpower(vZ, 2))), 100.0);
	return floatround(floatdiv(Velocidad, 0.75), floatround_floor);
}

stock IsPlayerTied(playerid)
{
	if(!PlayerTied[playerid]) return 0;
	if(PlayerTied[playerid]) return 1;
	return 1;
}

stock SendAdminMessage(color, admlvl, string[])
{
	foreach(Player, i)
	{
		if(gPlayerLogged[i] && PlayerInfo[i][pAdmin] >= admlvl)
		{
		    SendClientMessage(i, color, string);
		}
	}
	return 1;
}

stock IsABicycle(vehicleid)
{
	switch(GetVehicleModel(vehicleid))
	{
		case 481,509,510: return 1;
	}
	return 0;
}

stock GetPlayerSpeed(playerid, bool:mph = true)
{
	new
		Float:xx,
		Float:yy,
		Float:zz,
		Float:pSpeed;

	if(IsPlayerInAnyVehicle(playerid))
	{
		GetVehicleVelocity(GetPlayerVehicleID(playerid),xx,yy,zz);
	}
	else
	{
		GetPlayerVelocity(playerid,xx,yy,zz);
	}

	pSpeed = floatsqroot((xx * xx) + (yy * yy) + (zz * zz));
	return mph ? floatround((pSpeed * 165.12)) : floatround((pSpeed * 103.9));
}

stock ToggleEngine(vehicleid, toggle)
{
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	SetVehicleParamsEx(vehicleid, toggle, lights, alarm, doors, bonnet, boot, objective);
}

stock ShowCarColorList(playerid,dialogid,Caption[],Button1[],Button2[])
{
    new BigString[3098];
    for(new i = 0; i < sizeof(ColorList); i++)
	{
		format(BigString, sizeof(BigString), "%s%s", BigString, ColorList[i]);
	}
	ShowPlayerDialog(playerid,dialogid,DIALOG_STYLE_MSGBOX,Caption,BigString,Button1,Button2);
}

stock GetVehicleSpeed(vehicleid, get3d)
{
	new Float:x, Float:y, Float:z;
	GetVehicleVelocity(vehicleid, x, y, z);
	return SpeedCheck(x, y, z, 100.0, get3d);
}

stock ModifyVehicleSpeed(vehicleid,mph)
{
	new Float:Vx,Float:Vy,Float:Vz,Float:DV,Float:multiple;
	GetVehicleVelocity(vehicleid,Vx,Vy,Vz);
	DV = floatsqroot(Vx*Vx + Vy*Vy + Vz*Vz);
	if(DV > 0)
	{
		multiple = ((mph + DV * 100) / (DV * 100));
		return SetVehicleVelocity(vehicleid,Vx*multiple,Vy*multiple,Vz*multiple);
	}
	return 0;
}

forward ReFill(playerid, vehicleslot);
public ReFill(playerid, vehicleslot)
{
    if(!GazIstasyonunda(playerid) || !IsPlayerInAnyVehicle(playerid) || Fuel[GetPlayerVehicleID(playerid)] >= 100.0 || GetPlayerCash(playerid) < 1)
	{
		StopRefueling(playerid, vehicleslot);
	}
	else
	{
		GetVehicleParamsEx(GetPlayerVehicleID(playerid),engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON) {
			StopRefueling(playerid, vehicleslot);
		}
		else {
			Fuel[GetPlayerVehicleID(playerid)] += 1.0;
			RefuelingVehiclePrice[playerid] += FUEL_PRICE;
			if(Fuel[GetPlayerVehicleID(playerid)] >= 100.0) Fuel[GetPlayerVehicleID(playerid)] = 100.0;
		}
	}
	return true;
}

stock GazIstasyonunda(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid,10,1595.5406, 2198.0520, 10.3863) || IsPlayerInRangeOfPoint(playerid,10,2202.0649, 2472.6697, 10.5677) ||
	IsPlayerInRangeOfPoint(playerid,10,2115.1929, 919.9908, 10.5266) || IsPlayerInRangeOfPoint(playerid,10,2640.7209, 1105.9565, 10.5274) ||
	IsPlayerInRangeOfPoint(playerid,10,608.5971, 1699.6238, 6.9922) || IsPlayerInRangeOfPoint(playerid,10,618.4878, 1684.5792, 6.9922) ||
	IsPlayerInRangeOfPoint(playerid,10,2146.3467, 2748.2893, 10.5245) || IsPlayerInRangeOfPoint(playerid,10,-1679.4595, 412.5129, 6.9973) ||
	IsPlayerInRangeOfPoint(playerid,10,-1327.5607, 2677.4316, 49.8093) || IsPlayerInRangeOfPoint(playerid,10,-1470.0050, 1863.2375, 32.3521) ||
	IsPlayerInRangeOfPoint(playerid,10,-2409.2200, 976.2798, 45.2969) || IsPlayerInRangeOfPoint(playerid,10,-2244.1396, -2560.5833, 31.9219) ||
	IsPlayerInRangeOfPoint(playerid,10,-1606.0544, -2714.3083, 48.5335) || IsPlayerInRangeOfPoint(playerid,10,1937.4293, -1773.1865, 13.3828) ||
	IsPlayerInRangeOfPoint(playerid,10,-91.3854, -1169.9175, 2.4213) || IsPlayerInRangeOfPoint(playerid,10,1383.4221, 462.5385, 20.1506) ||
	IsPlayerInRangeOfPoint(playerid,10,660.4590, -565.0394, 16.3359) || IsPlayerInRangeOfPoint(playerid,10,1381.7206, 459.1907, 20.3452) ||
	IsPlayerInRangeOfPoint(playerid,10,-1605.7156, -2714.4573, 48.5335) || IsPlayerInRangeOfPoint(playerid,20,1882.2546,-2393.9824,16.5144) ||
	IsPlayerInRangeOfPoint(playerid,10,1386.5360,-271.5511,-0.4857) || IsPlayerInRangeOfPoint(playerid,10,2017.3016,-229.9219,-0.2183) ||
	IsPlayerInRangeOfPoint(playerid,10,279.1325,1940.4025,17.6406) || IsPlayerInRangeOfPoint(playerid,10,-2324.0815,2362.8477,4.9922))
	{ return true; }
	return false;
}

stock StopRefueling(playerid, vehicleslot)
{
	GivePlayerCash(playerid, -RefuelingVehiclePrice[playerid]);

	new string[128];
	format(string, sizeof(string), "Aracnzn benzin deposu %d Dolar'a dolduruldu.", RefuelingVehiclePrice[playerid]);
	SendClientMessageEx(playerid, COLOR_WHITE,string);

	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if(strcmp(Points[i][Name], "Fossil Fuel Company", true) == 0)
		{
			mypoint = i;
		}
	}
	for(new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
		{
			FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+(RefuelingVehiclePrice[playerid]/5);
		}
	}
	if(vehicleslot != -1) {
	    PlayerVehicleInfo[playerid][vehicleslot][pvFuel] = Fuel[PlayerVehicleInfo[playerid][vehicleslot][pvId]];
	}
	isrefuelling[playerid] = 0;
 	RefuelingVehiclePrice[playerid] = 0;
 	KillTimer(RefuelingVehicleTimer[playerid]);
	return true;
}


forward respawn(playerid);
public respawn(playerid)
{
	for(new i=0; i<MAX_VEHICLES; i++)
	{
		if(!Aractakiler(i))
	 	{
	  		SetVehicleToRespawn(i);
	    }
	}
	new string[128];
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		format(string, sizeof(string), "(( {FF6347}Level %d Admin %s: {FFFFFF}Kullanlmayan aralar respawn edilmitir! ))", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid));
		SendClientMessageToAllEx(COLOR_OOC,string);
 	}
	return 1;

}

forward Aractakiler(vehicleid);
public Aractakiler(vehicleid)
{
    for(new i=0;i<MAX_PLAYERS;i++)
    {
        if(IsPlayerInVehicle(i,vehicleid))
        return 1;
    }
    return 0;
}


stock PlayerPlayMusic(playerid)
{
	if(IsPlayerConnected(playerid)) {
		SetTimer("StopMusic", 5000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
	}
}

forward StopMusic();
public StopMusic()
{
	foreach(Player, i)
	{
		PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
	}
}

stock PlayerFixRadio(playerid)
{
	if(IsPlayerConnected(playerid)) {
		SetTimer("PlayerFixRadio2", 1000, 0);
		PlayerPlaySound(playerid, 1068, 0.0, 0.0, 0.0);
		Fixr[playerid] = 1;
	}
}

forward PlayerFixRadio2();
public PlayerFixRadio2()
{
	foreach(Player, i)
	{
		if(Fixr[i])
		{
			PlayerPlaySound(i, 1069, 0.0, 0.0, 0.0);
			Fixr[i] = 0;
		}
	}
}

stock vehicle_lock_doors(vehicle) {

	new
		vParamArr[7];

	GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
	return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_ON, vParamArr[4], vParamArr[5], vParamArr[6]);
}

stock vehicle_unlock_doors(vehicle) {

	new
		vParamArr[7];

	GetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], vParamArr[3], vParamArr[4], vParamArr[5], vParamArr[6]);
	return SetVehicleParamsEx(vehicle, vParamArr[0], vParamArr[1], vParamArr[2], VEHICLE_PARAMS_OFF, vParamArr[4], vParamArr[5], vParamArr[6]);
}

stock IsSeatAvailable(vehicleid, seat)
{
	new carmodel = GetVehicleModel(vehicleid);
	for (new i = 0; i < sizeof(OneSeatVehicles); i++)
	{
	    if(carmodel == OneSeatVehicles[i]) return 0;
	}
	foreach(Player, i)
	{
	    if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == seat) return 0;
	}
	return 1;
}

stock IsPlayerInInvalidNosVehicle(playerid)
{
	switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
		case 581, 523, 462, 521, 463, 522, 461, 448, 468, 586, 509, 481, 510, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454, 590, 569, 537, 538, 570, 449: return 1;
	}
	return 0;
}

stock IsAtClothShop(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,25.0,207.5627,-103.7291,1005.2578) || IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047) || IsPlayerInRangeOfPoint(playerid,25.0,203.9068,-41.0728,1001.8047))
		{//Binco & Suburban
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,30.0,214.4470,-7.6471,1001.2109) || IsPlayerInRangeOfPoint(playerid,50.0,161.3765,-83.8416,1001.8047))
		{//Zip & Victim
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,202.6777,-163.0623,1000.5306))
		{//Diedier Sachs
		    return 1;
		}
	}
	return 0;
}

stock IsAtBar(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,3.0,495.7801,-76.0305,998.7578) || IsPlayerInRangeOfPoint(playerid,3.0,499.9654,-20.2515,1000.6797) || IsPlayerInRangeOfPoint(playerid,9.0,1497.5735,-1811.6150,825.3397))
		{//In grove street bar (with girlfriend), and in Havanna
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,4.0,1215.9480,-13.3519,1000.9219) || IsPlayerInRangeOfPoint(playerid,10.0,-2658.9749,1407.4136,906.2734) || IsPlayerInRangeOfPoint(playerid,10.0,2155.3367,-97.3984,3.8308))
		{//PIG Pen
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,6.0,300.351287, 1030.323120, 1104.560058) || IsPlayerInRangeOfPoint(playerid,6.0,311.184661, 1011.819274, 1098.540039) || IsPlayerInRangeOfPoint(playerid,10.0,-1091.006958, 607.855773, 1116.507812))
		{// First two: Tableau Club - Last one: The Lubu Gentlemen's club
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,6.0,255.606887, 1086.537109, 5099.806152))
		{// Santa Maria Surfer's Lounge.
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,10.0,453.2437,-105.4000,999.5500) || IsPlayerInRangeOfPoint(playerid,10.0,1255.69, -791.76, 1085.38) ||
		IsPlayerInRangeOfPoint(playerid,10.0,2561.94, -1296.44, 1062.04) || IsPlayerInRangeOfPoint(playerid,10.0,1139.72, -3.96, 1000.67) ||
		IsPlayerInRangeOfPoint(playerid,10.0,1139.72, -3.96, 1000.67) || IsPlayerInRangeOfPoint(playerid, 10.0, 880.06, 1430.86, -82.34) ||
		IsPlayerInRangeOfPoint(playerid,10.0,499.96, -20.66, 1000.68))
		{
			//Bars
			return 1;
		}
	}
	return 0;
}

stock IsAtATM(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid,3.0,2065.439453125, -1897.5510253906, 13.19670009613) || IsPlayerInRangeOfPoint(playerid,3.0,1497.7467041016, -1749.8747558594, 15.088212013245) || IsPlayerInRangeOfPoint(playerid,3.0,2093.5124511719, -1359.5474853516, 23.62727355957) || IsPlayerInRangeOfPoint(playerid,3.0,1155.6235351563, -1464.9141845703, 15.44321346283))
		{//ATMS
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2139.4487304688, -1164.0811767578, 23.63508605957) || IsPlayerInRangeOfPoint(playerid,3.0,387.16552734375, -1816.0512695313, 7.4834146499634))
		{//ATMS
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,-24.385023117065, -92.001075744629, 1003.1897583008) || IsPlayerInRangeOfPoint(playerid,3.0,-31.811220169067, -58.106018066406, 1003.1897583008) || IsPlayerInRangeOfPoint(playerid,3.0,1212.7785644531, 2.451762676239, 1000.5647583008) || IsPlayerInRangeOfPoint(playerid,3.0,2324.4028320313, -1644.9445800781, 14.469946861267))
		{//ATMS
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2228.39, -1707.78, 13.25) || IsPlayerInRangeOfPoint(playerid,3.0,651.19305419922, -520.48815917969, 15.978837013245) || IsPlayerInRangeOfPoint(playerid, 3.0, 45.78035736084, -291.80926513672, 1.5024013519287) || IsPlayerInRangeOfPoint(playerid,3.0,1275.7958984375, 368.31481933594, 19.19758605957) || IsPlayerInRangeOfPoint(playerid,3.0,2303.4577636719, -13.539554595947, 26.12727355957))/*End of Red County Random ATM's*/
		{//ATMS
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,691.08215332031, -618.5625, 15.978837013245) || IsPlayerInRangeOfPoint(playerid,3.0,173.23471069336, -155.07606506348, 1.2210245132446) || IsPlayerInRangeOfPoint(playerid,3.0,1260.8796386719, 209.30152893066, 19.19758605957) || IsPlayerInRangeOfPoint(playerid,3.0,2316.1015625, -88.522567749023, 26.12727355957))
		{//ATMS
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,2052.9246, -1660.6346, 13.1300) || IsPlayerInRangeOfPoint(playerid,3.0,-1980.6300,121.5300,27.3100))
		{
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,3.0,-2453.7600,754.8200,34.8000) || IsPlayerInRangeOfPoint(playerid,3.0,-2678.6201,-283.3400,6.8000))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid,5.0,519.8157,-2890.8601,4.4609))
		{
		    return 1;
		}
		else if((IsPlayerInRangeOfPoint(playerid,5.0,487.060546, -2383.360107, 10.782341) && GetPlayerInterior(playerid) == 18))
		{ // Saints Mall
		    return 1;
		}
	}
	return 0;
}

// Anti Dialog ID spoofing
stock ShowPlayerDialogEx(playerid, dialogid, style, caption[], info[], button1[], button2[]) {
	SetPVarInt(playerid, "dialog", dialogid);
	ShowPlayerDialog(playerid, dialogid, style, caption, info, button1, button2);
	return 1;
}

stock IsAtNameChange(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0,1154.7295,-1440.2323,15.7969))
		{
			return 1;
		}
	}
	return 0;
}

stock IsAt247(playerid)
{
 	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 100.0, -30.875, -88.9609, 1004.53))
		{
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 10.0, -2654.2300,1526.3693,907.1797))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, 890.66, 1429.08, -82.34))
		{
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, -29.2035, -185.1285, 1003.5469))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, 2.0450,-29.0116,1003.5494))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, -28.1463,-89.9533,1003.5469))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, -22.0699,-138.6297,1003.5469))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, -22.0699,-138.6297,1003.5469))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, -30.9772,-29.0228,1003.5573))
		{
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 50.0, -23.4488,-55.6319,1003.5469))
		{
		    return 1;
		}
		else if((IsPlayerInRangeOfPoint(playerid,130.0,470.430297, -2414.415527, 10.790462) && GetPlayerInterior(playerid) == 18))
		{ // Saints Mall
		    return 1;
		}
 	}
	return 0;
}

Float:GetDistanceBetweenPlayers(iPlayerOne, iPlayerTwo)
{
	new
		Float: fPlayerPos[3];

	GetPlayerPos(iPlayerOne, fPlayerPos[0], fPlayerPos[1], fPlayerPos[2]);
	return GetPlayerDistanceFromPoint(iPlayerTwo, fPlayerPos[0], fPlayerPos[1], fPlayerPos[2]);
}

stock RespawnNearbyVehicles(iplayerid, Float: fRadius) {

	new
		Float: fPlayerPos[3];

    GetPlayerPos(iplayerid, fPlayerPos[0], fPlayerPos[1], fPlayerPos[2]);
    for(new i = 1; i < MAX_VEHICLES; i++) if(GetVehicleModel(i) && GetVehicleDistanceFromPoint(i, fPlayerPos[0], fPlayerPos[1], fPlayerPos[2]) <= fRadius) {
		foreach(Player, x) if(GetPlayerVehicleID(x) == i) continue;
		SetVehicleToRespawn(i);
    }
	return 1;
}

stock DoubleEXPcheck(hour) {
    FixHour(hour);
    hour = shifthour;

	if(hour >= 13 && hour <= 15)
		return 1; // EU timezone
	else if(hour >= 18 && hour <= 20)
		return 1; // US timezone
    else if(hour >= 0 && hour <= 2)
		return 1; // OC timezone

	return 0;
}

stock Misc_Save() {

	new
		szFileStr[32],
		File: iFileHandle = fopen("serverConfig.ini", io_write);

	ini_SetInteger(iFileHandle, szFileStr, "Jackpot", Jackpot);
	ini_SetInteger(iFileHandle, szFileStr, "LoginCount", TotalLogin);
	ini_SetInteger(iFileHandle, szFileStr, "ConnCount", TotalConnect);
	ini_SetInteger(iFileHandle, szFileStr, "ABanCount", TotalAutoBan);
	ini_SetInteger(iFileHandle, szFileStr, "RegCount", TotalRegister);
	ini_SetInteger(iFileHandle, szFileStr, "MaxPCount", MaxPlayersConnected);
	ini_SetInteger(iFileHandle, szFileStr, "MaxPDay", MPDay);
	ini_SetInteger(iFileHandle, szFileStr, "MaxPMonth", MPMonth);
	ini_SetInteger(iFileHandle, szFileStr, "MaxPYear", MPYear);
	ini_SetInteger(iFileHandle, szFileStr, "Uptime", TotalUptime);
	ini_SetString(iFileHandle, "gMOTD", GlobalMOTD);
	ini_SetString(iFileHandle, "aMOTD", AdminMOTD);
	fclose(iFileHandle);
}

stock Misc_Load() {

	new
		szResult[32],
		szFileStr[160],
		File: iFileHandle = fopen("serverConfig.ini", io_read);

	while(fread(iFileHandle, szFileStr, sizeof(szFileStr))) {

		if(ini_GetValue(szFileStr, "gMOTD", GlobalMOTD, sizeof(GlobalMOTD))) 												continue;
		if(ini_GetValue(szFileStr, "aMOTD", AdminMOTD, sizeof(AdminMOTD))) 													continue;

		else if(ini_GetValue(szFileStr, "Jackpot", szResult, sizeof(szResult)))												Jackpot = strval(szResult);
		//else if(ini_GetValue(szFileStr, "Tax", szResult, sizeof(szResult)))													Tax = strval(szResult);
		//else if(ini_GetValue(szFileStr, "TaxVal", szResult, sizeof(szResult)))												TaxValue = strval(szResult);
		else if(ini_GetValue(szFileStr, "LoginCount", szResult, sizeof(szResult)))											TotalLogin = strval(szResult);
		else if(ini_GetValue(szFileStr, "ConnCount", szResult, sizeof(szResult)))											TotalConnect = strval(szResult);
		else if(ini_GetValue(szFileStr, "ABanCount", szResult, sizeof(szResult)))											TotalAutoBan = strval(szResult);
		else if(ini_GetValue(szFileStr, "RegCount", szResult, sizeof(szResult)))											TotalRegister = strval(szResult);
		else if(ini_GetValue(szFileStr, "MaxPCount", szResult, sizeof(szResult)))											MaxPlayersConnected	= strval(szResult);
		else if(ini_GetValue(szFileStr, "MaxPDay", szResult, sizeof(szResult)))												MPDay = strval(szResult);
		else if(ini_GetValue(szFileStr, "MaxPMonth", szResult, sizeof(szResult)))											MPMonth = strval(szResult);
		else if(ini_GetValue(szFileStr, "MaxPYear", szResult, sizeof(szResult)))											MPYear = strval(szResult);
		else if(ini_GetValue(szFileStr, "Uptime", szResult, sizeof(szResult)))												TotalUptime = strval(szResult);
	}
	fclose(iFileHandle);
}

ini_GetValue(szParse[], szValueName[], szDest[], iDestLen)
{

	new
		iPos = strfind(szParse, "=", false),
		iLength = strlen(szParse);

	while(iLength-- && szParse[iLength] <= ' ')
	{
		szParse[iLength] = 0;
	}

	if(strcmp(szParse, szValueName, false, iPos) == 0)
	{
		strmid(szDest, szParse, iPos + 1, iLength + 1, iDestLen);
		return 1;
	}
	return 0;
}

stock SetVehicleLights(vehicleid, playerid)
{
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(lights == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective);
		SendClientMessage(playerid, COLOR_WHITE, "Aracn farlar kapand.");
	}
    else if(lights == VEHICLE_PARAMS_OFF || lights == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,VEHICLE_PARAMS_ON,alarm,doors,bonnet,boot,objective);
		SendClientMessage(playerid, COLOR_WHITE, "Aracn farlar ald.");
	}
	return 1;
}

stock SetVehicleTrunk(vehicleid, playerid)
{
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(boot == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_OFF,objective);
		SendClientMessage(playerid, COLOR_WHITE, "Aracn bagaj kapand.");
	}
    else if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,VEHICLE_PARAMS_ON,objective);
		SendClientMessage(playerid, COLOR_WHITE, "Aracn bagaj ald.");
	}
	return 1;
}

stock SetVehicleHood(vehicleid, playerid)
{
    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    if(bonnet == VEHICLE_PARAMS_ON)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_OFF,boot,objective);
		SendClientMessage(playerid, COLOR_WHITE, "Aracn kaputu kapand.");
	}
    else if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
	{
		SetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,VEHICLE_PARAMS_ON,boot,objective);
		SendClientMessage(playerid, COLOR_WHITE, "Aracn kaputu ald.");
	}
	return 1;
}

stock ShowNMuteFine(playerid)
{
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));

	new allmoney;
	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
	{
		allmoney = HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney]+GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)
	{
		allmoney += HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney];
	}
	else
	{
		allmoney = GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
	}

    new fine = 10*allmoney/100;
	if(PlayerInfo[playerid][pNMuteTotal] < 4)
	{
		new string[64];
		format(string,sizeof(string),"%d Dakika Hapis\nPara Cezas ($%d)",PlayerInfo[playerid][pNMuteTotal] * 15, fine);
		ShowPlayerDialogEx(playerid,NMUTE,DIALOG_STYLE_LIST,"Yardm Kanal Mute Kaldr - Cezan Se:",string,"Se","Iptal");
	}
	else if(PlayerInfo[playerid][pNMuteTotal] == 4) ShowPlayerDialogEx(playerid,NMUTE,DIALOG_STYLE_LIST,"Yardm Kanal Mute Kaldr - Cezan Se:","1 Saat Hapis","Se","Iptal");
	else if(PlayerInfo[playerid][pNMuteTotal] == 5) ShowPlayerDialogEx(playerid,NMUTE,DIALOG_STYLE_LIST,"Yardm Kanal Mute Kaldr - Cezan Se:","1 Saat 15 Dakika Hapis","Se","Iptal");
	else if(PlayerInfo[playerid][pNMuteTotal] == 6) ShowPlayerDialogEx(playerid,NMUTE,DIALOG_STYLE_LIST,"Yardm Kanal Mute Kaldr - Cezan Se:","1 Saat 30 Dakika Hapis","Se","Iptal");
}

stock ShowAdMuteFine(playerid)
{
	new string[128];
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));

	new allmoney;
	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
	{
		allmoney = HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney]+GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)
	{
		allmoney += HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney];
	}
	else
	{
		allmoney = GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
	}

    new fine = 10*allmoney/100;
	if(PlayerInfo[playerid][pADMuteTotal] < 4)
	{
		format(string,sizeof(string),"%d Dakika Hapis\nPara Cezas ($%d)",PlayerInfo[playerid][pADMuteTotal]*15,fine);
	}
	if(PlayerInfo[playerid][pADMuteTotal] == 4)
	{
	    format(string,sizeof(string),"1 Saat Hapis");
	}
	if(PlayerInfo[playerid][pADMuteTotal] == 5)
	{
	    format(string,sizeof(string),"1 Saat 15 Dakika Hapis)");
	}
	if(PlayerInfo[playerid][pADMuteTotal] == 6)
	{
	    format(string,sizeof(string),"1 Saat 30 Dakika Hapis");
	}
	ShowPlayerDialogEx(playerid,ADMUTE,DIALOG_STYLE_LIST,"Reklam Mute Kaldr - Cezan Se:",string,"Se","Iptal");
}

stock FindFreeAttachedObjectSlot(playerid)
{
	new index;
 	while (index < MAX_PLAYER_ATTOBJECTS && IsPlayerAttachedObjectSlotUsed(playerid, index))
	{
		index++;
	}
	if(index == MAX_PLAYER_ATTOBJECTS) return -1;
	return index;
}

stock player_remove_vip_toys(iTargetID)
{
	if(PlayerInfo[iTargetID][pDonator] >= 3) return 1;
	else for(new iToyIter; iToyIter < MAX_PLAYER_ATTOBJECTS; ++iToyIter) {
		for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsCop); ++LoopRapist) {
			if(HoldingObjectsCop[LoopRapist][holdingmodelid] == PlayerToyInfo[iTargetID][iToyIter][ptModelID]) {
				new
					szQuery[128];

				SetPVarInt(iTargetID, "deleteObject", iToyIter);
				format(szQuery, sizeof(szQuery), "DELETE FROM toys WHERE Owner = %d AND ID = %d", PlayerInfo[iTargetID][pID], PlayerToyInfo[iTargetID][iToyIter][ptRealID]);
				mysql_query(szQuery, THREAD_DELETE_PLAYER_OBJECT, iTargetID, g_MySQLConnections[0]);
				if(IsPlayerAttachedObjectSlotUsed(iTargetID, iToyIter)) RemovePlayerAttachedObject(iTargetID, iToyIter);
			}
		}
	}
	SendClientMessage(iTargetID, COLOR_WHITE, "alannn mal olan tm aksesuarlar kaldrld.");
	return 1;
}

stock SetPlayerWalkingStyle(playerid, style)
{
	PlayerInfo[playerid][pWalkStyle] = style;
}

stock GetPlayerWalkingStyle(playerid)
{
	return PlayerInfo[playerid][pWalkStyle];
}

forward WalkAnim(playerid);
public WalkAnim(playerid)
{
	new keys, updown, leftright;
	GetPlayerKeys(playerid,keys,updown,leftright);
	if (GetPlayerWalkingStyle(playerid) == WALK_NORMAL)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_player",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_player",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_PED)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_civi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_civi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
 	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang1",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang1",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_GANGSTA2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_gang2",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_gang2",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_old",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_old",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT_OLD)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fatold",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fatold",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_FAT)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_fat",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_fat",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walknorm",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_LADY2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkbusy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walkpro",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_WHORE2)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WOMAN_walksexy",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_DRUNK)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","WALK_drunk",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","WALK_drunk",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	else if (GetPlayerWalkingStyle(playerid) == WALK_BLIND)
	{
 	 	if ((keys & KEY_WALK && updown & KEY_UP) || (keys & KEY_WALK && updown & KEY_DOWN) || (keys & KEY_WALK && leftright & KEY_LEFT) || (keys & KEY_WALK && leftright & KEY_RIGHT))
		{
		   	KillTimer(walktime[playerid]);
			ApplyAnimation(playerid,"PED","Walk_Wuzi",4.1,1,1,1,1,1);
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
		}
		else ApplyAnimation(playerid,"PED","Walk_Wuzi",4.0,0,0,0,0,1), KillTimer(walktime[playerid]);
	}
	return true;
}

stock Float:GetDistance(Float: x1, Float: y1, Float: z1, Float: x2, Float: y2, Float: z2)
{
	new Float:d;
	d += floatpower(x1-x2, 2.0);
	d += floatpower(y1-y2, 2.0);
	d += floatpower(z1-z2, 2.0);
	d = floatsqroot(d);
	return d;
}

stock Float: GetDistanceToCar(playerid, veh) {

	new
		Float: fVehiclePos[3];

	GetVehiclePos(veh, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2]);
	return GetPlayerDistanceFromPoint(playerid, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2]);
}

stock GetClosestCar(iPlayer, iException = INVALID_VEHICLE_ID, Float: fRange = Float: 0x7F800000) {

	new
		iReturnID = -1,
		Float: fVehiclePos[4];

	for(new i = 1; i <= MAX_VEHICLES; ++i) if(GetVehicleModel(i) && i != iException) {
		GetVehiclePos(i, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2]);
		if((fVehiclePos[3] = GetPlayerDistanceFromPoint(iPlayer, fVehiclePos[0], fVehiclePos[1], fVehiclePos[2])) < fRange) {
			fRange = fVehiclePos[3];
			iReturnID = i;
		}
	}
	return iReturnID;
}

stock GetFactionName(factionid) {
	new
		employer[64];
	switch(factionid) {
		case 1: employer = "LSPD";
		case 2: employer = "FBI";
		case 3: employer = "LSFMD";
		case 4: employer = "Hitman Agency";
		case 5: employer = "GOV";
  		case 6: employer = "LST";
		case 9: employer = "SAN News";
	}
	return employer;
}

forward ResyncPlayer(playerid);
public ResyncPlayer(playerid) {
	#define RESYNC_TIME (1000) // MS

	if(GetPVarInt(playerid, "_resync") != 0) {
	    GameTextForPlayer(playerid, "~r~ Senkronize Oluyor...", RESYNC_TIME, 5);
		SetPVarInt(playerid, "_tmpVW", GetPlayerVirtualWorld(playerid));
		SetPVarInt(playerid, "_resync", 1);
		SetPlayerVirtualWorld(playerid, TEMP_RESYNC_VW);
		SetTimerEx("ResyncPlayer", RESYNC_TIME, false, "d", playerid);
	} else {
	    SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "_tmpVW"));
	    DeletePVar(playerid, "_resync");
	    DeletePVar(playerid, "_tmpVW");
	}
	return 1;
}

stock GetPlayerFactionInfo(targetid, rank[64], division[64], employer[64]) { // >>> UPDATE FACTION NAMES FROM GetFactionName <<<
	switch(PlayerInfo[targetid][pFaction]) { // employer/rank/division data is pulled from here
	    case 1: {
            employer = "LSPD";
			switch(PlayerInfo[targetid][pRank]) {
			    case 1: rank = "Memur";
			    case 2: rank = "Kdemli Memur";
			    case 3: rank = "avu";
			    case 4: rank = "Temen";
			    case 5: rank = "Asistan ef";
			    case 6: rank = "ef";
			    default: rank = "Stajyer";
			}
			switch(PlayerInfo[targetid][pDivision]) {
			    case 1: division = "Yok";
			    case 2: division = "DH";
			    case 3: division = "HK";
			    case 4: division = "IA";
			    case 5: division = "OB";
			    case 6: division = "YB";
			    default: division = "Yok";
			}
		}
  		case 2: {
            employer = "FBI";
			switch(PlayerInfo[targetid][pRank]) {
			    case 1: rank = "Ajan";
			    case 2: rank = "Kdemli Ajan";
			    case 3: rank = "Uzman Ajan";
			    case 4: rank = "Denetleyici Ajan";
			    case 5: rank = "Asistan Direktr";
			    case 6: rank = "Direktr";
			    default: rank = "Yeni Ajan";
			}
			switch(PlayerInfo[targetid][pDivision]) {
			    case 1: division = "Yok";
			    case 2: division = "HK";
			    case 3: division = "BB";
			    case 4: division = "EB";
			    case 5: division = "NB";
				case 6: division = "OSB";
			    default: division = "Yok";
			}
		}
  		case 3: {
            employer = "LSFMD";

			switch(PlayerInfo[targetid][pRank]) {
				case 0: rank = "Asistan Doktor";
				case 1: rank = "Doktor";
				case 2: rank = "Uzm. Doktor";
				case 3: rank = "Do. Doktor";
				case 4: rank = "Prof. Doktor";
				case 5: rank = "Asistan ef";
				case 6: rank = "ef";
				default: rank = "Paramedik";
			}

			switch(PlayerInfo[targetid][pDivision]) {
			    case 1: division = "KD";
			    case 2: division = "HD";
				case 3: division = "EB";
				case 4: division = "IA";
			    default: division = "Yok";
			}
		}
		case 4: {
		    employer = "Hitman Ajans";
		    switch(PlayerInfo[targetid][pRank])
		    {
    			case 1: rank = "Katil";
				case 2: rank = "Nianc";
				case 3: rank = "Ajan";
				case 4: rank = "zel Ajan";
				case 5: rank = "Asistan Direktr";
				case 6: rank = "Direktr";
				default: rank = "Katil";
			}
			division = "Yok";
		}
		case 5: {
		    employer = "GOV";
		    switch(PlayerInfo[targetid][pRank]) {
				case 1: {
					if(PlayerInfo[targetid][pDivision] == 5)
						rank = "alan";
					else
					    rank = "alan";
				}
				case 2: {
					if(PlayerInfo[targetid][pDivision] == 5)
						rank = "Meclis";
					else
					    rank = "Meclis";
				}
				case 3: {
					if(PlayerInfo[targetid][pDivision] == 5)
						rank = "Milletvekili";
					else
					    rank = "Milletvekili";
				}
				case 4: {
					if(PlayerInfo[targetid][pDivision] == 5)
						rank = "Vali";
					else
					    rank = "Vali";
				}
				case 5: {
					if(PlayerInfo[targetid][pDivision] == 5)
						rank = "Bakan Yardmcs";
					else
					    rank = "Bakan Yardmcs";
				}
				case 6: rank = "Bakan";
				default: rank = "alan";
			}

			division = "Yok";
			switch(PlayerInfo[targetid][pDivision]) {
				case 1: division = "Yok";
			    case 2: division = "Idari";
			    case 3: division = "Adli";
			    case 4: division = "Kanun";
			    case 5: division = "Gvenlik";
			    default: division = "Yok";
			}
		}
  		case 6: {
		    employer = "Los Santos Taksi";
		    switch(PlayerInfo[targetid][pRank])
		    {
    			case 1: rank = "Acemi ofr";
				case 2: rank = "ofr";
				case 3: rank = "Deneyimli ofr";
				case 4: rank = "Durak Yardmcs";
				case 5: rank = "Durak Bayardmcs";
				case 6: rank = "Durak Sahibi";
				default: rank = "Acemi ofr";
			}
			division = "Yok";
		}
		case 9: {
		    employer = "SAN Haberleri";
		    switch(PlayerInfo[targetid][pRank]) {
				case 1: rank = "Spiker";
				case 2: rank = "Haber Dizayn";
				case 3: rank = "Grafik Dizayn";
				case 4: rank = "Ik Ynetim";
				case 5: rank = "Asistan Direktr";
				case 6: rank = "Direktr";
				default: rank = "Stajyer";
			}

			division = "Yok";
			switch(PlayerInfo[targetid][pDivision]) {
			    case 1: division = "Gvenlik";
			    default: division = "";
			}
		}
	    default: { employer = "Yok"; division = "Yok"; rank = "Yok"; }
	}
	return 1;
}

stock IsAVipCar(carid)
{
	for(new v = 0; v < sizeof(VipVehicles); v++) {
	    if(carid == VipVehicles[v]) return 1;
	}
	return 0;
}

stock IsACopCar(carid)
{
	for(new v = 0; v < sizeof(LSPDVehicles); v++) {
	    if(carid == LSPDVehicles[v]) return 1;
	}
	return 0;
}

stock IsAFBICar(carid)
{
	for(new v = 0; v < sizeof(FBIVehicles); v++) {
	    if(carid == FBIVehicles[v]) return 1;
	}
	return 0;
}

stock IsAnAmbulance(carid)
{
	for(new v = 0; v < sizeof(LSFMDVehicles); v++) {
	    if(carid == LSFMDVehicles[v]) return 1;
	}
	return 0;
}

stock IsANewsVeh(vehid) {
	for(new v = 0; v < sizeof(SANVehicles); v++) {
	    if(vehid == SANVehicles[v]) return 1;
	}
	return 0;
}

stock IsAGovCar(carid)
{
	for(new v = 0; v < sizeof(GovVehicles); v++) {
	    if(carid == GovVehicles[v]) return 1;
	}
	return 0;
}

stock IsACop(playerid) {
	if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) return 1;
	else return 0;
}

stock IsInLSFMD(playerid) {
	if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3) return 1;
	else return 0;
}

stock IsAtDeliverPatientPoint(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0,1142.4733,-1326.3633,13.6259) || IsPlayerInRangeOfPoint(playerid, 5.0, 1165.1564,-1368.8240,26.6502) || IsPlayerInRangeOfPoint(playerid, 3.0,2027.0599,-1410.6870,16.9922) || IsPlayerInRangeOfPoint(playerid, 5.0, 2024.5742,-1382.7844,48.3359))
		{//ALLSAINTS, ALL SAINTS ROOF, COUNTY GENERAL, COUNTY ROOF
			return 1;
		}
	}
	return 0;
}

stock IsAtImpoundingPoint(playerid) {
	return (IsPlayerInRangeOfPoint(playerid, 4.0,1602.002197, -1608.801879, 13.662560));
}

stock IsAtArrestPoint(playerid)
{
	if(IsPlayerConnected(playerid))
	{
		if(IsPlayerInRangeOfPoint(playerid, 4.0, 1528.082397, -1677.978637, 5.890625))
		{// LSPD
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 1564.830932, -1652.506469, 28.395606))
		{// LSPD roof
		    return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 304.796508, -1526.349731, 76.539062))
		{// FBI roof
			return 1;
		}
		else if(IsPlayerInRangeOfPoint(playerid, 4.0, 298.313842, -1536.036865, 24.593750))
		{// FBI
			return 1;
		}
		if(PlayerInfo[playerid][pVW] == 20002 || PlayerInfo[playerid][pVW] == 1324123)
		{//LSPD int and FBI int
			return 1;
		}
	}
	return 0;
}

stock JoinPaintballGame(playerid, game) {
	if(game == 0)
	    return 0;
	if(game > 3) {
		new
			Team1Total,
			Team2Total;

		foreach(Player, i) {
			if(GetPVarInt(i, "PBM") == game) {
				if(PaintballTeam[i] == 1) Team1Total ++;
				else if(PaintballTeam[i] == 2) Team2Total ++;
			}
		}

		if(Team1Total > Team2Total) PaintballTeam[playerid] = 2;
		else PaintballTeam[playerid] = 1;
	}

	switch(game) {
	    case 1: { // dm lv warehouse
			SetPlayerPos(playerid, 1059.895996, 2081.685791, 10.820312);
			SetPlayerInterior(playerid, 0); // just for clarity
			SetPlayerVirtualWorld(playerid, 60);

			SetPVarInt(playerid, "PBM", 1);
		}
	    case 2: { // dm random warehouse
			SetPlayerPos(playerid, 1283.287841, 5.694778, 1001.011779);
			SetPlayerInterior(playerid, 18);
			SetPlayerVirtualWorld(playerid, 61);

			SetPVarInt(playerid, "PBM", 2);
	    }
	    case 3: { // dm rc battlefield
			SetPlayerPos(playerid, -975.975708, 1060.983032, 1345.671875);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 62);

			SetPVarInt(playerid, "PBM", 3);
		}
	    case 4: { // tdm lv warehouse
			SetPVarInt(playerid, "PBM", 4);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 63);
			if(PaintballTeam[playerid] == 1) {
				SetPlayerPos(playerid, 1068.6324, 2082.7930, 10.8203);
				SetPlayerFacingAngle(playerid, 359.9999);
				SetPlayerColor(playerid, 0xFFFF0000);
				SetPlayerTeam(playerid, 1);
			} else {
				SetPlayerPos(playerid, 1069.3499, 2127.0828, 10.8203);
				SetPlayerFacingAngle(playerid, 181.4610);
				SetPlayerColor(playerid, 0x33CCFF00);
				SetPlayerTeam(playerid, 2);
			}
		}
	    case 5: { // tdm random warehouse
			SetPVarInt(playerid, "PBM", 5);
			SetPlayerInterior(playerid, 18);
			SetPlayerVirtualWorld(playerid, 64);
			if(PaintballTeam[playerid] == 1) {
				SetPlayerPos(playerid, 1305.5143, 3.6555, 1001.0269);
				SetPlayerFacingAngle(playerid, 0);
				SetPlayerColor(playerid, 0xFFFF0000);
				SetPlayerTeam(playerid, 1);
			} else {
				SetPlayerPos(playerid, 1252.7601,-46.6263,1001.0282);
				SetPlayerFacingAngle(playerid, 133.2679);
				SetPlayerColor(playerid, 0x33CCFF00);
				SetPlayerTeam(playerid, 2);
			}
	    }
	    case 6: { // tdm rc battlefield
			SetPVarInt(playerid, "PBM", 6);
			SetPlayerInterior(playerid, 10);
			SetPlayerVirtualWorld(playerid, 65);
			if(PaintballTeam[playerid] == 1) {
				SetPlayerPos(playerid, -1128.8225, 1057.4939, 1346.4141);
				SetPlayerFacingAngle(playerid, 260);
				SetPlayerColor(playerid, 0xFFFF0000);
				SetPlayerTeam(playerid, 1);
			} else {
				SetPlayerPos(playerid, -976.2924, 1061.0496, 1345.6719);
				SetPlayerFacingAngle(playerid, 90);
				SetPlayerColor(playerid, 0x33CCFF00);
				SetPlayerTeam(playerid, 2);
			}
		}
	}

	new
	    szMessage[64],
		iCount;

    format(szMessage, sizeof(szMessage), "%s paintball'a katld.", GetPlayerNameEx(playerid));
	foreach(Player, i) {
		if(GetPVarInt(i, "PBM") == game && GetPVarInt(i, "PBM") > 0) {
		    SendClientMessage(i, COLOR_RED, szMessage);
		    iCount++;
		}
	}
	ResetPlayerWeapons(playerid);
	SetPlayerHealth(playerid, 100);
	SetPlayerArmourEx(playerid, 0);
    if(gaPaintballGameTimer[game] <= 0 && iCount > 0 && gaPaintballGameTimeRemaining[game] > 0) {
		GivePlayerValidAdminWeapon(playerid, 24, 99999);
		GivePlayerValidAdminWeapon(playerid, 27, 99999);
		GivePlayerValidAdminWeapon(playerid, 29, 99999);
		GivePlayerValidAdminWeapon(playerid, 31, 99999);

		TogglePlayerControllable(playerid, true);

		SendClientMessage(playerid, COLOR_RED, "Oyun baladktan sonra katldnz. Bu eli kazanamayabilirsiniz!");
    } else {
        if(iCount == 0) {
			SendClientMessage(playerid, COLOR_GREY, "Oyundaki tek oyuncu sizsiniz. Baka oyuncu girene kadar oynayamazsnz.");
			SetPVarInt(playerid, "IsFrozen", 1);
			TogglePlayerControllable(playerid, false);
        } else {
			SendClientMessage(playerid, COLOR_GREY, "Oyun henz balamad, oyun balayana kadar kprdayamazsnz.");
			SetPVarInt(playerid, "IsFrozen", 1);
			TogglePlayerControllable(playerid, false);

		    if(gaPaintballTimerHandles[game] == 0) {
		        gaPaintballGameTimer[game] = 5;
				gaPaintballTimerHandles[game] = SetTimerEx("PaintballTimer", 1000, true, "d", game);
			}
        }
	}

	SendClientMessage(playerid, COLOR_GREY, "Herhangi bir sebeple oyundan kmak isterseniz, /pbcik yazn.");
	return 1;
}

forward PaintballTimer(game);
public PaintballTimer(game) {
    gaPaintballGameTimer[game]--;

	if(gaPaintballGameTimer[game] <= 0) {
	    foreach(Player, i) {
			if(GetPVarInt(i, "PBM") == game) {
			    GameTextForPlayer(i, "Oyun basliyor...~n~~g~SIMDI!", 2000, 3);
			    DeletePVar(i, "IsFrozen");
				TogglePlayerControllable(i, true);
				SendClientMessage(i, COLOR_RED, "GO!");

				GivePlayerValidAdminWeapon(i, 24, 99999);
				GivePlayerValidAdminWeapon(i, 27, 99999);
				GivePlayerValidAdminWeapon(i, 29, 99999);
				GivePlayerValidAdminWeapon(i, 31, 99999);
			}
		}

        gaPaintballGameTimeRemaining[game] = 5 * 60;
		KillTimer(gaPaintballTimerHandles[game]);
		gaPaintballTimerHandles[game] = 0;
	} else {
		new
	    	szMessage[32];

        format(szMessage, sizeof(szMessage), "OYUN BASLIYOR...~n~~r~%d", gaPaintballGameTimer[game]);
        foreach(Player, i) {
        	if(GetPVarInt(i, "PBM") == game)
				GameTextForPlayer(i, szMessage, 1000, 3);
        }
	}
	return 1;
}

stock IsMDCPermitted(playerid)
{
	if(	PlayerInfo[playerid][pFaction] == 1|| PlayerInfo[playerid][pLeader] == 1 ||
		PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2||
		PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pLeader] == 5||
		PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
		return 1;
	}
	return 0;
}

stock IsATowTruck(carid)
{
	if(GetVehicleModel(carid) == 525) { // NB. Barney removed car id 485, 583, 574 due to native GTA bugs.
		return 1;
	}
	return 0;
}

stock IsABike(carid) {
	switch(GetVehicleModel(carid)) {
		case 509, 481, 510, 462, 448, 581, 522, 461, 521, 523, 463, 586, 468, 471: return 1;
	}
	return 0;
}

stock QSort(numbers[], left, right)
{
        new
                pivot = numbers[left],
                l_hold = left,
                r_hold = right;
        while (left < right)
        {
                while ((numbers[right] >= pivot) && (left < right)) right--;
                if (left != right)
                {
                        numbers[left] = numbers[right];
                        left++;
                }
                while ((numbers[left] <= pivot) && (left < right)) left++;
                if (left != right)
                {
                        numbers[right] = numbers[left];
                        right--;
                }
        }
        numbers[left] = pivot;
        pivot = left;
        left = l_hold;
        right = r_hold;
        if (left < pivot) QSort(numbers, left, pivot - 1);
        if (right > pivot) QSort(numbers, pivot + 1, right);
}

stock IsARC(carid)
{
	switch(GetVehicleModel(carid)) {
		case 441, 464, 465, 501, 564: return 1;
	}
	return 0;
}
stock IsABoat(carid) {
	switch(GetVehicleModel(carid)) {
		case 472, 473, 493, 484, 430, 454, 453, 452, 446: return 1;
	}
	return 0;
}

stock IsAPlane(carid)
{
	switch(GetVehicleModel(carid)) {
		case 592, 577, 511, 512, 593, 520, 553, 476, 519, 460, 513, 548, 425, 417, 487, 488, 497, 563, 447, 469: return 1;
	}
	return 0;
}

stock IsAnBus(carid)
{
	if(GetVehicleModel(carid) == 431 || GetVehicleModel(carid) == 437) {
		return 1;
	}
	return 0;
}

stock IsAnTaxi(carid)
{
	if(GetVehicleModel(carid) == 420 || GetVehicleModel(carid) == 438) {
		return 1;
	}
	return 0;
}

stock IsAPizzaCar(carid)
{
	if(GetVehicleModel(carid) == 448) {
		return 1;
	}
	return 0;
}

stock IsATruckerCar(carid)
{
	for(new v = 0; v < sizeof(TruckerVehicles); v++) {
	    if(carid == TruckerVehicles[v]) return 1;
	}
	return 0;
}

stock Float:GetPizzaDistance(houseid)
{
	new Float: pizzaDistance;
	pizzaDistance = GetDistance(2104.1999511719, -1787.5999755859, 13.60000038147, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
    return pizzaDistance;
}

stock IsATirCar(carid)
{
	for(new v = 0; v < sizeof(TirVehicles); v++) {
	    if(carid == TirVehicles[v]) return 1;
	}
	return 0;
}

stock IsACimentoCar(carid)
{
	for(new v = 0; v < sizeof(CimentoVehicles); v++) {
	    if(carid == CimentoVehicles[v]) return 1;
	}
	return 0;
}

stock Float:IsABoomboxNearby(Float:posX, Float:posY, Float:posZ, playerid)
{
	new Float: boomboxDistance;
	boomboxDistance = GetDistance(posX, posY, posZ, BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ]);
    return boomboxDistance;
}

stock splits(const strsrc[], strdest[][], delimiter)
{
	new i, li;
	new aNum;
	new len;
	while(i <= strlen(strsrc)){
		if(strsrc[i]==delimiter || i==strlen(strsrc)){
			len = strmid(strdest[aNum], strsrc, li, i, 128);
			strdest[aNum][len] = 0;
			li = i+1;
			aNum++;
		}
		i++;
	}
	return 1;
}

stock split(const strsrc[], strdest[][], delimiter)
{
    new i, li;
    new aNum;
    new len;
    while(i <= strlen(strsrc))
    {
        if(strsrc[i] == delimiter || i == strlen(strsrc))
        {
            len = strmid(strdest[aNum], strsrc, li, i, 128);
            strdest[aNum][len] = 0;
            li = i+1;
            aNum++;
        }
        i++;
    }
    return 1;
}

stock ini_GetKey(line[])
{
	new keyRes[64];
	keyRes[0] = 0;
	if(strfind(line , "=" , true) == -1) return keyRes;
	strmid(keyRes , line , 0 , strfind(line , "=" , true) , sizeof(keyRes));
	return keyRes;
}

stock Ini_Value(line[])
{
	new valRes[156];
	valRes[0]=0;
	if(strfind(line , "=" , true) == -1) return valRes;
	strmid(valRes , line , strfind(line , "=" , true)+1 , strlen(line) , sizeof(valRes));
	return valRes;
}

stock LoadPoints()
{
	new arrCoords[9][64];
	new strFromFile2[256];
	new File: file = fopen("points.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(Points))
		{
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			Points[idx][Pointx] = floatstr(arrCoords[0]);
			Points[idx][Pointy] = floatstr(arrCoords[1]);
			Points[idx][Pointz] = floatstr(arrCoords[2]);
			Points[idx][Type] = strval(arrCoords[3]);
			Points[idx][Vulnerable] = strval(arrCoords[4]);
			strmid(Points[idx][Owner], arrCoords[5], 0, strlen(arrCoords[5]), 255);
			strmid(Points[idx][CapperName], arrCoords[6], 0, strlen(arrCoords[6]), 255);
			strmid(Points[idx][Name], arrCoords[7], 0, strlen(arrCoords[7]), 255);
			Points[idx][MatPoint] = strval(arrCoords[8]);
			//printf("%s Type:%d Owner:%s",Points[idx][Name],Points[idx][Type],Points[idx][Owner]);
			Points[idx][CaptureTimerEx2] = -1;
			Points[idx][ClaimerId] = INVALID_PLAYER_ID;
			Points[idx][PointPickupID] = CreatePickup(1239, 23, Points[idx][Pointx], Points[idx][Pointy], Points[idx][Pointz], -1);
			idx++;
		}
		fclose(file);
	}
	return 1;
}

stock UpdatePoints()
{
	new idx;
	new File: file2;
	while (idx < sizeof(Points))
	{
		new coordsstring[256];
		format(coordsstring, sizeof(coordsstring), "%f|%f|%f|%d|%d|%s|%s|%s|%d\n",
		Points[idx][Pointx],
		Points[idx][Pointy],
		Points[idx][Pointz],
		Points[idx][Type],
		Points[idx][Vulnerable],
		Points[idx][Owner],
		Points[idx][CapperName],
		Points[idx][Name],
		Points[idx][MatPoint]);
		if(idx == 0)
		{
			file2 = fopen("points.cfg", io_write);
		}
		else
		{
			file2 = fopen("points.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

stock ClearFamily(family)
{
	foreach(Player, i) {
		if(PlayerInfo[i][pGang] == family) {
			SendClientMessage(i, COLOR_LIGHTBLUE, "* Bulunduun aile bir admin tarafndan silindi, otomatik olarak atldn.");
			PlayerInfo[i][pGang] = 255;
			PlayerInfo[i][pRank] = 0;
		}
	}

	new string[MAX_PLAYER_NAME];
	format(string, sizeof(string), "Yok");
	FamilyInfo[family][FamilyTaken] = 0;
	strmid(FamilyInfo[family][FamilyName], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyMOTD], string, 0, strlen(string), 255);
	strmid(FamilyInfo[family][FamilyLeader], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Rank 1");
	strmid(FamilyInfo[family][FamilyRank1], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Rank 2");
	strmid(FamilyInfo[family][FamilyRank2], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Rank 3");
	strmid(FamilyInfo[family][FamilyRank3], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Rank 4");
	strmid(FamilyInfo[family][FamilyRank4], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Rank 5");
	strmid(FamilyInfo[family][FamilyRank5], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Rank 6");
	strmid(FamilyInfo[family][FamilyRank6], string, 0, strlen(string), 255);
	FamilyInfo[family][FamilyColor] = 0;
	FamilyInfo[family][FamilyTurfTokens] = 24;
	FamilyInfo[family][FamilyMembers] = 0;
	FamilyInfo[family][FamilySpawn][0] = 0.0;
	FamilyInfo[family][FamilySpawn][1] = 0.0;
	FamilyInfo[family][FamilySpawn][2] = 0.0;
	FamilyInfo[family][FamilySpawn][3] = 0.0;
    FamilyInfo[family][FamilyGuns][0] = 0;
    FamilyInfo[family][FamilyGuns][2] = 0;
    FamilyInfo[family][FamilyGuns][3] = 0;
    FamilyInfo[family][FamilyGuns][4] = 0;
    FamilyInfo[family][FamilyGuns][5] = 0;
    FamilyInfo[family][FamilyGuns][6] = 0;
    FamilyInfo[family][FamilyGuns][7] = 0;
	FamilyInfo[family][FamilyGuns][8] = 0;
	FamilyInfo[family][FamilyGuns][9] = 0;
	FamilyInfo[family][FamilyCash] = 0;
	FamilyInfo[family][FamilyMats] = 0;
	FamilyInfo[family][FamilyPot] = 0;
	FamilyInfo[family][FamilyCrack] = 0;
	FamilyInfo[family][FamilySafe][0] = 0.0;
	FamilyInfo[family][FamilySafe][1] = 0.0;
	FamilyInfo[family][FamilySafe][2] = 0.0;
	FamilyInfo[family][FamilyUSafe] = 0;
	for(new i = 0; i < MAX_GANG_VEHICLES; i++)
	{
	    if(FamilyVehicleInfo[family][i][fvModelId] != 0)
	    {
			FamilyVehicleInfo[family][i][fvModelId] = 0;
			FamilyVehicleInfo[family][i][fvSpawnx] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawny] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawnz] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawna] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawnatmp] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawnatmp] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawnatmp] = 0.0;
			FamilyVehicleInfo[family][i][fvSpawnatmp] = 0.0;
			FamilyVehicleInfo[family][i][fvLock] = 0;
			FamilyVehicleInfo[family][i][fvLocked] = 0;
			FamilyVehicleInfo[family][i][fvPaintJob] = 0;
			FamilyVehicleInfo[family][i][fvColor1] = 0;
			FamilyVehicleInfo[family][i][fvColor2] = 0;
			for(new m = 0; m < MAX_MODS; m++)
			{
			    FamilyVehicleInfo[family][i][fvMods][m] = 0;
			}
			FamilyVehicleInfo[family][i][fvPrice] = 0;
			FamilyVehicleInfo[family][i][fvImpounded] = 0;
			FamilyVehicleInfo[family][i][fvFuel] = 100.0;
			DestroyVehicle(FamilyVehicleInfo[family][i][fvId]);
			FamilyVehicleInfo[family][i][fvId] = 0;
		}
	}
	//if(IsValidDynamicPickup(FamilyInfo[family][FamilyEntrancePickup])) DestroyPickup(FamilyInfo[family][FamilyEntrancePickup]);
	//if(IsValidDynamicPickup(FamilyInfo[family][FamilyExitPickup])) DestroyPickup(FamilyInfo[family][FamilyExitPickup]);
    DestroyPickup(FamilyInfo[family][FamilyEntrancePickup]);
    DestroyPickup(FamilyInfo[family][FamilyExitPickup]);
	DestroyDynamic3DTextLabel(Text3D:FamilyInfo[family][FamilyEntranceText]);
	DestroyDynamic3DTextLabel(Text3D:FamilyInfo[family][FamilyExitText]);
	DestroyPickup(FamilyInfo[family][FamilyPickup]);
	SaveFamilies();
	return 1;
}

stock ClearCrime(playerid)
{
	if(IsPlayerConnected(playerid)) {
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "********");
		strmid(PlayerCrime[playerid][pBplayer], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pVictim], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusing], string, 0, strlen(string), 255);
		strmid(PlayerCrime[playerid][pAccusedof], string, 0, strlen(string), 255);
	}
	return 1;
}

stock LoadFamilies() {

	if(!fexist("families.cfg")) return 1;

	new
		szFileStr[512],
		iIndex,
		File: iFileHandle = fopen("families.cfg", io_read);

	while (iIndex < sizeof(FamilyInfo) && fread(iFileHandle, szFileStr)) {

		sscanf(szFileStr, "p<|>is[42]s[65]s[24]iiifffiiis[20]s[20]s[20]s[20]s[20]s[20]iiiiiiiiiiiiiiiiiiiiii",
			FamilyInfo[iIndex][FamilyTaken],
			FamilyInfo[iIndex][FamilyName],
			FamilyInfo[iIndex][FamilyMOTD],
			FamilyInfo[iIndex][FamilyLeader],
			FamilyInfo[iIndex][FamilyBank],
			FamilyInfo[iIndex][FamilyCash],
			FamilyInfo[iIndex][FamilyUSafe],
			FamilyInfo[iIndex][FamilySafe][0],
			FamilyInfo[iIndex][FamilySafe][1],
			FamilyInfo[iIndex][FamilySafe][2],
			FamilyInfo[iIndex][FamilyPot],
			FamilyInfo[iIndex][FamilyCrack],
			FamilyInfo[iIndex][FamilyMats],
			FamilyInfo[iIndex][FamilyRank1],
			FamilyInfo[iIndex][FamilyRank2],
			FamilyInfo[iIndex][FamilyRank3],
			FamilyInfo[iIndex][FamilyRank4],
			FamilyInfo[iIndex][FamilyRank5],
			FamilyInfo[iIndex][FamilyRank6],
			FamilyInfo[iIndex][FamilyMembers],
			FamilyInfo[iIndex][FamilyMaxSkins],
			FamilyInfo[iIndex][FamilySkins][0],
			FamilyInfo[iIndex][FamilySkins][1],
			FamilyInfo[iIndex][FamilySkins][2],
			FamilyInfo[iIndex][FamilySkins][3],
			FamilyInfo[iIndex][FamilySkins][4],
			FamilyInfo[iIndex][FamilySkins][5],
			FamilyInfo[iIndex][FamilySkins][6],
			FamilyInfo[iIndex][FamilySkins][7],
			FamilyInfo[iIndex][FamilyColor],
			FamilyInfo[iIndex][FamilyTurfTokens],
			FamilyInfo[iIndex][FamilyGuns][0],
			FamilyInfo[iIndex][FamilyGuns][1],
			FamilyInfo[iIndex][FamilyGuns][2],
			FamilyInfo[iIndex][FamilyGuns][3],
			FamilyInfo[iIndex][FamilyGuns][4],
			FamilyInfo[iIndex][FamilyGuns][5],
			FamilyInfo[iIndex][FamilyGuns][6],
			FamilyInfo[iIndex][FamilyGuns][7],
			FamilyInfo[iIndex][FamilyGuns][8],
			FamilyInfo[iIndex][FamilyGuns][9]
		);
		++iIndex;
	}
	return fclose(iFileHandle);
}

stock SaveFamilies()
{
	new idx;
	new File: file2;
	while (idx < sizeof(FamilyInfo))
	{
		new coordsstring[512];
		format(coordsstring, sizeof(coordsstring), "%d|%s|%s|%s|%d|%d|%d|%f|%f|%f|%d|%d|%d|%s|%s|%s|%s|%s|%s|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\n",
		FamilyInfo[idx][FamilyTaken],
		FamilyInfo[idx][FamilyName],
		FamilyInfo[idx][FamilyMOTD],
		FamilyInfo[idx][FamilyLeader],
		FamilyInfo[idx][FamilyBank],
		FamilyInfo[idx][FamilyCash],
		FamilyInfo[idx][FamilyUSafe],
		FamilyInfo[idx][FamilySafe][0],
		FamilyInfo[idx][FamilySafe][1],
		FamilyInfo[idx][FamilySafe][2],
		FamilyInfo[idx][FamilyPot],
		FamilyInfo[idx][FamilyCrack],
		FamilyInfo[idx][FamilyMats],
		FamilyInfo[idx][FamilyRank1],
		FamilyInfo[idx][FamilyRank2],
		FamilyInfo[idx][FamilyRank3],
		FamilyInfo[idx][FamilyRank4],
		FamilyInfo[idx][FamilyRank5],
		FamilyInfo[idx][FamilyRank6],
		FamilyInfo[idx][FamilyMembers],
		FamilyInfo[idx][FamilyMaxSkins],
		FamilyInfo[idx][FamilySkins][0],
		FamilyInfo[idx][FamilySkins][1],
		FamilyInfo[idx][FamilySkins][2],
		FamilyInfo[idx][FamilySkins][3],
		FamilyInfo[idx][FamilySkins][4],
		FamilyInfo[idx][FamilySkins][5],
		FamilyInfo[idx][FamilySkins][6],
		FamilyInfo[idx][FamilySkins][7],
		FamilyInfo[idx][FamilyColor],
		FamilyInfo[idx][FamilyTurfTokens],
		FamilyInfo[idx][FamilyGuns][0],
		FamilyInfo[idx][FamilyGuns][1],
		FamilyInfo[idx][FamilyGuns][2],
		FamilyInfo[idx][FamilyGuns][3],
		FamilyInfo[idx][FamilyGuns][4],
		FamilyInfo[idx][FamilyGuns][5],
		FamilyInfo[idx][FamilyGuns][6],
		FamilyInfo[idx][FamilyGuns][7],
		FamilyInfo[idx][FamilyGuns][8],
		FamilyInfo[idx][FamilyGuns][9]);
		if(idx == 0)
		{
			file2 = fopen("families.cfg", io_write);
		}
		else
		{
			file2 = fopen("families.cfg", io_append);
		}
		fwrite(file2, coordsstring);
		idx++;
		fclose(file2);
	}
	return 1;
}

stock LoadFamiliesHQ()
{
    new string2[64];
	format(string2, sizeof(string2), "familieshq.ini");
	new File: GangFile = fopen(string2, io_read);
	//printf("[DEBUG] LoadFamiliesHQ: string2 (%s)", string2);
	if(GangFile)
	{
	    //print("[DEBUG] LoadFamiliesHQ: GangFile exists, the handle parsed.");
		new key[256] , val[256];
		new Data[256];
		//print("[DEBUG] Starting while (fread(GangFile , Data , sizeof(Data)))");
		while (fread(GangFile , Data , sizeof(Data)))
		{
		    new string[128];
		    for(new f = 0; f < MAX_FAMILY; f++)
    		{
				key = ini_GetKey(Data);
				format(string, 128, "Family%dEntranceX",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyEntrance][0] = floatstr(val); }
				format(string, 128, "Family%dEntranceY",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyEntrance][1] = floatstr(val); }
				format(string, 128, "Family%dEntranceZ",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyEntrance][2] = floatstr(val); }
				format(string, 128, "Family%dEntranceA",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyEntrance][3] = floatstr(val); }
				format(string, 128, "Family%dExitX",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyExit][0] = floatstr(val); }
				format(string, 128, "Family%dExitY",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyExit][1] = floatstr(val); }
				format(string, 128, "Family%dExitZ",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyExit][2] = floatstr(val); }
				format(string, 128, "Family%dExitA",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyExit][3] = floatstr(val); }
				format(string, 128, "Family%dInterior",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyInterior] = strval(val); }
				format(string, 128, "Family%dCustomMap",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyCustomMap] = strval(val); }
				format(string, 128, "Family%dVirtualWorld",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyInfo[f][FamilyVirtualWorld] = strval(val); }
				for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
    			{
    			    format(string, 128, "Family%dVeh%dModelId",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvModelId] = strval(val); }
					format(string, 128, "Family%dVeh%dSpawnx",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvSpawnx] = floatstr(val); }
					format(string, 128, "Family%dVeh%dSpawny",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvSpawny] = floatstr(val); }
					format(string, 128, "Family%dVeh%dSpawnz",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvSpawnz] = floatstr(val); }
					format(string, 128, "Family%dVeh%dSpawna",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvSpawna] = floatstr(val); }
					format(string, 128, "Family%dVeh%dLock",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvLock] = strval(val); }
					format(string, 128, "Family%dVeh%dLocked",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvLocked] = strval(val); }
					format(string, 128, "Family%dVeh%dPaintJob",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvPaintJob] = strval(val); }
					format(string, 128, "Family%dVeh%dColor1",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvColor1] = strval(val); }
					format(string, 128, "Family%dVeh%dColor2",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvColor2] = strval(val); }
					format(string, 128, "Family%dVeh%dFuel",f, fv);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); FamilyVehicleInfo[f][fv][fvFuel] = floatstr(val); }
    			}
    			//printf("Family %d loaded [DEBUG] FamilyEntranceX: %.1f FamilyEntranceY: %.1f FamilyEntranceZ: %.1f", f, FamilyInfo[f][FamilyEntrance][0], FamilyInfo[f][FamilyEntrance][1], FamilyInfo[f][FamilyEntrance][2]);
			}
		}
		fclose(GangFile);
	}
	return 1;
}

stock LoadObjectsForPlayer(playerid) {
	TogglePlayerControllable(playerid, 0);
	for(new o = 0; o < 7; o++)
	{
		TextDrawShowForPlayer(playerid, ObjectsLoadingTD[o]);
	}
	SetPVarInt(playerid, "LoadingObjects", 1);
	SetTimerEx("SafeLoadObjects", 3000, 0, "d", playerid);
}

stock LoadCsObjects()
{
	new dinfo[15][128];
	new string[256];
	new File:file = fopen("objects22.cfg", io_read);
	if(file)
	{
	    new idx = 1;
		while(idx < MAX_OBJ)
		{
		    fread(file, string);
		    split(string, dinfo, '|');
			ObjInfo[idx][oModel] = strval(dinfo[0]);
			ObjInfo[idx][oX] = floatstr(dinfo[1]);
			ObjInfo[idx][oY] = floatstr(dinfo[2]);
			ObjInfo[idx][oZ] = floatstr(dinfo[3]);
			ObjInfo[idx][oRX] = floatstr(dinfo[4]);
			ObjInfo[idx][oRY] = floatstr(dinfo[5]);
			ObjInfo[idx][oRZ] = floatstr(dinfo[6]);
			if(ObjInfo[idx][oModel]) // If gate exists
			{
				ObjInfo[idx][obj] = CreateDynamicObject(ObjInfo[idx][oModel], ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ], ObjInfo[idx][oRX], ObjInfo[idx][oRY], ObjInfo[idx][oRZ]);
                format(string, sizeof(string), "", idx, ObjInfo[idx][oModel]);
				ObjInfo[idx][oText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ], 10);
			}
			idx++;
	    }
	}
	print("Objeler haritaya ileniyor...");
	return 1;
}

stock IsVehicleOccupied(vehicleid)  {
    foreach(Player,i) {
		if(GetPlayerVehicleID(i) == vehicleid && GetPlayerVehicleSeat(i) == 0)
			return 1;
    }
	return INVALID_VEHICLE_ID;
}

stock SaveFamiliesHQ()
{
	new string3[32];
	//GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	format(string3, sizeof(string3), "familieshq.ini");
	new File: hFile = fopen(string3, io_write);
	if(hFile)
	{
		new var[32];
		for(new f = 0; f < MAX_FAMILY; f++)
   		{
			format(var, 32, "Family%dEntranceX=%.1f\n",f, FamilyInfo[f][FamilyEntrance][0]); fwrite(hFile, var);
			format(var, 32, "Family%dEntranceY=%.1f\n",f, FamilyInfo[f][FamilyEntrance][1]); fwrite(hFile, var);
			format(var, 32, "Family%dEntranceZ=%.1f\n",f, FamilyInfo[f][FamilyEntrance][2]); fwrite(hFile, var);
			format(var, 32, "Family%dEntranceA=%.1f\n",f, FamilyInfo[f][FamilyEntrance][3]); fwrite(hFile, var);
			format(var, 32, "Family%dExitX=%.1f\n",f, FamilyInfo[f][FamilyExit][0]); fwrite(hFile, var);
			format(var, 32, "Family%dExitY=%.1f\n",f, FamilyInfo[f][FamilyExit][1]); fwrite(hFile, var);
			format(var, 32, "Family%dExitZ=%.1f\n",f, FamilyInfo[f][FamilyExit][2]); fwrite(hFile, var);
			format(var, 32, "Family%dExitA=%.1f\n",f, FamilyInfo[f][FamilyExit][3]); fwrite(hFile, var);
			format(var, 32, "Family%dInterior=%d\n",f, FamilyInfo[f][FamilyInterior]); fwrite(hFile, var);
			format(var, 32, "Family%dCustomMap=%d\n",f, FamilyInfo[f][FamilyCustomMap]); fwrite(hFile, var);
			format(var, 32, "Family%dVirtualWorld=%d\n",f, FamilyInfo[f][FamilyVirtualWorld]); fwrite(hFile, var);

			for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
   			{
   			    format(var, 32, "Family%dVeh%dModelId=%d\n",f, fv, FamilyVehicleInfo[f][fv][fvModelId]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawnx=%.1f\n",f, fv,FamilyVehicleInfo[f][fv][fvSpawnx]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawny=%.1f\n",f, fv,FamilyVehicleInfo[f][fv][fvSpawny]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawnz=%.1f\n",f, fv,FamilyVehicleInfo[f][fv][fvSpawnz]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dSpawna=%.1f\n",f, fv,FamilyVehicleInfo[f][fv][fvSpawna]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dLock=%d\n",f, fv,FamilyVehicleInfo[f][fv][fvLock]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dLocked=%d\n",f, fv,FamilyVehicleInfo[f][fv][fvLocked]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dPaintJob=%d\n",f, fv,FamilyVehicleInfo[f][fv][fvPaintJob]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dColor1=%d\n",f, fv,FamilyVehicleInfo[f][fv][fvColor1]); fwrite(hFile, var);
				format(var, 32, "Family%dVeh%dColor2=%d\n",f, fv,FamilyVehicleInfo[f][fv][fvColor2]); fwrite(hFile, var);
				//if(FamilyVehicleInfo[f][fv][fvId] != INVALID_VEHICLE_ID) FamilyVehicleInfo[f][fv][fvFuel] = VehicleFuel[FamilyVehicleInfo[f][fv][fvId]];
				format(var, 32, "Family%dVeh%dFuel=%.1f\n",f, fv,FamilyVehicleInfo[f][fv][fvFuel]); fwrite(hFile, var);
    		}
  		}
		fclose(hFile);
	}
	return 1;
}

stock LoadcDealerships()
{
    new string2[64];
	format(string2, sizeof(string2), "dealerships.ini");
	new File: Dealerships = fopen(string2, io_read);

	if(Dealerships)
	{
		new key[256] , val[256];
		new Data[256];

		while (fread(Dealerships , Data , sizeof(Data)))
		{
            new string[128];

            for(new f = 0; f < MAX_CARDEALERSHIPS; f++)
            {
                key = ini_GetKey(Data);

				format(string, 128, "cd%dOwned",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdOwned] = strval(val); }
				format(string, 128, "cd%dOwner",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); strmid(CarDealershipInfo[f][cdOwner], val, 0, strlen(val)-1, 255); }
				format(string, 128, "cd%dEntranceX",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdEntranceX] = floatstr(val); }
				format(string, 128, "cd%dEntranceY",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdEntranceY] = floatstr(val); }
				format(string, 128, "cd%dEntranceZ",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdEntranceZ] = floatstr(val); }
				format(string, 128, "cd%dExitX",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdExitX] = floatstr(val); }
				format(string, 128, "cd%dExitY",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdExitY] = floatstr(val); }
				format(string, 128, "cd%dExitZ",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdExitZ] = floatstr(val); }
				format(string, 128, "cd%dMessage",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); strmid(CarDealershipInfo[f][cdMessage], val, 0, strlen(val)-1, 255); }
				format(string, 128, "cd%dTill",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdTill] = strval(val); }
				format(string, 128, "cd%dInterior",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdInterior] = strval(val); }
				format(string, 128, "cd%dVehicleSpawnX",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawn][0] = floatstr(val); }
				format(string, 128, "cd%dVehicleSpawnY",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawn][1] = floatstr(val); }
				format(string, 128, "cd%dVehicleSpawnZ",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawn][2] = floatstr(val); }
				format(string, 128, "cd%dVehicleSpawnA",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawn][3] = floatstr(val); }
				format(string, 128, "cd%dRadius",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdRadius] = floatstr(val); }
				format(string, 128, "cd%dPrice",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdPrice] = strval(val); }
    			for(new m = 0; m < MAX_DEALERSHIPVEHICLES; m++)
            	{
  					format(string, 128, "cd%dVehicleSpawnX%d", f, m);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawnX][m] = floatstr(val); }
					format(string, 128, "cd%dVehicleSpawnY%d", f, m);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawnY][m] = floatstr(val); }
					format(string, 128, "cd%dVehicleSpawnZ%d", f, m);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawnZ][m] = floatstr(val); }
					format(string, 128, "cd%dVehicleSpawnA%d", f, m);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleSpawnAngle][m] = floatstr(val); }
					format(string, 128, "cd%dVehicleModel%d", f, m);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleModel][m] = strval(val); }
					format(string, 128, "cd%dVehicleCost%d", f, m);
					if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdVehicleCost][m] = strval(val); }
            	}
 				format(string, 128, "cd%dDonator",f);
				if(strcmp(key , string , true) == 0) { val = Ini_Value(Data); CarDealershipInfo[f][cdDonator] = strval(val); }
            }
		}
		fclose(Dealerships);
	}
	return 1;
}

stock UpdateSANewsBroadcast()
{
    new string[42];
	if(broadcasting == 0)
	{
	    format(string, sizeof(string), "u An: Yayn Yok\nIzleyici: %d", viewers);
	}
	else
	{
	    format(string, sizeof(string), "u An: CANLI\nIzleyici: %d", viewers);
	}
	UpdateDynamic3DTextLabelText(SANews3DText, COLOR_LIGHTBLUE, string);
}


stock SavecDealerships()
{
	new string3[32];
	//GetPlayerName(playerid, playername, MAX_PLAYER_NAME);
	format(string3, sizeof(string3), "dealerships.ini");
	new File: hFile = fopen(string3, io_write);
	if(hFile)
	{
		new var[32];
		for(new f = 0; f < MAX_CARDEALERSHIPS; f++)
   		{
   		    format(var, 32, "cd%dOwned=%d\n", f, CarDealershipInfo[f][cdOwned]); fwrite(hFile, var);
   		    format(var, 32, "cd%dOwner=%s\n", f, CarDealershipInfo[f][cdOwner]); fwrite(hFile, var);
   		    format(var, 32, "cd%dEntranceX=%.1f\n", f, CarDealershipInfo[f][cdEntranceX]); fwrite(hFile, var);
   		    format(var, 32, "cd%dEntranceY=%.1f\n", f, CarDealershipInfo[f][cdEntranceY]); fwrite(hFile, var);
   		    format(var, 32, "cd%dEntranceZ=%.1f\n", f, CarDealershipInfo[f][cdEntranceZ]); fwrite(hFile, var);
   		    format(var, 32, "cd%dExitX=%.1f\n", f, CarDealershipInfo[f][cdExitX]); fwrite(hFile, var);
   		    format(var, 32, "cd%dExitY=%.1f\n", f, CarDealershipInfo[f][cdExitY]); fwrite(hFile, var);
   		    format(var, 32, "cd%dExitZ=%.1f\n", f, CarDealershipInfo[f][cdExitZ]); fwrite(hFile, var);
   		    format(var, 32, "cd%dMessage=%s\n", f, CarDealershipInfo[f][cdMessage]); fwrite(hFile, var);
   		    format(var, 32, "cd%dTill=%d\n", f, CarDealershipInfo[f][cdTill]); fwrite(hFile, var);
   		    format(var, 32, "cd%dInterior=%d\n", f, CarDealershipInfo[f][cdInterior]); fwrite(hFile, var);
   		    format(var, 32, "cd%dVehicleSpawnX=%.1f\n", f, CarDealershipInfo[f][cdVehicleSpawn][0]); fwrite(hFile, var);
   		    format(var, 32, "cd%dVehicleSpawnY=%.1f\n", f, CarDealershipInfo[f][cdVehicleSpawn][1]); fwrite(hFile, var);
   		    format(var, 32, "cd%dVehicleSpawnZ=%.1f\n", f, CarDealershipInfo[f][cdVehicleSpawn][2]); fwrite(hFile, var);
   		    format(var, 32, "cd%dVehicleSpawnA=%.1f\n", f, CarDealershipInfo[f][cdVehicleSpawn][3]); fwrite(hFile, var);
   		    format(var, 32, "cd%dRadius=%.1f\n", f, CarDealershipInfo[f][cdRadius]); fwrite(hFile, var);
   		    format(var, 32, "cd%dPrice=%d\n", f, CarDealershipInfo[f][cdPrice]); fwrite(hFile, var);
			for(new m = 0; m < MAX_DEALERSHIPVEHICLES; m++)
   			{
   				format(var, 32, "cd%dVehicleSpawnX%d=%.1f\n", f, m, CarDealershipInfo[f][cdVehicleSpawnX][m]); fwrite(hFile, var);
   				format(var, 32, "cd%dVehicleSpawnY%d=%.1f\n", f, m, CarDealershipInfo[f][cdVehicleSpawnY][m]); fwrite(hFile, var);
   				format(var, 32, "cd%dVehicleSpawnZ%d=%.1f\n", f, m, CarDealershipInfo[f][cdVehicleSpawnZ][m]); fwrite(hFile, var);
   				format(var, 32, "cd%dVehicleSpawnA%d=%.1f\n", f, m, CarDealershipInfo[f][cdVehicleSpawnAngle][m]); fwrite(hFile, var);
   				format(var, 32, "cd%dVehicleModel%d=%d\n", f, m, CarDealershipInfo[f][cdVehicleModel][m]); fwrite(hFile, var);
   				format(var, 32, "cd%dVehicleCost%d=%d\n", f, m, CarDealershipInfo[f][cdVehicleCost][m]); fwrite(hFile, var);
			}
			format(var, 32, "cd%dDonator=%d\n", f, CarDealershipInfo[f][cdDonator]); fwrite(hFile, var);
		}
		fclose(hFile);
	}
	return 1;
}

stock LoadHouses()
{
	if(!fexist("houses.cfg")) return 1;

	new
		szFileStr[2056],
		File: iFileHandle = fopen("houses.cfg", io_read),
		iIndex;

	while(iIndex < sizeof(HouseInfo) && fread(iFileHandle, szFileStr))
	{
		sscanf(szFileStr, "p<|>iiis[8]s[24]ffffffffiiiiiiiiiiiiiiiii",
			HouseInfo[iIndex][hOwned],
			HouseInfo[iIndex][hLevel],
			HouseInfo[iIndex][hHInteriorWorld],
			HouseInfo[iIndex][hDescription],
			HouseInfo[iIndex][hOwner],
			HouseInfo[iIndex][hExteriorX],
			HouseInfo[iIndex][hExteriorY],
			HouseInfo[iIndex][hExteriorZ],
			HouseInfo[iIndex][hExteriorR],
			HouseInfo[iIndex][hInteriorX],
			HouseInfo[iIndex][hInteriorY],
			HouseInfo[iIndex][hInteriorZ],
			HouseInfo[iIndex][hInteriorR],
			HouseInfo[iIndex][hLock],
			HouseInfo[iIndex][hRentable],
			HouseInfo[iIndex][hRentFee],
			HouseInfo[iIndex][hValue],
			HouseInfo[iIndex][hSafeMoney],
			HouseInfo[iIndex][hPot],
			HouseInfo[iIndex][hCrack],
			HouseInfo[iIndex][hMaterials],
			HouseInfo[iIndex][hWeapons][0],
			HouseInfo[iIndex][hWeapons][1],
			HouseInfo[iIndex][hWeapons][2],
			HouseInfo[iIndex][hWeapons][3],
			HouseInfo[iIndex][hWeapons][4],
			HouseInfo[iIndex][hGLUpgrade],
			HouseInfo[iIndex][hPickupID],
			HouseInfo[iIndex][hCustomInterior],
			HouseInfo[iIndex][hCustomExterior]
		);
		if(HouseInfo[iIndex][hOwned])
		{
			if(HouseInfo[iIndex][hRentable] == 0) format(szFileStr, sizeof(szFileStr), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[iIndex][hOwner],HouseInfo[iIndex][hLevel],iIndex);
			else format(szFileStr, sizeof(szFileStr), "{E3BF1E}Ev Sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala yazin",HouseInfo[iIndex][hOwner],HouseInfo[iIndex][hLevel],iIndex,HouseInfo[iIndex][hRentFee]);
		}
		else format(szFileStr, sizeof(szFileStr), "{E3BF1E}Bu ev satilik!\n Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Fiyat: {FFFFFF}%d TL\nBu evi satin almak icin /evsatinal yazin",HouseInfo[iIndex][hLevel],iIndex,HouseInfo[iIndex][hValue]);

		HouseInfo[iIndex][hPickupID] = CreatePickup(1273, 23, HouseInfo[iIndex][hExteriorX], HouseInfo[iIndex][hExteriorY], HouseInfo[iIndex][hExteriorZ], -1);
		HouseInfo[iIndex][hTextID] = CreateDynamic3DTextLabel(szFileStr, COLOR_HOUSEGREEN, HouseInfo[iIndex][hExteriorX], HouseInfo[iIndex][hExteriorY], HouseInfo[iIndex][hExteriorZ]+0.5,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		++iIndex;
	}
	return fclose(iFileHandle);
}
/*stock LoadMDs()
{
	new string[1024];
	new File: file = fopen("mds.cfg", io_read);
	new i;
	while(i < sizeof(MDI) && fread(file, string))
	{
	    sscanf(string, "p<|>iiffffffffffffii",
	    MDI[i][mdModel],
	    MDI[i][mdFaction],
	    MDI[i][mdPosX],
	    MDI[i][mdPosY],
	    MDI[i][mdPosZ],
	    MDI[i][mdRotX],
	    MDI[i][mdRotY[,
	    MDI[i][mdRotZ],
	    MDI[i][mdPosXM],
	    MDI[i][mdPosYM],
	    MDI[i][mdPosZM],
	    MDI[i][mdRotXM],
	    MDI[i][mdRotYM],
	    MDI[i][mdRotZM],
	    MDI[i][mdInt],
	    MDI[i][mdVW]);

	    MDI[i][mdID] = CreateDynamicObject(MDI[i][mdModel], MDI[i][mdPosX], MDI[i][mdPosY], MDI[i][mdPosZ], MDI[i][mdRotX], MDI[i][mdRotY], MDI[i][mdRotZ], MDI[i][mdVW], MDI[i][mdInt], -1);
	    ++i;
	}
}
stock SaveMDs()
{
	new string[1024];
	new File: file = fopen("mds.cfg", io_write);

	for(new i = 0; i < MAX_MDS; i++)
	{
	    format(string, sizeof(string), "%d|%d|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d",
	    MDI[i][mdModel],
	    MDI[i][mdFaction],
	    MDI[i][mdPosX],
	    MDI[i][mdPosY],
	    MDI[i][mdPosZ],
	    MDI[i][mdRotX],
	    MDI[i][mdRotY[,
	    MDI[i][mdRotZ],
	    MDI[i][mdPosXM],
	    MDI[i][mdPosYM],
	    MDI[i][mdPosZM],
	    MDI[i][mdRotXM],
	    MDI[i][mdRotYM],
	    MDI[i][mdRotZM],
	    MDI[i][mdInt],
	    MDI[i][mdVW]);
	    fwrite(file, string);
	}
	return fclose(file);
}*/

stock SaveHouses()
{
	new
		szFileStr[1024],
		File: fHandle = fopen("houses.cfg", io_write);

	for(new iIndex; iIndex < MAX_HOUSES; iIndex++) {
		format(szFileStr, sizeof(szFileStr), "%d|%d|%d||%s|%s|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d|%d\r\n",
			HouseInfo[iIndex][hOwned],
			HouseInfo[iIndex][hLevel],
			HouseInfo[iIndex][hHInteriorWorld],
			HouseInfo[iIndex][hDescription],
			HouseInfo[iIndex][hOwner],
			HouseInfo[iIndex][hExteriorX],
			HouseInfo[iIndex][hExteriorY],
			HouseInfo[iIndex][hExteriorZ],
			HouseInfo[iIndex][hExteriorR],
			HouseInfo[iIndex][hInteriorX],
			HouseInfo[iIndex][hInteriorY],
			HouseInfo[iIndex][hInteriorZ],
			HouseInfo[iIndex][hInteriorR],
			HouseInfo[iIndex][hLock],
			HouseInfo[iIndex][hRentable],
			HouseInfo[iIndex][hRentFee],
			HouseInfo[iIndex][hValue],
   			HouseInfo[iIndex][hSafeMoney],
			HouseInfo[iIndex][hPot],
			HouseInfo[iIndex][hCrack],
			HouseInfo[iIndex][hMaterials],
			HouseInfo[iIndex][hWeapons][0],
			HouseInfo[iIndex][hWeapons][1],
			HouseInfo[iIndex][hWeapons][2],
			HouseInfo[iIndex][hWeapons][3],
			HouseInfo[iIndex][hWeapons][4],
			HouseInfo[iIndex][hGLUpgrade],
			HouseInfo[iIndex][hPickupID],
			HouseInfo[iIndex][hCustomInterior],
			HouseInfo[iIndex][hCustomExterior]
		);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}

stock IntToPercentage(value, percentage) {
	return (value/100)*percentage;
}

stock LoadDynamicMapIcons()
{
	new arrCoords[7][64];
	new strFromFile2[256];
	new File: file = fopen("dynamicmapicons.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(DMPInfo))
		{
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
	  		DMPInfo[idx][dmpMarkerType] = strval(arrCoords[0]);
	  		DMPInfo[idx][dmpColor] = strval(arrCoords[1]);
	  		DMPInfo[idx][dmpVW] = strval(arrCoords[2]);
	  		DMPInfo[idx][dmpInt] = strval(arrCoords[3]);
	  		DMPInfo[idx][dmpPosX] = floatstr(arrCoords[4]);
	  		DMPInfo[idx][dmpPosY] = floatstr(arrCoords[5]);
	  		DMPInfo[idx][dmpPosZ] = floatstr(arrCoords[6]);

	  		if(DMPInfo[idx][dmpMarkerType] != 0)
	  		{
    			DMPInfo[idx][dmpMapIconID] = CreateDynamicMapIcon(DMPInfo[idx][dmpPosX], DMPInfo[idx][dmpPosY], DMPInfo[idx][dmpPosZ], DMPInfo[idx][dmpMarkerType], DMPInfo[idx][dmpColor], DMPInfo[idx][dmpVW], DMPInfo[idx][dmpInt], -1, 500.0);
			}

			idx++;
		}
		fclose(file);
	}
	return 1;
}

stock SaveDynamicMapIcons()
{
	new
		szFileStr[326],
		File: fHandle = fopen("dynamicmapicons.cfg", io_write);

	for(new iIndex; iIndex < MAX_DMAPICONS; iIndex++) {
		format(szFileStr, sizeof(szFileStr), "%d|%d|%d|%d|%f|%f|%f\r\n",
			DMPInfo[iIndex][dmpMarkerType],
			DMPInfo[iIndex][dmpColor],
			DMPInfo[iIndex][dmpVW],
			DMPInfo[iIndex][dmpInt],
			DMPInfo[iIndex][dmpPosX],
			DMPInfo[iIndex][dmpPosY],
			DMPInfo[iIndex][dmpPosZ]
		);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}

stock LoadDynamicDoors()
{
	new arrCoords[26][64];
	new strFromFile2[256];
	new File: file = fopen("dynamicdoors.cfg", io_read);
	if(file)
	{
		new idx;
		while (idx < sizeof(DDoorsInfo))
		{
			fread(file, strFromFile2);
			splits(strFromFile2, arrCoords, '|');
			strmid(DDoorsInfo[idx][ddDescription], arrCoords[0], 0, strlen(arrCoords[0]), 128);
	  		DDoorsInfo[idx][ddCustomInterior] = strval(arrCoords[1]);
	  		DDoorsInfo[idx][ddExteriorVW] = strval(arrCoords[2]);
	  		DDoorsInfo[idx][ddExteriorInt] = strval(arrCoords[3]);
	  		DDoorsInfo[idx][ddInteriorVW] = strval(arrCoords[4]);
	  		DDoorsInfo[idx][ddInteriorInt] = strval(arrCoords[5]);
	  		DDoorsInfo[idx][ddExteriorX] = floatstr(arrCoords[6]);
	  		DDoorsInfo[idx][ddExteriorY] = floatstr(arrCoords[7]);
	  		DDoorsInfo[idx][ddExteriorZ] = floatstr(arrCoords[8]);
	  		DDoorsInfo[idx][ddExteriorA] = floatstr(arrCoords[9]);
	  		DDoorsInfo[idx][ddInteriorX] = floatstr(arrCoords[10]);
	  		DDoorsInfo[idx][ddInteriorY] = floatstr(arrCoords[11]);
	  		DDoorsInfo[idx][ddInteriorZ] = floatstr(arrCoords[12]);
	  		DDoorsInfo[idx][ddInteriorA] = floatstr(arrCoords[13]);
	  		DDoorsInfo[idx][ddCustomExterior] = strval(arrCoords[14]);
	  		DDoorsInfo[idx][ddVIP] = strval(arrCoords[15]);
	  		DDoorsInfo[idx][ddGang] = strval(arrCoords[16]);
	  		DDoorsInfo[idx][ddFaction] = strval(arrCoords[17]);
	  		DDoorsInfo[idx][ddAdmin] = strval(arrCoords[18]);
	  		DDoorsInfo[idx][ddWanted] = strval(arrCoords[19]);
	  		DDoorsInfo[idx][ddVehicleAble] = strval(arrCoords[20]);
	  		DDoorsInfo[idx][ddColor] = strval(arrCoords[21]);
	  		DDoorsInfo[idx][ddPickupModel] = strval(arrCoords[22]);
	  		strmid(DDoorsInfo[idx][ddPass], arrCoords[23], 0, strlen(arrCoords[23]), 24);
	  		DDoorsInfo[idx][ddLocked] = strval(arrCoords[24]);
            DDoorsInfo[idx][ddNotEditable] = strval(arrCoords[25]);

	  		if(!isnull(DDoorsInfo[idx][ddDescription]))
	  		{
	  		    CreateDynamicDoor(idx);
			}

			idx++;
		}
		fclose(file);
	}
	return 1;
}

stock SaveDynamicDoors()
{

	new
		szFileStr[512],
		File: fHandle = fopen("dynamicdoors.cfg", io_write);

	for(new iIndex; iIndex < MAX_DDOORS; iIndex++) {
		format(szFileStr, sizeof(szFileStr), "%s|%d|%d|%d|%d|%d|%f|%f|%f|%f|%f|%f|%f|%f|%d|%d|%d|%d|%d|%d|%d|%d|%d|%s|%d|%d\r\n",
			DDoorsInfo[iIndex][ddDescription],
			DDoorsInfo[iIndex][ddCustomInterior],
			DDoorsInfo[iIndex][ddExteriorVW],
			DDoorsInfo[iIndex][ddExteriorInt],
			DDoorsInfo[iIndex][ddInteriorVW],
			DDoorsInfo[iIndex][ddInteriorInt],
			DDoorsInfo[iIndex][ddExteriorX],
			DDoorsInfo[iIndex][ddExteriorY],
			DDoorsInfo[iIndex][ddExteriorZ],
			DDoorsInfo[iIndex][ddExteriorA],
			DDoorsInfo[iIndex][ddInteriorX],
			DDoorsInfo[iIndex][ddInteriorY],
			DDoorsInfo[iIndex][ddInteriorZ],
			DDoorsInfo[iIndex][ddInteriorA],
			DDoorsInfo[iIndex][ddCustomExterior],
			DDoorsInfo[iIndex][ddVIP],
	  		DDoorsInfo[iIndex][ddGang],
	  		DDoorsInfo[iIndex][ddFaction],
	  		DDoorsInfo[iIndex][ddAdmin],
	  		DDoorsInfo[iIndex][ddWanted],
	  		DDoorsInfo[iIndex][ddVehicleAble],
	  		DDoorsInfo[iIndex][ddColor],
	  		DDoorsInfo[iIndex][ddPickupModel],
	  		DDoorsInfo[iIndex][ddPass],
	  		DDoorsInfo[iIndex][ddLocked],
	  		DDoorsInfo[iIndex][ddNotEditable]
		);
		fwrite(fHandle, szFileStr);
	}
	return fclose(fHandle);
}

stock CreateDynamicDoor(doorid)
{
	new string[128];
	//format(string, sizeof(string), "%s\nID: %d",DDoorsInfo[doorid][ddDescription],doorid);
	format(string, sizeof(string), "%s",DDoorsInfo[doorid][ddDescription]);

	switch(DDoorsInfo[doorid][ddColor])
	{
	    case -1:{ /* Disable 3d Textdraw */ }
	    case 1:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWWHITE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 2:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWPINK, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 3:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWRED, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 4:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBROWN, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 5:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWGRAY, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 6:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWOLIVE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 7:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWPURPLE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 8:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWORANGE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 9:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWAZURE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 10:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWGREEN, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 11:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBLUE, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
	    case 12:{DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_TWBLACK, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);}
		default:
		{
			DDoorsInfo[doorid][ddTextID] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]+0.7,10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 1, DDoorsInfo[doorid][ddExteriorVW], DDoorsInfo[doorid][ddExteriorInt], -1);
		}
	}

	switch(DDoorsInfo[doorid][ddPickupModel])
	{
	    case -1: { /* Disable Pickup */ }
		case 1:
		{
			{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1210, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		}
		case 2: {DDoorsInfo[doorid][ddPickupID] = CreatePickup(1212, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 3:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1239, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 4:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1240, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 5:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1241, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 6:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1242, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 7:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1247, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 8:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1248, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 9:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1252, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 10:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1253, 1, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 11:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1254, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 12:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1313, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 13:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1272, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 14:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1273, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 15:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1274, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 16:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1275, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 17:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1276, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 18:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1277, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 19:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1279, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 20:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1314, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 21:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1316, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 22:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1317, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 23:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1559, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 24:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(1582, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
		case 25:{DDoorsInfo[doorid][ddPickupID] = CreatePickup(2894, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);}
	    default:
	    {
			DDoorsInfo[doorid][ddPickupID] = CreatePickup(1318, 23, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ], DDoorsInfo[doorid][ddExteriorVW]);
		}
	}
}

stock ClearHouse(houseid)
{
	HouseInfo[houseid][hOwned] = 0;
	HouseInfo[houseid][hSafeMoney] = 0;
	HouseInfo[houseid][hPot] = 0;
	HouseInfo[houseid][hCrack] = 0;
	HouseInfo[houseid][hMaterials] = 0;
	HouseInfo[houseid][hWeapons][0] = 0;
	HouseInfo[houseid][hWeapons][1] = 0;
	HouseInfo[houseid][hWeapons][2] = 0;
	HouseInfo[houseid][hWeapons][3] = 0;
	HouseInfo[houseid][hWeapons][4] = 0;
	HouseInfo[houseid][hGLUpgrade] = 1;
}

stock ResetPlayerCash(playerid)
{
	PlayerInfo[playerid][pCash] = 0;
	ResetPlayerMoney(playerid);
	return 1;
}

SetFamilySkin(playerid, skinid)
{
	new gang;
	new skin;
	gang = PlayerInfo[playerid][pGang];
	skin = FamilyInfo[gang][FamilySkins][skinid];
	if(skin==0) return 1;
	PlayerInfo[playerid][pSkin] = skin;
	SetPlayerSkin(playerid, skin);
	return 1;
}

stock Random(min, max)
{
    new a = random(max - min) + min;
    return a;
}

stock SendBugReportToQueue(reportfrom, report[])
{
    new bool:breakingloop = false, newid = INVALID_REPORT_ID;

	for(new i=0;i<MAX_REPORTS;i++)
	{
		if(!breakingloop)
		{
			if(Reports[i][HasBeenUsed] == 0)
			{
				breakingloop = true;
				newid = i;
			}
		}
    }
    if(newid != INVALID_REPORT_ID)
    {
        strmid(Reports[newid][Report], report, 0, strlen(report), 128);
        Reports[newid][ReportFrom] = reportfrom;
        Reports[newid][TimeToExpire] = 99999;
        Reports[newid][HasBeenUsed] = 1;
        Reports[newid][BeingUsed] = 1;
        Reports[newid][BugReport] = 1;
        Reports[newid][ReportExpireTimer] = SetTimerEx("ReportTimer", 60000, 0, "d", newid);
        new string[128];
        format(string, sizeof(string), "BUG: [%i] %s (BID: %i): %s", reportfrom, GetPlayerNameEx(reportfrom), newid, (report));
        ABroadCast(0xFF8000FF, string, 1);
    }
    else
    {
        ClearReports();
        SendReportToQueue(reportfrom, report);
    }
}

stock SendReportToQueue(reportfrom, report[])
{
    new bool:breakingloop = false, newid = INVALID_REPORT_ID;

	for(new i=0;i<MAX_REPORTS;i++)
	{
		if(!breakingloop)
		{
			if(Reports[i][HasBeenUsed] == 0)
			{
				breakingloop = true;
				newid = i;
			}
		}
    }
    if(newid != INVALID_REPORT_ID)
    {
        strmid(Reports[newid][Report], report, 0, strlen(report), 128);
        Reports[newid][ReportFrom] = reportfrom;
        Reports[newid][TimeToExpire] = 5;
        Reports[newid][HasBeenUsed] = 1;
        Reports[newid][BeingUsed] = 1;
        Reports[newid][ReportExpireTimer] = SetTimerEx("ReportTimer", 60000, 0, "d", newid);
        new string[128];
        format(string, sizeof(string), "Rapor Gnderdi: [%i] %s (RID: %i): %s", reportfrom, GetPlayerNameEx(reportfrom), newid, (report));
        ABroadCast(COLOR_REPORT,string,1);
    }
    else
    {
        ClearReports();
        SendReportToQueue(reportfrom, report);
    }
}

stock ClearReports()
{
	for(new i=0;i<MAX_REPORTS;i++)
	{
		strmid(Reports[i][Report], "Yok", 0, 4, 4);
		Reports[i][CheckingReport] = 999;
        Reports[i][ReportFrom] = 999;
        Reports[i][TimeToExpire] = 5;
        Reports[i][HasBeenUsed] = 0;
        Reports[i][BeingUsed] = 0;
        Reports[i][BugReport] = 0;
	}
	return 1;
}

stock ClearChatbox(playerid)
{
	for(new i = 0; i < 50; i++) {
		SendClientMessage(playerid, COLOR_WHITE, "");
	}
	return 1;
}

stock PlayerFacePlayer(playerid, targetplayerid)
{
	new Float: Angle;
	GetPlayerFacingAngle(playerid, Angle);
	SetPlayerFacingAngle(targetplayerid, Angle+180);
	return true;
}

stock GivePlayerEventWeapons(playerid)
{
	if(GetPVarInt(playerid, "EventToken") == 1)
	{
		GivePlayerWeapon(playerid, EventInfo[EventWeapons][0], 60000);
		GivePlayerWeapon(playerid, EventInfo[EventWeapons][1], 60000);
		GivePlayerWeapon(playerid, EventInfo[EventWeapons][2], 60000);
		GivePlayerWeapon(playerid, EventInfo[EventWeapons][3], 60000);
		GivePlayerWeapon(playerid, EventInfo[EventWeapons][4], 60000);
	}
	return 1;
}

stock ScoreUpdate()
{
	new LevScore;
	foreach(Player, i)
	{
   		LevScore = PlayerInfo[i][pLevel];
		SetPlayerScore(i, LevScore);
	}
	return 1;
}

stock ExecuteHackerAction(playerid, weaponid)
{
	if(!gPlayerLogged[playerid]) { return 1; }
	if(PlayerInfo[playerid][pTut] == 0) { return 1; } // NOT IMPLEMENTED YET
	if(playerTabbed[playerid] == 1) { return 1; }
	if(GetPVarInt(playerid, "PBM") > 0) { return 1; }

	new String[128], WeaponName[128];
	GetWeaponName(weaponid, WeaponName, sizeof(WeaponName));

	format(String, sizeof(String), "{AA3333}Admin Uyar{FFFF00}: %s (ID %d) kiisi weapon hack kullanyor olabilir(%s).", GetPlayerNameEx(playerid), playerid, WeaponName);
	ABroadCast(COLOR_YELLOW, String, 2);

	SetPVarInt(playerid, "wpH", GetPVarInt(playerid, "wpH")+1);

	if(GetPVarInt(playerid, "wpH") >= 3) {
		format(String, sizeof(String), "%s kiisi weapon hack kullanyor olabilir (%s).", GetPlayerNameEx(playerid), WeaponName);
		AddAutomatedFlag(playerid, String);
	}

	//format(String, sizeof(String), "%s (ID %d) may possibly be weapon hacking (%s)", GetPlayerNameEx(playerid), playerid, WeaponName);
	//Log("logs/hack.log", String);
	return 1;
}

stock IsValidIP(ip[])
{
    new a;
	for (new i = 0; i < strlen(ip); i++)
	{
		if(ip[i] == '.')
		{
		    a++;
		}
	}
	if(a != 3)
	{
	    return 1;
	}
	return 0;
}

stock fcreate(filename[])
{
	if(fexist(filename)) return false;
	new File:fhnd;
	fhnd=fopen(filename,io_write);
	if(fhnd) {
		fclose(fhnd);
		return true;
	}
	return false;
}

stock CheckBan(ip[])
{
	new string[20];
    new File: file = fopen("ban.cfg", io_read);
	while(fread(file, string))
	{
	    if(strcmp(ip, string, true, strlen(ip)) == 0)
	    {
	        fclose(file);
	        return 1;
	    }
	}
	fclose(file);
	return 0;
}

stock AddBan(ip[])
{
	if(CheckBan(ip) == 0)
	{
		new File: file = fopen("ban.cfg", io_append);
		new string[20];
		format(string, sizeof(string), "\n%s", ip);
	 	fwrite(file, string);
	 	fclose(file);
	 	foreach(Player, playerid)
		{
		    new playerIP[16];
			GetPlayerIp(playerid, playerIP, sizeof(playerIP));
			if(strcmp(playerIP, ip) == 0)
			{
	            SendClientMessage(playerid, COLOR_NEWS, "Oyundan banlandnz. Ban temyizi atrmak iin forumu ziyaret ediniz");
				Kick(playerid);
			}
		}
		return 1;
	}
	return 0;
}

stock RemoveBan(ip[])
{
    if(CheckBan(ip) == 1)
	{
	    new string[20];
		new File: file = fopen("ban.cfg", io_read);
		fcreate("tempBan.cfg");
		new File: file2 = fopen("tempBan.cfg", io_append);
		while(fread(file, string))
		{
			if(strcmp(ip, string, true, strlen(ip)) != 0 && strcmp("\n", string) != 0)
		    {
				fwrite(file2, string);
			}
		}
		fclose(file);
		fclose(file2);
		file = fopen("ban.cfg", io_write);
		file2 = fopen("tempBan.cfg", io_read);
		while(fread(file2, string))
		{
			fwrite(file, string);
		}
		fclose(file);
		fclose(file2);
		fremove("tempBan.cfg");
		return 1;
    }
	return 0;
}

stock GetPlayerNameExEx(playerid)
{
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	return name;
}

public OnPlayerPressButton(playerid, buttonid)
{
	// LSPD
   	if(buttonid == lspdcopsonly)
    {
	    if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 5)
		{
				DoorOpen(playerid);
				SetTimer("DoorClose", 4000, 0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Polis veya FBI yesi deilsiniz!");
		}

	}
   	if(buttonid == lspdeveryone)
    {

		DoorOpen(playerid);
		SetTimer("DoorClose", 3500, 0);

	}

	// FBI
	if(buttonid == FBILobbyLeftBTN[0] || buttonid == FBILobbyLeftBTN[1])
	{
	    if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 5)
	    {
	        MoveDynamicObject(FBILobbyLeft,293.93002319,-1498.43457031,-46.13965225,4);
			SetTimer("CloseFBILobbyLeft", 2500, 0);
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY,"Eriim engellendi.");
			return 1;
		}
	}
	if(buttonid == FBILobbyRightBTN[0] || buttonid == FBILobbyRightBTN[1])
	{
	    if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 5)
	    {
	        MoveDynamicObject(FBILobbyRight,303.84756470,-1521.62988281,-46.13965225,4);
			SetTimer("CloseFBILobbyRight", 2500, 0);
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY,"Eriim engellendi.");
			return 1;
		}
	}
	if(buttonid == FBIPrivateBTN[0] || buttonid == FBIPrivateBTN[1])
	{
	    if((PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2) && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pFaction] == 5)
	    {
	        MoveDynamicObject(FBIPrivate[0],299.29986572,-1491.75842285,-28.73300552,4);
	        MoveDynamicObject(FBIPrivate[1],299.33737183,-1496.86145020,-28.73300552,4);
			SetTimer("CloseFBIPrivate", 2500, 0);
	    }
	    else
	    {
	        SendClientMessage(playerid,COLOR_GREY,"Eriim engellendi.");
			return 1;
		}
	}
	return false;
}

forward DoorOpen(playerid);
public DoorOpen(playerid)
{
	MoveDynamicObject(lspddoor1, 247.2763671875,72.536186218262,1002.640625, 3.5000);
 	MoveDynamicObject(lspddoor2, 244.0330657959,72.580932617188,1002.640625, 3.5000);
  	return 1;
}

forward DoorClose(playerid);
public DoorClose(playerid)
{
	MoveDynamicObject(lspddoor1, 246.35150146484,72.547714233398,1002.640625, 3.5000);
 	MoveDynamicObject(lspddoor2, 245.03300476074,72.568511962891,1002.640625, 3.5000);
  	return 1;
}

forward CloseFBILobbyLeft();
public CloseFBILobbyLeft()
{
	MoveDynamicObject(FBILobbyLeft,295.40136719,-1498.43457031,-46.13965225,4);
	return 1;
}

forward CloseFBILobbyRight();
public CloseFBILobbyRight()
{
	MoveDynamicObject(FBILobbyRight,302.39355469,-1521.62988281,-46.13965225,4);
	return 1;
}

forward CloseFBIPrivate();
public CloseFBIPrivate()
{
	MoveDynamicObject(FBIPrivate[0],299.29986572,-1492.82666016,-28.73300552,4);
	MoveDynamicObject(FBIPrivate[1],299.33737183,-1495.83911133,-28.73300552,4);
	return 1;
}

stock crc32(string[])
{
	new crc_table[256] = {
			0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535,
			0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD,
			0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D,
			0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC,
			0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4,
			0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C,
			0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC,
			0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,
			0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB,
			0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F,
			0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB,
			0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E,
			0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA,
			0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE,
			0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A,
			0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9,
			0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409,
			0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81,
			0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739,
			0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8,
			0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268,
			0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0,
			0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8,
			0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B,
			0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF,
			0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703,
			0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7,
			0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A,
			0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE,
			0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242,
			0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6,
			0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45,
			0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D,
			0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5,
			0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605,
			0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94,
			0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D
	};
	new crc = -1;
	for(new i = 0; i < strlen(string); i++)
	{
 		crc = (crc >>> 8) ^ crc_table[(crc ^ string[i]) & 0xFF];
  	}
  	return crc ^ -1;
}

stock GetPlayerNameEx(playerid)
{

	new
		sz_playerName[MAX_PLAYER_NAME],
		i_pos;

	GetPlayerName(playerid, sz_playerName, MAX_PLAYER_NAME);
	while ((i_pos = strfind(sz_playerName, "_", false, i_pos)) != -1) sz_playerName[i_pos] = ' ';
	return sz_playerName;
}

stock IsKeyJustDown(key, newkeys, oldkeys)
{
	if((newkeys & key) && !(oldkeys & key)) return 1;
	return 0;
}

stock IsInvalidSkin(skin)
{
	if(!(0 <= skin <= 311)) return 1;
    return 0;
}

stock IsValidSkin(skinid)
{
	if(skinid < 0 || skinid > 311)
	    return 0;

	switch (skinid)
	{
	    case
		0, 105, 106, 107, 102, 103, 69, 123,
		104, 114, 115, 116, 174, 175, 100, 247, 173,
		248, 117, 118, 147, 163, 21, 24, 143, 71,
		156, 176, 177, 108, 109, 110, 165, 166,
		265, 266, 267, 269, 270, 271, 274, 276,
		277, 278, 279, 280, 281, 282, 283, 284,
		285, 286, 287, 288, 294, 296, 297: return 0;
	}

	return 1;
}

stock IsAHelicopter(carid)
{
	if(GetVehicleModel(carid) == 548 || GetVehicleModel(carid) == 425 || GetVehicleModel(carid) == 417 || GetVehicleModel(carid) == 487 || GetVehicleModel(carid) == 488 || GetVehicleModel(carid) == 497 || GetVehicleModel(carid) == 563 || GetVehicleModel(carid) == 447 || GetVehicleModel(carid) == 469 || GetVehicleModel(carid) == 593) {
		return 1;
	}
	return 0;
}

stock  Float: GetVehicleSpeedByVehicleID(vehicleid)
{
	new
		Float: fVelocity[4];

	GetVehicleVelocity(vehicleid, fVelocity[0], fVelocity[1], fVelocity[2]);
	fVelocity[3] = floatsqroot((fVelocity[0] * fVelocity[0]) + (fVelocity[1] * fVelocity[1]) + (fVelocity[2] * fVelocity[2])) * 100;
	fVelocity[3] += fVelocity[3] / 2;
	return fVelocity[3];
}

stock  Float: player_get_speed(playerid)
{
	new
		Float: fVelocity[4];

	GetVehicleVelocity(GetPlayerVehicleID(playerid), fVelocity[0], fVelocity[1], fVelocity[2]);
	fVelocity[3] = floatsqroot((fVelocity[0] * fVelocity[0]) + (fVelocity[1] * fVelocity[1]) + (fVelocity[2] * fVelocity[2])) * 100;
	fVelocity[3] += fVelocity[3] / 2;
	return fVelocity[3];
}

stock CheckVPH(newph)
{
        new PHList[32];
        new number;
        new string[32];
        new File: file = fopen("PHList.cfg", io_read);
        if(file)
		{
            while(fread(file, string))
			{
            	strmid(PHList, string, 0, strlen(string)-2, 255);
                number = strval(PHList);
                if(number == newph)
				{
                	fclose(file);
                    return 1;
    			}
			}
            fclose(file);
            return 0;
        }
        return 1;
}

stock CheckPH(playerid)
{
	if(!fexist("PHList.cfg")) return 1;
	if(PlayerInfo[playerid][pNumber] == 0) {return 0;}
	new PHList[32];
	new number;
	new string[32];

	new File: file = fopen("PHList.cfg", io_read);
	if(file)
	{
		while(fread(file, string))
		{
			strmid(PHList, string, 0, strlen(string)-2, 255);
			number = strval(PHList);
			if(number == PlayerInfo[playerid][pNumber])
			{
				fclose(file);
				return 1;
			}
		}
		fclose(file);
		new File: file2 = fopen("PHList.cfg", io_append);
		format(string, sizeof(string), "%d\r\n", PlayerInfo[playerid][pNumber]);
		fwrite(file2, string);
		fclose(file2);
		//printf("New number added to PHList.cfg, ph:%d player:%s", PlayerInfo[playerid][pNumber], GetPlayerNameEx(playerid));
		return 0;
	}
	return 1;
}

stock ReplacePH(oldph, newph)
{
    new File: file2 = fopen("tmpPHList.cfg", io_write);
    new number;
    new string[32];
    new PHList[32];
    format(string, sizeof(string), "%d\r\n", newph);
    fwrite(file2, string);
    fclose(file2);
    file2 = fopen("tmpPHList.cfg", io_append);
    new File: file = fopen("PHList.cfg", io_read);
    while(fread(file, string))
	{
        strmid(PHList, string, 0, strlen(string)-1, 255);
        number = strval(PHList);
    	if(number != oldph)
		{
            format(string, sizeof(string), "%d\r\n", number);
        	fwrite(file2, string);
    	}
    }
    fclose(file);
    fclose(file2);
    file2 = fopen("PHList.cfg", io_write);
    file = fopen("tmpPHList.cfg", io_read);
	while(fread(file, string))
	{
        strmid(PHList, string, 0, strlen(string)-1, 255);
        number = strval(PHList);
        if(number != oldph)
		{
            format(string, sizeof(string), "%d\r\n", number);
        	fwrite(file2, string);
    	}
    }
    fclose(file);
    fclose(file2);
	fremove("tmpPHList.cfg");
	//printf("ph %d replaced with ph %d in PHList.cfg", oldph, newph);
	return 1;
}

stock SearchingHit(playerid)
{
	new string[128];
   	SendClientMessage(playerid, COLOR_WHITE, "Available Contracts:");
   	new hits;
	foreach(Player, i)
	{
		if(PlayerInfo[i][pFaction] != 4 && PlayerInfo[i][pHeadValue] > 0)
		{
	 		if(GotHit[i] == 0)
  			{
				hits++;
				format(string, sizeof(string), "Isim: %s (ID %d) | Fiyat: $%d | Kontrat Imzalayan: %s | Detaylar: %s | Kovalayan: Hikimse", GetPlayerNameEx(i), i, PlayerInfo[i][pHeadValue], PlayerInfo[i][pContractBy], PlayerInfo[i][pContractDetail]);
				SendClientMessage(playerid, COLOR_GRAD2, string);
			}
			else
			{
				hits++;
  				format(string, sizeof(string), "Isim: %s (ID %d) | Fiyat: $%d | Kontrat Imzalayan: %s | Detaylar: %s | Kovalayan: %s", GetPlayerNameEx(i), i, PlayerInfo[i][pHeadValue], PlayerInfo[i][pContractBy], PlayerInfo[i][pContractDetail], GetPlayerNameEx(GetChased[i]));
				SendClientMessage(playerid, COLOR_GRAD2, string);
			}
  		}
	}
	if(hits && PlayerInfo[playerid][pRank] <= 1 && PlayerInfo[playerid][pFaction] == 4)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Kendine kontrat tayin etmek iin /goreval komutunu kullan.");
	}
	if(hits && PlayerInfo[playerid][pRank] >= 6 && PlayerInfo[playerid][pFaction] == 4 && PlayerInfo[playerid][pLeader] == 4)
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Hitmanlardan birine kontrat tayin etmek iin /gorevver komutunu kullan.");
	}
	if(hits == 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Imzalanan kontrat yok.");
	}
	return 0;
}

stock GivePlayerValidAdminWeapon(playerid, WeaponID, Ammo)
{
    if(PlayerInfo[playerid][pConnectTime] < 2 && WeaponID != 46 && WeaponID != 43) return 1;
	switch(WeaponID)
	{
  		case 0, 1:
		{
			PlayerInfo[playerid][pAGuns][0] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 2, 3, 4, 5, 6, 7, 8, 9:
		{
			PlayerInfo[playerid][pAGuns][1] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 22, 23, 24:
		{
			PlayerInfo[playerid][pAGuns][2] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 25, 26, 27:
		{
			PlayerInfo[playerid][pAGuns][3] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 28, 29, 32:
		{
			PlayerInfo[playerid][pAGuns][4] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 30, 31:
		{
			PlayerInfo[playerid][pAGuns][5] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 33, 34:
		{
			PlayerInfo[playerid][pAGuns][6] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 35, 36, 37, 38:
		{
			PlayerInfo[playerid][pAGuns][7] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 16, 17, 18, 39, 40:
		{
			PlayerInfo[playerid][pAGuns][8] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 41, 42, 43:
		{
			PlayerInfo[playerid][pAGuns][9] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 10, 11, 12, 13, 14, 15:
		{
			PlayerInfo[playerid][pAGuns][10] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 44, 45, 46:
		{
			PlayerInfo[playerid][pAGuns][11] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
	}
	return 1;
}

stock GivePlayerValidWeapon(playerid, WeaponID, Ammo)
{
    if(PlayerInfo[playerid][pConnectTime] < 2 && WeaponID != 46 && WeaponID != 43) return 1;
	switch(WeaponID)
	{
  		case 0, 1:
		{
			PlayerInfo[playerid][pGuns][0] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 2, 3, 4, 5, 6, 7, 8, 9:
		{
			PlayerInfo[playerid][pGuns][1] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 22, 23, 24:
		{
			PlayerInfo[playerid][pGuns][2] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 25, 26, 27:
		{
			PlayerInfo[playerid][pGuns][3] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 28, 29, 32:
		{
			PlayerInfo[playerid][pGuns][4] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 30, 31:
		{
			PlayerInfo[playerid][pGuns][5] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 33, 34:
		{
			PlayerInfo[playerid][pGuns][6] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 35, 36, 37, 38:
		{
			PlayerInfo[playerid][pGuns][7] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 16, 17, 18, 39, 40:
		{
			PlayerInfo[playerid][pGuns][8] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 41, 42, 43:
		{
			PlayerInfo[playerid][pGuns][9] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 10, 11, 12, 13, 14, 15:
		{
			PlayerInfo[playerid][pGuns][10] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
		case 44, 45, 46:
		{
			PlayerInfo[playerid][pGuns][11] = WeaponID;
			GivePlayerWeapon(playerid, WeaponID, Ammo);
		}
	}
	return 1;
}

stock SetPlayerWeapons(playerid)
{
    if(GetPVarInt(playerid, "PBM") > 0) { return 1; }
	ResetPlayerWeapons(playerid);
	for(new s = 0; s < 12; s++)
	{
		if(PlayerInfo[playerid][pGuns][s] > 0 && PlayerInfo[playerid][pAGuns][s] == 0)
		{
		    if(PlayerInfo[playerid][pGuns][s] == 17)
				GivePlayerValidWeapon(playerid, PlayerInfo[playerid][pGuns][s], 5);
			else
				GivePlayerValidWeapon(playerid, PlayerInfo[playerid][pGuns][s], 60000);
		}
	}
	return 1;
}

stock SetPlayerWeaponsEx(playerid)
{
	ResetPlayerWeapons(playerid);
	for(new s = 0; s < 12; s++)
	{
		if(PlayerInfo[playerid][pGuns][s] > 0)
		{
			GivePlayerValidWeapon(playerid, PlayerInfo[playerid][pGuns][s], 60000);
		}
	}
	SetPlayerArmedWeapon(playerid, GetPVarInt(playerid, "LastWeapon"));
}

stock ResetPlayerWeaponsEx(playerid)
{
	ResetPlayerWeapons(playerid);
	PlayerInfo[playerid][pGuns][0] = 0;
	PlayerInfo[playerid][pGuns][1] = 0;
	PlayerInfo[playerid][pGuns][2] = 0;
	PlayerInfo[playerid][pGuns][3] = 0;
	PlayerInfo[playerid][pGuns][4] = 0;
	PlayerInfo[playerid][pGuns][5] = 0;
	PlayerInfo[playerid][pGuns][6] = 0;
	PlayerInfo[playerid][pGuns][7] = 0;
	PlayerInfo[playerid][pGuns][8] = 0;
	PlayerInfo[playerid][pGuns][9] = 0;
	PlayerInfo[playerid][pGuns][10] = 0;
	PlayerInfo[playerid][pGuns][11] = 0;
	PlayerInfo[playerid][pAGuns][0] = 0;
	PlayerInfo[playerid][pAGuns][1] = 0;
	PlayerInfo[playerid][pAGuns][2] = 0;
	PlayerInfo[playerid][pAGuns][3] = 0;
	PlayerInfo[playerid][pAGuns][4] = 0;
	PlayerInfo[playerid][pAGuns][5] = 0;
	PlayerInfo[playerid][pAGuns][6] = 0;
	PlayerInfo[playerid][pAGuns][7] = 0;
	PlayerInfo[playerid][pAGuns][8] = 0;
	PlayerInfo[playerid][pAGuns][9] = 0;
	PlayerInfo[playerid][pAGuns][10] = 0;
	PlayerInfo[playerid][pAGuns][11] = 0;
	return 1;
}

RemovePlayerWeapon(playerid, weaponid)
{
	new plyWeapons[13];
	for(new s = 0; s < 13; s++)
	{
		new wep, ammo;
		GetPlayerWeaponData(playerid, s, wep, ammo);

		if(wep != weaponid)
		{
			GetPlayerWeaponData(playerid, s, plyWeapons[s], ammo);
		}
		else
		{
			PlayerInfo[playerid][pGuns][s] = 0;
			PlayerInfo[playerid][pAGuns][s] = 0;
		}
	}

	ResetPlayerWeapons(playerid);
 	for(new s = 0; s < 12; s++)
	{
		GivePlayerValidWeapon(playerid, plyWeapons[s], 60000);
	}
	return 1;
}

stock GetWeaponSlot(weaponid)
{
	switch(weaponid)
	{
		case 0, 1:
		{
			return 0;
		}
		case 2, 3, 4, 5, 6, 7, 8, 9:
		{
			return 1;
		}
		case 22, 23, 24:
		{
			return 2;
		}
		case 25, 26, 27:
		{
			return 3;
		}
		case 28, 29, 32:
		{
			return 4;
		}
		case 30, 31:
		{
			return 5;
		}
		case 33, 34:
		{
			return 6;
		}
		case 35, 36, 37, 38:
		{
			return 7;
		}
		case 16, 17, 18, 39, 40:
		{
			return 8;
		}
		case 41, 42, 43:
		{
			return 9;
		}
		case 10, 11, 12, 13, 14, 15:
		{
			return 10;
		}
		case 44, 45, 46:
		{
			return 11;
		}
	}
	return -1;
}

stock partType(type)
{
	new name[32];
	switch(type)
	{
	    case 0:
		{
			name = "Spoiler";
        }
        case 1:
		{
			name = "Hood";
        }
        case 2:
		{
			name = "Roof";
        }
        case 3:
		{
			name = "Sideskirt";
        }
        case 4:
		{
			name = "Lamps";
        }
        case 5:
		{
			name = "Nitro";
        }
        case 6:
		{
			name = "Exhaust";
        }
        case 7:
		{
			name = "Wheels";
        }
        case 8:
		{
			name = "Stereo";
        }
        case 9:
		{
			name = "Hydraulics";
        }
        case 10:
		{
			name = "Front Bumper";
        }
        case 11:
		{
			name = "Rear Bumper";
        }
        case 12:
		{
			name = "Left Vent";
        }
        case 13:
		{
			name = "Right Vent";
        }
        default:
        {
            name = "Bilinmeyen";
		}
	}
	return name;
}

stock partName(part)
{
	new name[32];
	switch(part - 1000)
	{
		case 0:
		{
			name = "Pro";
        }
		case 1:
        {
			name = "Win";
        }
		case 2:
        {
			name = "Drag";
        }
		case 3:
        {
			name = "Alpha";
        }
		case 4:
        {
			name = "Champ Scoop";
        }
		case 5:
        {
			name = "Fury Scoop";
        }
		case 6:
        {
			name = "Roof Scoop";
        }
		case 7:
        {
			name = "Sideskirt";
        }
        case 8:
        {
            name = "2x";
        }
        case 9:
        {
            name = "5x";
        }
        case 10:
        {
            name = "10x";
        }
		case 11:
        {
			name = "Race Scoop";
        }
		case 12:
        {
			name = "Worx Scoop";
        }
		case 13:
        {
			name = "Round Fog";
        }
		case 14:
        {
			name = "Champ";
        }
		case 15:
        {
			name = "Race";
        }
		case 16:
        {
			name = "Worx";
        }
		case 17:
        {
			name = "Sideskirt";
        }
		case 18:
        {
			name = "Upswept";
        }
		case 19:
        {
			name = "Twin";
        }
		case 20:
		{
			name = "Large";
        }
		case 21:
        {
			name = "Medium";
        }
		case 22:
        {
			name = "Small";
        }
		case 23:
        {
			name = "Fury";
        }
		case 24:
        {
			name = "Square Fog";
        }
		case 26:
        {
			name = "Alien";
        }
		case 27:
        {
			name = "Alien";
        }
		case 28:
        {
			name = "Alien";
        }
		case 29:
        {
			name = "X-Flow";
        }
		case 30:
        {
			name = "X-Flow";
        }
		case 31:
        {
			name = "X-Flow";
        }
		case 32:
        {
			name = "Alien Roof Vent";
        }
		case 33:
        {
			name = "X-Flow Roof Vent";
        }
		case 34:
        {
			name = "Alien";
        }
		case 35:
        {
			name = "X-Flow Roof Vent";
        }
		case 36:
        {
			name = "Alien";
        }
		case 37:
        {
			name = "X-Flow";
        }
		case 38:
        {
			name = "Alien Roof Vent";
        }
		case 39:
        {
			name = "X-Flow";
        }
		case 40:
        {
			name = "Alien";
        }
		case 41:
        {
			name = "X-Flow";
        }
		case 42:
        {
			name = "Chrome";
        }
		case 43:
        {
			name = "Slamin";
        }
		case 44:
        {
			name = "Chrome";
        }
		case 45:
        {
			name = "X-Flow";
        }
		case 46:
        {
			name = "Alien";
        }
		case 47:
        {
			name = "Alien";
        }
		case 48:
        {
			name = "X-Flow";
        }
		case 49:
        {
			name = "Alien";
        }
		case 50:
        {
			name = "X-Flow";
        }
		case 51:
        {
			name = "Alien";
        }
		case 52:
        {
			name = "X-Flow";
        }
		case 53:
        {
			name = "X-Flow";
        }
		case 54:
        {
			name = "Alien";
        }
		case 55:
        {
			name = "Alien";
        }
		case 56:
        {
			name = "Alien";
        }
		case 57:
        {
			name = "X-Flow";
        }
		case 58:
        {
			name = "Alien";
        }
		case 59:
        {
			name = "X-Flow";
        }
		case 60:
        {
			name = "X-Flow";
        }
		case 61:
        {
			name = "X-Flow";
        }
		case 62:
        {
			name = "Alien";
        }
		case 63:
        {
			name = "X-Flow";
        }
		case 64:
        {
			name = "Alien";
        }
		case 65:
        {
			name = "Alien";
        }
		case 66:
        {
			name = "X-Flow";
        }
		case 67:
        {
			name = "Alien";
        }
		case 68:
        {
			name = "X-Flow";
        }
		case 69:
        {
			name = "Alien";
        }
		case 70:
        {
			name = "X-Flow";
        }
		case 71:
        {
			name = "Alien";
        }
		case 72:
        {
			name = "X-Flow";
        }
		case 88:
        {
			name = "Alien";
        }
		case 89:
        {
			name = "X-Flow";
        }
		case 90:
        {
			name = "Alien";
        }
		case 91:
        {
			name = "X-Flow";
        }
		case 92:
        {
			name = "Alien";
        }
		case 93:
        {
			name = "X-Flow";
        }
		case 94:
        {
			name = "Alien";
        }
		case 95:
        {
			name = "X-Flow";
        }
		case 99:
        {
			name = "Chrome";
        }
		case 100:
        {
			name = "Chrome Grill";
        }
        		case 101:
        {
			name = "Chrome Flames";
        }
		case 102:
        {
			name = "Chrome Strip";
        }
		case 103:
        {
			name = "Covertible";
        }
		case 104:
        {
			name = "Chrome";
        }
		case 105:
        {
			name = "Slamin";
        }
		case 106:
        {
			name = "Chrome Arches";
        }
		case 107:
        {
			name = "Chrome Strip";
        }
		case 108:
        {
			name = "Chrome Strip";
        }
		case 109:
        {
			name = "Chrome";
        }
		case 110:
        {
			name = "Slamin";
        }
		case 113:
        {
			name = "Chrome";
        }
		case 114:
        {
			name = "Slamin";
        }
		case 115:
        {
			name = "Chrome";
        }
		case 116:
        {
			name = "Slamin";
        }
		case 117:
        {
			name = "Chrome";
        }
		case 118:
        {
			name = "Chrome Trim";
        }
		case 119:
        {
			name = "Wheelcovers";
        }
		case 120:
        {
			name = "Chrome Trim";
        }
		case 121:
        {
			name = "Wheelcovers";
        }
		case 122:
        {
			name = "Chrome Flames";
        }
		case 123:
        {
			name = "Bullbar Chrome Bars";
        }
		case 124:
        {
			name = "Chrome Arches";
        }
		case 125:
        {
			name = "Bullbar Chrome Lights";
        }
		case 126:
        {
			name = "Chrome";
        }
		case 127:
        {
			name = "Slamin";
        }
		case 128:
        {
			name = "Vinyl Hardtop";
        }
		case 129:
        {
			name = "Chrome";
        }
		case 130:
        {
			name = "Hardtop";
        }
		case 131:
        {
			name = "Softtop";
        }
		case 132:
        {
			name = "Slamin";
        }
		case 133:
        {
			name = "Chrome Strip";
        }
		case 134:
        {
			name = "Chrome Strip";
        }
		case 135:
        {
			name = "Slamin";
        }
		case 136:
        {
			name = "Chrome";
        }
		case 137:
        {
			name = "Chrome Strip";
        }
		case 138:
        {
			name = "Alien";
        }
		case 139:
        {
			name = "X-Flow";
        }
		case 140:
        {
			name = "X-Flow";
        }
		case 141:
        {
			name = "Alien";
        }
		case 142:
        {
			name = "Left Oval Vents";
        }
		case 143:
        {
			name = "Right Oval Vents";
        }
		case 144:
        {
			name = "Left Square Vents";
        }
		case 145:
        {
			name = "Right Square Vents";
        }
		case 146:
        {
			name = "X-Flow";
        }
		case 147:
        {
			name = "Alien";
        }
		case 148:
        {
			name = "X-Flow";
        }
		case 149:
        {
			name = "Alien";
        }
		case 150:
        {
			name = "Alien";
        }
		case 151:
        {
			name = "X-Flow";
        }
		case 152:
        {
			name = "X-Flow";
        }
		case 153:
        {
			name = "Alien";
        }
		case 154:
        {
			name = "Alien";
        }
		case 155:
        {
			name = "Alien";
        }
		case 156:
        {
			name = "X-Flow";
        }
		case 157:
        {
			name = "X-Flow";
        }
		case 158:
        {
			name = "X-Flow";
        }
		case 159:
        {
			name = "Alien";
        }
		case 160:
        {
			name = "Alien";
        }
		case 161:
        {
			name = "X-Flow";
        }
		case 162:
        {
			name = "Alien";
        }
		case 163:
        {
			name = "X-Flow";
        }
		case 164:
        {
			name = "Alien";
        }
		case 165:
        {
			name = "X-Flow";
        }
		case 166:
        {
			name = "Alien";
        }
		case 167:
        {
			name = "X-Flow";
        }
		case 168:
        {
			name = "Alien";
        }
		case 169:
        {
			name = "Alien";
        }
		case 170:
        {
			name = "X-Flow";
        }
		case 171:
        {
			name = "Alien";
        }
		case 172:
        {
			name = "X-Flow";
        }
		case 173:
        {
			name = "X-Flow";
        }
		case 174:
        {
			name = "Chrome";
        }
		case 175:
        {
			name = "Slamin";
        }
		case 176:
        {
			name = "Chrome";
        }
		case 177:
        {
			name = "Slamin";
        }
		case 178:
        {
			name = "Slamin";
        }
		case 179:
        {
			name = "Chrome";
        }
		case 180:
        {
			name = "Chrome";
        }
		case 181:
        {
			name = "Slamin";
        }
		case 182:
        {
			name = "Chrome";
        }
		case 183:
        {
			name = "Slamin";
        }
		case 184:
        {
			name = "Chrome";
        }
		case 185:
        {
			name = "Slamin";
        }
		case 186:
        {
			name = "Slamin";
        }
		case 187:
        {
			name = "Chrome";
        }
		case 188:
        {
			name = "Slamin";
        }
		case 189:
        {
			name = "Chrome";
        }
		case 190:
        {
			name = "Slamin";
        }
		case 191:
        {
			name = "Chrome";
        }
		case 192:
        {
			name = "Chrome";
        }
		case 193:
        {
			name = "Slamin";
        }
   	}
	return name;
}

stock SetPlayerSpawn(playerid)
{
	if(IsPlayerConnected(playerid))
	{
	    DeletePVar(playerid, "OPD");

	    SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		if(GetPVarInt(playerid, "SpecOff") == 1)
		{
			SetPlayerPos(playerid, GetPVarFloat(playerid, "SpecPosX"), GetPVarFloat(playerid, "SpecPosY"), GetPVarFloat(playerid, "SpecPosZ"));
			SetPlayerInterior(playerid, GetPVarInt(playerid, "SpecInt"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "SpecVW"));
			DeletePVar(playerid, "SpecOff");
			return 1;
		}
		if(PlayerInfo[playerid][pTut] == 0)
		{
			TogglePlayerControllable(playerid,0);
			SetPlayerColor(playerid,TEAM_HIT_COLOR);
			SetPlayerPos(playerid, 1207.4703, -2037.1246, 69.0387);
            SetPlayerCameraPos(playerid, 1017.62, -2030.82, 81.81);
            SetPlayerCameraLookAt(playerid, 1094.26, -2036.95, 81.83);
   			ShowPlayerDialogEx(playerid, REGISTRATION_MENU_ONE, DIALOG_STYLE_MSGBOX, "{AD00D3}Master RPG - Kayt", "{FFFFFF}Karakterinizin cinsiyetinin ne olmasn istersiniz?", "Erkek", "Bayan");
			SetPlayerVirtualWorld(playerid, 70707);
			return 1;
		}
		if(AdminDuty[playerid] == 1)
		{
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"AdminDeathVW"));
			SetPlayerInterior(playerid, GetPVarInt(playerid,"AdminDeathInt"));
			DeletePVar(playerid, "AdminDeathVW");
			DeletePVar(playerid, "AdminDeathInt");
			SetPlayerHealth(playerid, 100);
			ClearAnimations(playerid, 1);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			DeletePVar(playerid, "Injured");
		    return 1;
		}
		if(GetPVarType(playerid, "posX") != 0)
		{
			DeletePVar(playerid, "Injured");
			cmd_yardimbitir(playerid, "");
		    return 1;
		}

		if(PlayerInfo[playerid][pJailed] == 1)
		{
		    PhoneOnline[playerid] = 1;
		    LoadObjectsForPlayer(playerid);

			SetPlayerInterior(playerid, 6);
			PlayerInfo[playerid][pVW] = 20002;
			PlayerInfo[playerid][pInt] = 6;
			SetPlayerVirtualWorld(playerid, 20002);
			SetPlayerPos(playerid,263.343597, 77.532028, 1001.039062);

			ResetPlayerWeaponsEx(playerid);

			SendClientMessage(playerid, COLOR_LIGHTRED, "Bitmemi hapis cezas, tekrar hapise.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 2)
		{
		    PhoneOnline[playerid] = 1;
		    LoadObjectsForPlayer(playerid);

			SetPlayerInterior(playerid, 1);
			PlayerInfo[playerid][pVW] = 1324123;
			PlayerInfo[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 1324123);
			SetPlayerPos(playerid,315.1677,-1451.5564,-33.5292);

			ResetPlayerWeaponsEx(playerid);

			SendClientMessage(playerid, COLOR_LIGHTRED, "Bitmemi hapis cezas, tekrar hapise.");
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 3)
		{
		    PhoneOnline[playerid] = 1;
		    LoadObjectsForPlayer(playerid);

			SetPlayerInterior(playerid, 69);
			PlayerInfo[playerid][pVW] = 696969;
			PlayerInfo[playerid][pInt] = 69;
			SetPlayerVirtualWorld(playerid, 696969);

			new rand = random(sizeof(AdminPrisonFloat));
			SetPlayerPos(playerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);

			ResetPlayerWeaponsEx(playerid);
			SetPlayerColor(playerid, TEAM_APRISON_COLOR);
			SetPlayerSkin(playerid, 50);

			new string[128];
			format(string, sizeof(string), "Hapistesiniz nk %s tarafndan hapse gnderildiniz, sebep: %s", PlayerInfo[playerid][pPrisonedBy], PlayerInfo[playerid][pPrisonReason]);
			SendClientMessage(playerid, COLOR_LIGHTRED, string);
			return 1;
		}
		if(PlayerInfo[playerid][pJailed] == 4)
		{
		    PhoneOnline[playerid] = 1;
		    LoadObjectsForPlayer(playerid);

			SetPlayerInterior(playerid, 69);
			PlayerInfo[playerid][pVW] = 696969;
			PlayerInfo[playerid][pInt] = 69;
			SetPlayerVirtualWorld(playerid, 696969);

			new rand = random(sizeof(AdminPrisonFloat));
			SetPlayerPos(playerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);

			ResetPlayerWeaponsEx(playerid);
			SetPlayerColor(playerid, TEAM_ORANGE_COLOR);
			SetPlayerSkin(playerid, 50);
			return 1;
		}

		if(GetPVarInt(playerid, "Injured") == 1 && GetPVarInt(playerid, "PBM") < 1)
		{
		    SendEMSQueue(playerid,1);
		    return 1;
		}

		if(GetPVarInt(playerid, "PBM") > 0) {
			GivePlayerValidAdminWeapon(playerid, 24, 99999);
			GivePlayerValidAdminWeapon(playerid, 27, 99999);
			GivePlayerValidAdminWeapon(playerid, 29, 99999);
			GivePlayerValidAdminWeapon(playerid, 31, 99999);

			if(GetPVarInt(playerid, "PBM") > 3) {
				new
					Team1Total,
					Team2Total;

				foreach(Player, i) {
					if(GetPVarInt(i, "PBM") == GetPVarInt(playerid, "PBM")) {
						if(PaintballTeam[i] == 1) Team1Total ++;
						else if(PaintballTeam[i] == 2) Team2Total ++;
					}
				}

				if(Team1Total == Team2Total) {}// happy days.
				else if(Team1Total > Team2Total) PaintballTeam[playerid] = 2;
				else PaintballTeam[playerid] = 1;

				switch(PaintballTeam[playerid]) {
					case 1:	SetPlayerColor(playerid, 0xFFFF0000);
					case 2: SetPlayerColor(playerid, 0x33CCFF00);
				}
			}
			switch(GetPVarInt(playerid, "PBM")) {
			    case 1: { // dm lv warehouse
					SetPlayerPos(playerid, 1059.895996, 2081.685791, 10.820312);
					SetPlayerInterior(playerid, 0); // just for clarity
					SetPlayerVirtualWorld(playerid, 60);
				}
			    case 2: { // dm random warehouse
					SetPlayerPos(playerid, 1283.287841, 5.694778, 1001.011779);
					SetPlayerInterior(playerid, 18);
					SetPlayerVirtualWorld(playerid, 61);
			    }
			    case 3: { // dm rc battlefield
					SetPlayerPos(playerid, -975.975708, 1060.983032, 1345.671875);
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, 62);
				}
			    case 4: { // tdm lv warehouse
					SetPlayerInterior(playerid, 0);
					SetPlayerVirtualWorld(playerid, 63);
					if(PaintballTeam[playerid] == 1) {
						SetPlayerPos(playerid, 1068.6324, 2082.7930, 10.8203);
						SetPlayerFacingAngle(playerid, 359.9999);
						SetPlayerTeam(playerid, 1);
					} else {
						SetPlayerPos(playerid, 1069.3499, 2127.0828, 10.8203);
						SetPlayerFacingAngle(playerid, 181.4610);
						SetPlayerTeam(playerid, 2);
					}
				}
			    case 5: { // tdm random warehouse
					SetPlayerInterior(playerid, 18);
					SetPlayerVirtualWorld(playerid, 64);
					if(PaintballTeam[playerid] == 1) {
						SetPlayerPos(playerid, 1305.5143, 3.6555, 1001.0269);
						SetPlayerFacingAngle(playerid, 0);
						SetPlayerTeam(playerid, 1);
					} else {
						SetPlayerPos(playerid, 1252.7601,-46.6263,1001.0282);
						SetPlayerFacingAngle(playerid, 133.2679);
						SetPlayerTeam(playerid, 2);
					}
			    }
			    case 6: { // tdm rc battlefield
					SetPlayerInterior(playerid, 10);
					SetPlayerVirtualWorld(playerid, 65);
					if(PaintballTeam[playerid] == 1) {
						SetPlayerPos(playerid, -1128.8225, 1057.4939, 1346.4141);
						SetPlayerFacingAngle(playerid, 260);
						SetPlayerTeam(playerid, 1);
					} else {
						SetPlayerPos(playerid, -976.2924, 1061.0496, 1345.6719);
						SetPlayerFacingAngle(playerid, 90);
						SetPlayerTeam(playerid, 2);
					}
				}
			}

			return 1;
		}

		if(GetPVarInt(playerid, "EventToken") == 1) {
		    DeletePVar(playerid, "EventToken");
			DeletePVar(playerid, "EventAnims");
		    SetPlayerWeapons(playerid);
		    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
			SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
			SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
			if(EventLastInt[playerid] > 0 || EventLastVW[playerid] > 0) {
				LoadObjectsForPlayer(playerid);
			}
			SetPlayerInterior(playerid,EventLastInt[playerid]);
			SetPlayerHealth(playerid, EventFloats[playerid][4]);
			SetPlayerArmourEx(playerid, EventFloats[playerid][5]);
			for(new i = 0; i < 6; i++)
			{
			    EventFloats[playerid][i] = 0.0;
			}
			EventLastVW[playerid] = 0;
			EventLastInt[playerid] = 0;
			return 1;
		}
		for(new i; i < sizeof(EventInfo[EventStaff]); i++)
		{
		    if(EventInfo[EventStaff][i] == playerid)
		    {
		        SetPlayerWeapons(playerid);
			    SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
				//PlayerInfo[playerid][pInterior] = PlayerInfo[playerid][pInt];
				SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
				SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
				if(EventLastInt[playerid] > 0 || EventLastVW[playerid] > 0) {
					LoadObjectsForPlayer(playerid);
				}
				SetPlayerInterior(playerid,EventLastInt[playerid]);
				SetPlayerHealth(playerid, EventFloats[playerid][4]);
				SetPlayerArmourEx(playerid, EventFloats[playerid][5]);
				for(new d = 0; d < 6; d++)
				{
				    EventFloats[playerid][d] = 0.0;
				}
				EventLastInt[playerid] = 0;
				EventLastVW[playerid] = 0;
				EventInfo[EventStaff][i] = 999;
		    }
		}

		if(GetPVarInt(playerid, "DoktorMasrafi") == 1 && PlayerInfo[playerid][pJailed] == 0 && AdminDuty[playerid] == 0) {
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Serbest braklmadan nce, hastane alanlar silahlarnza el koyacak.");
			PlayerInfo[playerid][pDuty] = 0;
			PlayerInfo[playerid][pVW] = 0;
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			ResetPlayerWeapons(playerid);

			if(GetPVarInt(playerid, "EventToken") != 1)
				ResetPlayerWeaponsEx(playerid);

			SetPVarInt(playerid, "DoktorMasrafi", 1);
			SetPlayerInterior(playerid, 0);
			new string[70+MAX_PLAYER_NAME];
			if(PlayerInfo[playerid][pInsurance] == 1)
			{
			    if(PlayerInfo[playerid][pWantedLevel] >= 1)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, " Arandnz bilgisi polise bildirilmitir ve polisler yoldalar.");
				    format(string, sizeof(string), " All Saints Hastanesi %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
				    SendRadioMessage(1, DEPTRADIO, string);
					SendRadioMessage(2, DEPTRADIO, string);
				}
				SetPlayerCameraPos(playerid,1188.4574,-1309.2242,13.5625+6.0);
				SetPlayerCameraLookAt(playerid,1175.5581,-1324.7922,18.1610);
				SetPlayerPos(playerid, 1188.4574,-1309.2242,10.5625);
				SetPVarInt(playerid, "Hospital", 1);
			}
			else if(PlayerInfo[playerid][pInsurance] == 2)
			{
			    if(PlayerInfo[playerid][pWantedLevel] >= 1)
				{
				    SendClientMessage(playerid, COLOR_YELLOW, " Arandnz bilgisi polise bildirilmitir ve polisler yoldalar.");
				    format(string, sizeof(string), " County General Hastanesi %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
				    SendRadioMessage(1, DEPTRADIO, string);
					SendRadioMessage(2, DEPTRADIO, string);
				}
				SetPlayerCameraPos(playerid,1999.5308,-1449.3281,13.5594+6.0);
				SetPlayerCameraLookAt(playerid,2036.2179,-1410.3223,17.1641);
				SetPlayerPos(playerid, 1999.5308,-1449.3281,10.5594);
				SetPVarInt(playerid, "Hospital", 2);
			}
			if(PlayerInfo[playerid][pInsurance] == 0)
			{
				new randhos = Random(1,3);
 				switch (randhos)
   				{
    				case 1:
  	    			{
    					if(PlayerInfo[playerid][pWantedLevel] >= 1)
						{
				    		SendClientMessage(playerid, COLOR_YELLOW, " Arandnz bilgisi polise bildirilmitir ve polisler yoldalar.");
				    		format(string, sizeof(string), " All Saints Hastanesi %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
			    			SendRadioMessage(1, DEPTRADIO, string);
							SendRadioMessage(2, DEPTRADIO, string);
						}

						SetPlayerCameraPos(playerid,1188.4574,-1309.2242,13.5625+6.0);
						SetPlayerCameraLookAt(playerid,1175.5581,-1324.7922,18.1610);
						SetPlayerPos(playerid, 1188.4574,-1309.2242,10.5625);
						SetPVarInt(playerid, "Hospital", 1);
  	    			}
    	    		case 2:
	    	    	{
    			    	if(PlayerInfo[playerid][pWantedLevel] >= 1)
						{
				    		SendClientMessage(playerid, COLOR_YELLOW, " Arandnz bilgisi polise bildirilmitir ve polisler yoldalar.");
				    		format(string, sizeof(string), " County General Hastanesi %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
			    			SendRadioMessage(1, DEPTRADIO, string);
							SendRadioMessage(2, DEPTRADIO, string);
						}

						SetPlayerCameraPos(playerid,1999.5308,-1449.3281,13.5594+6.0);
						SetPlayerCameraLookAt(playerid,2036.2179,-1410.3223,17.1641);
						SetPlayerPos(playerid, 1999.5308,-1449.3281,10.5594);
						SetPVarInt(playerid, "Hospital", 2);
   					}
   				}
			}
			TogglePlayerControllable(playerid, 0);
			SetPlayerHealth(playerid, 0.5);
			SetPVarInt(playerid, "HospitalTimer", 30);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_HOSPITALTIMER);
			return 1;
		}
		if(AdminDuty[playerid] == 0) {
			if(GetPVarInt(playerid, "Hospital") == 0)
			{
				SetPlayerPos(playerid,PlayerInfo[playerid][pPos_x],PlayerInfo[playerid][pPos_y],PlayerInfo[playerid][pPos_z]);
				//PlayerInfo[playerid][pInterior] = PlayerInfo[playerid][pInt];
				SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVW]);
				SetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
				SetPlayerInterior(playerid,PlayerInfo[playerid][pInt]);
				SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
				SetPlayerArmourEx(playerid, PlayerInfo[playerid][pArmor]);
				SetCameraBehindPlayer(playerid);
				if(PlayerInfo[playerid][pInt] > 0)
				{
					LoadObjectsForPlayer(playerid);
				}
			}
			else
			{
				PlayerInfo[playerid][pDuty] = 0;
				PlayerInfo[playerid][pVW] = 0;
				PlayerInfo[playerid][pInt] = 0;
				SetPlayerVirtualWorld(playerid, 0);

				if(GetPVarInt(playerid, "EventToken") != 1)
					ResetPlayerWeaponsEx(playerid);

				SetPVarInt(playerid, "DoktorMasrafi", 1);
				new string[70+MAX_PLAYER_NAME];
				if(PlayerInfo[playerid][pInsurance] == 1)
				{
					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Bulunduunuz konum polise bildirilmitir ve polisler yoldalar.");
						format(string, sizeof(string), " All Saints Hastanesi %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
						SendRadioMessage(1, DEPTRADIO, string);
						SendRadioMessage(2, DEPTRADIO, string);
					}
					SetPlayerCameraPos(playerid,1999.5308,-1449.3281,13.5594+6.0);
					SetPlayerCameraLookAt(playerid,2036.2179,-1410.3223,17.1641);
					SetPlayerPos(playerid, 1999.5308,-1449.3281,10.5594);
					SetPVarInt(playerid, "Hospital", 2);
				}
				else if(PlayerInfo[playerid][pInsurance] == 2)
				{
					if(PlayerInfo[playerid][pWantedLevel] >= 1)
					{
						SendClientMessage(playerid, COLOR_YELLOW, "Bulunduunuz konum polise bildirilmitir ve polisler yoldalar.");
						format(string, sizeof(string), " County General Hastanesi %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
						SendRadioMessage(1, DEPTRADIO, string);
						SendRadioMessage(2, DEPTRADIO, string);
					}
					SetPlayerCameraPos(playerid,1188.4574,-1309.2242,13.5625+6.0);
					SetPlayerCameraLookAt(playerid,1175.5581,-1324.7922,18.1610);
					SetPlayerPos(playerid, 1188.4574,-1309.2242,10.5625);
					SetPVarInt(playerid, "Hospital", 1);
				}
				if(PlayerInfo[playerid][pInsurance] == 0)
				{
					new randhos = Random(1,3);
					switch(randhos)
					{
						case 1:
						{
							if(PlayerInfo[playerid][pWantedLevel] >= 1)
							{
								SendClientMessage(playerid, COLOR_YELLOW, " Arandnz bilgisi polise bildirilmitir ve polisler yoldalar.");
								format(string, sizeof(string), " All Saints %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
								SendRadioMessage(1, DEPTRADIO, string);
								SendRadioMessage(2, DEPTRADIO, string);
							}

							SetPlayerCameraPos(playerid,1188.4574,-1309.2242,13.5625+6.0);
							SetPlayerCameraLookAt(playerid,1175.5581,-1324.7922,18.1610);
							SetPlayerPos(playerid, 1188.4574,-1309.2242,10.5625); // Warp the player
							SetPVarInt(playerid, "Hospital", 2);
						}
						case 2:
						{
							if(PlayerInfo[playerid][pWantedLevel] >= 1)
							{
								SendClientMessage(playerid, COLOR_YELLOW, " Arandnz bilgisi polise bildirilmitir ve polisler yoldalar.");
								format(string, sizeof(string), " County General %s kiisini aranan olarak rapor etti.", GetPlayerNameEx(playerid));
								SendRadioMessage(1, DEPTRADIO, string);
								SendRadioMessage(2, DEPTRADIO, string);
							}

							SetPlayerCameraPos(playerid,1999.5308,-1449.3281,13.5594+6.0);
							SetPlayerCameraLookAt(playerid,2036.2179,-1410.3223,17.1641);
							SetPlayerPos(playerid, 1999.5308,-1449.3281,10.5594);
							SetPVarInt(playerid, "Hospital", 1);
						}
					}
				}
				TogglePlayerControllable(playerid, 0);
				SetPlayerHealth(playerid, 0.5);
				SetPVarInt(playerid, "HospitalTimer", 30);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_HOSPITALTIMER);
			}
		}
		new Float: x, Float: y, Float: z;
		GetPlayerPos(playerid, x, y, z);
		if(x == 0.0 && y == 0.0)
		{
  			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid, 1773.459350, -1942.273437, 13.569922);
			SetPlayerFacingAngle(playerid, 329.64);
			SetCameraBehindPlayer(playerid);
		}
		SetPlayerToTeamColor(playerid);
		return 1;
	}
	return 1;
}

/*stock ConnectionLog(playerid, accountid, username[]) {
	new
	    szName[64],
	    szQuery[300];

	mysql_real_escape_string(username, szName, g_MySQLConnections[0]);

	format(szQuery, sizeof(szQuery), "INSERT INTO connections (playerid, AccountID, Username, TimeLoggedIn) VALUES(%d, %d, '%s', UNIX_TIMESTAMP(now()))", playerid, accountid, szName);
	mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	return 1;
}*/

stock punishmentLog(playerid, issuerid, puntype, szPunishment[128], szReason[]) {
	if(AdminDuty[playerid] == 0) {
		new
			szPunText[128],
			szRawReason[128],
			szQuery[440];

		mysql_real_escape_string(szPunishment, szPunText, g_MySQLConnections[0]);
		mysql_real_escape_string(szReason, szRawReason, g_MySQLConnections[0]);

		format(szQuery, sizeof(szQuery), "INSERT INTO punishments (punIssuer, punIssuedTo, punText, punType, punReason, punTS) VALUES(%d, %d, '%s', %d, '%s', UNIX_TIMESTAMP(now()))", PlayerInfo[issuerid][pID], PlayerInfo[playerid][pID], szPunText, puntype, szRawReason);
		mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	}
	return 1;
}

stock punishmentLogEx(playerid, issuerid, puntype, szPunishment[128], szReason[]) {
	if(AdminDuty[playerid] == 0) {
		new
	    szPunText[128],
	    szRawReason[128],
	    szQuery[440];

		mysql_real_escape_string(szPunishment, szPunText, g_MySQLConnections[0]);
		mysql_real_escape_string(szReason, szRawReason, g_MySQLConnections[0]);

		format(szQuery, sizeof(szQuery), "INSERT INTO punishments (punIssuer, punIssuedTo, punText, punType, punReason, punTS) VALUES(%d, %d, '%s', %d, '%s', UNIX_TIMESTAMP(now()))", issuerid, playerid, szPunText, puntype, szRawReason);
		mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	}
	return 1;
}

stock Log(sz_fileName[], sz_input[]) {

	new
		sz_logEntry[156],
		i_dateTime[2][3],
		File: fileHandle = fopen(sz_fileName, io_append);

	gettime(i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2]);
	getdate(i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2]);

	format(sz_logEntry, sizeof(sz_logEntry), "[%i/%i/%i - %i:%i:%i] %s\r\n", i_dateTime[1][0], i_dateTime[1][1], i_dateTime[1][2], i_dateTime[0][0], i_dateTime[0][1], i_dateTime[0][2], sz_input);
	fwrite(fileHandle, sz_logEntry);
	return fclose(fileHandle);
}

IsNumeric(const string[])
{
	for (new i = 0, j = strlen(string); i < j; i++)
	{
		if(string[i] > '9' || string[i] < '0') return 0;
	}
	return 1;
}

ReturnUser(text[]) {

	new
		strPos,
		returnID = 0,
		bool: isnum = true;

	while(text[strPos]) {
		if(isnum) {
			if('0' <= text[strPos] <= '9') returnID = (returnID * 10) + (text[strPos] - '0');
			else isnum = false;
		}
		strPos++;
	}
	if(isnum) {
		if(IsPlayerConnected(returnID)) return returnID;
	}
	else {

		new
			sz_playerName[MAX_PLAYER_NAME];

		foreach(Player, i) {
			GetPlayerName(i, sz_playerName, MAX_PLAYER_NAME);
			if(!strcmp(sz_playerName, text, true, strPos)) return i;
		}
	}
	return INVALID_PLAYER_ID;
}

stock InvalidNameCheck(playerid)
{

	new
		szPlayerName[MAX_PLAYER_NAME],
		arrForbiddenNames[][] = {
			"com1", "com2", "com3", "com4",
			"com5", "com6", "com7", "com8",
			"com9", "lpt4", "lpt5", "lpt6",
			"lpt7", "lpt8", "lpt9", "nul",
			"clock$", "aux", "prn", "con",
			"InvalidNick", "BannedPlayer"
		},
		iLength,
		i;

	GetPlayerName(playerid, szPlayerName, sizeof(szPlayerName));
	iLength = strlen(szPlayerName);

	while(i < sizeof(arrForbiddenNames)) if(strcmp(arrForbiddenNames[i++], szPlayerName, true) == 0) {
		SetPlayerName(playerid, "InvalidNick");
		SendClientMessage(playerid, COLOR_NEWS, "Geersiz isim kullandnzdan dolay atldnz.");
		Kick(playerid);
		return 0;
	}

	if(szPlayerName[iLength - 1] == '_' || szPlayerName[0] == '_' || strfind(szPlayerName, "_", false) == -1)
	{
		SendClientMessage(playerid, COLOR_NEWS, "Geerli bir role play ismiyle giri yapmadnz iin atldnz (r. James_Bond).");
  		SetPlayerName(playerid, "InvalidNick");
		Kick(playerid);
		return 0;
	}
	return 1;
}

stock SendBugMessage(member, color, string[])
{
	foreach(Player, i)
	{
 		if(PlayerInfo[i][pFaction] == member && gBug[i] == 1)
		{
			SendClientMessage(i, color, string);
		}
	}
}

stock SendRadioMessage(member, color, string[])
{
	foreach(Player, i) {
		if(PlayerInfo[i][pFaction] == member) {
			SendClientMessage(i, color, string);
		}
	}
}

stock SendFamilyMessage(family, color, string[])
{
	foreach(Player, i) {
		if(PlayerInfo[i][pFaction] == family || PlayerInfo[i][pLeader] == family) {
			if(!gFam[i]) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock RadioBroadCast(playerid, string[])
{
	new MiscString[128], Float: aaaPositions[3];
	foreach(Player, i)
	{
		if(PlayerInfo[i][pRadioFreq] == PlayerInfo[playerid][pRadioFreq] && PlayerInfo[i][pRadio] >= 1 && gRadio[i] != 0)
		{
			GetPlayerPos(i, aaaPositions[0], aaaPositions[1], aaaPositions[2]);
			format(MiscString, sizeof(MiscString), "** Radio (%d kHz) ** %s: %s", PlayerInfo[playerid][pRadioFreq], GetPlayerNameEx(playerid), string);
			SendClientMessage(i, PUBLICRADIO_COLOR, MiscString);
			format(MiscString, sizeof(MiscString), "(radio) %s", string);
			SetPlayerChatBubble(playerid,MiscString,COLOR_WHITE,15.0,5000);
		}
	}
}

stock SendJobMessage(job, color, string[])
{
	foreach(Player, i) {
		if((PlayerInfo[i][pJob] == job || PlayerInfo[i][pJob2] == job) && JobDuty[i] == 1) {
			SendClientMessage(i, color, string);
		}
	}
}

stock SendTaxiMessage(color, string[])
{
	foreach(Player, i) {
		if(TransportDuty[i] == 1 && (PlayerInfo[i][pLeader] == 6 || PlayerInfo[i][pFaction] == 6))
		{
 			SendClientMessage(i, color, string);
		}
	}
}

stock SendBusMessage(color, string[])
{
	foreach(Player, i) {
		if(TransportDuty[i] == 2 && (PlayerInfo[i][pLeader] == 6 || PlayerInfo[i][pFaction] == 6))
		{
 			SendClientMessage(i, color, string);
		}
	}
}

stock SendNewFamilyMessage(family, color, string[])
{
	foreach(Player, i) {
		if(PlayerInfo[i][pGang] == family) {
			if(!gFam[i]) {
				SendClientMessage(i, color, string);
			}
		}
	}
}

stock SetPlayerArmourEx(playerid, Float:armour)
{
	ValidArmor[playerid] = armour;
	SetPlayerArmour(playerid, ValidArmor[playerid]);
	return 1;
}

stock IsBETAServer() {
	if(GetServerVarAsInt("port") == 7777)
	    return 0;

	return 1;
}

stock SendClientMessageEx(playerid, color, string[])
{
	if(InsideMainMenu[playerid] == 1 || InsideTut[playerid] == 1 || ActiveChatbox[playerid] == 0)
		return 0;

	else SendClientMessage(playerid, color, string);
	return 1;
}

stock ICNews(color, string[]) {
	foreach(Player, i) {
	    if(gNews[i] == 0)
	        SendClientMessageEx(i, color, string);
	}

	return 1;
}

stock SendClientMessageToAllEx(color, string[])
{
	foreach(Player, i) {
		if(InsideMainMenu[i] == 1 || InsideTut[i] == 1 || ActiveChatbox[i] == 0) {}
		else SendClientMessage(i, color, string);
	}
	return 1;
}

stock ShowMainMenuGUI(playerid) {
	InsideMainMenu[playerid] = 1;
	new string[22];

 	format(string, sizeof(string), "Online oyuncu sayisi: %d", Iter_Count(Player));

	for(new i = 0; i < 12; i++) {
	}

	return 1;
}

stock HideMainMenuGUI(playerid) {
	InsideMainMenu[playerid] = 0;
	ActiveChatbox[playerid] = 1;

	for(new i = 0; i < 12; i++) {
	}

	return 1;
}

stock ShowMainMenuDialog(playerid, frame) {
	new
		string[180];

	switch(frame) {
		case 1: {
			format(string, sizeof(string), "{FFFFFF}Karakteriniz veritabannda bulundu ltfen ifrenizi giriniz.\n\n{AD00D3}Kullanc: {FFFFFF}%s\n\n{AD00D3}ifre:", GetPlayerNameEx(playerid));
			ShowPlayerDialogEx(playerid,MAINMENU,DIALOG_STYLE_PASSWORD,"{FFFFFF}Master RPG - Giri",string,"Giri Yap","k");
		}
		case 2: {
			format(string, sizeof(string), "{FFFFFF}Karakterinize veritabannda rastlanamad ltfen kayt olmak iin bir ifre giriniz\n\n{AD00D3}Kullanc: {FFFFFF}%s\n\n{AD00D3}ifre sein:", GetPlayerNameEx(playerid));
			ShowPlayerDialogEx(playerid,MAINMENU2,DIALOG_STYLE_PASSWORD,"{FFFFFF}Master RPG - Kayt",string,"Kayt Ol","k");
		}
		case 3: {
			format(string, sizeof(string), "{FFFFFF}Yanl ifre.\n\n{FFFFFF}Karakteriniz veritabannda bulundu ltfen ifrenizi giriniz.\n\n{AD00D3}Kullanc: {FFFFFF}%s\n\n{AD00D3}ifre:", GetPlayerNameEx(playerid));
			ShowPlayerDialogEx(playerid,MAINMENU,DIALOG_STYLE_PASSWORD,"{FFFFFF}Master RPG - Giri",string,"Giri Yap","k");
		}
	}

	return 1;
}

forward BackupClear(playerid, calledbytimer);
public BackupClear(playerid, calledbytimer)
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pFaction] == 5) {
		if(Backup[playerid] == 1) {
			foreach(Player, i) {
				if(IsACop(i) || PlayerInfo[i][pFaction] == 3 || PlayerInfo[i][pFaction] == 5) {
					SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
				}
			}
			SetPlayerToTeamColor(playerid);
			if(calledbytimer != 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "Yardm arnz temizlendi.");
			} else {
				SendClientMessage(playerid, COLOR_GRAD2, "Yardm arnz otomatik olarak temizlendi.");
			}
			Backup[playerid] = 0;
		} else {
			if(calledbytimer != 1) {
				SendClientMessage(playerid, COLOR_GRAD2, "Aktif bir yardm arnz bulunmamaktadr!");
			}
		}
	}
	return 1;
}

forward ClearDrugs(playerid);
public ClearDrugs(playerid)
{
	UsedWeed[playerid] = 0;
	UsedCrack[playerid] = 0;
	return 1;
}

stock HelperBroadcast(color, string[], level) {
	foreach(Player, i) {
		if(PlayerInfo[i][pHelper] >= level && GetPVarInt(i, "cschat") == 0) {
			SendClientMessage(i, color, string);
		}
	}
	return 1;
}

stock ABroadCast(color,string[],level)
{
	foreach(Player, i)
	{
		if(PlayerInfo[i][pAdmin] >= level)
		{
			SendClientMessage(i, color, string);
			//printf("%s", string);
		}
	}
	return 1;
}

stock ExecuteNOPAction(playerid)
{
	new string[128];
	new newcar = GetPlayerVehicleID(playerid);
	if(NOPTrigger[playerid] >= MAX_NOP_WARNINGS) { return 1; }
	NOPTrigger[playerid]++;
	RemovePlayerFromVehicle(playerid);
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	SetPlayerPos(playerid, X, Y, Z+2);
	NOPCheck(playerid);
	if(NOPTrigger[playerid] > 1)
	{
		new sec = (NOPTrigger[playerid] * 5000)/1000-1;
		format(string, sizeof(string), "{AA3333}Admin Uyar{FFFF00}: %s (ID %d) kiisi NOP hacking kullanyor olabilir - yasak ara (model %d) %d saniyedir.", GetPlayerNameEx(playerid), playerid, GetVehicleModel(newcar),sec);
		ABroadCast(COLOR_YELLOW, string, 2);
	}
	return 1;
}

stock SetPlayerToTeamColor(playerid) {
	if(GetPVarInt(playerid, "PBM") > 3) {
		switch(PaintballTeam[playerid]) {
			case 1:	SetPlayerColor(playerid, 0xFFFF0000);
			case 2: SetPlayerColor(playerid, 0x33CCFF00);
		}
		return 1;
	}

	if(PlayerInfo[playerid][pWantedLevel] > 5)
 	{
		SetPlayerColor(playerid,WANTED_COLOR);
	}

	if(PlayerInfo[playerid][pJailed] == 3)
	{
		SetPlayerColor(playerid,TEAM_APRISON_COLOR);
		return 1;
	}
 	else if(PlayerInfo[playerid][pJailed] == 4)
 	{
		SetPlayerColor(playerid,TEAM_ORANGE_COLOR);
		return 1;
	}
	else
	{
 		SetPlayerColor(playerid,TEAM_HIT_COLOR);
	}

 	if(IsACop(playerid))
 	{
  		if(PlayerInfo[playerid][pDuty] == 1)
    	{
     		if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1)
       		{
       			SetPlayerColor(playerid,TEAM_BLUE_COLOR);
			}
			else if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
   			{
    			SetPlayerColor(playerid,TEAM_FBI_COLOR);
			}
			else
			{
   				SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
			}
		}
		else
		{
  			SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
		}
	}
	else
	{
		if((PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3) && PlayerInfo[playerid][pDuty] == 1) {
			SetPlayerColor(playerid, TEAM_MED_COLOR);
		}
	    else if((PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) && PlayerInfo[playerid][pDuty] == 1) {
    		SetPlayerColor(playerid,TEAM_NEWS_COLOR);
		}
	    else if((PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pLeader] == 6) && PlayerInfo[playerid][pDuty] == 1) {
    		SetPlayerColor(playerid,TEAM_TAXI_COLOR);
		}
		else SetPlayerColor(playerid,TEAM_HIT_COLOR); // white
	}
	return 1;
}

stock ShowStats(playerid,targetid)
{
	if(IsPlayerConnected(targetid))
	{
	    new facgang[20], employer[64], rank[64], division[64], jtext[20], jtext2[20];

	    new level = PlayerInfo[targetid][pLevel];
	    new phours = PlayerInfo[targetid][pConnectTime];
		new respect = PlayerInfo[targetid][pRespect];
		new nxtlevel = PlayerInfo[targetid][pLevel]+1;
		new expamount = nxtlevel*levelexp;
		new costlevel = nxtlevel*2500;
		new pnumber = PlayerInfo[targetid][pNumber];
		new warns = PlayerInfo[targetid][pWarns];

		facgang = "Oluum";
		employer = "Yok";
		rank = "Yok";
		if(PlayerInfo[targetid][pGang] < 255)
		{
		    facgang = "Family"; division = "Yok";
			format(employer, sizeof(employer), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyName]);
			switch(PlayerInfo[targetid][pRank])
			{
				case 1: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank1]);
				case 2: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank2]);
				case 3: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank3]);
				case 4: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank4]);
				case 5: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank5]);
	  			case 6: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank6]);
				default: format(rank, sizeof(rank), "%s", FamilyInfo[PlayerInfo[targetid][pGang]][FamilyRank1]);
			}
		}
		else GetPlayerFactionInfo(targetid, rank, division, employer);

		switch(PlayerInfo[targetid][pJob])
		{
			case 1: jtext = "Dedektif";
			case 2: jtext = "Avukat";
			case 3: jtext = "Hayat Kadn";
			case 4: jtext = "Uyuturucu Satcs";
			case 5: jtext = "Araba Hrsz";
			//case 6: jtext = "News Reporter";
			case 7: jtext = "Tamirci";
			case 8: jtext = "Bodyguard";
			case 9: jtext = "Silah Satcs";
			//case 10: jtext = "Car Dealer";
			case 12: jtext = "Boksr";
			case 14: jtext = "UyuturucuKaaks";
			//case 15: jtext = "Paper Boy";
			//case 16: jtext = "Kamyon ofr";
			//case 17: jtext = "Taksici";
			case 18: jtext = "Zanaatkar";
			case 19: jtext = "Barmen";
			case 20: jtext = "Kamyon ofr";
			case 21: jtext = "Pizzac";
			default: jtext = "Yok";
		}
		switch(PlayerInfo[targetid][pJob2])
		{
			case 1: jtext2 = "Dedektif";
			case 2: jtext2 = "Avukat";
			case 3: jtext2 = "Hayat Kadn";
			case 4: jtext2 = "Uyuturucu Satcs";
			case 5: jtext2 = "Araba Hrsz";
			//case 6: jtext2 = "News Reporter";
			case 7: jtext2 = "Tamirci";
			case 8: jtext2 = "Bodyguard";
			case 9: jtext2 = "Silah Satcs";
			//case 10: jtext2 = "Car Dealer";
			case 12: jtext2 = "Boksr";
			case 14: jtext2 = "UyuturucuKaaks";
			//case 15: jtext2 = "Paper Boy";
			//case 16: jtext2 = "Kamyon ofr";
			//case 17: jtext2 = "Taksici";
			case 18: jtext2 = "Zanaatkar";
			case 19: jtext2 = "Barmen";
			case 20: jtext2 = "Kamyon ofr";
			case 21: jtext2 = "Pizzac";
			default: jtext2 = "Yok";
		}
		new jlevel;
		switch(PlayerInfo[targetid][pJob])
		{
			case 1:
			{
					new skilllevel = PlayerInfo[targetid][pDetSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 2:
			{
					new skilllevel = PlayerInfo[targetid][pLawSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 3:
			{
					new skilllevel = PlayerInfo[targetid][pSexSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 4:
			{
					new skilllevel = PlayerInfo[targetid][pDrugsSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 5:
			{
					new skilllevel = PlayerInfo[targetid][pCarSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
	  		case 7:
			{
					new skilllevel = PlayerInfo[targetid][pMechSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 9:
			{
					new skilllevel = PlayerInfo[targetid][pArmsSkill];
					if(skilllevel >= 0 && skilllevel < 50) { jlevel = 1; }
					else if(skilllevel >= 50 && skilllevel < 100) { jlevel = 2; }
					else if(skilllevel >= 100 && skilllevel < 200) { jlevel = 3; }
					else if(skilllevel >= 200 && skilllevel < 400) { jlevel = 4; }
					else if(skilllevel >= 400) { jlevel = 5; }
			}
			case 12:
			{
					new skilllevel = PlayerInfo[targetid][pBoxSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 14:
			{
					new skilllevel = PlayerInfo[targetid][pSmugSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			case 20:
			{
					new skilllevel = PlayerInfo[targetid][pTruckSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
					else if(skilllevel >= 401) { jlevel = 5; }
			}
			default: jlevel = 0;
		}
		new jlevel2;
		switch(PlayerInfo[targetid][pJob2])
		{
			case 1:
			{
					new skilllevel = PlayerInfo[targetid][pDetSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 2:
			{
					new skilllevel = PlayerInfo[targetid][pLawSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 3:
			{
					new skilllevel = PlayerInfo[targetid][pSexSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 4:
			{
					new skilllevel = PlayerInfo[targetid][pDrugsSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 5:
			{
					new skilllevel = PlayerInfo[targetid][pCarSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
	  		case 7:
			{
					new skilllevel = PlayerInfo[targetid][pMechSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 9:
			{
					new skilllevel = PlayerInfo[targetid][pArmsSkill];
					if(skilllevel >= 0 && skilllevel < 50) { jlevel2 = 1; }
					else if(skilllevel >= 50 && skilllevel < 100) { jlevel2 = 2; }
					else if(skilllevel >= 100 && skilllevel < 200) { jlevel2 = 3; }
					else if(skilllevel >= 200 && skilllevel < 400) { jlevel2 = 4; }
					else if(skilllevel >= 400) { jlevel2 = 5; }
			}
			case 12:
			{
					new skilllevel = PlayerInfo[targetid][pBoxSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 14:
			{
					new skilllevel = PlayerInfo[targetid][pSmugSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			case 20:
			{
					new skilllevel = PlayerInfo[targetid][pTruckSkill];
					if(skilllevel >= 0 && skilllevel <= 50) { jlevel2 = 1; }
					else if(skilllevel >= 51 && skilllevel <= 100) { jlevel2 = 2; }
					else if(skilllevel >= 101 && skilllevel <= 200) { jlevel2 = 3; }
					else if(skilllevel >= 201 && skilllevel <= 400) { jlevel2 = 4; }
					else if(skilllevel >= 401) { jlevel2 = 5; }
			}
			default: jlevel2 = 0;
		}

		new upgrade = PlayerInfo[targetid][gPupgrade];
		new Float:sarmor = PlayerInfo[targetid][pSarmor];

		new cash =  GetPlayerCash(targetid);
		new bank = PlayerInfo[targetid][pBank];
		new totalwealth = cash + bank;

		new insur[20];
		switch(PlayerInfo[targetid][pInsurance])
		{
			case 1: insur = "All Saints";
			case 2: insur = "County General";
			default: insur = "Yok";
		}

		new crimes = PlayerInfo[targetid][pCrimes];
		new arrests = PlayerInfo[targetid][pArrested];
		new wanted = PlayerInfo[targetid][pWantedLevel];
		new Float:health, Float:armor;
		GetPlayerHealth(targetid,health);
		GetPlayerArmour(targetid,armor);

		new pot = PlayerInfo[targetid][pPot];
		new crack = PlayerInfo[targetid][pCrack];
		new packages = GetPVarInt(targetid, "Paketler");
		new crates = PlayerInfo[targetid][pCrates];

		new mats = PlayerInfo[targetid][pMats];
		new rope = PlayerInfo[targetid][pRope];
		new cigars = PlayerInfo[targetid][pCigar];
		new sprunk = PlayerInfo[targetid][pSprunk];
		new spray = PlayerInfo[targetid][pSpraycan];

		new house = PlayerInfo[targetid][pHouse];
		new rent = PlayerInfo[targetid][pRenting];
		new interior = PlayerInfo[targetid][pInt];
		new vw = PlayerInfo[targetid][pVW];
		new realvw = GetPlayerVirtualWorld(targetid);
		new jtime = PlayerInfo[targetid][pJailTime];

		// Added
		new married[20];
		strmid(married, PlayerInfo[targetid][pMarriedTo], 0, strlen(PlayerInfo[targetid][pMarriedTo]), 255);
		new reftokens = PlayerInfo[targetid][pRefTokens];
		new sext[16];
		if(PlayerInfo[targetid][pSex] == 1) { sext = "Erkek"; } else { sext = "Bayan"; }
		new age = PlayerInfo[targetid][pAge];

		new donatortxt[16];
		if(PlayerInfo[targetid][pDonator] == 0) { donatortxt = "Hayr"; }
		else if(PlayerInfo[targetid][pDonator] == 1) { donatortxt = "Yakut"; }
		else if(PlayerInfo[targetid][pDonator] == 2) { donatortxt = "Master"; }
		else if(PlayerInfo[targetid][pDonator] == 3) { donatortxt = "Elmas"; }
		else { donatortxt = "Hayr"; }

		new nmutes = PlayerInfo[targetid][pNMuteTotal];
        new admutes = PlayerInfo[targetid][pADMuteTotal];
        new rmutes = PlayerInfo[targetid][pRMutedTotal];
		new gate1 = PlayerInfo[targetid][pGate1];
		new gate2 = PlayerInfo[targetid][pGate2];
		new gate3 = PlayerInfo[targetid][pGate3];
		new gozbagi = PlayerInfo[targetid][pBlindfold];
		new bidon = PlayerInfo[targetid][pGas];

	    SendClientMessage(playerid, COLOR_NEWS,"___________________________________________________________________________________________________");
	    new coordsstring[128];
		if(pnumber == 0) format(coordsstring, sizeof(coordsstring),"%s - (Level: %d) - (Oynama Saati: %d) - (Cinsiyet: %s) - (Ya: %d) - (Telefon Numaras: None) - (Uyarlar: %d)", GetPlayerNameEx(targetid), level, phours, sext, age, warns);
		else format(coordsstring, sizeof(coordsstring),"%s - (Level: %d) - (Oynama Saati: %d) - (Cinsiyet: %s) - (Ya: %d) - (Telefon Numaras: %d) - (Uyarlar: %d)", GetPlayerNameEx(targetid), level, phours, sext, age, pnumber, warns);
		SendClientMessage(playerid, COLOR_FORSTATS, coordsstring);
		format(coordsstring, sizeof(coordsstring),"(%s: %s) - (Rtbe: %s [%d]) - (Birim: %s) - (Meslek: %s [lvl: %d]) - (Meslek 2: %s [lvl: %d])", facgang, employer, rank, PlayerInfo[targetid][pRank], division, jtext, jlevel, jtext2, jlevel2);
		SendClientMessage(playerid, COLOR_WHITE, coordsstring);
   		format(coordsstring, sizeof(coordsstring),"(Toplam Para: $%d) - (Nakit: $%d) - (Banka Hesab: $%d) - (Sigorta: %s) - (Evli Oldugu Kisi: %s)", totalwealth, cash, bank, insur, married);
   		SendClientMessage(playerid, COLOR_FORSTATS, coordsstring);
		if(PlayerInfo[playerid][pAdmin] < 4 && playerid != targetid) {
			format(coordsstring, sizeof(coordsstring),"(Saygnlk: %d/%d [$%d]) - (Geliim puan: %d) - (Balang Zrh: %.1f) - (Can: %.1f) - (Zrh: %.1f)", respect, expamount, costlevel, upgrade, sarmor, health, armor);
			SendClientMessage(playerid, COLOR_WHITE, coordsstring);
		} else {
			format(coordsstring, sizeof(coordsstring),"(Saygnlk: %d/%d [$%d]) - (Geliim puan: %d) - (Balang Zrh: %.1f) - (Can: %.1f) - (Zrh: %.1f) - (Radyo: %d kHz)", respect, expamount, costlevel, upgrade, sarmor, health, armor, PlayerInfo[targetid][pRadioFreq]);
			SendClientMessage(playerid, COLOR_FORSTATS, coordsstring);
		}
   		format(coordsstring, sizeof(coordsstring),"(Sular: %d) - (Yakalanmalar: %d) - (Aranma Seviyesi: %d) - (Materyaller: %d) - (Pot: %d) - (Crack: %d) - (Paketler: %d) - (Kutular: %d)", crimes, arrests, wanted, mats, pot, crack, packages, crates);
   		SendClientMessage(playerid, COLOR_WHITE, coordsstring);
   		format(coordsstring, sizeof(coordsstring),"(Ip: %d) - (Sigara: %d) - (Gazoz: %d) - (Sprey: %d) - (Tohum: %d) -  (neri Jetonu: %d) - (VIP: %s)", rope, cigars, sprunk, spray, PlayerInfo[targetid][pWSeeds], reftokens, donatortxt);
        SendClientMessage(playerid, COLOR_FORSTATS, coordsstring);
		format(coordsstring, sizeof(coordsstring), "(Ev: %d) - (Kiralama: %d) - (Int: %d) - (VW: %d) - (Gerek VW: %d) - (Hapis: %d saniye) - (Muteler: [N: %d] [AD: %d] [R: %d])", house, rent, interior, vw, realvw, jtime, nmutes, admutes, rmutes);
  		SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		format(coordsstring, sizeof(coordsstring), "(Gate 1: %d) - (Gate 2: %d) - (Gate 3: %d) - (Gz Bandanas: %d) - (Benzin Bidonu: %d)", gate1, gate2, gate3, gozbagi, bidon);
  		SendClientMessage(playerid, COLOR_FORSTATS,coordsstring);
		if(PlayerInfo[playerid][pAdmin] >= 1) {
	    	new tabbed[6];
		    if(playerTabbedTime[targetid] > 0) tabbed = "Evet";
		    else tabbed = "Hayr";

		    new afk[6];
		    if(playerAFK[targetid] != 0 && playerAFKTime[targetid] > 0) afk = "Evet";
		    else afk = "Hayr";

		    format(coordsstring, sizeof(coordsstring), "(Alt-tab: %s [%d saniye]) - (AFK: %s [%d saniye])", tabbed, playerTabbedTime[targetid], afk, playerAFKTime[targetid]);
		    SendClientMessage(playerid, COLOR_WHITE,coordsstring);
		}
		SendClientMessage(playerid, COLOR_NEWS,"___________________________________________________________________________________________________");
	}
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success) SendClientMessage(playerid, COLOR_WHITE, "Bu komut mevcut deil. Komut listesini grmek iin /yardim yazn.");
	return 1;
}

public OnPlayerCommandReceived(playerid, cmdtext[])
{
	playerLastTyped[playerid] = 0;
	printf("[cmd] [%s]: %s", GetPlayerNameEx(playerid), cmdtext);

	if(gPlayerLogged[playerid] != 1)
	{
		SendClientMessage(playerid, COLOR_RED, "Giri yapmadnz.");
		return 0;
	}

	if(GetPVarInt(playerid, "LoadingObjects") == 1) {
	    SendClientMessage(playerid, COLOR_GRAD2, "Bunu u an yapamazsnz.");
	    return 0;
	}

	if(PlayerInfo[playerid][pTut] == 0)
		return 1;

	if(CommandSpamUnmute[playerid] != 0) {
		if(PlayerInfo[playerid][pAdmin] < 6) {
			SendClientMessage(playerid, COLOR_WHITE, "u an komut girii iin mutelisiniz.");
			return 0;
		}
	}

	if(PlayerInfo[playerid][pAdmin] < 6) {
		CommandSpamTimes[playerid]++;

		if(CommandSpamTimes[playerid] == 5)
		{
			CommandSpamTimes[playerid] = 0;
			CommandSpamUnmute[playerid] = 10;
			SendClientMessage(playerid, COLOR_YELLOW, "Spam yaptnz iin otomatik olarak mutelendiniz. 10 saniye bekleyip tekrar deneyiniz.");
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
			return 0;
		}
	}

	if(strfind(cmdtext, "|", true) != -1)
	{
	    SendClientMessage(playerid, COLOR_RED, "Komutlarda '|' karakterini kullanamazsnz.");
		return 0;
	}

	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		if(strfind(cmdtext, ":", true) != -1)
		{

			new
				i_numcount,
				i_period,
				i_pos;

			while(cmdtext[i_pos]) {
				if('0' <= cmdtext[i_pos] <= '9') i_numcount++;
				else if(cmdtext[i_pos] == '.') i_period++;
				i_pos++;
			}
			if(i_numcount >= 8 && i_period >= 3) {
				new string[128];
				format(string,sizeof(string),"Uyar: %s kiisi server reklam yapyor olabilir: '%s'.", GetPlayerNameEx(playerid),cmdtext);
				ABroadCast(COLOR_RED, string, 2);
				Log("logs/hack.log", string);
				return 0;
			}
		}
	}
	return 1;
}

CMD:fly(playerid, params[])
	{
	    new Float:x, Float:y, Float:z;
	    if(PlayerInfo[playerid][pAdmin] >= 1)
		{
  		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }
		if((flying[playerid] = !flying[playerid]))
		{
		    GetPlayerPos(playerid, x, y, z);
		    SetPlayerPos(playerid, x, y, z+30);
      		SetPlayerArmour(playerid, 1000000000.0);
		    SetPlayerHealth(playerid, 1000000000.0);
		    SetTimerEx("AdminFly", 100, 0, "d", playerid);
		}
		else
		{
		    GetPlayerPos(playerid, x, y, z);
		    SetPlayerPos(playerid, x, y, z+0.5);
		    ClearAnimations(playerid);
		    SetPlayerArmour(playerid, 100.0);
		    SetPlayerHealth(playerid, 100.0);
			return 1;
		}
		}
		else
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "{FFFFFF}[{FF0000}@{FFFFFF}] Bu komutu kullanma yetkiniz yok!");
		}
		return 1;
}

CMD:bankasoy(playerid, params[]) {
	new string[128];
	
	    if(PlayerInfo[playerid][pLevel] < 5)
	    return SendClientMessage(playerid, COLOR_WHITE, "5 Level olmadan bankay soyamazsn!");
	
	if(IsPlayerInRangeOfPoint(playerid, 2.5, 2942.9377,-1769.0336,1178.4684)) {
		if(BankRobTimer[playerid] > 300000) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] Her 5 dakikada bir kullanabilirsin!");
	    SendClientMessage(playerid, COLOR_WHITE, "Banka soymaya alyorsun. Polislere haber gitti. ");
	    SendRadioMessage(2, DEPTRADIO, "Tm niteler: Banka soygunu ihbar!");
	    format(string, sizeof string, "* %s bankay soymaya balar.", GetPlayerNameEx(playerid));
	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_End",4.1,0,1,1,1,1);
		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open",4.1,0,1,1,1,1);
		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Open_O",4.1,0,1,1,1,1);
		ApplyAnimation(playerid,"ROB_BANK","CAT_Safe_Rob",4.1,0,1,1,1,1);
	    SetTimerEx("RobBankTimer", 60000, false, "d", playerid);
	    BankRobTimer[playerid] = GetTickCount();
	}
	else {
	    SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] Banka soyma yerinde deilsin.");
	}
	return 1;
}

forward RobBankTimer(playerid);
public RobBankTimer(playerid) {
	new bankmoney = 0, string[128];
    bankmoney = random(500)*5;
    ClearAnimations(playerid);
    format(string, sizeof string, "Banka soydun ve {FF0000} %d $ {FFFFFF}kadar para aldn.", bankmoney);
    SendClientMessage(playerid, COLOR_WHITE, string);
    PlayerInfo[playerid][pCash] += bankmoney;
    GivePlayerCash(playerid, PlayerInfo[playerid][pCash]);
    return 1;
}


CMD:objkoy(playerid, params[])
{
	new string[128], object;
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "You are not authorized to use this command.");
	if(sscanf(params, "i", object)) return SendClientMessage(playerid, COLOR_WHITE, "[Kullanm]: /objkoy [objectid]");

	for(new idx=1; idx<MAX_OBJ; idx++)
	{
	    if(!ObjInfo[idx][oModel])
	    {
	        GetPlayerPos(playerid, ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ]);
  			ObjInfo[idx][oModel] = object;
  			oldoID = ObjInfo[idx][oModel];
  			oldodX = ObjInfo[idx][oX];
  			oldodY = ObjInfo[idx][oY];
  			oldodZ = ObjInfo[idx][oZ];
  			oldodRX = ObjInfo[idx][oRX];
  			oldodRY = ObjInfo[idx][oRY];
  			oldodRZ = ObjInfo[idx][oRZ];
			ObjInfo[idx][oX] = ObjInfo[idx][oX] + 2;
			ObjInfo[idx][oY] = ObjInfo[idx][oY] + 2;
			ObjInfo[idx][oRX] = 0;
			ObjInfo[idx][oRY] = 0;
			ObjInfo[idx][oRZ] = 0;
			// Creating
			ObjInfo[idx][obj] = CreateDynamicObject(ObjInfo[idx][oModel], ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ], ObjInfo[idx][oRX], ObjInfo[idx][oRY], ObjInfo[idx][oRZ]);
			ObjInfo[idx][oText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ], 0);
			Log("logs/bject.log", string);
			SaveObjects();
			idx = MAX_OBJ;
		}
	}
	return 1;
}

CMD:editobj(playerid, params[])
{
	new string[128], idx;
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "You are not authorized to use this command.");
	if(sscanf(params, "i", idx)) return SendClientMessage(playerid, COLOR_WHITE, "[Kullanm]: /editobj [objectid]");
    if(!ObjInfo[idx][oModel]) return SendClientMessage(playerid, COLOR_GREY, "Invalid object id.");
	oEdit[playerid] = 1;
	oEditID[playerid] = idx;
	GetDynamicObjectPos(ObjInfo[idx][obj], oPos[playerid][0], oPos[playerid][1], oPos[playerid][2]);
	GetDynamicObjectRot(ObjInfo[idx][obj], oRot[playerid][0], oRot[playerid][1], oRot[playerid][2]);
	EditDynamicObject(playerid, ObjInfo[idx][obj]);
    format(string, sizeof(string), " You are now editing object ID %d's position.", idx);
    SendClientMessage(playerid, COLOR_WHITE, string);
    SaveObjects();
	return 1;
}

CMD:duplicateobj(playerid, params[])
{
    new string[128] ,idx;
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "You are not authorized to use this command.");
		for(idx=1; idx<MAX_OBJ; idx++)
		{
		    if(!ObjInfo[idx][oModel])
		    {
				ObjInfo[idx][oModel] = oldoID;
				ObjInfo[idx][oX] = oldodX;
				ObjInfo[idx][oY] = oldodY;
				ObjInfo[idx][oZ] = oldodZ;
				ObjInfo[idx][oRX] = oldodRX;
				ObjInfo[idx][oRY] = oldodRY;
				ObjInfo[idx][oRZ] = oldodRZ;
				// Creating
				ObjInfo[idx][obj] = CreateDynamicObject(oldoID, oldodX, oldodY, oldodZ, oldodRX, oldodRY, oldodRZ);
				ObjInfo[idx][oText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, oldodX, oldodY, oldodZ, 10);
				Log("logs/objects.log", string);
				SaveObjects();
				idx = MAX_OBJ;
			}
		}
	return 1;
}

CMD:nearobj(playerid, params[])
{
    new string[128];
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "{FFFFFF}[{FF0000}@{FFFFFF}]  Bu komutu kullanmaya yetkiniz yok!");
    for(new idx=1; idx<MAX_OBJ; idx++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 5, ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ]))
		{
		    format(string, sizeof(string), "Yanndaki Obje ID: %d - Obje: %d", idx, ObjInfo[idx][oModel]);
		    SendClientMessage(playerid, COLOR_GREEN, string);
		    return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Objenin yannda deilsin.");
	return 1;
}

CMD:deleteobj(playerid, params[])
{
	new idx, string[128];
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "You are not authorized to use this command.");
	if(sscanf(params, "i", idx)) return SendClientMessage(playerid, COLOR_WHITE, "[Usage]: /deleteobj [objid]");
	if(!ObjInfo[idx][oModel]) return SendClientMessage(playerid, COLOR_GREY, "Invalid object id.");
	ObjInfo[idx][oModel] = 0;
	ObjInfo[idx][oX] = 0;
	ObjInfo[idx][oY] = 0;
	ObjInfo[idx][oZ] = 0;
	ObjInfo[idx][oRX] = 0;
	ObjInfo[idx][oRY] = 0;
	ObjInfo[idx][oRZ] = 0;
	DestroyDynamicObject(ObjInfo[idx][obj]);
	DestroyDynamic3DTextLabel(ObjInfo[idx][oText]);
	SaveObjects();
	Log("logs/object.log", string);
	return 1;
}

CMD:objeyardim(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "You are not authorized to use this command.");
	SendClientMessage(playerid, COLOR_GREEN, "_____________________________________________________");
	SendClientMessage(playerid, COLOR_RED, "*YARDIM: {FFFFFF}/objkoy /editobj /deleteobj");
	SendClientMessage(playerid, COLOR_RED, "*YARDIM: {FFFFFF}/nearobj /duplicateobj /gotoobj");
	SendClientMessage(playerid, COLOR_RED, "*YARDIM: {FFFFFF} /saveobjects");
	SendClientMessage(playerid, COLOR_GREEN, "_____________________________________________________");
	return 1;
}

CMD:gotoobj(playerid, params[])
{
    new idx, string[128];
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "You are not authorized to use this command.");
	if(sscanf(params, "i", idx)) return SendClientMessage(playerid, COLOR_WHITE, "[Usage]: /gotoobj [objectid]");
	if(!ObjInfo[idx][oModel]) return SendClientMessage(playerid, COLOR_GREY, "Invalid object id.");
	SetPlayerPos(playerid, ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ]);
	format(string, sizeof(string), " You have teleported to object ID %d.", idx);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:objectid(playerid, params[])
{
	new idx, string[128];
	while(idx < MAX_OBJ)
	{
     	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid,COLOR_GREY,"You're not authorized to use this command.");
		format(string, sizeof(string), "", idx, ObjInfo[idx][oModel]);
		ObjInfo[idx][oText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, ObjInfo[idx][oX], ObjInfo[idx][oY], ObjInfo[idx][oZ], 10);
		idx++;
	    }
		return 1;
}

CMD:objectidkapa(playerid, params[])
{
	new idx;
	while(idx < MAX_OBJ)
	{
     	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid,COLOR_GREY,"You're not authorized to use this command.");
     	DestroyDynamic3DTextLabel(ObjInfo[idx][oText]);
		idx++;
	    }
		return 1;
}

CMD:saveobjects(playerid, params[])
{
   	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid,COLOR_GREY,"You're not authorized to use this command.");
	SendClientMessage(playerid, COLOR_RED, "Objects have been saved!");
	SaveObjects();
	SaveObjects22();
	return 1;
}


CMD:setweather(playerid, params[])
{
	new string[128], input;
	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GRAD1, "Giri yapmadnz.");
	if(PlayerInfo[playerid][pAdmin] < 7) return SendClientMessage(playerid, COLOR_GREY, "{FFFFFF}[{FF0000}@{FFFFFF}] Bu komutu kullanma yetkiniz yok!");
	if(sscanf(params, "i", input)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /setweather [ID]");
	if(input > 50 || input < 0) return SendClientMessage(playerid, COLOR_GREY, "Invalid Weather ID");
    foreach(Player, i)
    {
        if(IsPlayerConnected(i))
        {
			SetPlayerWeather(i, input);
        }
    }
	format(string, sizeof(string), "AdmWarn:{FFFFFF} %s Havay Deitirdi , Hava ID %d.", GetPlayerNameEx(playerid), input);
    ABroadCast(COLOR_REPORT,string,1);
	return 1;
}


CMD:silahal(playerid, params[])
{
    for(new i = 1; i < MAX_YERDEKI_SILAH; i++)
    {
	 	if(PlayerInfo[playerid][pLevel] >= 2)
		{
	        if(YerdekiSilahlar[i][slModel])
	        {
	            if(PlayerToPoint(2.0,playerid,YerdekiSilahlar[i][slX],YerdekiSilahlar[i][slY],YerdekiSilahlar[i][slZ]) && GetPlayerInterior(playerid) == YerdekiSilahlar[i][slINT] && GetPlayerVirtualWorld(playerid) == YerdekiSilahlar[i][slVW])
				{
				    SilahKontrol[playerid][YerdekiSilahlar[i][slModel]] = true;
				    GivePlayerValidWeapon(playerid, YerdekiSilahlar[i][slModel], 60000);
					DestroyObject(YerdekiSilahlar[i][slObje]);
					YerdekiSilahlar[i][slModel] = 0;
	    			YerdekiSilahlar[i][slX] = 0;
					YerdekiSilahlar[i][slY] = 0;
	    			YerdekiSilahlar[i][slZ] = 0;
	    			YerdekiSilahlar[i][slVW] = 0;
	    			YerdekiSilahlar[i][slINT] = 0;
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(playerid,X,Y,Z);
					EmoteMe(playerid,10.0,"yerde bulunan silah alr.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Silah alabilmek iin en az 2 level olmalsnz.");
			return 1;
		}
	}
	SendClientMessage(playerid, COLOR_WHITE, "Yakininizda silah bulunmuyor.");
	return 1;
}

CMD:silahat(playerid, params[])
{
    if(GetPlayerWeapon(playerid))
    {
	 	if(PlayerInfo[playerid][pLevel] >= 2)
		{
	    	for(new i = 1; i < MAX_YERDEKI_SILAH; i++)
	    	{
				if(!YerdekiSilahlar[i][slModel])
				{
				    new id = GetPlayerWeapon(playerid);
					new Float:X,Float:Y,Float:Z,VW,INT;
					GetPlayerPos(playerid,X,Y,Z);
					VW = GetPlayerVirtualWorld(playerid);
					INT = GetPlayerInterior(playerid);
					RemovePlayerWeapon(playerid, id);
					YerdekiSilahlar[i][slModel] = id;
					YerdekiSilahlar[i][slX] = X;
					YerdekiSilahlar[i][slY] = Y;
					YerdekiSilahlar[i][slZ] = Z;
					YerdekiSilahlar[i][slVW] = VW;
					YerdekiSilahlar[i][slINT] = INT;
					YerdekiSilahlar[i][slObje] = CreateObject(SilahObjeleri[id][0],X,Y,Z-0.98,93.7,120.0,120.0);
					EmoteMe(playerid,10.0,"elinde bulunan silah yere birakr.");
					SendClientMessage(playerid, COLOR_WHITE, "Elinizde bulunan silah yere biraktnz.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Yere silahnz brakabilmek iin en az 2 level olmalsnz.");
			return 1;
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Silahiniz bulunmuyor.");
	    return 1;
	}
	return 1;
}

CMD:mobese(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,236.6572, 126.0605, 1002.9333))
		{
			SendClientMessage(playerid, COLOR_WHITE, "/mobese1 - Pershing Square");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese2 - Las Colinas");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese3 - Glen Park");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese4 - Rodeo");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese5 - All Saints Hastanesi");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese6 - County General Hastanesi");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese7 - LSPD 1");
			SendClientMessage(playerid, COLOR_WHITE, "/mobese8 - LSPD 2");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese1(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 1544.3201, -1650.4747, 21.8741);
			SetPlayerCameraLookAt(playerid, 1528.8374, -1678.2098, 13.3828);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese2(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 2261.1509, -1134.7296, 42.1342);
			SetPlayerCameraLookAt(playerid, 2320.1462, -1163.5184, 27.8623);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese3(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 1366.0327, -1264.6116, 29.9625);
			SetPlayerCameraLookAt(playerid, 1351.4681, -1281.6628, 13.3828);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese4(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 345.7744, -1604.2449, 46.9642);
			SetPlayerCameraLookAt(playerid, 343.4040, -1526.5984, 33.2792);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese5(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 1173.2233, -1322.5192, 30.4662);
			SetPlayerCameraLookAt(playerid, 1198.5242, -1322.0291, 13.3984);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese6(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 2043.0205, -1410.7994, 23.1193);
			SetPlayerCameraLookAt(playerid, 2025.3486, -1425.0294, 16.7453);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese7(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 245.2521, 87.4820, 1004.9574);
			SetPlayerCameraLookAt(playerid, 246.0150, 81.8277, 1003.6406);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobese8(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,240.2695, 81.7240, 1005.0391))
		{
			SetPlayerPos(playerid, 2604.7776, 2369.3503, 39.3750);
	    	SetPlayerCameraPos(playerid, 250.0482, 71.9762, 1004.7753);
			SetPlayerCameraLookAt(playerid, 242.7718, 62.7017, 1005.0133);
			SetPlayerInterior(playerid, 0);
			SetPlayerVirtualWorld(playerid, 0);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mobesecik(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,50.0,2604.7776, 2369.3503, 39.3750))
		{
			SetPlayerPos(playerid, 240.2695, 81.7240, 1005.0391);
			SetPlayerInterior(playerid, 6);
			SetPlayerVirtualWorld(playerid, 20002);
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE'den k iin, /mobesecik");
			SetCameraBehindPlayer(playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "MOBESE bilgisayarna yakn deilsin.");
		}
	}
	return 1;
}

CMD:giftall(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }
        foreach(Player, i)
		{
            GivePlayerCash(i, 10000);
            SendClientMessage(i,COLOR_WHITE, "Master RPG size 10000$ hediye olarak verdi. yi oyunlar.");

        }
        SendClientMessage(playerid,COLOR_WHITE, "Herkese 10000$ harlk verdin.");
    }
	return 1;
}

CMD:kgsyardim(playerid, params[])
	return cmd_giseyardim(playerid, params);

CMD:giseyardim(playerid, params[])
{
	ShowPlayerDialog(playerid, 15456, DIALOG_STYLE_MSGBOX, "Gie [/kgs]",
	"{FFFFFF} {c0515b}Gielere yaklan.\n{FFFFFF} {c0515b}/kgs komutunu kullann. [$50]", "Tamam", "");
	return 1;
}

CMD:kgs(playerid,params[])
{
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid,COLOR_GREY, "Ara ierisinde olmalsnz.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid,COLOR_GREY, " Src koltuunda deilsiniz.");

	if(IsPlayerInRangeOfPoint(playerid,10,69.36000, -1529.90137, 4.62970))
	{
		if(PlayerInfo[playerid][pCash] < 10)
		    return SendClientMessage(playerid,COLOR_GREY, "Yeterli paranz bulunmuyor. (10$)");

	    SetDynamicObjectRot(Giseler[0],0.00000, 0.00000, 85.00000);
		SetTimerEx("ShutUp",5000,false,"d",11);
		GivePlayerCash(playerid, -10);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,35.95300, -1533.46558, 4.92970))
	{
		if(PlayerInfo[playerid][pCash] < 10)
		    return SendClientMessage(playerid,COLOR_GREY, "Yeterli paranz bulunmuyor. (10$)");

	    SetDynamicObjectRot(Giseler[1],0.00000, 0.00000, 87.00000);
		SetTimerEx("ShutUp",5000,false,"d",12);
		GivePlayerCash(playerid, -10);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,76.54820, -1264.59509, 14.19720))
	{
		if(PlayerInfo[playerid][pCash] < 10)
		    return SendClientMessage(playerid,COLOR_GREY, "Yeterli paranz bulunmuyor. (10$)");

	    SetDynamicObjectRot(Giseler[2],0.00000, -1.00000, 126.00000);
		SetTimerEx("ShutUp",5000,false,"d",13);
		GivePlayerCash(playerid, -10);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,53.14420, -1317.74634, 11.21930))
	{
		if(PlayerInfo[playerid][pCash] < 10)
		    return SendClientMessage(playerid,COLOR_GREY, "Yeterli paranz bulunmuyor. (10$)");

	    SetDynamicObjectRot(Giseler[3],0.00000, 0.00000, 130.00000);
		SetTimerEx("ShutUp",5000,false,"d",14);
		GivePlayerCash(playerid, -10);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1736.52271, 506.26941, 28.57430))
	{
		if(PlayerInfo[playerid][pCash] < 10)
		    return SendClientMessage(playerid,COLOR_GREY, "Yeterli paranz bulunmuyor. (10$)");

	    SetDynamicObjectRot(Giseler[4],0.00000, 0.00000, 341.00000);
		SetTimerEx("ShutUp",5000,false,"d",15);
		GivePlayerCash(playerid, -10);
	}
	else if(IsPlayerInRangeOfPoint(playerid,10,1739.60828, 557.09363, 25.89180))
	{
		if(PlayerInfo[playerid][pCash] < 10)
		    return SendClientMessage(playerid,COLOR_GREY, "Yeterli paranz bulunmuyor. (10$)");

	    SetDynamicObjectRot(Giseler[5],0.00000, 1.00000, 341.00000);
		SetTimerEx("ShutUp",5000,false,"d",16);
		GivePlayerCash(playerid, -10);
	}
	return 1;
}

CMD:muzikkutusu(playerid, params[])
{
    new string[128];

    if(PlayerInfo[playerid][pDonator] < 3)
	    return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu yalnzca Elmas VIP olanlar kullanabilir.");

    if(!Boombox[playerid])
    {
        if(sscanf(params, "s[256]", params)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /muzikkutusu [Mzik URL]");
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i))
            {
                    if(Boombox[i])
                    {
                        if(IsPlayerInRangeOfPoint(playerid, 30, bpos[i][0], bpos[i][1], bpos[i][2]))
                        {
                            SendClientMessage(playerid, COLOR_WHITE, "Burada zaten bir mzik kutusu var, ltfen baka bir yere yerletirin!");
                            return 1;
                        }
                    }
            }
        }
        Boombox[playerid] = 1;
        format(string, sizeof(string), "Yere mzik kutusu koydun, almaya balad!");
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        GetPlayerPos(playerid, bpos[playerid][0], bpos[playerid][1], bpos[playerid][2]); bpos[playerid][2] = bpos[playerid][2] - 1;
        GetPlayerFacingAngle(playerid, bpos[playerid][3]); bpos[playerid][3] = bpos[playerid][3] +180;
        BoomboxObject[playerid] = CreateDynamicObject(2103, bpos[playerid][0], bpos[playerid][1], bpos[playerid][2], 0, 0, bpos[playerid][3]);
        format(BoomboxURL[playerid], 256, "%s", params);
    }
    else
    {
        Boombox[playerid] = 0;
        format(string, sizeof(string), "Mzik kutusunu kaldrdn!");
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        DestroyDynamicObject(BoomboxObject[playerid]);
        format(BoomboxURL[playerid], 256, "");
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(BoomboxPlayer[i] == playerid)
                {
                    BoomboxStream[i] = 0;
                    BoomboxPlayer[i] = -1;
                    StopAudioStreamForPlayer(i);
                    SendClientMessage(i, COLOR_WHITE, "Mzik kutusunun sahibi mzii kapatp, mzik kutusunu kaldrd!");
                }
            }
        }
    }
    return 1;
}

CMD:muzikdegistir(playerid, params[])
{
    if(PlayerInfo[playerid][pDonator] < 3)
	    return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu yalnzca Elmas VIP olanlar kullanabilir.");

    if(!Boombox[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Mzik kutusu yerletirmeden mzii deitiremezsin!");
    if(sscanf(params, "s[256]", params)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /muzikdegistir [Mzik URL]");
    SendClientMessage(playerid, COLOR_WHITE, "Mzik kutusunun mzii deiti!");
    format(BoomboxURL[playerid], 256, "%s", params);
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
                if(BoomboxPlayer[i] == playerid)
                {
                    PlayAudioStreamForPlayer(i, BoomboxURL[playerid], bpos[playerid][0], bpos[playerid][1], bpos[playerid][2], 30, 1);
                    SendClientMessage(i, COLOR_WHITE, "Mzik kutusunun mzii deitirildi!");
                }
        }
    }
    return 1;
}

CMD:mkyardim(playerid, params[])
{
    if(PlayerInfo[playerid][pDonator] < 3)
	return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu yalnzca Elmas VIP olanlar kullanabilir.");

   	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
    SendClientMessage(playerid, COLOR_WHITE, "MUZIK KUTUSU YARDIM:Mzik Kutusu'nun Mzik Linki ksmna yazmanz gereken link u ekildedir.");
    SendClientMessage(playerid, COLOR_WHITE, "MUZIK KUTUSU YARDIM:Taraycnz ap ark ismini yazdktan sonra sonuna kiwi6 yaznz.");
    SendClientMessage(playerid, COLOR_WHITE, "MUZIK KUTUSU YARDIM:Gelen sitelerden ilk batakini veya ondan sonrakini tklatnz.");
    SendClientMessage(playerid, COLOR_WHITE, "MUZIK KUTUSU YARDIM:Tkladnz sitede sa alt kedeki share'yi ap direct hotlink kopyalaynz.");
    SendClientMessage(playerid, COLOR_WHITE, "MUZIK KUTUSU YARDIM:Kopyaladnz linki /muzikkutusu [Mzik URL] yerine yaptrp mzii aabilirsiniz.");
	return 1;
}

CMD:muzikbaslat(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		if(isnull(params))
		{
		    SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /muzikbaslat [URL]");
		    SendClientMessage(playerid, COLOR_WHITE, "NOT: Durdurmak iin /muzikdurdur !");
		}
		else
		{
			new string[128], name[24];
                        GetPlayerName(playerid,name,24);
	    	        format(string,sizeof(string),"Admin %s sunucuya mzik yayn balatt!",name);
		SendClientMessageToAllEx(COLOR_LIGHTBLUE,string);
			for(new i;i<MAX_PLAYERS;i++)
			{
				PlayAudioStreamForPlayer(i, params);
			}
		}
	} else SendClientMessage(playerid, -1, "Bu komutu kullanma yetkiniz yok.");
	return 1;
}

CMD:suctemizle(playerid, params[])
{
    new string[418];
if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pFaction] != 2) return SendClientMessage(playerid, COLOR_GREY, "LSPD - FBI memuru deilsin.");
 new giveplayerid;
if(sscanf(params, "u", giveplayerid))
return SendClientMessage(playerid, -1, "KULLANIM: /suctemizle [Oyuncu ID/Oyuncu sim]");

   if(IsPlayerConnected(giveplayerid))
   {
    if(giveplayerid != INVALID_PLAYER_ID)
    {
     format(string, sizeof(string), "* %s adl kiinin tm kaytlarn ve aranma seviyelerini sildin.", GetPlayerNameEx(giveplayerid));
     SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
     format(string, sizeof(string), "* Memur %s, senin zerindeki tm kaytlar ve aranma seviyelerini temizledi.", GetPlayerNameEx(playerid));
     SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
     format(string, sizeof(string), "* Memur %s, %s zerindeki tm kaytlar ve aranma seviyelerini temizledi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
     SendRadioMessage(1, RADIO, string);
     SendRadioMessage(2, RADIO, string);
     PlayerInfo[giveplayerid][pWantedLevel] = 0;
     SetPlayerToTeamColor(giveplayerid);
        SetPlayerWantedLevel(giveplayerid, 0);
           ClearCrime(giveplayerid);
    }
    else
    {
     SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
    }
   }
 return 1;
 }

CMD:muzikdurdur(playerid)
{
    if(PlayerInfo[playerid][pAdmin] >= 6)
	{
			new string[128], name[24];
                        GetPlayerName(playerid,name,24);
	    	        format(string,sizeof(string),"Admin %s mzik yaynn durdurdu!",name);
		SendClientMessageToAllEx(COLOR_LIGHTBLUE,string);
	    for(new i;i<MAX_PLAYERS;i++)
	    {
	        StopAudioStreamForPlayer(i);
	    }
	} else SendClientMessage(playerid, -1, "Bu komutu kullanma yetkiniz yok..");
	return 1;
}

CMD:vip(playerid,params[]){//VIP DOLAP
	//new string[128];
	if(PlayerInfo[playerid][pDonator] > 0)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.2 ,681.9253,-459.1260,-25.6172)) return SendClientMessage(playerid, COLOR_GREY, "VIP Dolabnn yaknnda deilsin.");
	    ShowPlayerDialogEx(playerid, vdolap, DIALOG_STYLE_LIST, "VIP Dolab", "Ar Kesici\nZrh(10000$)\nSilahlar\nKyafetler\nMeslekler\nVIP Rozeti", "Sec", "Iptal");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "VIP deilsin.");
	return 1;
}

CMD:vcik(playerid,params[]){//VIP GARAJ
	//new string[128];
	if(PlayerInfo[playerid][pDonator]>0)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 2.2 ,1273.8411,-1337.5276,13.3486)) return SendClientMessage(playerid, COLOR_GREY, "VIP garajnn knda deilsin.");
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER && !GetPlayerInterior(playerid)){
		SetVehiclePos(GetPlayerVehicleID(playerid),1263.5697,-1336.3226,13.2419);
		}
		else{
		SetPlayerPos(playerid,1263.5697,-1336.3226,13.2419);
		}
		SetPlayerInterior(playerid, GetPlayerInterior(playerid));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid));
	}
	else return SendClientMessage(playerid, COLOR_GREY, "VIP deilsin.");
	return 1;
}

CMD:garaclarispawnla(playerid, params[])
{
    new f = PlayerInfo[playerid][pGang];
	if(f == 255) return SendClientMessage(playerid, COLOR_GRAD2, "Bir ailede deilsin.");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GRAD2, "Ailede en az R5 olmalsn.");
	for(new d = 0 ; d < MAX_GANG_VEHICLES; d++)
 	{
	    if(FamilyVehicleInfo[f][d][fvId])
	    {
			if(FamilyVehicleInfo[f][d][fvId] > 0 && IsVehicleOccupied(FamilyVehicleInfo[f][d][fvId]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(FamilyVehicleInfo[f][d][fvId]);
		}
	}
	new szMessage[64];
	format(szMessage, sizeof(szMessage), "Aile aralarnz spawnladnz.");
	SendClientMessage(playerid, COLOR_WHITE, szMessage);
	return 1;
}

CMD:bidonkullan(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid))
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Src koltuunda deilsiniz.");
			return 1;
  		}
		if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_WHITE, "Aracn motoru akken benzin dolduramazsnz, (/amotor) ile motorunuzu kapatn.");
		if(!PlayerInfo[playerid][pGas])
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Benzin bidonun yok!");
			return 1;
		}
		if(Fuel[vehicleid] >= 100)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Aracn benzini zaten dolu.");
		 	return 1;
		}
		if(Fuel[vehicleid] < 80.0) Fuel[vehicleid] += 20.0;
		else Fuel[vehicleid] = 100.0;
		SendClientMessage(playerid, COLOR_ORANGE, "Aracnzn benzinini arttrdnz.");
		PlayerInfo[playerid][pGas] --;
	}
	return 1;
}

CMD:benzinlerifulle(playerid, params[])
{
	new string[128], veh;
	if(PlayerInfo[playerid][pAdmin] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok!");
    if(!strcmp(params, "all", true))
    {
        for(new i=0; i<MAX_VEHICLES; i++)
        {
            Fuel[i] = 100;
        }
        if(PlayerInfo[playerid][pAdmin] >= 1)
		{
	   		format(string, sizeof(string), "(( {FF6347}Level %d Admin %s: {FFFFFF}Tm aralarn benzinleri doldurulmutur! ))", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid));
	    	SendClientMessageToAllEx(COLOR_OOC,string);
	 	}
        return 1;
    }
    if(sscanf(params, "i", veh)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /benzinlerifulle [vehicleid/all]");
    Fuel[veh] = 100;
    format(string, sizeof(string), "%s Admin %d ID'li aracn benzinini doldurdu",PlayerInfo[playerid][pAdminName], veh);
    SendAdminMessage(COLOR_OOC, 1, string);
	return 1;
}

CMD:benzindoldur(playerid, params[])
{
    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		new RefuelingVehicleSlot = -1;
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 1;
		if(GazIstasyonunda(playerid) == 0) return SendClientMessage(playerid, COLOR_WHITE, "Benzin istasyonunda deilsin!");
		GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
		if(engine == VEHICLE_PARAMS_ON) return SendClientMessageEx(playerid, COLOR_WHITE, "Aracn motoru akken benzin dolduramazsnz, (/amotor) ile motorunuzu kapatn.");
		if(Fuel[vehicleid] >= 99) return SendClientMessage(playerid, COLOR_WHITE, "Aracn benzini zaten dolu.");
        if(isrefuelling[playerid] == 1) return SendClientMessageEx(playerid, COLOR_WHITE, "uan zaten benzin dolduruyorsunuz.");
        SendClientMessageEx(playerid, COLOR_WHITE, "Aracnzn deposuna benzin dolduruluyor, bekleyin.");
		isrefuelling[playerid] = 1;

		for(new vehicleslot = 0; vehicleslot < MAX_PLAYERVEHICLES; vehicleslot++)
		{
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][vehicleslot][pvId]))
			{
				RefuelingVehicleSlot = vehicleslot;
			}
		}
	 	RefuelingVehicleTimer[playerid] = SetTimerEx("ReFill", 1000, true, "ii", playerid, RefuelingVehicleSlot);
	  	GameTextForPlayer(playerid, "~w~Doluyor...", 5000, 3);
	}
	return 1;
}

CMD:hm(playerid, params[])
{
        if(IsACop(playerid)) {
        ShowPlayerDialogEx(playerid, DIALOGMEGAFON, DIALOG_STYLE_LIST, "Megafon Menu", "Polis! aracn saa ek ve motorunu KAPAT!\nOrada olduunu biliyoruz.\nHey sen! Polis. Dur!\nLSPD! Olduun yerde kal!\nOlduun yerde kal. Yoksa ate aacaz!\nHadi! Hadi! Hadi!\nPolis! Kprdama!\nEllerin bann stnde kalacak ekilde aratan in!\nLSPD Kenara ek... sen delimisin? Hepimizi ldryordun!", "Se", "Iptal");
        } else SendClientMessage(playerid, COLOR_GRAD2, "LSPD'den deilsin!");
        return 1;
}

CMD:hmesaj(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4)
	{
		if(PlayerInfo[playerid][pRank] < 3)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bunun iin yeterli rtben yok!");
			return 1;
		}
		new	string[128];
		if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hmesaj [mesaj]");
		format(string, sizeof(string), "SMS: %s, Gnderen: zel Numara",params);
		SendClientMessageToAllEx(COLOR_YELLOW, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanmak iin hitman olmanz gerek.");
	}
	return 1;
}

CMD:kimlikgoster(playerid, params[])
{
	new giveplayerid;
	if(sscanf(params, "u",giveplayerid))
	{
		SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /kimlikgoster [Oyuncu ID/Isim]");
	}
	else
	{
		if(giveplayerid == playerid)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Kendi kendine kimliini gsteremezsin.");
			return 1;
		}
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
				    new string[128];
					new text1[20];
					if(PlayerInfo[playerid][pMarried]) { text1 = "Evli"; } else { text1 = "Bekar"; }
					new sext[16];
					if(PlayerInfo[playerid][pSex] == 1) { sext = "Erkek"; } else { sext = "Kadn"; }
					new age = PlayerInfo[playerid][pAge];
					format(string, sizeof(string), "____________ | Kimlik | _____________",GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid,-1,string);
					format(string, sizeof(string), "sim/Soyisim: %s",GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid,-1,string);
					format(string, sizeof(string), "Cinsiyet: %s", sext);
					SendClientMessage(giveplayerid,-1,string);
					format(string, sizeof(string), "Ya : %d | Medeni Hali: %s", age, text1);
					SendClientMessage(giveplayerid,-1,string);
					SendClientMessage(giveplayerid,-1,"________________________________");
					format(string,sizeof(string),"%s adl kiiye kimlik gsterdiniz.",GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_WHITE, string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Kimliinizi gstereceiniz kiiye yakn olmak zorundasnz.");
				}
			}
		}
        else
        {
			SendClientMessage(playerid, COLOR_WHITE, "Geersiz oyuncu.");
        }
	}
    return 1;
}

CMD:bakimaal(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 7)
        return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }
  	SendRconCommand("hostname [TR] Master Roleplay [BAKIM]");
	SendRconCommand("password 123321");
    SendClientMessageToAllEx(COLOR_LIGHTBLUE, " Sunucu bakma alnmtr!");
    return 1;
}

CMD:bakimdancikar(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 7)
        return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }
  	SendRconCommand("hostname Master Roleplay [Beta]");
	SendRconCommand("password 0");
    SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Sunucu bakmdan kartlmtr!");
    return 1;
}

CMD:gozbagla(playerid, params[])
{
	new string[128], giveplayerid;
	if(!PlayerInfo[playerid][pBlindfold]) return SendClientMessage(playerid, COLOR_WHITE, "Gozbaglama bandanan yok.");
	if(sscanf(params, "u",  giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gozbagla [Oyuncu ID/Isim]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "Uygun olmayan oyuncu IDsi.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Birilerinin gzn balamak iin bir aracn iinde olmalsn.");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "Oyuncu aracnzda deil.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Src koltuunda deilsiniz.");
	if(!IsPlayerTied(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "Bu kiinin elleri bal deil.");
	if(giveplayerid == playerid) return SendClientMessage(playerid, COLOR_WHITE, "Kendi zerinde kullanamazsn.");
	Blindfolded[giveplayerid] = 1;
	PlayerInfo[playerid][pBlindfold]--;
	SetPlayerCameraPos(giveplayerid, -833.5241,-1358.8575,86.9054);
	SetPlayerCameraLookAt(giveplayerid, -833.5241,-1358.8575,0);
	GameTextForPlayer(giveplayerid, "~r~Gozlerin baglandi", 2500, 3);
	format(string, sizeof(string), "* %s bir adet gz bandanas karr ve %s adl kiinin gzlerini balar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	SendClientMessage(playerid, COLOR_WHITE, " /gozbagiac yazarak gz bal olan birisinin gzn aabilirsiniz.");
	return 1;
}

CMD:gozbagiac(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u",  giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gozbagiac [Oyuncu ID/Isim]");
	if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "Uygun olmayan oyuncu ID'si.");
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Birilerinin gzn amak ya da kapatmak iin aracn iinde olmalsn.");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "Oyuncu senin aracnda deil.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Src koltuunda deilsiniz.");
	if(!Blindfolded[giveplayerid]) return SendClientMessage(playerid, COLOR_WHITE, "Bu oyuncunun gz bal deil");
	if(giveplayerid == playerid && PlayerTied[playerid] == 1) return SendClientMessage(playerid, COLOR_WHITE, "Ellerin balyken kendi gzn aamazsn.");
	Blindfolded[giveplayerid] = 0;
	SetCameraBehindPlayer(giveplayerid);
	GameTextForPlayer(giveplayerid, "~G~Gozlerin Acildi", 2500, 3);
	format(string, sizeof(string), "* %s, %s'nin gz bagn elleriyle zer.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

CMD:renkler(playerid, params[])
{
	ShowCarColorList(playerid,0,"Ara Renkleri","Kapat","");
	return 1;
}

CMD:hizlimiti(playerid, params[])
{
	new string[128], speed;
	if(sscanf(params, "i", speed)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM: {FFFFFF}/hizlimiti [hz]");
	if(speed < 0) return SendClientMessage(playerid, COLOR_WHITE, "Uygun olmayan Hz girdiniz.");
	Speedlimit[playerid] = speed;
	if(speed == 0) format(string, sizeof(string), "Aracn hz limitini kapattn.", speed);
    else format(string, sizeof(string), "Hz limitini %d olarak ayarladn, artk bu limiti aamazsn.", speed);
    SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:clearchat(playerid, params[]) {
	return cmd_cc(playerid, params);
}

CMD:cc(playerid, params[])
{
	foreach(Player, i)
	{
		if (PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 4)
		{
			for(new e = 0; e < 4; e++) ClearChatbox(i);
		}
	}
	return 1;
}

CMD:chatimitemizle(playerid, params[])
{
	for (new i = 0; i < 100; i ++) {
	    SendClientMessage(playerid, -1, "");
	}
	return 1;
}

CMD:respawnall(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		SetTimerEx("respawn", 60000, false, "i", playerid);
		new string[128];

		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(string, sizeof(string), "(( {FF6347}Level %d Admin %s: {FFFFFF}Kullanlmayan aralar 1 dakika iinde respawn edilecektir! ))", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid));
			SendClientMessageToAllEx(COLOR_OOC,string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:gedit(playerid, params[])
{
	new string[128], idx;
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok!");
 	if(sscanf(params, "s[128]", params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gedit [secenek] [gateid]");
		SendClientMessage(playerid, COLOR_WHITE, "SECENEKLER: object | open | close | speed | password");
		return 1;
	}
	if(!strcmp(params, "object", true, 5))
	{
	    new object;
	    if(sscanf(params, "s[128]ii", params, idx, object)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gedit object [gateid] [obje id]");
        if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate id.");
        if(object == 0)
		{
			format(string, sizeof(string), "%d", object);
			cmd_deletegate(playerid, string);
			return 1;
		}
		GateInfo[idx][gModel] = object;
		DestroyDynamicObject(GateInfo[idx][gGate]);
		GateInfo[idx][gGate] = CreateDynamicObject(GateInfo[idx][gModel], GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], GateInfo[idx][gCRX], GateInfo[idx][gCRY], GateInfo[idx][gCRZ]);
	    format(string, sizeof(string), "%d ID'li kapnn objesini %d olarak belirledin!", idx, object);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    SaveGates();
	}
	else if(!strcmp(params, "open", true, 4))
	{
	    if(sscanf(params, "s[128]i", params, idx)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gedit open [gateid]");
        if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate id.");
		gEdit[playerid] = 1;
		gEditID[playerid] = idx;
		GetDynamicObjectPos(GateInfo[idx][gGate], gPos[playerid][0], gPos[playerid][1], gPos[playerid][2]);
		GetDynamicObjectRot(GateInfo[idx][gGate], gRot[playerid][0], gRot[playerid][1], gRot[playerid][2]);
		EditDynamicObject(playerid, GateInfo[idx][gGate]);
	    format(string, sizeof(string), "%d ID'li kapnn alma pozisyonunu dzenleyin!", idx);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    SaveGates();
	}
	else if(!strcmp(params, "close", true, 5))
	{
	    if(sscanf(params, "s[128]i", params, idx)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gedit close [gateid]");
        if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate id.");
		gEdit[playerid] = 2;
		gEditID[playerid] = idx;
		GetDynamicObjectPos(GateInfo[idx][gGate], gPos[playerid][0], gPos[playerid][1], gPos[playerid][2]);
		GetDynamicObjectRot(GateInfo[idx][gGate], gRot[playerid][0], gRot[playerid][1], gRot[playerid][2]);
		EditDynamicObject(playerid, GateInfo[idx][gGate]);
	    format(string, sizeof(string), "%d ID'li kapnn kapanma pozisyonunu dzenleyin!", idx);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    SaveGates();
	}
	else if(!strcmp(params, "speed", true, 5))
	{
	    new Float:speed;
	    if(sscanf(params, "s[128]if", params, idx, speed)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gedit speed [gateid] [speed]");
        if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate id.");
		GateInfo[idx][gSpeed] = speed;
	    format(string, sizeof(string), "%d ID'li kapnn hzn %f olarak ayarladn!", idx, speed);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    SaveGates();
	}
	else if(!strcmp(params, "password", true, 8))
	{
	    new password[256];
	    if(sscanf(params, "s[128]is[256]", params, idx, password)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gedit password [gateid] [ifre]");
        if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate id.");
		format(GateInfo[idx][gPassword], 256, "%s", password);
	    format(string, sizeof(string), "%d ID'li kapnn ifresi artk {38B0DE}%s", idx, password);
	    SendClientMessage(playerid, COLOR_WHITE, string);
	    SaveGates();
	}
	return 1;
}

CMD:gotogate(playerid, params[])
{
    new idx, string[128];
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok!");
	if(sscanf(params, "i", idx)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gotogate [gateid]");
	if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate!");
	SetPlayerPos(playerid, GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ]);
	format(string, sizeof(string), "u gateye teleport oldun! (ID: %d)", idx);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:gused(playerid, params[])
{
	new string[128];
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok");
	SendClientMessage(playerid, COLOR_ORANGE, "[Gateler]:");
	for(new idx=1; idx<MAX_GATES; idx++)
	{
	    if(GateInfo[idx][gModel])
	    {
			format(string, sizeof(string), "ID: %d | Obje: %d | Hz: %f | ifre: %s", idx, GateInfo[idx][gModel], GateInfo[idx][gSpeed], GateInfo[idx][gPassword]);
			SendClientMessage(playerid, COLOR_ORANGE, string);
	    }
	}
	return 1;
}

CMD:gnear(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 2)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin grevinde deilsiniz.");
			return 1;
	    }
		SendClientMessageEx(playerid, COLOR_RED, "* 30 metre ierisindeki gateler gsteriliyor.");
		new Float:X, Float:Y, Float:Z;
		new Float:X2, Float:Y2, Float:Z2;
  		GetPlayerPos(playerid, X2, Y2, Z2);
		for(new i;i<MAX_GATES;i++)
		{
			GetDynamicObjectPos(GateInfo[i][gGate], X, Y, Z);
			if(IsPlayerInRangeOfPoint(playerid, 30, X, Y, Z))
			{
				if(GateInfo[i][gModel])
				{
				    new string[128];
			    	format(string, sizeof(string), "Gate ID %d | %f from you", i, GetDistance(X, Y, Z, X2, Y2, Z2));
			    	SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}
	}
	else
	{
	    SendClientMessageEx(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:deletegate(playerid, params[])
{
	new idx, string[128];
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok!");
	if(sscanf(params, "i", idx)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /deletegate [gateid]");
	if(!GateInfo[idx][gModel]) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate!");
	GateInfo[idx][gModel] = 0;
	GateInfo[idx][gCX] = 0;
	GateInfo[idx][gCY] = 0;
	GateInfo[idx][gCZ] = 0;
	GateInfo[idx][gCRX] = 0;
	GateInfo[idx][gCRY] = 0;
	GateInfo[idx][gCRZ] = 0;
	GateInfo[idx][gOX] = 0;
	GateInfo[idx][gOY] = 0;
	GateInfo[idx][gOZ] = 0;
	GateInfo[idx][gORX] = 0;
	GateInfo[idx][gORY] = 0;
	GateInfo[idx][gORZ] = 0;
	GateInfo[idx][gStatus] = 0;
	format(GateInfo[idx][gPassword], 256, "");
	GateInfo[idx][gSpeed] = 0;
	DestroyDynamicObject(GateInfo[idx][gGate]);
	DestroyDynamic3DTextLabel(GateInfo[idx][gText]);
	format(string, sizeof(string), "{5d478b}UYARI:{FFFFFF} %s adl admin %d id'li gateyi sildi!", GetPlayerNameEx(playerid), idx);
	SaveGates();
    SendAdminMessage(COLOR_LIGHTRED, 1, string);
	Log("logs/gateler.log", string);
	return 1;
}

CMD:creategate(playerid, params[])
{
	new string[128], object;
   	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok!");
	if(sscanf(params, "i", object)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /creategate [obje id]");
	for(new idx=1; idx<MAX_GATES; idx++)
	{
	    if(!GateInfo[idx][gModel])
	    {
	        GetPlayerPos(playerid, GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ]);
  			GateInfo[idx][gModel] = object;
			GateInfo[idx][gCX] = GateInfo[idx][gCX] + 2;
			GateInfo[idx][gCY] = GateInfo[idx][gCY] + 2;
			GateInfo[idx][gCRX] = 0;
			GateInfo[idx][gCRY] = 0;
			GateInfo[idx][gCRZ] = 0;
			GetPlayerPos(playerid, GateInfo[idx][gOX], GateInfo[idx][gOY], GateInfo[idx][gOZ]);
			GateInfo[idx][gOX] = GateInfo[idx][gOX] + 2;
			GateInfo[idx][gOY] = GateInfo[idx][gOY] + 2;
			GateInfo[idx][gORX] = 0;
			GateInfo[idx][gORY] = 0;
			GateInfo[idx][gORZ] = 0;
			GateInfo[idx][gStatus] = 0;
			format(GateInfo[idx][gPassword], 256, "");
			GateInfo[idx][gSpeed] = 2;
			// Creating
			format(string, sizeof(string), "{E1EE31}Kiisel Kap\n{1AEDE9}Numaras: {FFFFFF}[ %d ]", idx);
			GateInfo[idx][gGate] = CreateDynamicObject(GateInfo[idx][gModel], GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], GateInfo[idx][gCRX], GateInfo[idx][gCRY], GateInfo[idx][gCRZ]);
			GateInfo[idx][gText] = CreateDynamic3DTextLabel(string, COLOR_WHITE, GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], 10);
			// Text
			format(string, sizeof(string), "{5d478b}UYARI:{FFFFFF}%s adl admin %d id'li gateyi oluturdu!. (Object: %d)", GetPlayerNameEx(playerid), idx, object);
			SaveGates();
		    SendAdminMessage(COLOR_RED, 1, string);
			Log("logs/gateler.log", string);
			idx = MAX_GATES;
		}
	}
	return 1;
}

CMD:setgate(playerid, params[])
{
	new giveplayerid, slot, idx, string[128];
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pAdmin] < 5) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu kullanma yetkiniz yok!");
	if(sscanf(params, "uii", playerid, slot, idx)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /setgate [playerid] [slot(1-3)] [gateid]");
	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Uygun olmayan oyuncu IDsi.");
	if(idx > 0 && !GateInfo[idx][gModel] || idx < 0) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz gate ID!");
	if(slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_WHITE, "Gate slotlar 1 ve 3 arasndadr.");
	switch(slot)
	{
	    case 1: PlayerInfo[playerid][pGate1] = idx;
	    case 2: PlayerInfo[playerid][pGate2] = idx;
	    case 3: PlayerInfo[playerid][pGate3] = idx;
	}
	if(idx == 0)
	{
		format(string, sizeof(string), "%s adl admin %d'deki gateni sildi!", GetPlayerNameEx(giveplayerid), slot);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "{5d478b}UYARI:{FFFFFF} %s adl admin %s'nin %d'deki gatesini sildi!", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), slot);
		SendAdminMessage(COLOR_LIGHTRED, 1, string);
		Log("logs/gateler.log", string);
	}
	else
	{
		format(string, sizeof(string), "%s adl admin seni %d ID'li gatenin sahibi yapt!", GetPlayerNameEx(giveplayerid), idx, slot);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "{5d478b}UYARI:{FFFFFF} %s kapnn sahibini %s yapt! ID %d. (Slot %d)", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), idx, slot);
		SaveGates();
		SendAdminMessage(COLOR_LIGHTRED, 1, string);
		Log("logs/gateler.log", string);
	}
	return 1;
}

CMD:gateyardim(playerid, params[])
{
   	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
    SendClientMessage(playerid, COLOR_YELLOW, "GATE YARDIM: {FFFFFF}/gate /gatesifredegistir");
	return 1;
}

CMD:makegateowner(playerid, params[])
{
	new playerb, slot, idx, string[128];
	if(PlayerInfo[playerid][pAdmin] < 6) return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok.");
	if(sscanf(params, "uii", playerb, slot, idx)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /makegateowner [playerid] [slot(1-3)] [gateid] {AFAFAF}(Gate ID 0 to remove ownership)");
	if(idx > 0 && !GateInfo[idx][gModel] || idx < 0) return SendClientMessage(playerid, COLOR_GREY, "Invalid gate id.");
	if(slot < 1 || slot > 3) return SendClientMessage(playerid, COLOR_GREY, "Gate slots are between 1 and 3.");
	switch(slot)
	{
	    case 1: PlayerInfo[playerb][pGate1] = idx;
	    case 2: PlayerInfo[playerb][pGate2] = idx;
	    case 3: PlayerInfo[playerb][pGate3] = idx;
	}
	if(idx == 0)
	{
		format(string, sizeof(string), " Administrator %s removed your gate ownership in slot %d.", GetPlayerNameEx(playerid), slot);
		SendClientMessage(playerb, COLOR_WHITE, string);
		format(string, sizeof(string), "AdmUyari: %s has removed %s's gate ownership in slot %d.", GetPlayerNameEx(playerid), GetPlayerNameEx(playerb), slot);
  		ABroadCast(COLOR_LIGHTRED,string,1);
		Log("logs/gates.log", string);
		SaveGates();
	}
	else
	{
		format(string, sizeof(string), " Administrator %s has made you an owner of gate ID %d.", GetPlayerNameEx(playerid), idx, slot);
		SendClientMessage(playerb, COLOR_WHITE, string);
		format(string, sizeof(string), "AdmUyari: %s has made %s an owner of gate ID %d. (Slot %d)", GetPlayerNameEx(playerid), GetPlayerNameEx(playerb), idx, slot);
  		ABroadCast(COLOR_LIGHTRED,string,1);
		Log("logs/gates.log", string);
		SaveGates();
	}
	return 1;
}

CMD:selfie(playerid, params[])
{
	if(PlayerInfo[playerid][pNumber] == 0)
		return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] Telefonun yok.");

	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"Hapisteyken telefon aamazsn.");
		return 1;
	}

	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"Tutukluyken selfie ekemezsin.");
		return 1;
	}

	if(AdminDuty[playerid] == 1)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

	if(GetPVarInt(playerid, "PBM") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");

	if(GetPVarInt(playerid, "EventToken") != 0)
		return SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0||GetPlayerState(playerid) == 7)
		return SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");

	if(IsPlayerInAnyVehicle(playerid))
		return SendClientMessage (playerid, COLOR_GRAD2, "Arabadayken selfie ekemezsin!");


	switch(GetPVarInt(playerid, "SelfieModu"))
	{
	case 0:
	{
	SetPVarInt(playerid, "SelfieModu", 1);
	new Float: x, Float: y, Float: z, Float: a;
	GetPlayerPos(playerid, x, y, z);
	GetPlayerFacingAngle(playerid, a);
    SetPlayerCameraPos(playerid, x+(2.1 * floatsin(-a, degrees)), y+(2.1 * floatcos(-a, degrees)), z+0.8);
    SetPlayerCameraLookAt(playerid, x, y, z, CAMERA_MOVE);
    TogglePlayerControllable(playerid, 0);
    SetPlayerAttachedObject(playerid, 9, 18865, 6, 0.090000, 0.061999, 0.061000, -15.900002, -95.900039, -121.999885, 1.000000, 1.000000, 1.000000);
	ApplyAnimation(playerid, "SHOP", "ROB_Loop", 4.1, 1, 1, 1, 1, 0, 1);
	SendClientMessage(playerid, COLOR_WHITE, "Selfie sistemi ald. Kapatmak iin komutu tekrar yazmalsnz.");
	}
    case 1:
	{
	SetPVarInt(playerid, "SelfieModu", 0);
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid, 1);
	RemovePlayerAttachedObject(playerid, 9);
	ClearAnimations(playerid, 1);
	SendClientMessage(playerid, COLOR_WHITE, "Selfie sistemi kapand.");
	}
	}
    return 1;
}

CMD:gatesifredegistir(playerid, params[])
{
	new String[128], Slot, Password[256], Idx;
   	if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_WHITE, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(sscanf(params, "is[256]", Slot, Password)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /gatesifredegistir [slot] [ifre]");
	if(Slot < 1 || Slot > 3) return SendClientMessage(playerid, COLOR_WHITE, "Gate slotu 1 ile 3 arasndadr.");
	if(strcmp(Password,"0") == 0) return SendClientMessage(playerid,COLOR_RED,"(( Gate ifreleri iin yasakl rakam girdiniz. ))");
	switch(Slot)
	{
		case 1: Idx = PlayerInfo[playerid][pGate1];
		case 2: Idx = PlayerInfo[playerid][pGate2];
		case 3: Idx = PlayerInfo[playerid][pGate3];
	}
	if(!Idx) return SendClientMessage(playerid, COLOR_WHITE, "Bu slotta kaytl gateniz bulunmamaktadr.");
	format(GateInfo[Idx][gPassword], 256, "%s", Password);
 	format(String, sizeof(String), "Slotu %d (ID: %d) olan gatenin parolasn {38B0DE}%s yaptnz", Slot, Idx, Password);
 	SaveGates();
	SendClientMessage(playerid, COLOR_WHITE, String);
	return 1;
}

CMD:amotor(playerid, params[]) {
	new vehicleid = GetPlayerVehicleID(playerid), string[128];
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Arata deilsiniz.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Bu aracn ofr deilsiniz!");
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET) {
	    if(Fuel[vehicleid] <= 0.0) return SendClientMessageEx(playerid, COLOR_WHITE, "Bu aracn benzini bitmi, altramazsnz!");
		SetTimerEx("AracMotor", 3000, false, "dd", playerid, vehicleid);
	    format(string, sizeof string, "* %s anahtar kontaa takp evirir ve motorun almasn bekler.", GetPlayerNameEx(playerid));
	}
	else {
	    SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
	    format(string, sizeof string, "* %s aracn motoru kapatt.", GetPlayerNameEx(playerid));
	    engine = 0;
		SetPVarInt(playerid, "fuelonoff", 0);
  		HideProgressBarForPlayer(playerid, FuelBar[playerid]);
		DestroyProgressBar(FuelBar[playerid]);
		FuelBar[playerid] = INVALID_BAR_ID;
  		engine = 0;
	}
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

forward AracMotor(playerid, vehicleid);
public AracMotor(playerid, vehicleid)
{
TogglePlayerControllable(playerid, true);
GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
SetVehicleParamsEx(vehicleid, true, lights, alarm, doors, bonnet, boot, objective);
SetPVarInt(playerid, "fuelonoff", 1);
FuelBar[playerid] = CreateProgressBar(548.00, 26.00, 57.50, 3.20, 866792447, 100.0); // bide ksa srerse ey yapabilir miyiz 2 tuuna basnca ara klar
SetProgressBarValue(FuelBar[playerid], Fuel[vehicleid]);
ShowProgressBarForPlayer(playerid, FuelBar[playerid]);
new str[256];
format(str, sizeof(str), "* Aracn motoru almtr. (( %s ))", GetPlayerNameEx(playerid));
ProxDetector(30.0, playerid, str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
return 1;
}

stock SetPlayerMoney(playerid,ammount)
{
ResetPlayerMoney(playerid);
GivePlayerMoney(playerid,ammount);
return 1;
}

CMD:karakter(playerid, params[])
{
	if(gPlayerLogged[playerid] != 0)
	{
		ShowStats(playerid,playerid);
	}
	return 1;
}

CMD:netstats(playerid, params[]) {
	if(gPlayerLogged[playerid] != 0) {
		new strStats[401], szTitle[64];
		GetPlayerNetworkStats(playerid, strStats, sizeof(strStats));
		format(szTitle, sizeof(szTitle), "Network Stats (ID: %d) - %s", playerid, GetPlayerNameEx(playerid));
		ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, szTitle, strStats, "Kapat", "");
	}
	return 1;
}

CMD:anetstats(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2) {
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  	{
   		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsiniz. Admin komutlarna erimek iin iba yapmanz gerekir. ba yapmak iin /aduty komutunu kullann.");
		return 1;
	}

	new giveplayerid, strStats[401], szTitle[64];
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /anetstats [Oyuncu ID/sim]");

	if(gPlayerLogged[giveplayerid] != 0) {
		GetPlayerNetworkStats(giveplayerid, strStats, sizeof(strStats));
		format(szTitle, sizeof(szTitle), "Network Stats (ID: %d) - %s", giveplayerid, GetPlayerNameEx(giveplayerid));
		ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, szTitle, strStats, "Kapat", "");
	}
	return 1;
}

CMD:isegir(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 0)
	{
    	if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0, 240.4528,112.8529,1003.2188))
		{
 			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Dedektif olmak istiyorsanz, /kabulet meslek yazn.");
   			GettingJob[playerid] = 1;
     		return 1;
 		}
   		else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1380.8955,-1088.6808,27.3844))
   		{
     		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Avukat olmak istiyorsanz, /kabulet meslek yazn.");
       		GettingJob[playerid] = 2;
         	return 1;
     	}
		else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1215.1304,-11.8431,1000.9219))
	 	{
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hayat Kadn olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob[playerid] = 3;
        	return 1;
   		}
  		else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2166.3772,-1675.3829,15.0859))
   		{
     		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu Satcs olmak istiyorsanz, /kabulet meslek yazn.");
       		GettingJob[playerid] = 4;
         	return 1;
     	}
      	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2330.117675, -2315.346435, 13.546875))
		  {
       		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Tamirci olmak istiyorsanz, /kabulet meslek yazn.");
         	GettingJob[playerid] = 7;
          	return 1;
      	}
      	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2226.1716,-1718.1792,13.5165))
	  	{ // Ganton Gym
    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bodyguard olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob[playerid] = 8;
        	return 1;
      	}
       	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1099.73,-1504.67,15.800))
	   	{ // All Saints Mall
    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bodyguard olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob[playerid] = 8;
        	return 1;
       	}
        else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1366.4325,-1275.2096,13.5469))
		{ // Big Ammunation
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah Satcs olmak istiyorsanz, /kabulet meslek yazn.");
     		GettingJob[playerid] = 9;
       		return 1;
        }
        else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,766.0804,14.5133,1000.7004))
		{
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boksr olmak istiyorsanz, /kabulet meslek yazn.");
     		GettingJob[playerid] = 12;
       		return 1;
        }
        else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,758.98, -60.32, 1000.78))
		{
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boksr olmak istiyorsanz, /kabulet meslek yazn.");
     		GettingJob[playerid] = 12;
       		return 1;
  		}
     	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2354.2808,-1169.2959,28.0066))
	 	{
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu Kaaks olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob[playerid] = 14;
        	return 1;
		}
       	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2195.8335,-1973.0638,13.5589))
   		{
     		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Zanaatkar olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob[playerid] = 18;
        	return 1;
       	}
       	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,502.6696,-11.6603,1000.6797))
	   	{
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Barmen olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob[playerid] = 19;
        	return 1;
       	}
        else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2214.979736, -2661.346923, 13.546875))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyon ofr olmak istiyorsanz, /kabulet meslek yazn.");
			GettingJob[playerid] = 20;
			return 1;
		}
	/*	else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,378.58, -114.26, 1001.49))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Pizzac olmak istiyorsanz, /kabulet meslek yazn.");
        	GettingJob[playerid] = 21;
        	return 1;
    	} */
		else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1679.0898,2340.3586,10.0411))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Tr fr olmak istiyorsanz, /kabulet meslek yazn.");
        	GettingJob[playerid] = 22;
        	return 1;
    	}
		else if(PlayerInfo[playerid][pJob] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1942.6814,-1821.7446,13.7095))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Cimento fr olmak istiyorsanz, /kabulet meslek yazn.");
        	GettingJob[playerid] = 23;
        	return 1;
    	}
    	else
		{
  			SendClientMessage(playerid, COLOR_GREY, " kabul edebileceiniz bir yere yakn deilsiniz!");
     	}
	}
	else if(PlayerInfo[playerid][pJob] != 0 && PlayerInfo[playerid][pDonator] < 2 && PlayerInfo[playerid][pLevel] < 25)
 	{
  		SendClientMessage(playerid, COLOR_GREY, "Zaten bir iiniz var, nce /istencik yazarak iten kn!");
		SendClientMessage(playerid, COLOR_GREY, "Yalnzca VIP ve level 25+ olanlar iki ite alabilir!");
  	}
	else if(PlayerInfo[playerid][pJob2] == 0 && (PlayerInfo[playerid][pDonator] >= 2 || PlayerInfo[playerid][pLevel] >= 25))
	{
    	if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0, 240.4528,112.8529,1003.2188))
		{
 			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Dedektif olmak istiyorsanz, /kabulet meslek yazn.");
   			GettingJob2[playerid] = 1;
     		return 1;
 		}
   		else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1380.8955,-1088.6808,27.3844))
   		{
     		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Avukat olmak istiyorsanz, /kabulet meslek yazn.");
       		GettingJob2[playerid] = 2;
         	return 1;
     	}
		else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1215.1304,-11.8431,1000.9219))
	 	{
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hayat Kadn olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob2[playerid] = 3;
        	return 1;
   		}
   		else if(PlayerInfo[playerid][pJob2] == 0 && PlayerInfo[playerid][pGang] == 255 && IsPlayerInRangeOfPoint(playerid,3.0,2166.3772,-1675.3829,15.0859))
   		{
     		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu Satcs olmak istiyorsanz, /kabulet meslek yazn.");
       		GettingJob2[playerid] = 4;
         	return 1;
     	}
      	else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2330.117675, -2315.346435, 13.546875))
		  {
       		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Tamirci olmak istiyorsanz, /kabulet meslek yazn.");
         	GettingJob2[playerid] = 7;
          	return 1;
      	}
      	else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2226.1716,-1718.1792,13.5165))
	  	{ // Ganton Gym
    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bodyguard olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob2[playerid] = 8;
        	return 1;
      	}
       	else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1099.73,-1504.67,15.800))
	   	{ // All Saints Mall
    		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bodyguard olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob2[playerid] = 8;
        	return 1;
       	}
        else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,1366.4325,-1275.2096,13.5469))
		{ // Big Ammunation
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah Satcs olmak istiyorsanz, /kabulet meslek yazn.");
     		GettingJob2[playerid] = 9;
       		return 1;
        }
        else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,766.0804,14.5133,1000.7004))
		{
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boksr olmak istiyorsanz, /kabulet meslek yazn.");
     		GettingJob2[playerid] = 12;
       		return 1;
        }
        else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,758.98, -60.32, 1000.78))
		{
  			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Boksr olmak istiyorsanz, /kabulet meslek yazn.");
     		GettingJob2[playerid] = 12;
       		return 1;
  		}
     	else if(PlayerInfo[playerid][pJob2] == 0 && PlayerInfo[playerid][pGang] == 255 && IsPlayerInRangeOfPoint(playerid,3.0,2354.2808,-1169.2959,28.0066))
	 	{
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu Kaakc olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob2[playerid] = 14;
        	return 1;
      	}
       	else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2195.8335,-1973.0638,13.5589))
   		{
     		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Zanaatkar olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob2[playerid] = 18;
        	return 1;
       	}
       	else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,502.6696,-11.6603,1000.6797))
	   	{
   			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Barmen olmak istiyorsanz, /kabulet meslek yazn.");
      		GettingJob2[playerid] = 19;
        	return 1;
       	}
        else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,2214.979736, -2661.346923, 13.546875))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyon ofr olmak istiyorsanz, /kabulet meslek yazn.");
			GettingJob2[playerid] = 20;
			return 1;
		}
	/*	else if(PlayerInfo[playerid][pJob2] == 0 && GetPlayerState(playerid) == 1 && IsPlayerInRangeOfPoint(playerid,3.0,378.58, -114.26, 1001.49))
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Pizzac olmak istiyorsanz, /kabulet meslek yazn.");
        	GettingJob2[playerid] = 21;
        	return 1;
    	} */
    	else
		{
  			SendClientMessage(playerid, COLOR_GREY, " kabul edebileceiniz bir yere yakn deilsiniz!");
     	}
	}
	else if(PlayerInfo[playerid][pJob] != 0 && PlayerInfo[playerid][pJob2] != 0)
 	{
  		SendClientMessage(playerid, COLOR_GREY, "Zaten 2 ie sahipsiniz, nce /istencik yazarak iten kn!");
  	}
   	return 1;
}

CMD:istencik(playerid, params[])
{
	if(PlayerInfo[playerid][pDonator] >= 2)
	{
		new jobid;
		if(sscanf(params, "d", jobid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /istencik [jobid]");
			SendClientMessage(playerid, COLOR_GREY, "MUSAIT: 1, 2");
			return 1;
		}

		switch(jobid)
		{
			case 1:
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ten ktnz.");
				PlayerInfo[playerid][pJob] = 0;

				if(GetPVarType(playerid, "NPS") != 0) {
			    	SetPlayerSkin(playerid, GetPVarInt(playerid, "NPS"));
			    	DeletePVar(playerid,"NPS");
				}
				JobDuty[playerid] = 0;
				if(PlayerInfo[playerid][pJob] == 7) {
					Mechanics -= 1;
				} else if(PlayerInfo[playerid][pJob] == 2) {
					Lawyers -= 1;
				}
				DestroyProgressBar(LoadTruckBar[playerid]);
				LoadTruckBar[playerid] = INVALID_BAR_ID;
				LoadTruckTime[playerid] = 0;
				DeletePVar(playerid, "TruckDeliver");
				TruckUsed[playerid] = INVALID_VEHICLE_ID;
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				DisablePlayerCheckpoint(playerid);
			}
			case 2:
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* kinci iinizden ktnz.");
				PlayerInfo[playerid][pJob2] = 0;

				if(GetPVarType(playerid, "NPS") != 0) {
			    	SetPlayerSkin(playerid, GetPVarInt(playerid, "NPS"));
			    	DeletePVar(playerid,"NPS");
				}
				JobDuty[playerid] = 0;
				if(PlayerInfo[playerid][pJob2] == 7) {
					Mechanics -= 1;
				} else if(PlayerInfo[playerid][pJob2] == 2) {
					Lawyers -= 1;
				}
				DestroyProgressBar(LoadTruckBar[playerid]);
				LoadTruckBar[playerid] = INVALID_BAR_ID;
				LoadTruckTime[playerid] = 0;
				DeletePVar(playerid, "TruckDeliver");
				TruckUsed[playerid] = INVALID_VEHICLE_ID;
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
				DisablePlayerCheckpoint(playerid);
			}
			default:
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /istencik [jobid]");
				SendClientMessage(playerid, COLOR_GREY, "UYGUN: 1, 2");
			}
		}
	}
	else
	{
		if(PlayerInfo[playerid][pJob] > 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* ten ktnz.");
			PlayerInfo[playerid][pJob] = 0;

			if(GetPVarType(playerid, "NPS") != 0) {
			    SetPlayerSkin(playerid, GetPVarInt(playerid, "NPS"));
			    DeletePVar(playerid,"NPS");
			}
			JobDuty[playerid] = 0;
			if(PlayerInfo[playerid][pJob] == 7) {
				Mechanics -= 1;
			} else if(PlayerInfo[playerid][pJob] == 2) {
				Lawyers -= 1;
			}
			DestroyProgressBar(LoadTruckBar[playerid]);
			LoadTruckBar[playerid] = INVALID_BAR_ID;
			LoadTruckTime[playerid] = 0;
			DeletePVar(playerid, "TruckDeliver");
			TruckUsed[playerid] = INVALID_VEHICLE_ID;
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			DisablePlayerCheckpoint(playerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bir iiniz yok!");
		}
	}
	return 1;
}

/* CMD:pizzaal(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 21 && PlayerInfo[playerid][pJob2] != 21)
	{
		SendClientMessage(playerid,COLOR_GREY,"Pizzac deilsiniz!");
		return 1;
	}
    new vehicleid = GetPlayerVehicleID(playerid);
    if(!(IsAPizzaCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER))
	{
	    SendClientMessage(playerid,COLOR_GREY,"Pizza motoru kullanmalsnz!");
	    return 1;
	}
	if(!(GetPlayerSkin(playerid) == 155))
	{
	    SendClientMessage(playerid,COLOR_GREY," Pizzac kyafeti giymelisiniz!");
	    return 1;
	}
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 2104.1999511719, -1787.5999755859, 13.60000038147))
	{
		SendClientMessage(playerid,COLOR_GREY," Pizza alabilecein bir yerde deilsin!");
		return 1;
	}
	if(GetPVarInt(playerid, "Pizza") > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Zaten pizza teslim ediyorsun.");
		return 1;
	}

	new rand = random(165);
	while(!(HouseInfo[rand][hExteriorZ] < 150.0 && HouseInfo[rand][hExteriorX] > 17.59 && HouseInfo[rand][hExteriorX] < 3004.64 && HouseInfo[rand][hExteriorY] < -805.45 && HouseInfo[rand][hExteriorY] > -2736.25))
	{
	    rand++;
	    if(rand == 165) {
	    	rand = 1;
		}
	}

	SetPVarInt(playerid, "tpPizzaTimer", floatround((GetPizzaDistance(rand) / 60), floatround_round));
	SetPVarInt(playerid, "pizzaTotal", floatround((GetPizzaDistance(rand) / 10), floatround_round));
	SetPVarInt(playerid, "pizzaTimer", GetPVarInt(playerid, "pizzaTotal"));
 	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
 	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);
	new szMessage[128];

 	if(HouseInfo[rand][hOwned] == 0)
 	{
 	    format(szMessage, sizeof(szMessage), "Birisi iin pizza aldnz. Teslim etmek iin %d saniyeniz var!", GetPVarInt(playerid, "pizzaTotal"));
 	}
 	else
	{
		format(szMessage, sizeof(szMessage), "%s iin pizza aldnz. Teslim etmek iin %d saniyeniz var!", HouseInfo[rand][hOwner], GetPVarInt(playerid, "pizzaTotal"));
	}

	SendClientMessage(playerid, COLOR_WHITE, szMessage);
	SetPVarInt(playerid, "Pizza", rand);
	PizzaBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
	SetProgressBarValue(PizzaBar[playerid], 100.0);
	ShowProgressBarForPlayer(playerid, PizzaBar[playerid]);
	SetPlayerCheckpoint(playerid, HouseInfo[rand][hExteriorX], HouseInfo[rand][hExteriorY], HouseInfo[rand][hExteriorZ], 5);
	return 1;
} */

CMD:isyardim(playerid, params[]) {
    return ShowPlayerDialogEx(playerid, JOBHELPMENU, DIALOG_STYLE_LIST, "Hangi i iin yardma ihtiyacnz var?","Dedektif\nAvukat\nHayat Kadn\nUyuturucu Satcs\nTamirci\nBodyguard\nSilah Satcs\nBoksr\nUyuturucu Kaaks\nZanaatkar\nBarmen\nKamyon ofr\nPizzac\nTr ofr\nimento ofr", "Se", "Iptal");
}

CheckPointCheck(iTargetID) {
	if(GetPVarType(iTargetID, "Packages") || FindingJob[iTargetID] != 0 || FindingDealership[iTargetID] != 0 || TaxiAccepted[iTargetID] != 999 || EMSAccepted[iTargetID] != INVALID_PLAYER_ID || BusAccepted[iTargetID] != 999 ||  MedicAccepted[iTargetID] != 999 || MechanicCallTime[iTargetID] >= 1 || gPlayerCheckpointStatus[iTargetID] != CHECKPOINT_NONE || CP[iTargetID] != 0 || GetPVarType(iTargetID, "CrateDeliver") || GetPVarType(iTargetID, "TrackCar")) return 1;
	else return 0;
}

CMD:kabulet(playerid, params[])
{
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak iba yaparken bu komutu kullanamazsnz.");
		return 1;
	}
	new string[128];
	new sendername[MAX_PLAYER_NAME];
	new giveplayer[MAX_PLAYER_NAME];
	//new giveplayerid;
    if(IsPlayerConnected(playerid)) {
        if(isnull(params)) {
            SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kabulet [isim]");
            SendClientMessage(playerid, COLOR_GREY, "Uygun Ismler: Sex, Materyal, Crack, Pot, Silah, Zanaat, Tamir, Zirh, Meslek, Bosanmak, Ustunuara, Evlilik");
            SendClientMessage(playerid, COLOR_GREY, "Uygun Ismler: Olusum, Aile, Taksi, Otobus, Dovus, Doktor, Tamirci, Ceza, Arac, Olum, Canliyayin");
            return 1;
        }
	    if(strcmp(params,"meslek",true) == 0) {

	        if(GettingJob[playerid] > 0) {
	            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* i baaryla aldnz, yeni komutlarnz grmek iin /yardim yazn.");
	            if(GettingJob[playerid] == 14) {
	                SendClientMessage(playerid, COLOR_WHITE, "IPUCU: Blueberry'de uyuturucu kutular bulabilirsiniz. (Checkpoint'e git)");
	                if(CheckPointCheck(playerid)) {
    	            	PlayerInfo[playerid][pJob] = GettingJob[playerid];
	            		GettingJob[playerid] = 0;
	                    SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
	                    return 1;
	                }
	                SetPlayerCheckpoint(playerid, 51.9720,-292.6349,1.7031, 3);
	            }
	            if(GettingJob[playerid] == 21) {
	            	SendClientMessage(playerid, COLOR_WHITE, "Pizzac niformas aldnz!");
	            	SetPVarInt(playerid, "NPS", GetPlayerSkin(playerid)); // non pizza skin
					SetPlayerSkin(playerid, 155);
	            }
	            PlayerInfo[playerid][pJob] = GettingJob[playerid];
	            GettingJob[playerid] = 0;
	            return 1;
	        }
         	if(GettingJob2[playerid] > 0) {
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* i baaryla aldnz, yeni komutlarnz grmek iin /yardim yazn.");
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Bu ii ikinci i olarak aldnz.");
	            if(GettingJob[playerid] == 14) {
	                SendClientMessage(playerid, COLOR_WHITE, "IPUCU: Blueberry'de uyuturucu kutular bulabilirsiniz. (Checkpoint'e git)");
	                if(CheckPointCheck(playerid)) {
    	            	PlayerInfo[playerid][pJob] = GettingJob[playerid];
	            		GettingJob[playerid] = 0;
	                    SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
	                    return 1;
	                }
	                SetPlayerCheckpoint(playerid, 51.9720,-292.6349,1.7031, 3);
	            }
	            if(GettingJob[playerid] == 21) {
	            	SendClientMessage(playerid, COLOR_WHITE, "Pizzac niformas aldnz!");
	            	SetPVarInt(playerid, "NPS", GetPlayerSkin(playerid)); // non pizza skin
					PlayerInfo[playerid][pSkin] = 155;
					SetPlayerSkin(playerid, 155);
	            }
                PlayerInfo[playerid][pJob2] = GettingJob2[playerid];
                GettingJob2[playerid] = 0;
                return 1;
            }
	        else {
	            SendClientMessage(playerid, COLOR_GREY, "   Bir iyerinde deilsiniz!");
	            return 1;
	        }
	    }
		if(strcmp(params,"canliyayin",true) == 0) {
            if(LiveOffer[playerid] != INVALID_PLAYER_ID) {
                if(IsPlayerConnected(LiveOffer[playerid])) {
                    if (ProxDetectorS(5.0, playerid, LiveOffer[playerid])) {
                        SendClientMessageEx(playerid, COLOR_LIGHTBLUE, "* Canl Sohbet bitene kadar kprdayamazsnz.");
                        SendClientMessageEx(LiveOffer[playerid], COLOR_LIGHTBLUE, "* Canl Sohbet bitene kadar kprdayamazsnz ( /yayinaal komutunu kullann).");
                        TogglePlayerControllable(playerid, 0);
                        TogglePlayerControllable(LiveOffer[playerid], 0);
                        TalkingLive[playerid] = LiveOffer[playerid];
                        TalkingLive[LiveOffer[playerid]] = playerid;
                        IsTheReporter[LiveOffer[playerid]] = 1;
                        LiveOffer[playerid] = INVALID_PLAYER_ID;
                        return 1;
                    } else return SendClientMessageEx(playerid, COLOR_GREY, "   Haber muhabirinden ok uzaktasnz!");
                } else {
					SendClientMessageEx(playerid, COLOR_GREY, "   Haber muhabiri yayn d!");
					LiveOffer[playerid] = INVALID_PLAYER_ID;
				}
            } else return SendClientMessageEx(playerid, COLOR_GREY, "   Kimse size Canl Sohbet teklif etmedi!");
        }
	    if(strcmp(params,"ustunuara",true) == 0) {
	        if(GetPVarType(playerid, "FriskREQ") == 0)
	            return SendClientMessage(playerid, COLOR_GREY, "zerinizin aranmas iin talebiniz yok.");

			format(string, sizeof(string), "* %s zerinizi arama talebinizi kabul etti.", GetPlayerNameEx(playerid));
			SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_LIGHTBLUE, string);

			SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "*** %s'n eyalar...  ***", GetPlayerNameEx(playerid));
			SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_WHITE, string);

			if(PlayerInfo[playerid][pWSeeds] == 1)
				SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREY, "Mariana Tohumlar");

			if(PlayerInfo[playerid][pPhoneBook] > 0)
				SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREY, "Telefon Rehberi.");

			if(PlayerInfo[playerid][pCDPlayer] > 0)
				SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREY, "CD alar.");

			if(PlayerInfo[playerid][pCrack] > 0) {
				format(string, sizeof(string), "%d gram crack.", PlayerInfo[playerid][pCrack]);
				SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREY, string);
			}
			if(PlayerInfo[playerid][pPot] > 0) {
				format(string, sizeof(string), "%d gram pot.", PlayerInfo[playerid][pPot]);
				SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREY, string);
			}
			if(PlayerInfo[playerid][pMats] > 0) {
				format(string, sizeof(string), "%d materyal.", PlayerInfo[playerid][pMats]);
				SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREY, string);
			}
			

			new weaponname[50];
			format(string, sizeof(string), "*** %s'n silahlar...  ***", GetPlayerNameEx(playerid));
			SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_WHITE, string);

			for(new i = 0; i < 12; i++) {
				if(PlayerInfo[playerid][pGuns][i] > 0) {
					GetWeaponName(PlayerInfo[playerid][pGuns][i], weaponname, sizeof(weaponname));
					format(string, sizeof(string), "Silah: %s.", weaponname);
					SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GRAD1, string);
				}
			}

			SendClientMessage(GetPVarInt(playerid, "FriskREQ"), COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "* %s kiisi %s adl kiinin zerini arad.", GetPlayerNameEx(GetPVarInt(playerid, "FriskREQ")),GetPlayerNameEx(playerid));
			ProxDetector(30.0, GetPVarInt(playerid, "FriskREQ"), string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			DeletePVar(playerid, "FriskREQ");
		}
     	if(strcmp(params,"olum",true) == 0) {
            if(GetPVarInt(playerid, "Injured") == 1) {
                SendClientMessage(playerid, COLOR_WHITE, "Umudunuzu kaybedip baygn dtnz, acilen hasteneye gnderildiniz.");
                KillEMSQueue(playerid);
                ResetPlayerWeaponsEx(playerid);
                SpawnPlayer(playerid);
            }
            else {  SendClientMessage(playerid, COLOR_GREY, "   Yaral deilsiniz, bunu u an yapamazsnz!"); }
        }
        if(strcmp(params,"icecek",true) == 0) {
            if((DrinkOffer[playerid] != INVALID_PLAYER_ID) && (IsPlayerConnected(DrinkOffer[playerid]))) {
                if(ProxDetectorS(8.0, playerid, DrinkOffer[playerid])) {
                    ShowPlayerDialogEx(playerid, DRINKLISTDIALOG, DIALOG_STYLE_LIST, "Uygun ecekler", "Bira ($60)\nVotka ($100)\nViski ($100)\nSu ($20)\nSoda($20)", "Satn Al", "Iptal");
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "Barmenden ok uzaktasnz.");
                    DrinkOffer[playerid] = INVALID_PLAYER_ID;
                    return 1;
                }
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, " Hikimse size iki teklif etmedi.");
                return 1;
            }
        }
        if(strcmp(params,"arac",true) == 0) {
            if(VehicleOffer[playerid] < 999) {
                if(IsPlayerConnected(VehicleOffer[playerid])) {
                    if(GetPlayerCash(playerid) > VehiclePrice[playerid]) {
                        if(IsPlayerInVehicle(VehicleOffer[playerid], PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId])) {
                            if(!ProxDetectorS(8.0, VehicleOffer[playerid], playerid)) return SendClientMessage(playerid, COLOR_GREY, "Ara satcsnn yannda deilsiniz");
                            new playervehicleid = GetPlayerFreeVehicleId(playerid),
								totalvehicles = GetPlayerVehicleCountEx(playerid);

							// (TEMPORARY - ZHAO NOTE) TempDonator not added yet
			 				if(PlayerInfo[playerid][pDonator] == 0 && totalvehicles >= 5) //PlayerInfo[playerid][pTempDonator] > 0) && carsamount >= 5)
							{
                				SendClientMessage(playerid, COLOR_GREY, "HATA: Daha fazla araba alamazsnz, VIP olmayan kiiler sadece 5 araba alabilirler.");
                				return 1;
							}
            				if(PlayerInfo[playerid][pDonator] == 1 && totalvehicles >= 7)
 					 		{
   					 			SendClientMessage(playerid, COLOR_GREY, "HATA: Daha fazla araba alamazsnz, Yakut-VIP olan kiiler 7 araba alabilirler");
                				return 1;
            				}
            				if(PlayerInfo[playerid][pDonator] == 2 && totalvehicles >= 8)
            				{
          					 	SendClientMessage(playerid, COLOR_GREY, "HATA: Daha fazla araba alamazsnz, Master-VIP olan kiiler 8 araba alabilirler.");
           					 	return 1;
           					}
            				if(PlayerInfo[playerid][pDonator] == 3 && totalvehicles >= 10)
            				{
                				SendClientMessage(playerid, COLOR_GREY, "HATA: Daha fazla araba alamazsnz, Elmas-VIP olan kiiler 10 araba alabilirler.");
                				return 1;
            				}
		    				if(playervehicleid == -1)
		    				{
		        				SendClientMessage(playerid, COLOR_GREY, "HATA: Daha fazla araba alamazsnz.");
                				return 1;
		    				}
   							if(PlayerInfo[playerid][pDonator] == 0 && VehicleSpawned[playerid] > 0)
							{
								SendClientMessage(playerid, COLOR_GREY, "VIP olmayan kiiler sadece 1 ara karabilirler. Baka bir ara karmak iin bir tane ara depolamalsnz.");
								return 1;
							}
							if(PlayerInfo[playerid][pDonator] == 1 && VehicleSpawned[playerid] > 1)
				            {
								SendClientMessage(playerid, COLOR_GREY, "Yakut-VIP olan kiiler 2 ara karabilirler. Baka bir ara karmak iin bir tane ara depolamalsnz.");
								return 1;
							}
							if(PlayerInfo[playerid][pDonator] == 2 && VehicleSpawned[playerid] > 2)
							{
								SendClientMessage(playerid, COLOR_GREY, "Master-VIP olan kiiler 3 ara karabilirler. Baka bir ara karmak iin bir tane ara depolamalsnz.");
								return 1;
							}
							if(PlayerInfo[playerid][pDonator] == 3 && VehicleSpawned[playerid] > 3)
	 						{
								SendClientMessage(playerid, COLOR_GREY, "Elmas-VIP olan kiiler 4 ara karabilirler. Baka bir ara karmak iin bir tane ara depolamalsnz.");
								return 1;
			 				}
							if(PlayerInfo[playerid][pDonator] < 0 || PlayerInfo[playerid][pDonator] > 3)
							{
								SendClientMessage(playerid, COLOR_GREY, "Geersiz bir VIP level'iniz var.");
								return 1;
							}

                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(VehicleOffer[playerid], ipex, sizeof(ipex));
                            format(string, sizeof(string), "[CAR] %s (IP: %s) kiisi $%d deyerek %s kiisinden %s (IP: %s) aracn satn ald", GetPlayerNameEx(playerid), ip, VehiclePrice[playerid], GetPlayerNameEx(VehicleOffer[playerid]), GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), ipex);
                            Log("logs/pay.log", string);
                            GetPlayerName(VehicleOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* %s aracn $%d fiyata satn aldnz, aldnz kii %s. ( /aracyardim komutunu kullanarak yardm alabilirsiniz)", GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), VehiclePrice[playerid],giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s aracnz %s adl kiiye $%d fiyata sattnz.",GetVehicleName(PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId]), sendername,VehiclePrice[playerid]);
                            SendClientMessage(VehicleOffer[playerid], COLOR_LIGHTBLUE, string);
                            GivePlayerCash(VehicleOffer[playerid], VehiclePrice[playerid]);
                            GivePlayerCash(playerid, -VehiclePrice[playerid]);
                            RemovePlayerFromVehicle(VehicleOffer[playerid]);
                            new Float:slx, Float:sly, Float:slz;
                            GetPlayerPos(VehicleOffer[playerid], slx, sly, slz);
                            SetPlayerPos(VehicleOffer[playerid], slx, sly, slz+2);
                            PlayerVehicleInfo[playerid][playervehicleid][pvId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId];
                            PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle];
                            PlayerVehicleInfo[playerid][playervehicleid][pvLock] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock];
                            PlayerVehicleInfo[playerid][playervehicleid][pvLocked] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob];
                            PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1];
                            PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2];
                            PlayerVehicleInfo[playerid][playervehicleid][pvAllowedplayerid] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedplayerid];
                            PlayerVehicleInfo[playerid][playervehicleid][pvPark] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark];
                            PlayerVehicleInfo[playerid][playervehicleid][pvRealID] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvRealID];
                            PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;

                            new
                                szQuery[64];

							format(szQuery, sizeof(szQuery), "UPDATE playervehicles SET Owner = %d WHERE ID = %d", PlayerInfo[playerid][pID], GetPVarInt(playerid, "carsaleid"));
							mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);

                            VehicleSpawned[playerid]++;

                            for(new m = 0; m < MAX_MODS; m++) {
                                PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m];
                            }

                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvRealID] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvId] = INVALID_PLAYER_VEHICLE_ID;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvModelId] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosX] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosY] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosZ] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPosAngle] = 0.0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLock] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvLocked] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPaintJob] = -1;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor1] = 0;
							PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvImpounded] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvColor2] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvAllowedplayerid] = INVALID_PLAYER_ID;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvPark] = 0;
                            PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvSpawned] = 0;
                            VehicleSpawned[VehicleOffer[playerid]]--;
                            for(new m = 0; m < MAX_MODS; m++) {
                                PlayerVehicleInfo[VehicleOffer[playerid]][VehicleId[playerid]][pvMods][m] = 0;
                            }
                            VehicleOffer[playerid] = 999;
                            VehiclePrice[playerid] = 0;

                            DeletePVar(playerid, "carsaleid");

                            return 1;
                        }
                        else {
                            SendClientMessage(playerid, COLOR_GREY, "   Ara Satcs teklif edilen aracn iinde deil!");
                            return 1;
                        }
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Arabay almak iin yeterli paranz yok!");
                        return 1;
                    }
                }
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size ara satn almanz teklif etmedi!");
                return 1;
            }
        }
        if(strcmp(params,"ev",true) == 0) {
            if(HouseOffer[playerid] < 999) {
                if(IsPlayerConnected(HouseOffer[playerid])) {
                    if(PlayerInfo[HouseOffer[playerid]][pHouse] == INVALID_HOUSE_ID)
                        return SendClientMessage(playerid, COLOR_WHITE, "Bu eve sahip deiller.");

                    if(GetPlayerCash(playerid) > HousePrice[playerid]) {
                        new house;
                        if(House[playerid] == 1) house = PlayerInfo[HouseOffer[playerid]][pHouse];
                        else if(House[playerid] == 2) house = PlayerInfo[HouseOffer[playerid]][pHouse2];
                        else return SendClientMessage(playerid, COLOR_RED, "Hata: Ev belirlenmemi");
                        ClearHouse(house);
                        HouseInfo[house][hLock] = 1;
                        format(HouseInfo[house][hOwner], 128, "Nobody");
                        sendername = GetPlayerNameEx(HouseOffer[playerid]);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(string, sizeof(string), "~w~Tebrikler~n~ Evinizi ~n~~g~$%d fiyata sattnz", HousePrice[playerid]);
                        GameTextForPlayer(HouseOffer[playerid], string, 4000, 3);
                        if(House[playerid] == 1) PlayerInfo[HouseOffer[playerid]][pHouse] = INVALID_HOUSE_ID;
                        else PlayerInfo[HouseOffer[playerid]][pHouse2] = INVALID_HOUSE_ID;
                        SaveHouses();
                        OnPlayerStatsUpdate(HouseOffer[playerid]);
                        DestroyPickup(HouseInfo[house][hPickupID]);
                        HouseInfo[house][hPickupID] = CreatePickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ], -1);
                        GivePlayerCash(HouseOffer[playerid],HousePrice[playerid]);

                        PlayerInfo[playerid][pHouse] = house;
                        HouseInfo[house][hOwned] = 1;
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        strmid(HouseInfo[house][hOwner], sendername, 0, strlen(sendername), 255);
                        GivePlayerCash(playerid,-HousePrice[playerid]);
                        SendClientMessage(playerid, COLOR_WHITE, "Tebrikler, bir yer satn aldnz!");
                        SendClientMessage(playerid, COLOR_WHITE, " /yardim komutunu kullanarak yardm alabilirsiniz!");
                        SaveHouses();
                        OnPlayerStatsUpdate(playerid);
                        DestroyPickup(HouseInfo[house][hPickupID]);
                        HouseInfo[house][hPickupID] = CreatePickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ], -1);
                        format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[house][hOwner],HouseInfo[house][hLevel],house);
                        UpdateDynamic3DTextLabelText(HouseInfo[house][hTextID], COLOR_HOUSEGREEN, string);


                        new ip[32], ipex[32];
                        GetPlayerIp(HouseOffer[playerid],ip,sizeof(ip));
                        GetPlayerIp(playerid,ipex,sizeof(ipex));
                        format(string,sizeof(string),"%s (IP: %s)kiisi (ID %d) evini %s (IP: %s) kiisine $%d fiyata satt.",GetPlayerNameEx(HouseOffer[playerid]),ip,house,GetPlayerNameEx(playerid),ipex,HousePrice[playerid]);
                        Log("logs/house.log", string);

                        HouseOffer[playerid] = 999;
                        HousePrice[playerid] = 0;
                        House[playerid] = 0;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "Evi almak iin yeterli paranz yok.");
                        HouseOffer[playerid] = 999;
                        HousePrice[playerid] = 0;
                        House[playerid] = 0;
                        return 1;
                    }
                }
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "Kimse size ev satn almanz teklif etmedi.");
                return 1;
            }
        }
        else if(strcmp(params,"davet",true) == 0)
		{
            if(hInviteOffer[playerid] < 999)
			{
                if(IsPlayerConnected(hInviteOffer[playerid]))
				{
    				if(CheckPointCheck(playerid)) {
                        SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
                        return 1;
                    }
					hInviteHouse[playerid] = PlayerInfo[hInviteOffer[playerid]][pHouse];
                    format(string, sizeof(string), "*  %s kiisinin ev davetini kabul ettiniz, checkpoint noktas ev iin ayarland.", GetPlayerNameEx(hInviteOffer[playerid]));
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* %s kiisi ev davetinizi kabul etti.", GetPlayerNameEx(playerid));
                    SendClientMessage(hInviteOffer[playerid], COLOR_LIGHTBLUE, string);
					DisablePlayerCheckpoint(playerid);
                    SetPlayerCheckpoint(playerid,HouseInfo[hInviteHouse[playerid]][hExteriorX], HouseInfo[hInviteHouse[playerid]][hExteriorY], HouseInfo[hInviteHouse[playerid]][hExteriorZ], 4.0);
                    gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
					//hInviteSlot[playerid] = 0;
                    hInviteOffer[playerid] = 999;
                    hInviteHouse[playerid] = INVALID_HOUSE_ID;
                    return 1;
                }
                else
				{
					//hInviteSlot[playerid] = 0;
                    hInviteOffer[playerid] = 999;
                    hInviteHouse[playerid] = INVALID_HOUSE_ID;
                    SendClientMessage(playerid, COLOR_GREY, "Ev daveti gnderen kiinin balants koptu.");
                }
            }
            else
			{
                SendClientMessage(playerid, COLOR_GREY, "Kimse size ev daveti gndermedi.");
                return 1;
            }
            return 1;
        }
        else if(strcmp(params, "tokalas",true) == 0)
		{
			if(ShakeHandStyle[playerid] != 0 && ShakeHandRequest[playerid] != 999)
			{
				if (ProxDetectorS(1.3, playerid, ShakeHandRequest[playerid]) && (GetPlayerVirtualWorld(ShakeHandRequest[playerid]) == GetPlayerVirtualWorld(playerid)))
				{
					PlayerFacePlayer(playerid, ShakeHandRequest[playerid]);
					if(ShakeHandStyle[playerid] == 1)
					{
						ApplyAnimation(playerid,"GANGS","prtial_hndshk_biz_01", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","prtial_hndshk_biz_01", 4.0, 0, 0, 0, 0, 0);
					}
					if(ShakeHandStyle[playerid] == 2)
					{
						ApplyAnimation(playerid,"GANGS","prtial_hndshk_01", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","prtial_hndshk_01", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 3) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkaa", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkaa", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 4) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkba", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkba", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 5) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkca", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkca", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 6) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkcb", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkcb", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 7) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkda", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkda", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 8) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkea", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkea", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 9) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkfa", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkfa", 4.0, 0, 0, 0, 0, 0);
					}
					if((ShakeHandStyle[playerid] == 10) && (GetPlayerState(playerid) ==PLAYER_STATE_ONFOOT) && (GetPlayerState(ShakeHandRequest[playerid]) ==PLAYER_STATE_ONFOOT))
					{
						ApplyAnimation(playerid,"GANGS","hndshkfa_swt", 4.0, 0, 0, 0, 0, 0);
						ApplyAnimation(ShakeHandRequest[playerid],"GANGS","hndshkfa_swt", 4.0, 0, 0, 0, 0, 0);
					}
					format(string, sizeof(string), "* %s kiisi %s ile el skt.", GetPlayerNameEx(ShakeHandRequest[playerid]), GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ShakeHandRequest[playerid] = 999;
					ShakeHandStyle[playerid] = 0;
					return 1;
				}
				else
				{
					format(string, sizeof(string), "%s kiisi %s kiisinin eline uzand fakat kard.", GetPlayerNameEx(playerid), GetPlayerNameEx(ShakeHandRequest[playerid]));
					ProxDetector(10.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
      		}
            else SendClientMessage(playerid, COLOR_WHITE, "Hi el skma talebiniz yok.");
            return 1;
        }
        else if(strcmp(params,"taksi",true) == 0) {
            if(TransportDuty[playerid] != 1) {
                SendClientMessage(playerid, COLOR_GREY, "   Los Santos Taksi oluumunda deilsin!");
                return 1;
            }
            if(TaxiCallTime[playerid] > 0) {
                SendClientMessage(playerid, COLOR_GREY, "   Zaten bir taksi ars kabul ettiniz!");
                return 1;
            }
			if(CheckPointCheck(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
				return 1;
			}
            if(TaxiCall < 999) {
                if(IsPlayerConnected(TaxiCall)) {
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(TaxiCall, giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* %s kiisinden gelen taksi arsn kabul ettiniz, ulaana kadar iareti greceksiniz.",giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    new zone[MAX_ZONE_NAME];
					GetPlayer3DZone(TaxiCall, zone, sizeof(zone));
					format(string, sizeof(string), "* %s kiisi %s blgesinde olabilir.", GetPlayerNameEx(TaxiCall), zone);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Taksici %s sizin taksi arnz kabul etti; bulunduunuz noktada ltfen bekleyiniz.",sendername);
                    SendClientMessage(TaxiCall, COLOR_LIGHTBLUE, string);
                    GameTextForPlayer(playerid, "~w~Taksi ars~n~~r~Krmz iarete git.", 5000, 1);
                    TaxiCallTime[playerid] = 1;
                    TaxiAccepted[playerid] = TaxiCall;
                    TaxiCall = 999;
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse henz taksi armad!");
                return 1;
            }
        }
        else if(strcmp(params,"otobus",true) == 0) {
            if(TransportDuty[playerid] != 2) {
                SendClientMessage(playerid, COLOR_GREY, "   Otobs ofr deilsiniz!");
                return 1;
            }
            if(BusCallTime[playerid] > 0) {
                SendClientMessage(playerid, COLOR_GREY, "   Zaten bir otobs ars kabul ettiniz!");
                return 1;
            }
			if(CheckPointCheck(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
				return 1;
			}
            if(BusCall < 999) {
                if(IsPlayerConnected(BusCall)) {
                    if(CheckPointCheck(playerid)) {
                        SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
                        return 1;
                    }
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(BusCall, giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* %s kiisinden gelen Otobs arsn kabul ettiniz, ulaana kadar iareti greceksiniz.",giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    new zone[MAX_ZONE_NAME];
					GetPlayer3DZone(BusCall, zone, sizeof(zone));
					format(string, sizeof(string), "* %s kiisi %s blgesinde olabilir.", GetPlayerNameEx(BusCall), zone);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    format(string, sizeof(string), "* Otobs ofr %s otobs arnz kabul etti; bulunduunuz noktada bekleyiniz.",sendername);
                    SendClientMessage(BusCall, COLOR_LIGHTBLUE, string);
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(BusCall, X, Y, Z);
                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                    GameTextForPlayer(playerid, "~w~Otobs ars~n~~r~Krmz iarete git", 5000, 1);
                    BusCallTime[playerid] = 1;
                    BusAccepted[playerid] = BusCall;
                    BusCall = 999;
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse henz otobs armad!");
                return 1;
            }
        }
        else if(strcmp(params,"doktor",true) == 0) {
            if(PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3) {
                if(MedicCallTime[playerid] >= 0) {
                    SendClientMessage(playerid, COLOR_GREY, "   Zaten bir tbbi yardm ars kabul ettiniz!");
                    return 1;
                }
                if(CheckPointCheck(playerid)) {
                    SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
                    return 1;
                }
                if(MedicCall < 999) {
                    if(IsPlayerConnected(MedicCall)) {
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        GetPlayerName(MedicCall, giveplayer, sizeof(giveplayer));
                        format(string, sizeof(string), "* %s kiisinden gelen tbbi yardm arsn kabul ettiniz",giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* 45 saniye sonra krmz iaret kaybolacak.");
                        format(string, sizeof(string), "* Doktor %s tbbi yardm arnz kabul etti, bulunduunuz noktada bekleyiniz.",sendername);
                        SendClientMessage(MedicCall, COLOR_LIGHTBLUE, string);
                        new Float:X,Float:Y,Float:Z;
                        GetPlayerPos(MedicCall, X, Y, Z);
                        SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                        new zone[MAX_ZONE_NAME];
                        GetPlayer3DZone(MedicCall, zone, sizeof(zone));
                        format(string, sizeof(string), "IPUCU: %s kiisi %s blgesindedir", GetPlayerNameEx(MedicCall), zone);
                        SendClientMessage(playerid, COLOR_WHITE, string);
                        MedicCallTime[playerid] = 1;
                        MedicAccepted[playerid] = MedicCall;
                        MedicCall = 999;
                        return 1;
                    }
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "   Kimse tbbi yardm ars yapmad!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Doktor deilsiniz!");
                return 1;
            }
        }
        else if(strcmp(params,"tamirci",true) == 0) {
            if(PlayerInfo[playerid][pJob] != 7 && PlayerInfo[playerid][pJob2] != 7) {
                SendClientMessage(playerid, COLOR_GREY, "   Tamrici deilsiniz!");
                return 1;
            }
            if(MechanicCallTime[playerid] > 0) {
                SendClientMessage(playerid, COLOR_GREY, "   Zaten bir tamir ars kabul ettiniz!");
                return 1;
            }
            if(CheckPointCheck(playerid)) {
                SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
                return 1;
            }
            if(MechanicCall < 999) {
                if(IsPlayerConnected(MechanicCall)) {
                    if(playerid == MechanicCall) return 1;
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    GetPlayerName(MechanicCall, giveplayer, sizeof(giveplayer));
                    format(string, sizeof(string), "* %s kiisinden gelen tamir arsn kabul ettiniz, oraya gitmek iin 30 saniyeniz var.",giveplayer);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* 30 saniye sonra krmz iaret kaybolacak.");
                    format(string, sizeof(string), "* Tamirci %s tamir arnz kabul etti, bulunduunuz noktada bekleyiniz.",sendername);
                    SendClientMessage(MechanicCall, COLOR_LIGHTBLUE, string);
                    new Float:X,Float:Y,Float:Z;
                    GetPlayerPos(MechanicCall, X, Y, Z);
                    SetPlayerCheckpoint(playerid, X, Y, Z, 5);
                    GameTextForPlayer(playerid, "~w~Tamir ars~n~~r~Krmz iarete git", 5000, 1);
                    MechanicCallTime[playerid] = 1;
                    MechanicCall = 999;
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse henz tamirci armad!");
                return 1;
            }
        }
       	else if(strcmp(params,"bosanmak",true) == 0) {
            if(DivorceOffer[playerid] < 999) {
                if(IsPlayerConnected(DivorceOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, DivorceOffer[playerid])) {
                        GetPlayerName(DivorceOffer[playerid], giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "* %s kiisinden boanmak iin evraklar imzaladnz, tekrardan bekarsnz.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s kiisi boanma evraklarn imzalad, tekrardan bekarsnz.", sendername);
                        SendClientMessage(DivorceOffer[playerid], COLOR_LIGHTBLUE, string);
                        ClearMarriage(playerid);
                        ClearMarriage(DivorceOffer[playerid]);
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Size boanma evrak gnderen kii yannzda deil!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "Kimse size boanma evrak gndermedi.");
                return 1;
            }
        }
        else if(strcmp(params,"sahitlik",true) == 0) {
            if(MarryWitnessOffer[playerid] < 999) {
                if(IsPlayerConnected(MarryWitnessOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, MarryWitnessOffer[playerid])) {
                        GetPlayerName(MarryWitnessOffer[playerid], giveplayer, sizeof(giveplayer));
                        GetPlayerName(playerid, sendername, sizeof(sendername));
                        format(string, sizeof(string), "*  %s kiisinden gelen nikah ahidi talebini kabul ettiniz.", giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s kiisi, nikah ahidiniz olmay kabul etti.", sendername);
                        SendClientMessage(MarryWitnessOffer[playerid], COLOR_LIGHTBLUE, string);
                        MarryWitness[MarryWitnessOffer[playerid]] = playerid;
                        MarryWitnessOffer[playerid] = 999;
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Nikah ahidi olacanz kii yannzda deil!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse sizden nikah ahidi olmanz istemedi!");
                return 1;
            }
        }
        else if(strcmp(params,"evlilik",true) == 0) {
            if(ProposeOffer[playerid] < 999) {
                if(IsPlayerConnected(ProposeOffer[playerid])) {
                    if(ProxDetectorS(10.0, playerid, ProposeOffer[playerid])) {
                        if(MarryWitness[ProposeOffer[playerid]] == 999) {
                            SendClientMessage(playerid, COLOR_GREY, "   Teklif eden kiinin nikah ahidi yok!");
                            return 1;
                        }
                        if(IsPlayerConnected(MarryWitness[ProposeOffer[playerid]])) {
                            if(ProxDetectorS(12.0, ProposeOffer[playerid], MarryWitness[ProposeOffer[playerid]])) {
                                if(IsPlayerInRangeOfPoint(playerid, 10.0, 1963.9612, -369.1851, 1093.7289)) {
                                    GetPlayerName(ProposeOffer[playerid], giveplayer, sizeof(giveplayer));
                                    GetPlayerName(playerid, sendername, sizeof(sendername));
                                    format(string, sizeof(string), "*  %s kiisinin kocanz olma isteini kabul ettiniz.", giveplayer);
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "* %s karnz olmay kabul etti.", sendername);
                                    SendClientMessage(ProposeOffer[playerid], COLOR_LIGHTBLUE, string);
                                    format(string, sizeof(string), "Rahip: %s, %s kiisini kocanz olarak kabul ediyor musunuz? ( 'evet' yazn, baka yazacanz her ey evlilii reddedecektir.)", sendername, giveplayer);
                                    SendClientMessage(playerid, COLOR_WHITE, string);
                                    MarriageCeremoney[playerid] = 1;
                                    ProposedTo[ProposeOffer[playerid]] = playerid;
                                    GotProposedBy[playerid] = ProposeOffer[playerid];
                                    MarryWitness[ProposeOffer[playerid]] = 999;
                                    ProposeOffer[playerid] = 999;
                                    return 1;
                                }
                                else {
                                    SendClientMessage(playerid, COLOR_GREY, "   Kilisede deilsiniz!");
                                    return 1;
                                }
                            }
                            else {
                                SendClientMessage(playerid, COLOR_GREY, "   Nikah ahidi, teklif eden kiinin yannda deil!");
                                return 1;
                            }
                        }
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Evlilik teklifi eden kii yannzda deil!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size evlilik teklif etmedi!");
                return 1;
            }
        }
        else if(strcmp(params,"kontrakt",true) == 0) {
            if(HitOffer[playerid] < 999) {
                if(HitToGet[playerid] < 999) {
                    if(IsPlayerConnected(HitToGet[playerid])) {
                        format(string, sizeof(string), "* %s kiisi %s kiisini ldrmek iin kontrat kabul etti.", GetPlayerNameEx(playerid),GetPlayerNameEx(HitToGet[playerid]));
                        SendClientMessage(HitOffer[playerid], COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s kiisini ldrmek iin kontrat kabul ettiniz, i bitiminde $%d alacaksnz.", GetPlayerNameEx(HitToGet[playerid]), PlayerInfo[HitToGet[playerid]][pHeadValue] / 4 * 2);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "%s kiisi, %s kiisini ldrmek iin kontratta grevlendirildi, cret $%d.", GetPlayerNameEx(playerid), GetPlayerNameEx(HitToGet[playerid]),  PlayerInfo[HitToGet[playerid]][pHeadValue] / 4 * 2);
                        SendFamilyMessage(4, COLOR_YELLOW, string);
                        GoChase[playerid] = HitToGet[playerid];
                        GetChased[HitToGet[playerid]] = playerid;
                        GotHit[HitToGet[playerid]] = 1;
                        HitToGet[playerid] = 999;
                        HitOffer[playerid] = 999;
                        return 1;
                    }
                    else {
                        HitToGet[playerid] = 999;
                        HitOffer[playerid] = 999;
                        return 1;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size kontrat nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"ceza",true) == 0) {
            if(TicketOffer[playerid] < 999) {
                if(IsPlayerConnected(TicketOffer[playerid])) {
                    if(ProxDetectorS(5.0, playerid, TicketOffer[playerid])) {
                        if(GetPlayerCash(playerid) >= TicketMoney[playerid]) {
                            format(string, sizeof(string), "* $%d deerinde cezay %s kiisine dedin.", TicketMoney[playerid], GetPlayerNameEx(TicketOffer[playerid]));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s adl kii $%d deerindeki cezay dedi.", GetPlayerNameEx(playerid), TicketMoney[playerid]);
                            SendClientMessage(TicketOffer[playerid], COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s adl kii ona kesilen cezay dedi.", GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            GivePlayerCash(playerid, - TicketMoney[playerid]);
                            TicketOffer[playerid] = 999;
                            TicketMoney[playerid] = 0;
                            if(GetPlayerCash(playerid) < 1) GivePlayerCash(playerid, 0);
                            return 1;
                        }
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Memur yannzda deil!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size bilet teklif etmedi!");
                return 1;
            }
        }
        else if(strcmp(params,"tamir",true) == 0) {
            if(RepairOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > RepairPrice[playerid]) {
                    if(IsPlayerInAnyVehicle(playerid)) {
                        if(IsPlayerConnected(RepairOffer[playerid])) {
                            GetPlayerName(RepairOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            RepairCar[playerid] = GetPlayerVehicleID(playerid);
                            RepairVehicle(RepairCar[playerid]);
                            PlayerInfo[RepairOffer[playerid]][pTire]--;

                            GivePlayerCash(RepairOffer[playerid], RepairPrice[playerid]);
                            GivePlayerCash(playerid, -RepairPrice[playerid]);
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(RepairOffer[playerid], ipex, sizeof(ipex));
                            format(string, sizeof(string), "* %s kiisi %s kiisinin aracn tamir etti.", giveplayer, GetPlayerNameEx(playerid));
                            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                            format(string, sizeof(string), "*Aracnz %d TL karlnda tamir edildi, Tamirci: %s.",RepairPrice[playerid],giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

                            RepairWarn[playerid][RepairOffer[playerid]] += RepairPrice[playerid];
                            if(RepairWarn[playerid][RepairOffer[playerid]] >= 2500 && (PlayerInfo[RepairOffer[playerid]][pLevel] <= 3 || PlayerInfo[RepairOffer[playerid]][pLevel] <= 3)) {
                                format(string, sizeof(string), "%s (IP:%s) kiisi, %s (IP:%s) kiisinin aracn %d TL fiyata tamir etti.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(RepairOffer[playerid]), ipex, RepairWarn[playerid][RepairOffer[playerid]]);
                                ABroadCast(COLOR_YELLOW, string, 1);
                            }

                            format(string, sizeof(string), "* %s kiisinin aracn tamir ettiniz, %d TL hesabnza eklendi!",sendername,RepairPrice[playerid]);
                            SendClientMessage(RepairOffer[playerid], COLOR_LIGHTBLUE, string);

                            RepairOffer[playerid] = 999;
                            RepairPrice[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    return 1;
                }
                else {
                    SendClientMessage(playerid, COLOR_WHITE, "Tamiri deyecek paranz yok!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_WHITE, "Kimse size arabanzn tamirini nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"zanaat",true) == 0) {
            if(CraftOffer[playerid] < 999) {
                if(IsPlayerConnected(CraftOffer[playerid])) {
                    if(ProxDetectorS(5.0, playerid, CraftOffer[playerid])) {
                        if(GetPVarInt(playerid, "Hospital") == 1 || GetPVarInt(playerid, "Hospital") == 2 || GetPVarInt(playerid, "Hospital") == 3 || GetPVarInt(playerid, "Hospital") == 4 || GetPVarInt(playerid, "Hospital") == 5) {
                            SendClientMessage(playerid, COLOR_GREY, "Hastanedeyken silah karamazsnz.");
                            return 1;
                        }
                        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmadan nce aratan ininiz.");
                        new weaponname[50];
                        format(weaponname, 50, "%s", CraftName[playerid]);
                        switch(CraftId[playerid]) {
                            case 1: {
                                PlayerInfo[playerid][pScrewdriver]++;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "/silahsat");
                            }
                            case 5: {
                                PlayerInfo[playerid][pTire]++;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "/tamtamir");
                            }
                            case 7: {
                                PlayerInfo[playerid][pFirstaid]++;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "/ilkyardim");
                            }
                            case 8: {
                                GivePlayerValidWeapon(playerid, 43, 50);
                            }
                            case 9: {
                                PlayerInfo[playerid][pRccam]++;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "/kamerayerlestir");
                            }
                            case 10: {
                                PlayerInfo[playerid][pReceiver]++;
                                SetPVarInt(playerid, "pReceiverMLeft", 40);
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sonraki drt departman radyo mesajn alacaksnz.");
                            }
                            case 11: {
                                PlayerInfo[playerid][pGPS]++;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "/gps");
                            }
                            case 12: {
                                PlayerInfo[playerid][pSweep]++;
                                PlayerInfo[playerid][pSweepLeft] = 3;
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "/bocektemizle");
                            }
                            case 13: {
                                GivePlayerValidWeapon(playerid, 46, 99999);
                            }
                        }
                        format(string, sizeof(string), "  %s kiisine bir %s verdiniz.", GetPlayerNameEx(playerid),weaponname);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(CraftOffer[playerid], COLOR_GRAD1, string);
                        format(string, sizeof(string), "  %s silahn %s kiisinden aldnz.", weaponname, GetPlayerNameEx(CraftOffer[playerid]));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(string, sizeof(string), "* %s kiisi Materyallerden bir ey yapp, %s kiisine verdi.", GetPlayerNameEx(CraftOffer[playerid]), GetPlayerNameEx(playerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        //new ip[32], ipex[32];
                        //GetPlayerIp(playerid, ip, sizeof(ip));
                        //GetPlayerIp(CraftOffer[playerid], ipex, sizeof(ipex));
                        //format(string, sizeof(string), "[CRAFTSMAN DEAL] %s (IP: %s) has bought a %s from %s (IP: %s)", GetPlayerNameEx(playerid), ip, weaponname, GetPlayerNameEx(CraftOffer[playerid]), ipex);
                        //Log("logs/pay.log", string);
                        PlayerInfo[CraftOffer[playerid]][pMats] -= CraftMats[playerid];
                        //PlayerInfo[CraftOffer[playerid]][pCraftSkill]++;
                        CraftOffer[playerid] = 999;
                        CraftId[playerid] = 0;
                        CraftMats[playerid] = 0;
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GRAD2, "Size silah satan kiinin yannda olmalsnz!");
                        return 1;
                    }
                }
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size silah teklif etmedi!");
                return 1;
            }
        }
        else if(strcmp(params,"dovus",true) == 0) {
            if(BoxOffer[playerid] < 999) {
                if(IsPlayerConnected(BoxOffer[playerid])) {
                    new points;
                    new mypoints;
                    GetPlayerName(BoxOffer[playerid], giveplayer, sizeof(giveplayer));
                    GetPlayerName(playerid, sendername, sizeof(sendername));
                    new level = PlayerInfo[BoxOffer[playerid]][pBoxSkill];
                    if(level >= 0 && level < 50) { points = 40; }
                    else if(level >= 50 && level < 100) { points = 50; }
                    else if(level >= 100 && level < 200) { points = 60; }
                    else if(level >= 200 && level < 400) { points = 70; }
                    else if(level >= 400) { points = 80; }
                    if(PlayerInfo[playerid][pJob] == 12 || PlayerInfo[playerid][pJob2] == 12) {
                        new clevel = PlayerInfo[playerid][pBoxSkill];
                        if(clevel >= 0 && clevel < 50) { mypoints = 40; }
                        else if(clevel >= 50 && clevel < 100) { mypoints = 50; }
                        else if(clevel >= 100 && clevel < 200) { mypoints = 60; }
                        else if(clevel >= 200 && clevel < 400) { mypoints = 70; }
                        else if(clevel >= 400) { mypoints = 80; }
                    }
                    else {
                        mypoints = 30;
                    }
                   	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Bunu u anda yapamazsnz.");
						return 1;
					}
					else if(GetPVarInt(BoxOffer[playerid], "Injured") != 0||PlayerCuffed[BoxOffer[playerid]]!=0||GetPVarInt(BoxOffer[playerid], "Hospital")!=0)
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "Bunu u anda yapamazsnz.");
						return 1;
					}
					if(PlayerInfo[playerid][pJob] != 12 && PlayerInfo[playerid][pJob2] != 12)
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "Boksr deilsiniz!");
					    return 1;
					}
                    if(IsPlayerInRangeOfPoint(playerid,25.0, 765.952270, 4.167977, 1000.719238) && IsPlayerInRangeOfPoint(BoxOffer[playerid],25.0, 765.952270, 4.167977, 1000.719238))
					{
     					format(string, sizeof(string), "*  %s kiisinden gelen boks msabakasn kabul ettiniz, %d canla dveceksiniz.",giveplayer,mypoints);
                    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                    	format(string, sizeof(string), "* %s kiisi boks msabakas isteinizi kabul etti, %d canla dveceksiniz.",sendername,points);
                    	SendClientMessage(BoxOffer[playerid], COLOR_LIGHTBLUE, string);
                        ResetPlayerWeapons(playerid);
                        ResetPlayerWeapons(BoxOffer[playerid]);
                        SetPlayerHealth(playerid, mypoints);
                        SetPlayerHealth(BoxOffer[playerid], points);

                        SetPlayerArmourEx(playerid, 0);
                        SetPlayerArmourEx(BoxOffer[playerid],0);

                        SetPlayerInterior(playerid, 5); SetPlayerInterior(BoxOffer[playerid], 5);
                        SetPlayerPos(playerid, 758.498596, -1.915163, 1001.594238); SetPlayerFacingAngle(playerid, 309.27);
                        SetPlayerPos(BoxOffer[playerid], 763.229248, 2.429135, 1001.594238); SetPlayerFacingAngle(BoxOffer[playerid], 133.83);
                        TogglePlayerControllable(playerid, 0); TogglePlayerControllable(BoxOffer[playerid], 0);
                        GameTextForPlayer(playerid, "~r~Waiting", 3000, 1); GameTextForPlayer(BoxOffer[playerid], "~r~Waiting", 3000, 1);
                        BoxWaitTime[playerid] = 1; BoxWaitTime[BoxOffer[playerid]] = 1;
                        if(BoxDelay < 1) { BoxDelay = 10; }
                        InRing = 1;
                        Boxer1 = BoxOffer[playerid];
                        Boxer2 = playerid;
                        PlayerBoxing[playerid] = 1;
                        PlayerBoxing[BoxOffer[playerid]] = 1;
                        BoxOffer[playerid] = 999;
                        return 1;
                    }
				 	else
				 	{
  						SendClientMessage(playerid, COLOR_WHITE, "Boksrlerden birisi Ganton Gym iinde deil!");
						return 1;
				 	}
                }
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size boks msabakas nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"materyal",true) == 0)
		{
            if(MatsOffer[playerid] < 999)
			{
                if(GetPlayerCash(playerid) >= MatsPrice[playerid])
                {
                	if(IsPlayerConnected(MatsOffer[playerid]))
					{
    					if(GetPVarInt(playerid, "SellMatsTimer") > 0)
						{
							format(string, sizeof(string), "Materyali kabul etmeden nce %d saniye beklemelisiniz.", GetPVarInt(playerid, "SellMatsTimer"));
							SendClientMessage(playerid,COLOR_GREY,string);
							return 1;
						}
						if(PlayerInfo[MatsOffer[playerid]][pMats] < MatsAmount[playerid])
						{
						    SendClientMessage(playerid,COLOR_GREY, "Kii o kadar materyale sahip deil!");
						    return 1;
						}
     					new ip[32], ipex[32];
          				GetPlayerIp(playerid, ip, sizeof(ip));
              			GetPlayerIp(MatsOffer[playerid], ipex, sizeof(ipex));
                 		format(string, sizeof(string), "[MATERIALS (%d)] %s (IP:%s) kiisi $%d paray %s (IP:%s) kiisine dedi", MatsAmount[playerid], GetPlayerNameEx(playerid), ip, MatsPrice[playerid], GetPlayerNameEx(MatsOffer[playerid]), ipex);
                   		Log("logs/pay.log", string);

						MatsWarn[playerid][MatsOffer[playerid]] += MatsPrice[playerid];
      					if(MatsWarn[playerid][MatsOffer[playerid]] >= 2500 && (PlayerInfo[MatsOffer[playerid]][pLevel] <= 3 || PlayerInfo[playerid][pLevel] <= 3))
				  		{
           					format(string, sizeof(string), "%s (IP:%s)kiisi, %s (IP:%s) kiisine $%d paraya materyali satt.", GetPlayerNameEx(MatsOffer[playerid]), ipex, GetPlayerNameEx(playerid), ip, MatsWarn[playerid][MatsOffer[playerid]]);
                  			ABroadCast(COLOR_YELLOW, string, 1);
						}

         				format(string, sizeof(string), "* %d materyali $%d karlnda %s kiisinden aldnz.", MatsAmount[playerid], MatsPrice[playerid], GetPlayerNameEx(MatsOffer[playerid]));
            			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
              			format(string, sizeof(string), "* %s kiisi %d materyalinizi ald, $%d hesabnza eklendi.", GetPlayerNameEx(playerid), MatsAmount[playerid], MatsPrice[playerid]);
                		SendClientMessage(MatsOffer[playerid], COLOR_LIGHTBLUE, string);

                  		GivePlayerCash(MatsOffer[playerid], MatsPrice[playerid]);
						GivePlayerCash(playerid, -MatsPrice[playerid]);
                    	PlayerInfo[playerid][pMats] += MatsAmount[playerid];
                    	PlayerInfo[MatsOffer[playerid]][pMats] -= MatsAmount[playerid];

                    	MatsOffer[playerid] = 999;
                    	MatsPrice[playerid] = 0;
                    	MatsAmount[playerid] = 0;
					}
				}
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "Materyalleri alacak paranz yok!");
                    return 1;
                }
            }
            else
			{
                SendClientMessage(playerid, COLOR_GREY, "Kimse size materyal teklif etmedi!");
                return 1;
            }
        }
        else if(strcmp(params,"silah",true) == 0) {
            if(GunOffer[playerid] < 999) {
                if(IsPlayerConnected(GunOffer[playerid])) {
                    if(ProxDetectorS(5.0, playerid, GunOffer[playerid])) {
                        if(GetPVarInt(playerid, "Hospital") == 1 || GetPVarInt(playerid, "Hospital") == 2 || GetPVarInt(playerid, "Hospital") == 3 || GetPVarInt(playerid, "Hospital") == 4 || GetPVarInt(playerid, "Hospital") == 5) {
                            SendClientMessage(playerid, COLOR_GREY, "Hastanedeyken silah karamazsnz.");
                            return 1;
                        }
                        if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "u an silah tamanz kstlandndan bunu yapamazsnz!");
                        if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmadan nce aratan ininiz.");
                        new weaponname[32];
                        GetWeaponName(GunId[playerid], weaponname, sizeof(weaponname));
                        format(string, sizeof(string), "  %s kiisine bir %s verdiniz.", GetPlayerNameEx(playerid),weaponname);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        SendClientMessage(GunOffer[playerid], COLOR_GRAD1, string);
                        format(string, sizeof(string), "  %s kiisinden bir %s aldnz.", weaponname, GetPlayerNameEx(GunOffer[playerid]));
                        SendClientMessage(playerid, COLOR_GRAD1, string);
                        PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
                        format(string, sizeof(string), "* %s kiisi materyallerden bir silah yapt, %s kiisine verdi.", GetPlayerNameEx(GunOffer[playerid]), GetPlayerNameEx(playerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        GivePlayerValidWeapon(playerid,GunId[playerid],50000);
                        //new ip[32], ipex[32];
                        //GetPlayerIp(playerid, ip, sizeof(ip));
                        //GetPlayerIp(GunOffer[playerid], ipex, sizeof(ipex));
                        //format(string, sizeof(string), "[WEAPON DEAL] %s(IP:%s) has bought a %s from %s(IP:%s)", GetPlayerNameEx(playerid), ip, weaponname, GetPlayerNameEx(GunOffer[playerid]), ipex);
                        //Log("logs/pay.log", string);
                        PlayerInfo[GunOffer[playerid]][pMats] -= GunMats[playerid];

                        if(GunId[playerid] > 15) {
							#if defined DOUBLE_EXP_ENABLED
								new hour,minuite,second;
								gettime(hour,minuite,second);
								if(DoubleEXPcheck(hour)) {
				    				PlayerInfo[GunOffer[playerid]][pArmsSkill] += 2;
				    				SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
								}
								else {
									SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
									PlayerInfo[GunOffer[playerid]][pArmsSkill]++;
								}
							#else
							    PlayerInfo[GunOffer[playerid]][pArmsSkill]++;
							#endif
                        }

                        if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 50)
                        { SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 2 oldu, daha ok silah eidi artk ak."); }
                        else if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 100)
                        { SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 3 oldu, daha ok silah eidi artk ak."); }
                        else if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 200)
                        { SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 4 oldu, daha ok silah eidi artk ak."); }
                        else if(PlayerInfo[GunOffer[playerid]][pArmsSkill] == 400)
                        { SendClientMessage(GunOffer[playerid], COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 5 oldu, daha ok silah eidi artk ak."); }
                        GunOffer[playerid] = 999;
                        GunId[playerid] = 0;
                        GunMats[playerid] = 0;
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GRAD2, "Size silah satan kiinin yannda olmalsnz!");
                        return 1;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size silah nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"zirh",true) == 0) {
            if(GuardOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) >= GuardPrice[playerid]) {
                    if(IsPlayerConnected(GuardOffer[playerid])) {
                        if(ProxDetectorS(6.0, playerid, GuardOffer[playerid])) {
							if(GetPVarInt(playerid, "EventToken") == 1 && EventInfo[EventToggleHeal] == 1)
								return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlikteyken iyiletiremezsin!");
                            new Float:armour;
                            GetPlayerArmour(playerid, armour);
                            if(armour >= 50) {
                                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Zaten zrhnz var!");
                                return 1;
                            }
                            if(PlayerBoxing[playerid] == 1)
                            {
                                SendClientMessage(playerid, COLOR_GREY, "Boks yaparken bodyguard kabul edemezsiniz.");
                                return 1;
                            }
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(GuardOffer[playerid], ipex, sizeof(ipex));
                            //format(string, sizeof(string), "[BODYGUARD] %s (IP:%s) has paid $%d to %s (IP:%s)", GetPlayerNameEx(playerid), ip, GuardPrice[playerid], GetPlayerNameEx(GuardOffer[playerid]), ipex);
                            // Log("logs/pay.log", string);

                            GuardWarn[playerid][GuardOffer[playerid]] += GuardPrice[playerid];
                            if(GuardWarn[playerid][GuardOffer[playerid]] >= 2500 && (PlayerInfo[GuardOffer[playerid]][pLevel] <= 3 || PlayerInfo[playerid][pLevel] <= 3)) {
                                format(string, sizeof(string), "%s (IP:%s) kiisi %s (IP:%s) kiisini $%d fiyata korudu.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(GuardOffer[playerid]), ipex, GuardWarn[playerid][GuardOffer[playerid]]);
                                // Log("logs/pay.log", string);
                                ABroadCast(COLOR_YELLOW, string, 1);
                            }

                            SetPlayerArmourEx(playerid, 50);
                            GetPlayerName(GuardOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* $%d karlnda %s kiisinden koruma kabul ettiniz.",GuardPrice[playerid],GetPlayerNameEx(GuardOffer[playerid]));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s korumanz kabul etti, $%d hesabnza eklendi.",GetPlayerNameEx(playerid),GuardPrice[playerid]);
                            SendClientMessage(GuardOffer[playerid], COLOR_LIGHTBLUE, string);
                            GivePlayerCash(GuardOffer[playerid], GuardPrice[playerid]);
                            GivePlayerCash(playerid, -GuardPrice[playerid]);
                            GuardOffer[playerid] = 999;
                            GuardPrice[playerid] = 0;
                            return 1;
                        }
                        else {
                            SendClientMessage(playerid, COLOR_GRAD2, "Size koruma neren kiinin yannda deisiniz!");
                            return 1;
                        }
                    }
                    return 1;
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "   Korumaya yeterli paranz yok!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size koruma nermedi!");
                return 1;
            }
        }
     	else if(strcmp(params,"sex",true) == 0) {
            if(SexOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > SexPrice[playerid]) {
                    if(IsPlayerConnected(SexOffer[playerid])) {
                        new Car = GetPlayerVehicleID(playerid);
                        if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(SexOffer[playerid], Car)) {
                            GetPlayerName(SexOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* Hayat Kadn %s ile seks yaptnz, cret: $%d.", giveplayer, SexPrice[playerid]);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s kiisi sizinle seks yapt. $%d kazandnz.", sendername, SexPrice[playerid]);
                            SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, string);

                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(SexOffer[playerid], ipex, sizeof(ipex));
                            //format(string, sizeof(string), "[SEX] %s (IP:%s) had sex with %s (IP:%s) for %d.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(SexOffer[playerid]), ipex, SexPrice[playerid]);
                            //Log("logs/pay.log", string);

                            SexWarn[playerid][SexOffer[playerid]] += SexPrice[playerid];
                            if(SexWarn[playerid][SexOffer[playerid]] >= 2500 && (PlayerInfo[SexOffer[playerid]][pLevel] <= 3 || PlayerInfo[playerid][pLevel] <= 3)) {
                                format(string, sizeof(string), "%s (IP:%s) kiisi %s (IP:%s) ile seks yapt, cret: $%d.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(SexOffer[playerid]), ipex, SexWarn[playerid][SexOffer[playerid]]);
                                //Log("logs/pay.log", string);
                                ABroadCast(COLOR_YELLOW, string, 1);
                            }

                            GivePlayerCash(SexOffer[playerid], SexPrice[playerid]);
                            GivePlayerCash(playerid, -SexPrice[playerid]);

                            #if defined DOUBLE_EXP_ENABLED
								new hour,minuite,second;
								gettime(hour,minuite,second);
								if(DoubleEXPcheck(hour))
								{
	 					 			PlayerInfo[SexOffer[playerid]][pSexSkill] += 2;
		   					 		SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
								}
								else
								{
									SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
									PlayerInfo[SexOffer[playerid]][pSexSkill]++;
								}
							#else
							    PlayerInfo[SexOffer[playerid]][pSexSkill]++;
							#endif

                            if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 50) {
                                SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seks Yeteneiniz Level 2 oldu, daha iyi seks yapp daha az hastalk kapma riskiniz var.");
                            }
                            else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 100) {
                                SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seks Yeteneiniz Level 3 oldu, daha iyi seks yapp daha az hastalk kapma riskiniz var.");
                            }
                            else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 200) {
                                SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seks Yeteneiniz Level 4 oldu, daha iyi seks yapp daha az hastalk kapma riskiniz var.");
                            }
                            else if(PlayerInfo[SexOffer[playerid]][pSexSkill] == 400) {
                                SendClientMessage(SexOffer[playerid], COLOR_YELLOW, "* Seks Yeteneiniz Level 5 oldu, daha iyi seks yapp daha az hastalk kapma riskiniz var.");
                            }

                            if(!GetPVarType(playerid, "STD")) {
                                if(Condom[playerid] < 1) {
                                    new Float:health;
                                    new level = PlayerInfo[SexOffer[playerid]][pSexSkill];
                                    if(level >= 0 && level < 50) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 90) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 10.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD1));
                                        SetPVarInt(playerid, "STD", STD1[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD1[rand]);
                                        if(STD1[rand] == 0) {
                                            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seks yaparken 10 Can aldnz ve hi cinsel hastalk virs kapmadnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seks yaparken cinsel hastalk kapmadnz.");
                                        }
                                        else if(STD1[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 10 Can + AIDS enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir AIDS kaptnz."); }
                                        else if(STD1[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 10 Can + Belsoukluu enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Belsoukluu kaptnz."); }
                                        else if(STD1[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 10 Can + Frengi enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Frengi kaptnz."); }
                                    }
                                    else if(level >= 50 && level < 100) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 80) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 20.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD2));
                                        SetPVarInt(playerid, "STD", STD2[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD2[rand]);
                                        if(STD2[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seks yaparken 20 Can aldnz ve hi cinsel hastalk virs kapmadnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seks yaparken cinsel hastalk kapmadnz."); }
                                        else if(STD2[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 20 Can + AIDS enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir AIDS kaptnz."); }
                                        else if(STD2[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 20 Can + Belsoukluu enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Belsoukluu kaptnz."); }
                                        else if(STD2[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 20 Can + Frengi enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Frengi kaptnz."); }
                                    }
                                    else if(level >= 100 && level < 200) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 70) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 30.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD3));
                                        SetPVarInt(playerid, "STD", STD3[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD3[rand]);
                                        if(STD3[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seks yaparken 30 Can aldnz ve hi cinsel hastalk virs kapmadnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seks yaparken cinsel hastalk kapmadnz."); }
                                        else if(STD3[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 30 Can + AIDS enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir AIDS kaptnz."); }
                                        else if(STD3[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 30 Can + Belsoukluu enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Belsoukluu kaptnz."); }
                                        else if(STD3[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 30 Can + Frengi enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Frengi kaptnz."); }
                                    }
                                    else if(level >= 200 && level < 400) {
                                        GetPlayerHealth(playerid, health);
                                        if(health < 100) {
                                            if(health > 60) {
                                                SetPlayerHealth(playerid, 100);
                                            }
                                            else {
                                                SetPlayerHealth(playerid, health + 40.0);
                                            }
                                        }
                                        new rand = random(sizeof(STD4));
                                        SetPVarInt(playerid, "STD", STD4[rand]);
                                        SetPVarInt(SexOffer[playerid], "STD", STD4[rand]);
                                        if(STD4[rand] == 0) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seks yaparken 40 Can aldnz ve hi cinsel hastalk virs kapmadnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seks yaparken cinsel hastalk kapmadnz."); }
                                        else if(STD4[rand] == 1) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 40 Can + AIDS enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir AIDS kaptnz."); }
                                        else if(STD4[rand] == 2) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 40 Can + Belsoukluu enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Belsoukluu kaptnz."); }
                                        else if(STD4[rand] == 3) { SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seksten dolay 40 Can + Frengi enfeksiyonu kaptnz."); SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Seksten dolay bir Frengi kaptnz."); }
                                    }
                                    else if(level >= 400) {
                                        GetPlayerHealth(playerid, health);
                                        if(health > 50) {
                                            SetPlayerHealth(playerid, 100);
                                        }
                                        else {
                                            SetPlayerHealth(playerid, health + 50.0);
                                        }
                                        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Seks Yetenei seviyeniz ok yksek, ok can verdiniz ve hastalk kapmadnz.");
                                        SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Hayat Kadnnn seks yetenek seviyesi ok yksek, size ok can verdi ve hastalk bulatrmad.");
                                    }
                                }
                                else {
                                    SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Kii kondom kulland.");
                                    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kondom kullandnz.");
                                    Condom[playerid] --;
                                }
                            }
                            else {
                                SendClientMessage(SexOffer[playerid], COLOR_LIGHTBLUE, "* Kii zaten cinsel hastalk kapm, baka birini daha kapamaz.");
                            }
                            SexOffer[playerid] = 999;
                            return 1;
                        }
                        else {
                            SendClientMessage(playerid, COLOR_GREY, "   Sen veya Hayat Kadn arabada deilsiniz!");
                            return 1;
                        }
                    }                             //Connected or not
                    return 1;
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "   Sekse yeterli paranz yok!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Bir Hayat Kadnndan seks teklifi almadnz!");
                return 1;
            }
        }
        else if(strcmp(params,"pot",true) == 0) {
            if(PotOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > PotPrice[playerid]) {
                    if(PlayerInfo[playerid][pPot] < 25) {
                        if(IsPlayerConnected(PotOffer[playerid])) {
							if(PlayerInfo[PotOffer[playerid]][pPot] < PotGram[playerid])
							{
						    	SendClientMessage(playerid,COLOR_GREY, "Kii o kadar pot'a sahip deil!");
						    	return 1;
							}
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(PotOffer[playerid], ipex, sizeof(ipex));
                            //format(string, sizeof(string), "[POT (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", PotGram[playerid], GetPlayerNameEx(playerid), ip, PotPrice[playerid], GetPlayerNameEx(PotOffer[playerid]), ipex);
                            //Log("logs/pay.log", string);*/

                            PotWarn[playerid][PotOffer[playerid]] += PotPrice[playerid];
                            if(PotWarn[playerid][PotOffer[playerid]] >= 2500 && (PlayerInfo[PotOffer[playerid]][pLevel] <= 3 || PlayerInfo[PotOffer[playerid]][pLevel] <= 3)) {
                                format(string, sizeof(string), "%s (IP:%s) kiisi %s (IP:%s) kiisine $%d deerinde pot satt.", GetPlayerNameEx(PotOffer[playerid]), ipex, GetPlayerNameEx(playerid), ip, PotWarn[playerid][PotOffer[playerid]]);
                                //Log("logs/pay.log", string);
                                ABroadCast(COLOR_YELLOW, string, 1);
                            }

                            GetPlayerName(PotOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* %d gram $%d karlnda Uyuturucu Satcs %s kiisinden aldnz.",PotGram[playerid],PotPrice[playerid],giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s kiisi sizden %d gram ald, $%d hesabnza eklendi.",sendername,PotGram[playerid],PotPrice[playerid]);
                            SendClientMessage(PotOffer[playerid], COLOR_LIGHTBLUE, string);
                            PlayerInfo[PotOffer[playerid]][pCash] += PotPrice[playerid];

                            #if defined DOUBLE_EXP_ENABLED
								new hour,minuite,second;
								gettime(hour,minuite,second);
								if(DoubleEXPcheck(hour))
								{
				    				PlayerInfo[PotOffer[playerid]][pDrugsSkill] += 2;
				    				SendClientMessage(PotOffer[playerid], COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
								}
								else
								{
									SendClientMessage(PotOffer[playerid], COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
									PlayerInfo[PotOffer[playerid]][pDrugsSkill]++;
								}
							#else
                                PlayerInfo[PotOffer[playerid]][pDrugsSkill]++;
							#endif

                            GivePlayerCash(playerid, -PotPrice[playerid]);
                            PlayerInfo[playerid][pPot] += PotGram[playerid];
                            PlayerInfo[PotOffer[playerid]][pPot] -= PotGram[playerid];
                            if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 50)
                            { SendClientMessage(PotOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 2 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            else if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 100)
                            { SendClientMessage(PotOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 3 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            else if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 200)
                            { SendClientMessage(PotOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 4 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            else if(PlayerInfo[PotOffer[playerid]][pDrugsSkill] == 400)
                            { SendClientMessage(PotOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 5 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            PotOffer[playerid] = 999;
                            PotPrice[playerid] = 0;
                            PotGram[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Uyuturucuyla dolusunuz, nce onlar kullann!");
                        return 1;
                    }
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "   Potlar iin yeterli paranz yok!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size Pot nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"crack",true) == 0) {
            if(CrackOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > CrackPrice[playerid]) {
                    if(PlayerInfo[playerid][pCrack] < 25) {
                        if(IsPlayerConnected(CrackOffer[playerid])) {
 							if(PlayerInfo[CrackOffer[playerid]][pCrack] < CrackGram[playerid])
							{
						    	SendClientMessage(playerid,COLOR_GREY, "Kii o kadar crack'e sahip deil!");
						    	return 1;
							}
                            new ip[32], ipex[32];
                            GetPlayerIp(playerid, ip, sizeof(ip));
                            GetPlayerIp(CrackOffer[playerid], ipex, sizeof(ipex));
                            //format(string, sizeof(string), "[CRACK DEAL (%d GRAMS)] %s (IP:%s) has paid $%d to %s (IP:%s)", CrackGram[playerid], GetPlayerNameEx(playerid), ip, CrackPrice[playerid], GetPlayerNameEx(CrackOffer[playerid]), ipex);
                            // Log("logs/pay.log", string);

                            CrackWarn[playerid][CrackOffer[playerid]] += CrackPrice[playerid];
                            if(CrackWarn[playerid][CrackOffer[playerid]] >= 2500 && (PlayerInfo[CrackOffer[playerid]][pLevel] <= 3 || PlayerInfo[CrackOffer[playerid]][pLevel] <= 3)) {
                                format(string, sizeof(string), "%s (IP:%s) kiisi %s (IP:%s) kiisine $%d deerinde pot satt.", GetPlayerNameEx(CrackOffer[playerid]), ipex, GetPlayerNameEx(playerid), ip, CrackWarn[playerid][CrackOffer[playerid]]);
                                ABroadCast(COLOR_YELLOW, string, 1);
                            }

                            GivePlayerCash(playerid, -CrackPrice[playerid]);
                            GivePlayerCash(CrackOffer[playerid], CrackPrice[playerid]);
                            GetPlayerName(CrackOffer[playerid], giveplayer, sizeof(giveplayer));
                            GetPlayerName(playerid, sendername, sizeof(sendername));
                            format(string, sizeof(string), "* %d gram $%d karlnda Uyuturucu Satcs %s kiisinden aldnz.",CrackGram[playerid],CrackPrice[playerid],giveplayer);
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "* %s kiisi sizden %d gram ald, $%d hesabnza eklendi.",sendername,CrackGram[playerid],CrackPrice[playerid]);
                            SendClientMessage(CrackOffer[playerid], COLOR_LIGHTBLUE, string);

							#if defined DOUBLE_EXP_ENABLED
	     						new hour,minuite,second;
								gettime(hour,minuite,second);
								if(DoubleEXPcheck(hour))
								{
				    				PlayerInfo[CrackOffer[playerid]][pDrugsSkill] += 2;
				    				SendClientMessage(CrackOffer[playerid], COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
								}
								else
								{
									SendClientMessage(CrackOffer[playerid], COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
									PlayerInfo[CrackOffer[playerid]][pDrugsSkill]++;
								}
							#else
                            	PlayerInfo[CrackOffer[playerid]][pDrugsSkill]++;
                            #endif

                            PlayerInfo[playerid][pCrack] += CrackGram[playerid];
                            PlayerInfo[CrackOffer[playerid]][pCrack] -= CrackGram[playerid];
                            if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 50)
                            { SendClientMessage(CrackOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 2 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            else if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 100)
                            { SendClientMessage(CrackOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 2 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            else if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 200)
                            { SendClientMessage(CrackOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 2 oldu, daha ok gram ve ucuza alabilirsiniz."); }
                            else if(PlayerInfo[CrackOffer[playerid]][pDrugsSkill] == 400)
                            { SendClientMessage(CrackOffer[playerid], COLOR_YELLOW, "* Uyuturucu Satcs yeteneiniz Level 2 oldu, daha ok gram ve ucuza alabilirsiniz."); }
							CrackOffer[playerid] = 999;
                            CrackPrice[playerid] = 0;
                            CrackGram[playerid] = 0;
                            return 1;
                        }
                        return 1;
                    }
                    else {
                        SendClientMessage(playerid, COLOR_GREY, "   Crack ile dolusunuz, nce onlar kullann!");
                        return 1;
                    }
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "   Crack iin yeterli paranz yok!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size Crack nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"koru",true) == 0) {
            if(DefendOffer[playerid] < 999) {
                if(GetPlayerCash(playerid) > DefendPrice[playerid]) {
                    if(IsPlayerConnected(DefendOffer[playerid])) {
                        if(IsPlayerInAnyVehicle(playerid))
                            return SendClientMessage(playerid, COLOR_GREY, "Savunmay kabul ettiinizde arata olamazsnz.");

						if(PlayerCuffed[playerid] > 0)
						    return SendClientMessage(playerid, COLOR_GREY, "Kelepeli veya okluyken savunma kabul edemezsiniz.");

                        PlayerInfo[playerid][pWantedLevel]--;
                        SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
                        SetPlayerToTeamColor(playerid);
                        giveplayer = GetPlayerNameEx(DefendOffer[playerid]);
                        sendername = GetPlayerNameEx(playerid);
                        format(string, sizeof(string), "* $%d karlnda savunmay kabul ettiniz, Avukat: %s.",DefendPrice[playerid],giveplayer);
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s kiisi savunmanz kabul etti, $%d hesabnza eklendi.",sendername,DefendPrice[playerid]);
                        SendClientMessage(DefendOffer[playerid], COLOR_LIGHTBLUE, string);

						#if defined DOUBLE_EXP_ENABLED
							new hour,minuite,second;
							gettime(hour,minuite,second);
							if(DoubleEXPcheck(hour))
							{
				    			PlayerInfo[DefendOffer[playerid]][pLawSkill] += 2;
				    			SendClientMessage(DefendOffer[playerid], COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
							}
							else
							{
								SendClientMessage(DefendOffer[playerid], COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
								PlayerInfo[DefendOffer[playerid]][pLawSkill]++;
							}
						#else
                        	PlayerInfo[DefendOffer[playerid]][pLawSkill]++;
                        #endif

                        GivePlayerCash(DefendOffer[playerid],DefendPrice[playerid]);
                        GivePlayerCash(playerid, -DefendPrice[playerid]);
                        DefendOffer[playerid] = 999;
                        DefendPrice[playerid] = 0;
                        return 1;
                    }
                    return 1;
                }
                else {
                    SendClientMessage(playerid, COLOR_GREY, "   Koruma iin yeterli paranz yok!");
                    return 1;
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse size Koruma nermedi!");
                return 1;
            }
        }
        else if(strcmp(params,"olusum",true) == 0) {
            if(InviteOffer[playerid] < 999) {
                if(IsPlayerConnected(InviteOffer[playerid])) {

                    if(GetPVarInt(playerid, "PBM") > 0) {
                        SendClientMessage(playerid, COLOR_WHITE, "Paintball oynarken bunu yapamazsnz.");
                        return 1;
                    }

                    if(InviteFaction[playerid] > 0 && InviteFamily[playerid] == 255) {
						PlayerInfo[playerid][pFaction] = InviteFaction[playerid];
                        PlayerInfo[playerid][pRank] = 0;
                        PlayerInfo[playerid][pDivision] = 0;

						format(string, sizeof(string), "%s kiisi %s kiisinin davetini %s iin kabul etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(InviteOffer[playerid]), GetFactionName(InviteFaction[playerid]));
						Log("logs/faction.log", string);
                        format(string, sizeof(string), "   Daveti kabul ettiniz ve %s kuruluuna katldnz, Daveti Gnderen: %s.", GetFactionName(InviteFaction[playerid]), GetPlayerNameEx(InviteOffer[playerid]));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "   %s kiisi davetinizi kabul etti ve %s kuruluuna katld.", GetPlayerNameEx(playerid), GetFactionName(InviteFaction[playerid]));
                        SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, string);
                        InviteOffer[playerid] = 999;
                        InviteFaction[playerid] = 0;
                        InviteFamily[playerid] = 255;
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse sizi organizasyon/aileye davet etmedi!");
                return 1;
            }
        }
        else if(strcmp(params,"aile",true) == 0) {
            if(InviteOffer[playerid] < 999) {
                if(IsPlayerConnected(InviteOffer[playerid])) {
                    if(InviteFaction[playerid] == 0 && InviteFamily[playerid] != 255) {
                        if(GetPVarInt(playerid, "PBM") > 0) {
                            SendClientMessage(playerid, COLOR_WHITE, "Paintball oynarken bunu yapamazsnz.");
                            return 1;
                        }

                        if(PlayerInfo[playerid][pJailTime] > 1) {
                            SendClientMessage(playerid, COLOR_WHITE, "Daveti kabul etmeden nce hapisten serbest braklana kadar bekleyiniz.");
                            return 1;
                        }

                        if(PlayerInfo[playerid][pFaction] >= 3 || PlayerInfo[playerid][pGang] != 255 || PlayerInfo[playerid][pLeader] >= 3 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2) {
                            SendClientMessage(playerid, COLOR_WHITE, "Zaten bir aile/organizasyonda olduunuzdan daveti kabul edemezsiniz.");
                        }
                        else {
                            PlayerInfo[playerid][pGang] = InviteFamily[playerid];
                            PlayerInfo[playerid][pRank] = 1;
                            FamilyInfo[InviteFamily[playerid]][FamilyMembers] ++;
                            SaveFamilies();
                            format(string, sizeof(string), "   Daveti kabul ettiniz ve %s kuruluuna katldnz, Daveti Gnderen: %s.", FamilyInfo[InviteFamily[playerid]][FamilyName], GetPlayerNameEx(InviteOffer[playerid]));
                            SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                            format(string, sizeof(string), "   %s kiisi davetinizi kabul etti ve %s kuruluuna katld.", GetPlayerNameEx(playerid),FamilyInfo[InviteFamily[playerid]][FamilyName]);
                            SendClientMessage(InviteOffer[playerid], COLOR_LIGHTBLUE, string);
                            SendClientMessage(playerid, COLOR_WHITE, "Aile sohbeti iin (/f) komutunu kullann. Aile skini almak isterseniz, giyim maazasnda /kiyafetler komutunu kullann.");

                            InviteOffer[playerid] = 999;
                            InviteFaction[playerid] = 0;
                            InviteFamily[playerid] = 255;
                        }
                    }
                }
            }
            else {
                SendClientMessage(playerid, COLOR_GREY, "   Kimse sizi organizasyon/aileye davet etmedi!");
                return 1;
            }
        }
	}
	return 1;
}

CMD:maaszamani(playerid, params[])
{
	return cmd_paycheck(playerid, params);
}

CMD:paycheck(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
	    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
    	foreach(Player, i)
    	{
        	if(WasHereForPaycheck[i] == 1)
        	{
        	    SendClientMessage(playerid,COLOR_WHITE, "Son maan kodlar henz sonra ermedi.");
        	    return 1;
        	}
	    }
		PayDay();
	}
	return 1;
}

CMD:veh(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4) {
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new
			iVehicle,
			iColors[2];

		if(sscanf(params, "iI(-1)I(-1)", iVehicle, iColors[0], iColors[1]))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /veh [model ID] [(optional) color 1] [(optional) color 2]");
		}
		else if(!(400 <= iVehicle <= 611))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Geersiz model seildi (model ID si 400 ile 611 arasndadr).");
		}
  		else if(iColors[0] < -1 || iColors[0] > 255 || iColors[1] < -1 || iColors[1] > 255) {
			SendClientMessage(playerid, COLOR_GRAD2, "Geersiz renk seildi (ID -1 ile 255 arasndadr).");
		}
		else if(CreatedCarsCount >= 50)
		{
		    SendClientMessage(playerid, COLOR_GRAD2, "Ayn anda maksimum 50 araba karlabilir. /destroycar ya da  /destroycars yazn");
		    return 1;
		}
		else for(new iIterator; iIterator < sizeof(CreatedCars); iIterator++) if(CreatedCars[iIterator] == INVALID_VEHICLE_ID)
		{
			new
				Float: fVehPos[4];

			GetPlayerPos(playerid, fVehPos[0], fVehPos[1], fVehPos[2]);
			GetPlayerFacingAngle(playerid, fVehPos[3]);
			CreatedCars[iIterator] = CreateVehicle(iVehicle, fVehPos[0], fVehPos[1], fVehPos[2], fVehPos[3], iColors[0], iColors[1], -1);
			CreatedCarsCount++;
			LinkVehicleToInterior(CreatedCars[iIterator], GetPlayerInterior(playerid));
			return SendClientMessage(playerid, COLOR_GREY, "Ara kt!");
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:vehname(playerid, params[])
{

	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		SendClientMessage(playerid, COLOR_NEWS,"___________________________________________________________________________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "Ara Arama:");

		new
			string[128];

		if(isnull(params)) return SendClientMessage(playerid, COLOR_GREY, "Anahtar kelime belirlenmedi.");
		if(!params[2]) return SendClientMessage(playerid, COLOR_GREY, "Aranan kelime ok ksa.");

		for(new v; v < sizeof(VehicleName); v++) {
			if(strfind(VehicleName[v], params, true) != -1) {

				if(isnull(string)) format(string, sizeof(string), "%s (ID %d)", VehicleName[v], v+400);
				else format(string, sizeof(string), "%s | %s (ID %d)", string, VehicleName[v], v+400);
			}
		}

		if(!string[0]) SendClientMessage(playerid, COLOR_GREY, "Sonu bulunamad.");
		else if(string[127]) SendClientMessage(playerid, COLOR_GREY, "ok fazla sonu bulundu.");
		else SendClientMessage(playerid, COLOR_WHITE, string);

		SendClientMessage(playerid, COLOR_NEWS,"___________________________________________________________________________________________________");
	}
	return 1;
}


CMD:aractamir(playerid)
{
if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, -1, "Surucu olmalisiniz!");

else if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2072.9526,-1831.8055,13.5469)) return SendClientMessage(playerid, -1, "Bu komutu sadece Arac Tamir bolgesinde kullanabilirsiniz!");

RepairVehicle(GetPlayerVehicleID(playerid));

GivePlayerCash(playerid,-100);

SendClientMessage(playerid, -1, "Araciniz tamir edildi.");

return true;

}

CMD:fixveh(playerid, params[])
{
    if(IsPlayerConnected(playerid))
	{
        if(PlayerInfo[playerid][pAdmin] < 4)
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
            return 1;
        }
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        if(IsPlayerInAnyVehicle(playerid))
		{
            RepairVehicle(GetPlayerVehicleID(playerid));
            SendClientMessage(playerid, COLOR_GREY, "Ara tamir edildi!");
        }
    }
    return 1;
}


CMD:fixvehall(playerid, params[])
{
    if(IsPlayerConnected(playerid)) {
        if(PlayerInfo[playerid][pAdmin] < 5)
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
            return 1;
        }
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        for(new v = 0; v < MAX_VEHICLES; v++) {
            RepairVehicle(v);
        }
        SendClientMessage(playerid, COLOR_GREY, "Tm aralar tamir edildi!");
    }
    return 1;
}

CMD:destroycars(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 4)
	{
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
        return 1;
    }
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}
    for(new i = 0; i < sizeof(CreatedCars); i++)
	{
        if(CreatedCars[i] != INVALID_VEHICLE_ID)
		{
            DestroyVehicle(CreatedCars[i]);
            VehicleRadioStation[CreatedCars[i]] = 0;
            CreatedCarsCount = 0;
            CreatedCars[i] = INVALID_VEHICLE_ID;
        }
    }
    SendClientMessage(playerid, COLOR_GREY, "kan arabalar yok edildi!");
    return 1;
}

CMD:destroycar(playerid, params[])
{
	new string[128];

	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
 	}
	new bool:breakingloop = false, newid = INVALID_VEHICLE_ID;
	if(IsPlayerInAnyVehicle(playerid))
	{
		for(new i=0;i<sizeof(CreatedCars);i++)
		{
			if(!breakingloop)
			{
				if(CreatedCars[i] == GetPlayerVehicleID(playerid)) // Checking for next available ID.
				{
					breakingloop = true;
					newid = i;
				}
			}
		}
		if(newid != INVALID_VEHICLE_ID)
		{
			new carid = GetPlayerVehicleID(playerid);
			DestroyVehicle(carid);
            VehicleRadioStation[carid] = 0;
			CreatedCarsCount--;
			CreatedCars[newid] = INVALID_VEHICLE_ID;
			format(string, sizeof(string), "Ara %d yok edildi.", carid);
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	}
	return 1;
}

CMD:healnear(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        new string[128];
        new count;
        foreach(Player, i) {
            if(ProxDetectorS(12.0, playerid, i)) {
                SetPlayerHealth(i, 100);
                SetPlayerArmourEx(i, 100);
                count++;
            }
        }
        format(string, sizeof(string), "Yakndaki herkese (%d) cann doldurdun.", count);
        SendClientMessage(playerid, COLOR_WHITE, string);
    }
    return 1;
}

CMD:sethp(playerid, params[])
{
    new string[128], playa, health;
    if(sscanf(params, "ud", playa, health))
	{
        SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /sethp [Oyuncu ID/sim] [health]");
        return 1;
    }
    if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        if(IsPlayerConnected(playa)) {
            if(playa != INVALID_PLAYER_ID)
			{
                SetPlayerHealth(playa, health);
                format(string, sizeof(string), " %s adl kiinin cann %d olarak deitirdin.", GetPlayerNameEx(playa), health);
                SendClientMessage(playerid, COLOR_WHITE, string);
            }
        }
        else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:setarmor(playerid, params[])
{
    new string[128], playa, health;
    if(sscanf(params, "ud", playa, health))
	{
        SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /setarmor [Oyuncu ID/sim] [armor]");
        return 1;
    }
    if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        if(IsPlayerConnected(playa))
		{
            if(playa != INVALID_PLAYER_ID)
			{
                SetPlayerArmourEx(playa, health);
                format(string, sizeof(string), " %s adl kiinin zrhn %d olarak deitirdin.", GetPlayerNameEx(playa), health);
                SendClientMessage(playerid, COLOR_WHITE, string);
            }
        }
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:setarmorall(playerid, params[])
{
    new armor;
    if(sscanf(params, "d", armor)) {
        SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /setarmorall [armor]");
        return 1;
    }

    if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        foreach(Player, i)
		{
            SetPlayerArmourEx(i, armor);
        }
    }

    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:givegun(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

        new sstring[128], playa, gun;

        if(sscanf(params, "ud", playa, gun)) {
            SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /givegun [Oyuncu ID/sim] [weaponid]");
            SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
            SendClientMessage(playerid, COLOR_GRAD4, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana 9: Chainsaw");
            SendClientMessage(playerid, COLOR_GRAD4, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane 16: Frag Grenade");
            SendClientMessage(playerid, COLOR_GRAD3, "17: Tear Gas 18: Molotov Cocktail 19: Vehicle Missile 20: Hydra Flare 21: Jetpack 22: 9mm 23: Silenced 9mm 24: Desert Eagle");
            SendClientMessage(playerid, COLOR_GRAD4, "26: Sawnoff Shotgun 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5) 30: AK-47 31: M4 32: Tec9 33: Rifle");
            SendClientMessage(playerid, COLOR_GRAD4, "25: Shotgun 34: Sniper Rifle 35: Rocket Launcher 36: HS Rocket Launcher 37: Flamethrower 38: Minigun 39: Satchel Charge");
            SendClientMessage(playerid, COLOR_GRAD4, "40: Detonator 41: Spraycan 42: Fire Extinguisher 43: Camera 44: Nightvision Goggles 45: Infared Goggles 46: Parachute");
            SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
            return 1;
        }

        if(gun < 1||gun > 47)
            { SendClientMessage(playerid, COLOR_GRAD1, "Geersiz silah ID'si!"); return 1; }
        if(IsPlayerConnected(playa)) {
            if(PlayerInfo[playa][pConnectTime] < 2 && gun != 46 && gun != 43) return SendClientMessage(playerid, COLOR_GRAD2, "Bu kiinin silah tamas u anlk yasakland");
            if(playa != INVALID_PLAYER_ID && gun <= 20 || gun >= 22) {

                GivePlayerValidAdminWeapon(playa, gun, 60000);

                new weaponname[32];
                GetWeaponName(gun, weaponname, sizeof(weaponname));

                format(sstring, sizeof(sstring), "%s adl kiiye silah verdin, ID %d (%s)!",GetPlayerNameEx(playa), gun, weaponname);
                SendClientMessage(playerid, COLOR_GRAD1, sstring);
            }
            else if(playa != INVALID_PLAYER_ID && gun == 21) {
                JetPack[playa] = 1;
                SetPlayerSpecialAction(playa, SPECIAL_ACTION_USEJETPACK);
                SendClientMessage(playerid, COLOR_GRAD1, sstring);
            }
        }
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:maas(playerid, params[])
{
	if(PayCheckCode[playerid] == 0) return SendClientMessage(playerid, COLOR_WHITE, "Imzalayacak maa yok. Bir sonraki maa iin bekleyin.");

 	new string[128];
	format(string, sizeof(string), "{D56E00}Maas Kodu: {ffffff}%d\n\n{99ff66}Maan almak iin ek kodunu gir:", PayCheckCode[playerid]);
	ShowPlayerDialogEx(playerid, SIGNCHECK, DIALOG_STYLE_INPUT, "ek imzalama", string, "eki imzala","Iptal");
    return 1;
}

CMD:yoket(playerid, params[]) {
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yoket [isim]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Ismler: Silahlar, Pot, Crack, Materyaller, Paketler, Kutular, Radyo, Pizza, Lisanslar, Evanahtari");
		return 1;
	}

	if(PlayerCuffed[playerid] >= 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Kelepeliyken/okluyken bu komutu kullanamazsn.");

	if(strcmp(choice,"materyaller",true) == 0)
	{
		if(PlayerInfo[playerid][pMats] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), " %d materyalini attn.", PlayerInfo[playerid][pMats]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s materyallerini att.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pMats] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Atacak herhangi bir materyalin yok!");
		}
	}
	else if(strcmp(choice,"evanahtari",true) == 0)
	{
		if(HouseKey[playerid] != INVALID_HOUSE_ID)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), " %s kiisinin ev anahtarn braktn.", HouseInfo[HouseKey[playerid]][hOwner]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s bir ev anahtar brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			HouseKey[playerid] = INVALID_HOUSE_ID;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Kimsenin ev anahtarna sahip deilsin.");
		}
	}
	else if(strcmp(choice,"radyo",true) == 0)
	{
		if(PlayerInfo[playerid][pRadio] != 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s portatif radyosunu att.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pRadio] = 0;
			PlayerInfo[playerid][pRadioFreq] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Atacak bir portatif radyon yok!");
		}
	}
	else if(strcmp(choice,"lisanslar",true) == 0)
	{
		PlayerInfo[playerid][pCarLic] = 0;
		PlayerInfo[playerid][pBoatLic] = 0;
		PlayerInfo[playerid][pFlyLic] = 0;

		SendClientMessage(playerid, COLOR_WHITE, "Tm lisanslarn braktn.");
	}
	else if(strcmp(choice,"silahlar",true) == 0)
	{
		if(GetPVarInt(playerid, "PBM") > 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Paintball mandayken bunu yapamazsn.");
			return 1;
		}
		if(GetPVarInt(playerid, "EventToken") != 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu yapamazsn.");
			return 1;
		}
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		ResetPlayerWeaponsEx(playerid);
		format(string, sizeof(string), "* %s silahlarn att.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else if(strcmp(choice,"pot",true) == 0)
	{
		if(PlayerInfo[playerid][pPot] > 0)
		{
			format(string, sizeof(string), " %d gram pot'u braktn.", PlayerInfo[playerid][pPot]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s potlarn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pPot] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Atacak pot'un yok!");
		}
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if(PlayerInfo[playerid][pCrack] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "%d gram crack braktn.", PlayerInfo[playerid][pCrack]);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "* %s cracklerini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pCrack] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Atacak crack'in yok!");
		}
	}
	else if(strcmp(choice,"paketler",true) == 0) {
		if(GetPVarType(playerid, "Packages") > 0) {
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s materyal paketlerini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DisablePlayerCheckpoint(playerid);
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;

			GivePlayerCash(playerid, 50); // refund their packages
			DeletePVar(playerid, "tpMatRunTimer");
			DeletePVar(playerid, "Packages");
			DeletePVar(playerid, "MatDelivery");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Atacak materyal paketin yok!");
	}
	else if(strcmp(choice,"kutular",true) == 0)
	{
		if(PlayerInfo[playerid][pCrates] > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s uyuturucu kutusunu att.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pCrates] = 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Atacak uyuturucu kutun yok!");
		}
	}
	else if(strcmp(choice,"pizza",true) == 0)
	{
		if(GetPVarInt(playerid, "Pizza") > 0)
		{
			PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
			format(string, sizeof(string), "* %s pizza sipariini att.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetPVarInt(playerid, "Pizza", 0);
            DestroyProgressBar(PizzaBar[playerid]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Pizza teslim etmiyorsun!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yoket [isim]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Weapons, Pot, Crack, Materials, Packages, Crates, Radio, Pizza, Licenses, Housekey");
	}
	return 1;
}

CMD:dovusstili(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid, fightstyle;
		if(sscanf(params, "ud", giveplayerid, fightstyle))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /dovusstili [Oyuncu ID/sim] [fightstyle]");
			SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Dv Stilleri: 4, 5, 6, 7, 15, 26.");
			return 1;
		}

		if(fightstyle > 3 && fightstyle < 8 || fightstyle == 15 || fightstyle == 26)
		{
			format(string, sizeof(string), " Dv stilin, stil %d olarak deiti.", fightstyle);
			SendClientMessage(giveplayerid,COLOR_YELLOW,string);
			format(string, sizeof(string), " %s kiisinin dv stilini, stil %d olarak deitirdin.", GetPlayerNameEx(giveplayerid), fightstyle);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			SetPlayerFightingStyle(giveplayerid, fightstyle);
			PlayerInfo[playerid][pFightStyle] = fightstyle;
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:hospital(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(GetPVarInt(playerid, "Hospital") > 0)
		{
			DeletePVar(playerid, "HospitalTimer");
			HospitalSpawn(playerid);
			DeletePVar(playerid, "Hospital");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Hastanede deilsin!");
		}
	}
	return 1;
}

CMD:maasyardim(playerid, params[])
{
	ShowPlayerDialogEx(playerid,INFO_DIALOG,DIALOG_STYLE_MSGBOX,"Maa bilgisi","Maalar saatte bir gelir ve /maas komutuyla alnr.\n\nOyunda ne kadar ok kalrsan, maan o kadar ok olur.\n\nLevelin ykseldike maan artar.\n\nMaalar nakit olarak cebine deil, direkt banka hesabna gider.\n\nEer bir maa karrsan, kardn miktar bir sonraki maana eklenir.","Kapat","");
	return 1;
}

CMD:vergiyardim(playerid, params[])
{
	ShowPlayerDialogEx(playerid,INFO_DIALOG,DIALOG_STYLE_MSGBOX,"Gelir vergisi bilgisi","Maalar dz vergiden ok aamal gelir vergisine sahiptir.\n\nBasit olarak maan ne kadar oksa, o kadar ok gelir vergisi dediin anlamna gelir.\n\nOranlar yledir:\n\n $1250 den azsa- 10% vergi\n$1250 ile $1999 arasnda - 15% vergi\n$2000 ile $2499 arasnda - 25% vergi\n$2500 ile $3499 arasnda - 30% vergi\n $3500 den oksa - 35% vergi","Kapat","");
	return 1;
}

CMD:refyardim(playerid, params[])
{
	ShowPlayerDialogEx(playerid,12768,DIALOG_STYLE_MSGBOX,"Referans sistemi bilgisi", "Referans sistemi oyuncularn oyuna balarken referans ald kiiyi belirterek bu durumdan dolay dl kazanmalarn salar.\n\nKayt ekrannda, yeni balayan oyuncu eer oyuna birisi vastasyla geliryorsa onun adn referans verir.\n\nYeni oyuncu 8 saat boyunca oyunu oynarsa, yeni oyuncuyu davet eden kii 1 referans jetonu kazanr.","Ileri","");
	return 1;
}

CMD:hedefisifirla(playerid, params[]) {
	return cmd_hedefsifirla(playerid, params);
}

CMD:hedefsifirla(playerid, params[]) {
	TaxiAccepted[playerid] = 999;
	BusAccepted[playerid] = 999;
	MedicAccepted[playerid] = 999;
	MechanicCallTime[playerid] = 0;
    DeletePVar(playerid, "TrackCar");
    DeletePVar(playerid, "CrateDeliver");
    DeletePVar(playerid, "Packages");
    EMSAccepted[playerid] = INVALID_PLAYER_ID;
    DisablePlayerCheckpoint(playerid);
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 	TaxiCallTime[playerid] = 0;
  	BusCallTime[playerid] = 0;
  	EMSCallTime[playerid] = 0;
  	DeletePVar(playerid, "Pizza");
  	CP[playerid] = 0;
  	FindingJob[playerid] = 0;
  	FindingDealership[playerid] = 0;
    SendClientMessage(playerid,COLOR_WHITE,"Tm mevcut checkpointler, izciler ve kabul edilmi cretler resetlendi.");
	return 1;
}

CMD:saticibul(playerid, params[]) {
	if(CheckPointCheck(playerid))
		return SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");

	new
		szDealershipName[128],
		szMessage[1024];
    for(new d = 0; d < sizeof(CarDealershipInfo); d++) {
		if(CarDealershipInfo[d][cdEntranceX] != 0.0 && CarDealershipInfo[d][cdEntranceY] != 0.0) {
			if(CarDealershipInfo[d][cdOwned]) {
				format(szDealershipName, sizeof(szDealershipName), "%s\n", CarDealershipInfo[d][cdMessage]);
				strcat(szMessage, szDealershipName, sizeof(szMessage));
			}
		}
	}
	if(strlen(szMessage) == 0)
	{
		strcat(szMessage, "Bayilik bulunamad.", sizeof(szMessage));
	}
	ShowPlayerDialogEx(playerid, FINDDEALERSHIPMENU, DIALOG_STYLE_LIST, "Master RPG - Bayilikler", szMessage, "Se", "Iptal");
	return 1;
}

CMD:modifiyecibul(playerid, params[])
{
	if(CheckPointCheck(playerid))
		return SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");

	ShowPlayerDialogEx(playerid, FINDCARTUNINGMENU, DIALOG_STYLE_LIST, "Ara modifiye garaj sein", "TransFender - L.S\nWheel Arch Angels - L.S\nLowRider Tuning Garage - L.S\nTransFender - L.S\nTransFender - L.S", "Se", "Iptal");
    return 1;
}

CMD:hoparlor(playerid, params[]) return cmd_telefonhoparlor(playerid, params);
CMD:telefonhoparlor(playerid,params[])
{
	if(PlayerInfo[playerid][pNumber] == 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Telefonun yok.");

	if(SpeakerPhone[playerid] == 1) {
		SpeakerPhone[playerid] = 0;
		SendClientMessage(playerid, COLOR_WHITE, "Telefonunun hoparlrn kapattn.");
	} else {
		SpeakerPhone[playerid] = 1;
		SendClientMessage(playerid, COLOR_WHITE, "Telefonunun hoparlrn atn.");
	}
	return true;
}

CMD:uyeler(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] > 0) {
		new
			szMessage[128],
			szRank[64],
			szEmployer[64],
			szDivision[64];
		SendClientMessage(playerid, COLOR_NEWS, "Online Kullanclar:");
		foreach(Player, i) {
			if(PlayerInfo[playerid][pFaction] == PlayerInfo[i][pFaction] && AdminDuty[i] != 1) {
				GetPlayerFactionInfo(i, szRank, szDivision, szEmployer);
				if(PlayerInfo[i][pDivision] != 0) {
					format(szMessage, sizeof(szMessage), "* %s %s %s (%i)", szDivision, szRank, GetPlayerNameEx(i), PlayerInfo[i][pRank]);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
				} else {
					format(szMessage, sizeof(szMessage), "* %s %s (%i)", szRank, GetPlayerNameEx(i), PlayerInfo[i][pRank]);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
				}
			}
		}
	} else if(PlayerInfo[playerid][pGang] != 255) {
		new
	        szMessage[128],
			szRank[64];

		SendClientMessage(playerid, COLOR_NEWS, "Online Kullanclar:");
		foreach(Player, i) {
			if(PlayerInfo[playerid][pGang] == PlayerInfo[i][pGang] && AdminDuty[i] != 1) {
				switch(PlayerInfo[i][pRank])
				{
					case 1: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank1]);
					case 2: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank2]);
					case 3: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank3]);
					case 4: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank4]);
					case 5: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank5]);
					case 6: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank6]);
					default: format(szRank, sizeof(szRank), "%s", FamilyInfo[PlayerInfo[i][pGang]][FamilyRank1]);
				}
				format(szMessage, sizeof(szMessage), "* %s %s (%i)", szRank, GetPlayerNameEx(i), PlayerInfo[i][pRank]);
				SendClientMessage(playerid, COLOR_WHITE, szMessage);
			}
		}
	} else SendClientMessage(playerid, COLOR_GRAD2, "Bir kurulu/aile yesi deilsin.");
	return true;
}

CMD:pointbilgisi(playerid, params[])
{
	new
		iCount,
		szMessage[128];

	SendClientMessage(playerid, COLOR_NEWS, "Point Bilgisi:");
	for(new i; i < MAX_POINTS; i++) {
		if(Points[i][Type] >= 0) {
		    if(Points[i][Vulnerable] == 0 && Points[i][TakeOverTimerStarted] > 0)  {
				if(Points[i][TakeOverTimer] == 0) {
					format(szMessage, sizeof(szMessage), "* %s | Capper: %s | Aile: %s | Kalan Zaman: 1 Dakikadan az", Points[i][Name], Points[i][PlayerNameCapping], FamilyInfo[Points[i][ClaimerTeam]][FamilyName]);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
					iCount++;
				} else {
					format(szMessage, sizeof(szMessage), "* %s | Capper: %s | Aile: %s | Kalan Zaman: %d dakika", Points[i][Name], Points[i][PlayerNameCapping], FamilyInfo[Points[i][ClaimerTeam]][FamilyName], Points[i][TakeOverTimer]);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
					iCount++;
				}
			}
		}
	}
	if(iCount == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "No family has capped the point or the point is not ready to be capped.");
	return 1;
}

CMD:yuruyus(playerid, params[])
{
	new
		iSuccess;
	switch(strval(params))
	{
		case 1: { SetPlayerWalkingStyle(playerid, 0); iSuccess++; }
		case 2: { SetPlayerWalkingStyle(playerid, 3); iSuccess++; }
		case 3: { SetPlayerWalkingStyle(playerid, 4); iSuccess++; }
		case 4: { SetPlayerWalkingStyle(playerid, 5); iSuccess++; }
		case 5: { SetPlayerWalkingStyle(playerid, 6); iSuccess++; }
		case 6: { SetPlayerWalkingStyle(playerid, 8); iSuccess++; }
		case 7: { SetPlayerWalkingStyle(playerid, 9); iSuccess++; }
		case 8: { SetPlayerWalkingStyle(playerid, 10); iSuccess++; }
		case 9: { SetPlayerWalkingStyle(playerid, 11); iSuccess++; }
		case 10: { SetPlayerWalkingStyle(playerid, 12); iSuccess++; }
		case 11: { SetPlayerWalkingStyle(playerid, 13); iSuccess++; }
		default: SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yuruyus [1-11]");
	}
	if(iSuccess > 0) SendClientMessage(playerid, COLOR_WHITE, "Yeni bir yry stili kullanyorsun.");
	return 1;
}

CMD:sokaktansesler(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1)
		return SendClientMessage(playerid, COLOR_RED, "Bu komutu kullanma yetkiniz yok!");

 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }

	new
		string[128];

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /sokaktansesler [yaz]");

	format(string, sizeof(string), " (( Sokaktan Sesler:  %s  ))",params);
	SendClientMessageToAllEx(COLOR_LIGHTBLUE, string);
	return 1;
}


CMD:yardim(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] <= 1)
	{
		SendClientMessage(playerid, COLOR_NEWS,"- YARDIM - /rapor /yardimiste");
	}
	SendClientMessage(playerid, COLOR_WHITE,"- HESAP - /kurallar /(net)stats /esyalarim /silahlarim /levelatla /gelisim /sifredegistir /hedefsifirla /gelisimsifirla(10k)");
	SendClientMessage(playerid, COLOR_LIGHTBLUE,"- SOHBET - /w(sessiz) /s(bagir) /l(kisik sesle) /b /pm /reklamlar /f(aile) /me /yap");
	SendClientMessage(playerid, COLOR_WHITE,"- BANKA - /hesap /paracek /parayatir /transfer /ahesap /acek /aparayatir /atransfer");
	SendClientMessage(playerid, COLOR_LIGHTBLUE,"- GENEL - /ver /ode /bagis /zaman /satinal /id /muzik /lisansgoster /kiyafetler /kiyafetal /yeniliklerkapat /saticibul");
	SendClientMessage(playerid, COLOR_WHITE,"- GENEL - /yetenekler /animdurdur/intihar /arackirayardim /yoketlicense /hesapla /arac /aileler /yardimiste /uyeler /yuruyus");
	SendClientMessage(playerid, COLOR_LIGHTBLUE,"- GENEL - /iptal /kabulet /aractanat /potkullan /crackkullan /kontrakt /cagir /tohumkontrol /modifiyecibul /bilgilendirme");


	switch(PlayerInfo[playerid][pJob])
	{
		case 1: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /takipet");
		case 2: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM*** /avukatisbasi /serbestbirak /koru /arananlar");
		case 3: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM*** /sex");
		case 4: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM *** /potsat /cracksat /crackal /tohumal /tohumdik /tohumtopla /tohumkontrol");
		case 5: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /yoketcar");
		case 7: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM *** /tamir /nos /hidrolik /tamtamir /tisbasi");
		case 8: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /zirhsat /ustunuara");
		case 9: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM *** /getmats /materyalsat /silahsat");
		//case 10: SendClientMessage(playerid,COLOR_WHITE,"*** JOB *** /sellnewcar");
		case 12: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /dovus /boxistatistik");
		case 14: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM *** /kasaal");
		//case 15: SendClientMessage(playerid,COLOR_WHITE,"*** JOB *** /papers /bring /teslimet");
		case 18: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /getmats /materyalsat /zanaat");
		case 19: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM *** /iceceksat");
		case 20: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /yukyukle /yukkontrol /yukcal");
		case 21: SendClientMessage(playerid,COLOR_LIGHTBLUE,"*** IS YARDIM *** /pizzaal");
	}
	switch(PlayerInfo[playerid][pJob2])
	{
		case 1: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /takipet");
		case 2: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /avukatisbasi /serbestbirak /koru /arananlar");
		case 3: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /seks");
		case 4: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /potsat /cracksat /crackal /tohumal /tohumdik /tohumtopla /tohumkontrol");
		case 5: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /yoketcar");
		case 7: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /tamir /nos /hidrolik /tamtamir /tisbasi");
		case 8: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /zirhsat /ustunuara");
		case 9: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /paketal /materyalsat /silahsat");
		//case 10: SendClientMessage(playerid,COLOR_WHITE,"*** JOB *** /sellnewcar");
		case 12: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /dovus");
		case 14: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /kasaal");
		//case 15: SendClientMessage(playerid,COLOR_WHITE,"*** JOB *** /papers /bring /teslimet");
		case 18: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /paketal /materyalsat /zanaat");
		case 19: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /iceceksat");
		case 20: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /yukyukle /yukkontrol /yukcal");
		case 21: SendClientMessage(playerid,COLOR_WHITE,"*** IS YARDIM *** /pizzaal");
	}

	switch(PlayerInfo[playerid][pFaction]) {
		case 1: {
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "*** LSPD *** (/r)adio (/d)epartments (/m)egafon (/su)cekle /lspd /mvb /aracaat /hapseat /arananlar /kelepce /tazer /elkoydenizcibelgesi");
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "*** LSPD *** /ustunuara /ustundenal /cezakes /dhaber /kapiyikir /davetet /rutbever /civikoy /civiyoket /civiler /rozet /merkezidagitim");
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "*** LSPD *** /barikatkur /barikatkaldir /elkoysurucubelgesi /aracbilgisi /amvb /acezakes /aracicek /aracicekmeyibirak /aracibagla");
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "*** LSPD *** /araciara /yukkontrol /yuktemizle /radarsilahi /destek /destekiptal /tohumlariyoket /barikatlarikaldir /parmakizi");
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "*** LSPD *** /sirenyoket barikatkur /kukekur /kukekaldir /kukelerikaldir");
			SendClientMessage(playerid, TEAM_BLUE_COLOR, "*** LSPD *** /bariyerkur /bariyerkaldir /bariyerlerikaldir /barikatlarikaldir /dmvbirak /lspdbirim /siren /surukle /elkoypilotbelgesi");
		}
		case 2: {
			SendClientMessage(playerid, TEAM_FBI_COLOR, "*** FBI *** (/r)adio (/d)epartments (/m)egafon (/su)cekle /fbi /mvb /aracaat /hapseat /arananlar /kelepce /tazer /surukle /elkoypilotbelgesi");
			SendClientMessage(playerid, TEAM_FBI_COLOR, "*** FBI *** /ustunuara /ustundenal /cezakes /dhaber /mrozet /kapiyikir /davetet /rutbever /civikoy /civiyoket /civiler /rozet /merkezidagitim");
			SendClientMessage(playerid, TEAM_FBI_COLOR, "*** FBI *** /barikatkur /kukekur /kukekaldir /kukelerikaldir /bariyerkur /bariyerkaldir /bariyerlerikaldir /barikatlarikaldir /barikatkaldir /elkoysurucubelgesi /aracbilgisi /amvb /acezakes /aracicek /aracicekmeyibirak /aracibagla");
			SendClientMessage(playerid, TEAM_FBI_COLOR, "*** FBI *** /araciara /yukkontrol /yuktemizle /radarsilahi /destek /destekiptal /tohumlariyoket /barikatlarikaldir");
			SendClientMessage(playerid, TEAM_FBI_COLOR, "*** FBI *** /sirenyoket /dmvbirak /fbibirim  /elkoydenizcibelgesi /parmakizi /siren");
		}
		case 3: {
			SendClientMessage(playerid, TEAM_MED_COLOR, "*** LSFMD *** (/r)adio (/d)epartments (/m)egafon /iyilestir /davetet /rutbever /lsfmd /lsfmdbirim /yaralilistesi /merkezidagitim");
			SendClientMessage(playerid, TEAM_MED_COLOR, "*** LSFMD *** /ykabul /ytasi /yaracaat /yteslimet /tohumlariyoket /fmdc /rozet /olusumaraclarispawnla");
		}
		case 4: {
			SendClientMessage(playerid, COLOR_TWRED, "*** HITMAN AJANSI *** (/f) /kontraktlar /goreval /siparis /rutbeler /profil /hrozet /hmesaj");
			SendClientMessage(playerid, COLOR_TWRED, "*** HITMAN AJANSI *** /bk /aracabombakoy /bombayial /davetet /rutbever /mekanigoster");
		}
		case 5: {
			SendClientMessage(playerid, COLOR_GOV, "*** GOVERNMENT *** (/r)adio (/d)epartments /gov /govbirim /dhaber /surukle /merkezidagitim");
			if(PlayerInfo[playerid][pDivision] == 5) {
			    SendClientMessage(playerid, COLOR_GOV, "*** GB *** (/r)adio (/d)epartments (/m)egafon (/su)cekle /mvb /aracaat /hapseat /arananlar /kelepce /tazer /rozetgoster /destek");
			    SendClientMessage(playerid, COLOR_GOV, "*** GB *** /destekiptal /parmakizi");
			}
		}
		case 6: {
			SendClientMessage(playerid, COLOR_WHITE, "*** LST *** (/r)adio /rozet /taksimetre");
		}
 		case 9: {
			SendClientMessage(playerid, COLOR_WHITE, "*** SAN News *** /haber /rozet (/r)adio /yayinaal /san");
			if(PlayerInfo[playerid][pRank] >= 4)
			    SendClientMessage(playerid, COLOR_WHITE, "*** SAN News *** /haberbitir /haberbaslat /yayindanat");

 			if(PlayerInfo[playerid][pLeader] == 9)
			    SendClientMessage(playerid, COLOR_WHITE, "*** SAN News *** /rutbever /olusumdanat /offlineolusumdanat");
		}
	}
	if(PlayerInfo[playerid][pGang] != 255) {
		if(PlayerInfo[playerid][pRank] < 5) {
			SendClientMessage(playerid, COLOR_WHITE, "*** AILE *** (/f) /kiyafetler /ailekasayardim /aileduyuru /pointbilgisi /ailearacispawnla");
		} else {
			SendClientMessage(playerid, COLOR_WHITE, "*** AILE *** (/f) /kiyafetler /ailekasayardim /aileyeparayatir /aparacek /akasadurum /elegecir /ayarla");
			SendClientMessage(playerid, COLOR_WHITE, "*** AILE *** /rutbeayarla /rutbeadiayarla /ailepark /gkilit /gkilital /pointbilgisi");
		}
	}

	if(PlayerInfo[playerid][pAdmin] >= 1)
		SendClientMessage(playerid, COLOR_WHITE, "*** ADMIN *** (/a)dmin (/ah)elp");

	if(PlayerInfo[playerid][pHelper] >= 1)
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Level 1 Helper ***  /c /hkanalkapat /nmute /yardimkabul /yardimistekleri /yardimbitir /pmbitir /pmkabul");

	if(PlayerInfo[playerid][pHelper] >= 2)
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Level 2 Helper ***  /nrn /flag");

	if(PlayerInfo[playerid][pHelper] >= 3)
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Level 3 Helper ***  /hsetint /hsetvw ");

	if(PlayerInfo[playerid][pHelper] >= 4)
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Level 4 Helper *** /clearchat(/cc) /hafk");

	if(PlayerInfo[playerid][pHelper] >= 5)
	SendClientMessage(playerid, COLOR_LIGHTBLUE, "*** Community Advisor *** /hjail /hkick ");

	if(PlayerInfo[playerid][pDonator] >= 1)
	    SendClientMessage(playerid, COLOR_YELLOW, "*** VIP *** /vip /cinsiyetdegistir /yasdegistir /plakadegistir /numaradegistir");

	if(PlayerInfo[playerid][pDonator] >= 3)
	    SendClientMessage(playerid, COLOR_YELLOW, "*** VIP *** /muzikkutusu /mkyardim /muzikdegistir");

	SendClientMessage(playerid, COLOR_WHITE,"*** DIGER *** /telefonyardim /aracyardim /evyardim /oyuncakyardim /kirayardim /isyardim /lideryardim /animhelp");
	SendClientMessage(playerid, COLOR_RED,"______________________________________________________________________________________________________________________________");
	return 1;
}

CMD:id(playerid, params[])
{
	new
		szMessage[128],
		szName[MAX_PLAYER_NAME],
		iTarget,
		iSuccess;

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /id [Oyuncu ID/sim]");

	foreach(Player, i) {
		GetPlayerName(i, szName, sizeof(szName));
		if(strfind(szName, params, true) != -1) {
			format(szMessage, sizeof(szMessage), "ID: %d | Isim: %s | Level: %d | Ping: %d", i, GetPlayerNameEx(i),  PlayerInfo[i][pLevel], GetPlayerPing(i));
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
			iSuccess ++;
		}
	}

	if(iSuccess == 0) {
		if(!sscanf(params, "u", iTarget)) {
			if(IsPlayerConnected(iTarget)) {
				format(szMessage, sizeof(szMessage), "ID: %d | Isim: %s | Level: %d | Ping: %d", iTarget, GetPlayerNameEx(iTarget),  PlayerInfo[iTarget][pLevel], GetPlayerPing(iTarget));
				SendClientMessage(playerid, COLOR_WHITE, szMessage);
				iSuccess ++;
			}
		}
	}

	if(iSuccess == 0)
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz kullanc belirlendi.");

	return 1;
}

CMD:skiptut(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
 		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
		giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /skiptut [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid)) {
		for(new t = 0; t < 54; t++) {
			TextDrawHideForPlayer(giveplayerid, TutTxtDraw[t]);
		}

		SetPlayerInterior(giveplayerid, 0);
		SetPlayerVirtualWorld(giveplayerid, 0);
		TogglePlayerControllable(giveplayerid, 1);
		SetPlayerPos(giveplayerid, 1773.459350, -1942.273437, 13.569922);
		SetPlayerFacingAngle(giveplayerid, 329.64);
		SetCameraBehindPlayer(giveplayerid);

		InsideTut[giveplayerid] = 0;
		DeletePVar(giveplayerid, "DoktorMasrafi");
		SetPlayerColor(giveplayerid,TEAM_HIT_COLOR);
		PlayerInfo[giveplayerid][pTut] = 1;
		PlayerInfo[giveplayerid][pSex] = 1;
		PlayerInfo[giveplayerid][pAge] = 25;

	    if(PlayerInfo[giveplayerid][pSex] == 1) {
	        PlayerInfo[giveplayerid][pSkin] = 299;
	    } else {
	        PlayerInfo[giveplayerid][pSkin] = 55;
	    }
        SetPlayerSkin(giveplayerid, 299);

		SetPlayerSkin(giveplayerid, PlayerInfo[giveplayerid][pSkin]);

		ClearChatbox(giveplayerid);
		new string[128];
		format(string, sizeof(string), "Master RPG'ye hogeldiniz, %s.", GetPlayerNameEx(giveplayerid));
		SendClientMessage(giveplayerid, COLOR_NEWS, string);

		format(string, sizeof(string), "~w~Hosgeldiniz~n~~w~%s", GetPlayerNameEx(giveplayerid));
        GameTextForPlayer(giveplayerid, string, 5000, 1);

		SendClientMessage(giveplayerid, COLOR_YELLOW, "Sistemsel sorularnz iin /n komutunu kullanabilirsiniz.");

		new
			motdstring[128];

		format(motdstring, sizeof(motdstring), "Haberler: %s", GlobalMOTD);
		SendClientMessage(giveplayerid, COLOR_WHITE, motdstring);
		
		DeletePVar(giveplayerid, "IsFrozen");

		TutorialProgress[giveplayerid] = 0;
	}
	return 1;
}

CMD:pozisyon(playerid, params[]) {
    new
		myString[128],
		Float:a;

    GetPlayerFacingAngle(playerid, a);

    format(myString, sizeof(myString), "An: %0.2f", a);
    SendClientMessage(playerid, 0xFFFFFFFF, myString);

    new Float:x, Float:y, Float:z;
    GetPlayerPos(playerid, x, y, z);

    format(myString, sizeof(myString), "Pozisyonun: %f, %f, %f", x, y, z);
    SendClientMessage(playerid, 0xFFFFFFFF, myString);
    return 1;
}

CMD:serverbilgisi(playerid, params[]) {
	new
		string[128],
		iVehCount,
		x;

	while(x < MAX_VEHICLES)
		if(GetVehicleModel(++x))
			++iVehCount;

	format(string,sizeof(string),"Sunucu Istatistikleri - Master RPG %s (07 ubat 2017'den beri kaytl olan).",SERVER_VERSION);
	SendClientMessage(playerid, COLOR_NEWS, string);
	format(string, sizeof(string), "* Nesneler: %d | Ilerleme: %d | Harita Simgeleri: %d | 3D Metin Etiketleri: %d | Max. Evler: %d",CountDynamicObjects(),CountDynamicPickups(),CountDynamicMapIcons(),CountDynamic3DTextLabels(), MAX_HOUSES);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "* Giriler: %d | Balantlar: %d | Kaytlar: %d | Otomatik banlanan hackerlar: %d | alabilirlik sresi: %d saat",TotalLogin, TotalConnect, TotalRegister, TotalAutoBan, TotalUptime);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "* Bal oyuncular: %d | Zirve oyuncu saym: %d (%d/%d/%d) | Ykl oyuncu aralar: %d | Toplam aralar: %d",Iter_Count(Player),MaxPlayersConnected,MPDay,MPMonth,MPYear,PlayerCars, iVehCount);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:degisenler(playerid, params[])
	return cmd_yenilikler(playerid, params);

CMD:yenilikler(playerid, params[])
{
	new sy1[] = "{FFFFFF}{FF0000}1{FFFFFF}- Benzin Bidonu sistemi eklendi. (/bidonkullan)\n";
	new sy2[] = "{FFFFFF}{FF0000}2{FFFFFF}- Dinamik gatelerde (/gate) komutu tekrar (/pgate) olarak deitirildi.\n";
	new sy3[] = "{FFFFFF}{FF0000}3{FFFFFF}- Anti bunny sistemi eklendi.\n";
	new sy4[] = "{FFFFFF}{FF0000}4{FFFFFF}- Aralarn motorlarn N tuuyla altrma sistemi eklendi.\n";
	new sy5[] = "{FFFFFF}{FF0000}5{FFFFFF}- LSPD, LSFMD, SAN R6 karld.\n";
	new sy6[] = "{FFFFFF}{FF0000}6{FFFFFF}- LSPD n Yeni Map eklendi.\n";
	new sy7[] = "{FFFFFF}{FF0000}7{FFFFFF}- SAN nterioru deitirildi.\n";
	new sy8[] = "{FFFFFF}{FF0000}8{FFFFFF}- Trclk meslei eklendi.\n";
	new sy9[] = "{FFFFFF}{FF0000}9{FFFFFF}- LSPD iin (/yereyatir) komutu getirildi.\n";
	new sy10[] = "{FFFFFF}{FF0000}10{FFFFFF}- All Saints n Otopark yapld.\n";
	new sy11[] = "{FFFFFF}{FF0000}11{FFFFFF}- Dynamic Gate Sistemi kodland.\n";
	new sy12[] = "{FFFFFF}{FF0000}12{FFFFFF}- imento tasmacl meslei getirildi (Oceon Docks Materyal Teslimat kars)\n";
	new sy13[] = "{FFFFFF}{FF0000}13{FFFFFF}- VP Sistemindeki baz buglar giderildi (/boombox) komutu gibi.\n";
	new sy14[] = "{FFFFFF}{FF0000}14{FFFFFF}- ete ve aileler iin point sistemi aktif hale getirildi.\n";
	new sy15[] = "{FFFFFF}{FF0000}15{FFFFFF}- Uyuturucu vb. meslekleri sadece ete ve aile yeleri kullanabilecek.\n";
	new sy16[] = "{FFFFFF}{FF0000}16{FFFFFF}- (/renkler) komutu getirildi.\n";
	new sy17[] = "{FFFFFF}{FF0000}17{FFFFFF}- (/hapistekiler) komutu getirildi\n";
	new sy18[] = "{FFFFFF}{FF0000}18{FFFFFF}- En yksek Admin Level'i Server Owner'a karld.\n";
	new sy19[] = "{FFFFFF}{FF0000}19{FFFFFF}- Baz Admin komutlar dzeltildi.\n";
	new sy20[] = "{FFFFFF}{FF0000}20{FFFFFF}- (/adminler) komutu eklendi artk (/adminler) komutuyla aktif olan adminleri grebileceksiniz.\n";
	new sy21[] = "{FFFFFF}{FF0000}21{FFFFFF}- (/selfie) komutu eklendi.\n";
	new sy22[] = "{FFFFFF}{FF0000}22{FFFFFF}- Emniyet kemeri sistemi eklendi.(/emniyet)\n";
	new sy23[] = "{FFFFFF}{FF0000}23{FFFFFF}- Ara sinyal sistemi eklendi.(/asinyalyardim)\n";
	new sy24[] = "{FFFFFF}{FF0000}24{FFFFFF}- Helper'lerin kast yardm saysna bakmak iin (/nsayibak) komutu eklendi.\n";
	new sy25[] = "{FFFFFF}{FF0000}25{FFFFFF}- Sokaktan Sesler eklendi.\n";
	new sy26[] = "{FFFFFF}{FF0000}26{FFFFFF}- Kendi chatinizi temizlemek iin (/chatimitemizle) komutu eklendi.\n";
	new sy27[] = "{FFFFFF}{FF0000}27{FFFFFF}- Sunucu ierisinden bakma alp karma komutlar eklendi.\n";
	new sy28[] = "{FFFFFF}{FF0000}28{FFFFFF}- LSPD iin hazr megafon mesajlar bulunan (/hm) komutu eklendi.\n";
	new sy29[] = "{FFFFFF}{FF0000}29{FFFFFF}- (/silahbirak) komutu (/silahat) olarak deitirildi.\n";
	new sy30[] = "{FFFFFF}{FF0000}30{FFFFFF}- PM sistemi geldi.(/pm)\n";
	new sy31[] = "{FFFFFF}{FF0000}31{FFFFFF}- Adminler iin PM okuma sistemi geldi.\n";
	new sy32[] = "{FFFFFF}{FF0000}32{FFFFFF}- (/bugrapor) ve (/istek) komutlar eklendi.\n";
	new sy33[] = "{FFFFFF}{FF0000}33{FFFFFF}- Adminler iin (/evbug) komutu getirildi.\n";
	new sy34[] = "{FFFFFF}{FF0000}34{FFFFFF}- Ara kira sistemi eklendi.(/arackirayardim)\n";
	new sy35[] = "{FFFFFF}{FF0000}35{FFFFFF}- Balk meslei kaldrld.\n";
    new s[2048];
    format(s, sizeof s, "%s%s%s%s%s%s%s%s%s", sy1, sy2, sy3, sy4, sy5, sy6, sy7, sy8, sy9, sy10, sy11, sy12, sy13, sy14, sy15, sy16, sy17, sy18, sy19, sy20, sy21, sy22, sy23, sy24, sy25, sy26, sy27, sy28, sy29, sy30, sy31, sy32, sy33, sy34, sy35);
    return ShowPlayerDialogEx(playerid,4534,DIALOG_STYLE_MSGBOX,"{FF0000}Yenilikler v0.1{FFFFFF}",s,"Tamam","");
}

CMD:fixr(playerid, params[])
{
	PlayerFixRadio(playerid);
	return 1;
}

CMD:zaman(playerid, params[])
{
	new string[128];
    new mtext[20];
    new year, month,day;
    getdate(year, month, day);
    if(month == 1) { mtext = "Ocak"; }
    else if(month == 2) { mtext = "Subat"; }
    else if(month == 3) { mtext = "Mart"; }
    else if(month == 4) { mtext = "Nisan"; }
    else if(month == 5) { mtext = "Mayis"; }
    else if(month == 6) { mtext = "Haziran"; }
    else if(month == 7) { mtext = "Temmuz"; }
    else if(month == 8) { mtext = "Agustos"; }
    else if(month == 9) { mtext = "Eylul"; }
    else if(month == 10) { mtext = "Ekim"; }
    else if(month == 11) { mtext = "Kasim"; }
    else if(month == 12) { mtext = "Aralik"; }
    new hour,minuite,second;
    gettime(hour,minuite,second);
    FixHour(hour);
    hour = shifthour;
    if(minuite < 10)
	{
        if(PlayerInfo[playerid][pJailTime] > 0)
		{
            format(string, sizeof(string), "~r~%d %s~n~~g~|~w~%d:0%d~g~|~n~~w~Kalan Hapis Sresi: %d saniye", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]);
        }
        else
		{
            format(string, sizeof(string), "~r~%d %s~n~~g~|~w~%d:0%d~g~|", day, mtext, hour, minuite);
        }
    }
    else
	{
        if(PlayerInfo[playerid][pJailTime] > 0)
		{
            format(string, sizeof(string), "~r~%d %s~n~~g~|~w~%d:%d~g~|~n~~w~Kalan Hapis Sresi: %d saniye", day, mtext, hour, minuite, PlayerInfo[playerid][pJailTime]);
        }
        else
		{
            format(string, sizeof(string), "~r~%d %s~n~~g~|~w~%d:%d~g~|", day, mtext, hour, minuite);
        }
    }
    GameTextForPlayer(playerid, string, 5000, 1);
    return 1;
}

CMD:yazituraat(playerid, params[])
{
	if(PlayerInfo[playerid][pCash] < 1)
		return SendClientMessage(playerid, COLOR_GREY,"zerinizde hi bozuk para yok.");

    new
		szMessage[124];

    switch(random(2)) {
        case 0: format(szMessage, sizeof(szMessage), "* %s yaz tura att ve TURA geldi.", GetPlayerNameEx(playerid));
		case 1: format(szMessage, sizeof(szMessage), "* %s yaz tura att ve YAZI geldi.", GetPlayerNameEx(playerid));
    }
    return ProxDetector(5.0, playerid, szMessage, COLOR_NG,COLOR_NG,COLOR_NG,COLOR_NG,COLOR_NG);
}

CMD:kurallar(playerid, params[])
{
	SendClientMessage(playerid, COLOR_NEWS,"*** Sunucu Kurallar ***");
	SendClientMessage(playerid, COLOR_WHITE,"Deathmatching yasak (DM). Geersiz bir sebeple oyuncu ldrmek yasaktr.!");
	SendClientMessage(playerid, COLOR_WHITE,"Revengekilling yasak(RK). Bir oyuncu tarafndan ldrldysen, ardndan gidip onu ldrmeye almak yasak! Hastaneden knca, 30 dakikalk hafza kaybna uruyorsun.");
	SendClientMessage(playerid, COLOR_WHITE,"Metagaming yasak. Karakter d bilgisini oyun ii bilgi iin kullanma. IC kanal normal kullanm iin, OOC ise konuma banda /b kullanarak yaplr");
	SendClientMessage(playerid, COLOR_WHITE,"Ate etmeyi ktye kullanmak yasak. Quickswapping (QS), crackshooting (CS), c-bugging, c-sliding, quickshooting gibi.");
	SendClientMessage(playerid, COLOR_WHITE,"Powergaming yasak. Gerek hayatta yapamayacan eyleri yapmak, yani imkansz eyleri rol yapmak yasak. Bakalarn rolplay'a zorlama.");
	SendClientMessage(playerid, COLOR_WHITE,"NON-RP Car ramming ve ara park etmek yasak. Dier kiilere arabayla srekli vurmayn, oyuncular ldrmek iin stlerine araba park etmeyin.");
	SendClientMessage(playerid, COLOR_WHITE,"lmden, yakalanmadan, hapisten kamak iin asla alt-tab veya oyundan k yapmayn, yasak.");
	SendClientMessage(playerid, COLOR_WHITE,"Heliblading, planebombing ve ninjajacking yasak. Helikopter pervanesiyle oyuncu ldrmeye almayn.");
	SendClientMessage(playerid, COLOR_NEWS,"*** Bunlar kurallarmzn ksaca halidir. tm sunucu kurallar iin websitemizi ziyaret edin ***");
	return 1;
}

CMD:startlotto(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
  	}

  	SendClientMessage(playerid,COLOR_WHITE, "/startlotto komutu u an aktif deildir (sebep: aktif hale gelmeden nce ekonominin biraz gelimesini bekliyoruz).");
	return 1;
}

/* CMD:refmarket(playerid, params[]) {    //DEAKTF
	if(PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsnz.");

	if(GetPVarInt(playerid, "EventToken") != 0)
		return SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken referans shop'a eriemezsin.");

	if(PlayerInfo[playerid][pJailed] > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Hapisteyken bunu kullanamazsnz.");

	if(IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_GREY, "Aratayken bunu yapamazsnz.");

	new LineOne[465];
	new LineTwo[410];
	new string[875];

	format(LineOne,sizeof(LineOne),"{FFFFFF}50 pot, 25 crack {00F70C}(Fiyat: 1 jeton)\n{FFFFFF}2,500 materyal {00F70C}(Fiyat: 1 jeton)\n{FFFFFF}4 onur puan {00F70C}(Fiyat: 1 jeton)\n{FFFFFF}SPAS-12 & Deagle {00F70C}(Fiyat: 1 jeton)\n{FFFFFF}100 pot, 50 crack {00F70C}(Fiyat: 2 jeton)\n{FFFFFF}Tm silah seti {00F70C}(Fiyat: 2 jeton)\n{FFFFFF}8 onur puan {00F70C}(Fiyat: 2 jeton)\n{FFFFFF}5,000 materyal {00F70C}(Fiyat: 2 jeton)\n{FFFFFF}12 onur puan {00F70C}(Fiyat: 3 jeton)");
	format(LineTwo,sizeof(LineOne),"{FFFFFF}10,000 materyal {00F70C}(Fiyat: 3 jeton)\n{FFFFFF}16 onur puan {00F70C}(Fiyat: 4 jeton)\n{FFFFFF}15,000 materyal {00F70C}(Fiyat: 4 jeton)\n{FFFFFF}20 onur puan {00F70C}(Fiyat: 5 jeton)\n{FFFFFF}20,000 materyal {00F70C}(Fiyat: 5 jeton)\n{FFFFFF}Bir level atlatma & 2 gelitirme puan {00F70C}(Fiyat: 10 jeton)\n{FFFFFF}Bayiliklerin birinden ara seimi {00F70C}(Fiyat: 10 jeton)");
	format(string,sizeof(string),"%s\n%s",LineOne, LineTwo);

	ShowPlayerDialogEx(playerid, DIALOG_REFSHOP, DIALOG_STYLE_LIST, "Referans shop", string, "Satn Al", "Iptal");
    return 1;
} */ //DEAKTF

CMD:gmx(playerid, params[]) {
	return cmd_restartserver(playerid, params);
}

CMD:restartserver(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 7)
        return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 7)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }

    SetTimer("ServerRestart", 30000, false);
    SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Sunucu 30 saniye iinde yeniden balayacak.");
    return 1;
}

CMD:toggletk(playerid, params[]) {

	if(PlayerInfo[playerid][pAdmin] < 4)
        return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	if(AntiTK == 0) {
		foreach(Player, i) {
			if(GetPVarInt(i, "EventToken") == 1) {
				SetPlayerTeam(i, -1);
			}
		}
		SendClientMessage(playerid,COLOR_WHITE, "Oyuncular teamkill yapabilirler.");
		AntiTK = 1;
	} else {
		foreach(Player, i) {
			if(GetPVarInt(i, "EventToken") == 1) {
				SetPlayerTeam(i, EventTeam[i]);
			}
		}
		SendClientMessage(playerid,COLOR_WHITE, "Oyuncular artk teamkill yapamazlar.");
		AntiTK = 0;
	}
	return 1;
}

CMD:entercar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
 		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
		carid,
		seatid;

	if(sscanf(params, "ii", carid, seatid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /entercar [carid] [seatid]");

	if(carid == INVALID_VEHICLE_ID)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu ara geersiz.");

	if(seatid > 3 || seatid < 0)
		return SendClientMessage(playerid, COLOR_GRAD1, "Koltuklar 0-3 aras olmal. (0 numara ofr koltuu)");

	PutPlayerInVehicle(playerid, carid, seatid);
	return 1;
}

CMD:ahelp(playerid, params[]) {
	return cmd_ah(playerid, params);
}

CMD:ah(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		SendClientMessage(playerid, COLOR_NEWS, "*** LEVEL 1 ADMIN *** /god /fly /admins /check /jail /kick /skick /aduty /showflags /nrn /namechanges /reports /ar /tr /post /nro /nao");
		SendClientMessage(playerid, COLOR_NEWS, "*** LEVEL 1 ADMIN *** /rtnc /sth /norevive /gotoid /gethere /spec /prisoners /nmute /nunmute /ban ");

		if(PlayerInfo[playerid][pAdmin] >= 2) {
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 2 ADMIN *** /freeze /unfreeze /gotoplayerscar /setvw /setint /oldcar /gotocar /entercar /jetpack /paused");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 2 ADMIN *** /afk /gotoco /(o)flag /clearflag /ban /sban /hhcheck /slap /listguns /warn /(o)ipcheck /ip /goto /mark /mark2");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 2 ADMIN *** /watch /hospital /sendtols /admute /adunmute /anetstats /serial /ikabul /ired /prison /benzinlerifulle");
            SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 2 ADMIN *** /setskin /release /listpnamechanges ");
		}
		if(PlayerInfo[playerid][pAdmin] >= 3) {
			SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 3 ADMIN *** /fine /pfine /takeadminweapons /takeweapons /force(death/hospital) /rto /rtoreset /genelmesaj /revive");
			SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 3 ADMIN *** /reloadpvehicles /apark /aimpound /nonewbie /owarn /ocheck /ofine /oprison /respawncar(s) /deletead /okills /kills");
			SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 3 ADMIN *** /noooc /gcto /gcreset /switchfam /cetearaclarispawnla /atip /barikatlarikaldir /flipveh /respawnall ");
		}
		if(PlayerInfo[playerid][pAdmin] >= 4) {
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 4 ADMIN *** /givenos /blowup /setname /oban /cnn /fixveh /sethp /setarmor /setarmorall /switchfac");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 4 ADMIN *** /adivorce /sprison /unban /unbanip /setinsurance /(goto/goin)house /pointfix /fackick");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 4 ADMIN *** /setmyname /destroypvehicle /(goto/goin)door /vehname /healnear /destroycar /destroycars");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 4 ADMIN *** /setfightingstyle  /fixveh  /deletehit /countdown  /clearall");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 4 ADMIN *** /oyuncaklistesi /leaders /skiptut /toggletk /entercar");
		}
		if(PlayerInfo[playerid][pAdmin] >= 5) {
			SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 5 ADMIN *** /pedit /permaban /paycheck /clearallreports /changeuserpassword ");
			SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 5 ADMIN *** /amotd /rmute /hedit /hname /setadminname /fixvehall /cnnn /gotodoor /dedit");
            SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 5 ADMIN *** /forcesave /fcreate /fdelete /fedit /creategvehicle /destroygvehicle  ");
            SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 5 ADMIN *** /hnext /givelicense /asellhouse /eventhelp /dd(edit/next/near/name/pass) /refund ");
            SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 5 ADMIN *** /creategate /gedit /deletegate /setgate /gotogate /sethelper ");
            SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 5 ADMIN *** /createpvehicle /givegun ");

		}
		if(PlayerInfo[playerid][pAdmin] >= 6) {
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 6 ADMIN *** /edit /dmp(edit/next/near) /gotodmp /createdealership /destroydealership /createcdveh /destroycdveh ");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 6 ADMIN ***  /gnear /gused /setdonator /setmoney /givemoney /setstat /muzikbaslat /muzikdurdur  ");
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 6 ADMIN *** /objkoy /editobj /deleteobj /nearobj /duplicateobj /gotoobj /saveobjects /objectid /objectidkapa ");
		}
		if(PlayerInfo[playerid][pAdmin] >= 7) {
			SendClientMessage(playerid, COLOR_NEWS,"*** LEVEL 7 ADMIN *** /makeleader /forceoffduty /restartserver /setweather ");
		}
        if(PlayerInfo[playerid][pAdmin] >= 8) {
			SendClientMessage(playerid, COLOR_WHITE,"*** LEVEL 8 ADMIN *** /setadmin /createdealership /destroydealership /bakimaal /bakimdancikar ");
			
		}
        if(PlayerInfo[playerid][pAdmin] >= 9) {
			SendClientMessage(playerid, COLOR_NEWS,"*** SERVER OWNER *** RCON GR ");

		}

		if(PlayerInfo[playerid][pBanAppealer] > 0) SendClientMessage(playerid, COLOR_GRAD5, "*** BAN YARDIM *** /unban /unbanip");
		if(PlayerInfo[playerid][pGangMod] > 0) SendClientMessage(playerid, COLOR_GRAD5, "*** AILE *** /fedit");
	}
	return 1;
}

CMD:bagis(playerid, params[]) {
	new
		string[128],
		moneys;

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /bagis [miktar]");

	moneys = strval(params);

	if(moneys < 0)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu yeterli deil!");

	if(GetPlayerCash(playerid) < moneys)
		return SendClientMessage(playerid, COLOR_GRAD1, "Yeterli paran yok.");

	GivePlayerCash(playerid, -moneys);
	format(string, sizeof(string), "%s, $%d ban iin teekkrler.",GetPlayerNameEx(playerid), moneys);
	PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
	SendClientMessage(playerid, COLOR_GRAD1, string);
	return 1;
}

CMD:gelisimsifirla(playerid, params[]) {
	if(gPlayerLogged[playerid] == 0) {
		SendClientMessage(playerid, COLOR_GRAD1, "Giri yapmadnz.");
	}
	else if(GetPlayerCash(playerid) < 10000) {
		SendClientMessage(playerid, COLOR_GRAD1, "Gelitirme puanlarn sfrlamak iin $10000 gerekli.");
	}
	else if(PlayerInfo[playerid][pLevel] < 2) {
		SendClientMessage(playerid, COLOR_GRAD1, "Minimum level 2 olmalsn.");
	}
	else {
		PlayerInfo[playerid][gPupgrade] = (PlayerInfo[playerid][pLevel]-2)*2;
		PlayerInfo[playerid][pSarmor] = 0.0;

		new	bool: iSaveHouses; // We don't want to save houses every time

		if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID) {
			HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade] = 1;
			iSaveHouses = true;
		}
		if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID) {
			HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade] = 1;
			iSaveHouses = true;
		}
		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			PlayerVehicleInfo[playerid][d][pvWepUpgrade] = 0;
		}
		if(iSaveHouses) SaveHouses();

		GivePlayerCash(playerid,-10000);
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);

		new	szMessage[73];

		format(szMessage, sizeof(szMessage), "Gelitirmelerini sfrladn - u an %i tane kullanlmam gelitirme puann var.",PlayerInfo[playerid][gPupgrade]);
		SendClientMessage(playerid, COLOR_GRAD2, szMessage);
	}
	return 1;
}

CMD:leaders(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		SendClientMessage(playerid, COLOR_WHITE, "Online kurulu liderleri:");

		new	string[128], sz_FacInfo[3][64];

		foreach(Player, i) if(PlayerInfo[i][pLeader] >= 1) {
			GetPlayerFactionInfo(i, sz_FacInfo[0], sz_FacInfo[1], sz_FacInfo[2]);
			format(string, sizeof(string), "(%s) %s %s", sz_FacInfo[2], sz_FacInfo[0], GetPlayerNameEx(i));
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
	}
	return 1;
}
CMD:navigasyon(playerid, params[])
{
    ShowPlayerDialogEx(playerid, HARITA, DIALOG_STYLE_LIST, "Yer Se", "Los Santos Polis Departman(LSPD)\nFederal Bureau of Investigation(FBI)\nLos Santos Fire and Medical Departman(LSFMD)\nLos Santos (Merkez)\nDomino's Pizza\nOcean Docks (Kamyon-Tr)\nzel Mekan (( VIP ))\nLos Santos Trafik Yardm (DMV)", "Git", "Vazge");
    return 1;
}

CMD:meslekbul(playerid, params[])
{
	if(CheckPointCheck(playerid))
	{
 		SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
   		return 1;
   	}
	ShowPlayerDialogEx(playerid, FINDJOB, DIALOG_STYLE_LIST, "Meslek se", "Dedektif\nAvukat\nHayat Kadn\nUyuturucu Satcs\nTamirci\nBodyguard\nSilah Satcs\nBoksr\nUyuturucu Kaaks\nTaksici\nZanaatkar\nBarmen\nKamyon ofr\nTr ofr\nimento ofr", "Se", "Iptal");
    return 1;
}

CMD:tokalas(playerid, params[])
{
	new string[128], giveplayerid, style;
	if(sscanf(params, "ud", giveplayerid, style)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /tokalas [Oyuncu ID/sim] [style (1-8)]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid == playerid)
		{
			SendClientMessage(playerid, COLOR_GREY, "Kendi elinle tokalaamazsn.");
			return 1;
		}
		if(style > 0 && style < 11)
		{
			new Float: ppFloats[3];

			GetPlayerPos(giveplayerid, ppFloats[0], ppFloats[1], ppFloats[2]);

			if(!IsPlayerInRangeOfPoint(playerid, 5, ppFloats[0], ppFloats[1], ppFloats[2]))
			{
				SendClientMessage(playerid, COLOR_GREY, "ok uzaktasn. u an el skamazsn.");
				return 1;
			}

			ShakeHandRequest[giveplayerid] = playerid;
			ShakeHandStyle[giveplayerid] = style;

			PreloadAnims(giveplayerid);
			PreloadAnims(playerid);

			format(string, sizeof(string), " %s kiisinin elini skmak istediniz, yant vermesi iin bekleyin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);

			format(string, sizeof(string), "%s kiisi elinizi skmak istedi, kabul etmek iin '/kabulet tokalas' .", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /tokalas [Oyuncu ID/sim] [style (1-8)]");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:levelatla(playerid, params[])
{
	if(gPlayerLogged[playerid] != 0)
	{
		if(PlayerInfo[playerid][pLevel] >= 0)
		{
			new nxtlevel = PlayerInfo[playerid][pLevel]+1;
			new costlevel = nxtlevel*2500;
			new expamount = nxtlevel*levelexp;

			if(GetPlayerCash(playerid) < costlevel)
			{
				new string[128];
				format(string, sizeof(string), "Yeterli paran yok ($%d).",costlevel);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				return 1;
			}
			else if(PlayerInfo[playerid][pRespect] < expamount)
			{
				new string[58];
				format(string, sizeof(string), "Bir sonraki leveli almak iin %d onur puan daha gerekli.", expamount - PlayerInfo[playerid][pRespect]);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				return 1;
			}
			else
			{
				new string[92];
				format(string, sizeof(string), "~g~LEVEL ATLADIN~n~~w~Level %d oldun", nxtlevel);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				GivePlayerCash(playerid, (-costlevel));
				PlayerInfo[playerid][pLevel]++;
				PlayerInfo[playerid][pRespect] = PlayerInfo[playerid][pRespect]-expamount;
				PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
				GameTextForPlayer(playerid, string, 5000, 1);
				format(string, sizeof(string), "Level %d, $%d fiyata satn aldn ve %i gelitirme puan kazandn! /gelisim komutu ile kullanabilirsin.", nxtlevel, costlevel, PlayerInfo[playerid][gPupgrade]);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);
			}
		}
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Giri yapmadn.");
	}
	return 1;
}

CMD:gelisim(playerid, params[])
{
	if(isnull(params))
	{
		new string[64];
		format(string, sizeof(string), "KULLANIM: /gelisim [upgradename] ( %d gelitirme puann var).",PlayerInfo[playerid][gPupgrade]);
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		SendClientMessage(playerid, COLOR_WHITE,"*** GELISTIRMELER ***");
		SendClientMessage(playerid, COLOR_GRAD2,string);
		//SendClientMessage(playerid, COLOR_GRAD5, "armor gunlocker gunlocker2 cargunlocker");
		SendClientMessage(playerid, COLOR_GRAD5, "armor gunlocker cargunlocker");
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		return 1;
	}
	if(PlayerInfo[playerid][gPupgrade] >= 1)
	{
		if(PlayerInfo[playerid][pLevel] >= 1 && strcmp(params, "armor", true) == 0)
		{
			if(PlayerInfo[playerid][pSarmor] < 100)
			{
				new string[51];
				++PlayerInfo[playerid][pSarmor];
				PlayerInfo[playerid][gPupgrade]--;
				format(string, sizeof(string), "Yeni Gelitirme: Artk %.2f zrh ile doacaksn.",PlayerInfo[playerid][pSarmor]);
				SendClientMessage(playerid, COLOR_GRAD6, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD6, "   Maksimum doma zrhna sahipsin..");
				return 1;
			}
		}
		else if(strcmp(params, "gunlocker", true) == 0)
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
			{
				if(PlayerInfo[playerid][gPupgrade] < 2)
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   Silah dolabn gelitirmek iin en az 2 onur puanna ihtiyacn var.");
					return 1;
				}
				switch(HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade])
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade] = 1;
							HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][0] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2, "IPUCU: Dolaplarn kullanmak iin, komutlarn /esilahsakla ve /esilahal. 1 dolap slotu kullanlabilir durumda.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][1] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2, "IPUCU: Dolaplarn kullanmak iin, komutlarn /esilahsakla ve /esilahal. 2 dolap slotu kullanlabilir durumda.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][2] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2, "IPUCU: Dolaplarn kullanmak iin, komutlarn /esilahsakla ve /esilahal. 3 dolap slotu kullanlabilir durumda.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][3] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2, "IPUCU: Dolaplarn kullanmak iin, komutlarn /esilahsakla ve /esilahal. 4 dolap slotu kullanlabilir durumda.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][4] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2, "IPUCU: Dolaplarn kullanmak iin, komutlarn /esilahsakla ve /esilahal. 5 dolap slotu kullanlabilir durumda.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 5:
					{
						SendClientMessage(playerid, COLOR_WHITE, "zgnm, kullanlabilir durumda bo slot yok.");
						return 1;
					}
				}
				PlayerInfo[playerid][gPupgrade] -= 2;
				SaveHouses();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Bir ev sahibi deilsin.");
				return 1;
			}
		}
		// Second houses disabled for now
		/*else if(strcmp(params, "gunlocker2", true) == 0)
		{
			new playername[MAX_PLAYER_NAME];
			GetPlayerName(playerid, playername, sizeof(playername));
			if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)
			{
				if(PlayerInfo[playerid][gPupgrade] < 2)
				{
					SendClientMessage(playerid, COLOR_GRAD6, "   You need at least 2 respect points.");
					return 1;
				}
				switch(HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade])
				{
					case 0:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade] = 1;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][0] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2,"IPUCU: To use your lockers, the commands are /esilahsakla and /esilahal. You have 1 locker space available.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 1:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][1] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2,"IPUCU: To use your lockers, the commands are /esilahsakla and /esilahal. You have 2 locker space available.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 2:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][2] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2,"IPUCU: To use your lockers, the commands are /esilahsakla and /esilahal. You have 3 locker space available.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 3:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][3] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2,"IPUCU: To use your lockers, the commands are /esilahsakla and /esilahal. You have 4 locker space available.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 4:
					{
						if(PlayerInfo[playerid][pCash] >= 5000)
						{
							PlayerInfo[playerid][pCash] -= 5000;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade]++;
							HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][4] = 0;
							SendClientMessage(playerid, COLOR_WHITE, "Yeni bir silah slotu satn aldn, $5000 ile cretlendirildi.");
							SendClientMessage(playerid, COLOR_GRAD2,"IPUCU: To use your lockers, the commands are /esilahsakla and /esilahal. You have 5 locker space available.");
						}
						else
						{
							SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok ($5000).");
							return 1;
						}
					}
					case 5:
					{
						SendClientMessage(playerid, COLOR_WHITE, "Sorry, there are no more spaces available.");
						return 1;
					}
				}
				PlayerInfo[playerid][gPupgrade]--;
				SaveHouses();
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, " You don't own a second house.");
				return 1;
			}
		}*/
		else if(strcmp(params, "cargunlocker", true) == 0)
		{
			new Float: x, Float: y, Float: z;
			for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
			{
				if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
				if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
				{
					if(PlayerInfo[playerid][gPupgrade] < 2)
					{
						SendClientMessage(playerid, COLOR_GRAD6, "   En az 2 onur puanna ihtiyacn var.");
						return 1;
					}
					if(PlayerVehicleInfo[playerid][d][pvWepUpgrade] < 2)
					{
						new string[114];
						GameTextForPlayer(playerid,"~r~Ara Silah Dolab Gelitirildi!",5000,6);
						PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
						PlayerVehicleInfo[playerid][d][pvWepUpgrade]++;
						PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]-2;
						SendClientMessage(playerid, COLOR_WHITE, "Yeni bir ara dolap slotu satn aldn.");
						format(string, sizeof(string), "IPUCU: Ara dolaplarn kullanmak iin, komutlarn /aracakoy ve /aractanal. %d adet kullanlabilir slotun var.", PlayerVehicleInfo[playerid][d][pvWepUpgrade]+1);
						SendClientMessage(playerid, COLOR_GRAD2, string);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "Ara silah slotlarn zaten gelitirdin.");
						return 1;
					}
				}
			}
			SendClientMessage(playerid, COLOR_GREY, "Sahip olduun arabalara/arabaya yakn deilsin.");
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD6, "   Tanmlanamayan gelitirme.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD6, "   Hi gelitirme puann yok.");
		return 1;
	}
	return 1;
}

CMD:raporiptal(playerid, params[]) return cmd_iptal(playerid, "report");

CMD:iptal(playerid, params[])
{
	new
		string[128],
		choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Cancel __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /iptal [isim]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Sex, Materyal, Pot, Crack, Silah, Zanaat, Tamir, Avukat, Bodyguard, Arac, Dovus, Canliyayin, Rapor");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Taksi, Otobus, Doktor, Tamirci, Ceza, Sahitlik, Evlilik, Bosanmak, Icki, Ev, Kamyoncu, Tirci, Cimentocu");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}

	if(strcmp(choice,"sex",true) == 0) { SexOffer[playerid] = 999; SexPrice[playerid] = 0; }
	else if(strcmp(choice,"canliyayin",true) == 0) {
		if(TalkingLive[playerid] != INVALID_PLAYER_ID || LiveOffer[playerid] != INVALID_PLAYER_ID ) {
			cmd_yayinaal(TalkingLive[playerid], "");
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[LiveOffer[playerid]] = INVALID_PLAYER_ID;
			LiveOffer[LiveOffer[playerid]] = INVALID_PLAYER_ID;
			LiveOffer[TalkingLive[playerid]] = INVALID_PLAYER_ID;
		}
		TalkingLive[playerid] = INVALID_PLAYER_ID;
		LiveOffer[playerid] = INVALID_PLAYER_ID;
	}
	else if(strcmp(choice,"materyal",true) == 0) { MatsOffer[playerid] = 999; MatsPrice[playerid] = 0; MatsAmount[playerid] = 0; }
	else if(strcmp(choice,"pot",true) == 0) { PotOffer[playerid] = 999; PotPrice[playerid] = 0; PotGram[playerid] = 0; }
	else if(strcmp(choice,"crack",true) == 0) {  CrackOffer[playerid] = 999;  CrackPrice[playerid] = 0; CrackGram[playerid] = 0; }
	else if(strcmp(choice,"silah",true) == 0) { GunOffer[playerid] = 999; GunId[playerid] = 0; }
	else if(strcmp(choice,"zanaat",true) == 0) { CraftOffer[playerid] = 999; CraftId[playerid] = 0; }
	else if(strcmp(choice,"tamir",true) == 0) {	RepairOffer[playerid] = 999; RepairPrice[playerid] = 0; RepairCar[playerid] = 0; }
	else if(strcmp(choice,"avukat",true) == 0) { WantLawyer[playerid] = 0; CallLawyer[playerid] = 0; }
	else if(strcmp(choice,"bodyguard",true) == 0) { GuardOffer[playerid] = 999; GuardPrice[playerid] = 0; }
	else if(strcmp(choice,"arac",true) == 0) { VehicleOffer[playerid] = 999; VehiclePrice[playerid] = 0; VehicleId[playerid] = -1; }
	else if(strcmp(choice,"ev",true) == 0) { HouseOffer[playerid] = 999; HousePrice[playerid] = 0; House[playerid] = 0; }
	else if(strcmp(choice,"dovus",true) == 0) { BoxOffer[playerid] = 999; }
	else if(strcmp(choice,"sahitlik",true) == 0) { MarryWitnessOffer[playerid] = 999; }
	else if(strcmp(choice,"evlilik",true) == 0) { ProposeOffer[playerid] = 999; }
	else if(strcmp(choice,"bosanmak",true) == 0) { DivorceOffer[playerid] = 999; }
	else if(strcmp(choice,"icki",true) == 0) { DrinkOffer[playerid] = INVALID_PLAYER_ID; }
	else if(strcmp(choice,"rapor",true) == 0) {
		for(new i = 0; i < MAX_REPORTS; i++)
		{
			if(Reports[i][ReportFrom] == playerid && Reports[i][BugReport] == 0)
			{
				Reports[i][ReportFrom] = 999;
				Reports[i][BeingUsed] = 0;
				Reports[i][TimeToExpire] = 0;
			}
		}
	}
	else if(strcmp(choice,"kamyoncu",true) == 0) {
 		DestroyProgressBar(LoadTruckBar[playerid]);
		LoadTruckBar[playerid] = INVALID_BAR_ID;
		LoadTruckTime[playerid] = 0;
		DeletePVar(playerid, "TruckDeliver");
		TruckUsed[playerid] = INVALID_VEHICLE_ID;
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 		DisablePlayerCheckpoint(playerid);
    }
	else if(strcmp(choice,"tirci",true) == 0) {
		TirUsed[playerid] = INVALID_VEHICLE_ID;
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 		DisablePlayerCheckpoint(playerid);
	}
	else if(strcmp(choice,"Cimentocu",true) == 0) {
		CimentoUsed[playerid] = INVALID_VEHICLE_ID;
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 		DisablePlayerCheckpoint(playerid);
	}
	else if(strcmp(choice,"kontrakt",true) == 0) {
		new Float:X, Float:Y, Float:Z;
		GetPlayerPos(playerid, X, Y, Z);

 		if(!IsPlayerInRangeOfPoint(GoChase[playerid], 225, X, Y, Z))
 		{
			new Float:health;
			GetPlayerHealth(playerid, health);
			new hpint = floatround(health, floatround_round);
			if(hpint >=  80)
			{
				HitToGet[playerid] = 999;
				HitOffer[playerid] = 999;
				GetChased[GoChase[playerid]] = 999;
				GotHit[GoChase[playerid]] = 0;
				GoChase[playerid] = 999;
			} else return SendClientMessage(playerid, COLOR_GRAD1, "Cann 80'in altndaysa kontrat iptal edemezsin!");
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Kontrat iptal etmek iin hedefe ok yaknsn. Hedefle aranda daha fazla mesafe olmal.");
	}
	else if(strcmp(choice,"ceza",true) == 0) { TicketOffer[playerid] = 999; TicketMoney[playerid] = 0; }
	else if(strcmp(choice,"doktor",true) == 0) { if(IsPlayerConnected(MedicCall)) { if(MedicCall == playerid) { MedicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   u anki arayan sen deilsin!"); return 1; } } }
	else if(strcmp(choice,"tamirci",true) == 0) { if(IsPlayerConnected(MechanicCall)) { if(MechanicCall == playerid) { MechanicCall = 999; } else { SendClientMessage(playerid, COLOR_GREY, "   u anki arayan sen deilsin!"); return 1; } } }
	else if(strcmp(choice,"taksi",true) == 0)
	{
		if(TaxiCall < 999)
		{
			if(TransportDuty[playerid] == 1 && TaxiCallTime[playerid] > 0)
			{
				TaxiAccepted[playerid] = 999;
				GameTextForPlayer(playerid, "~w~ary~n~~r~Iptal ettin", 5000, 1);
				TaxiCallTime[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				TaxiCall = 999;
			}
			else
			{
				if(IsPlayerConnected(TaxiCall)) { if(TaxiCall == playerid) { TaxiCall = 999; } }
				foreach(Player, i)
				{
					if(TaxiAccepted[i] < 999)
					{
						if(TaxiAccepted[i] == playerid)
						{
							TaxiAccepted[i] = 999;
							GameTextForPlayer(i, "~w~Taksi aran kii~n~~r~ary iptal etti", 5000, 1);
							TaxiCallTime[i] = 0;
							DisablePlayerCheckpoint(i);
						}
					}
				}
			}
		}
	}
	else if(strcmp(choice,"otobus",true) == 0)
	{
		if(BusCall < 999)
		{
			if(TransportDuty[playerid] == 2 && BusCallTime[playerid] > 0)
			{
				BusAccepted[playerid] = 999;
				GameTextForPlayer(playerid, "~w~ary~n~~r~iptal ettin", 5000, 1);
				BusCallTime[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				BusCall = 999;
			}
			else
			{
				if(IsPlayerConnected(BusCall)) { if(BusCall == playerid) { BusCall = 999; } }
				foreach(Player, i)
				{
					if(BusAccepted[i] < 999)
					{
						if(BusAccepted[i] == playerid)
						{
							BusAccepted[i] = 999;
							GameTextForPlayer(i, "~w~Otobs aran kii~n~~r~ary iptal etti", 5000, 1);
							BusCallTime[i] = 0;
							DisablePlayerCheckpoint(i);
						}
					}
				}
			}
		}
	}
	else return cmd_iptal(playerid, "");
	format(string, sizeof(string), "* Iptal ettin: %s.", choice);
	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
	return 1;
}

CMD:silahlarim(playerid, params[])
{
	new string[128], myweapons[13][2], weaponname[50], encryption[256], name[MAX_PLAYER_NAME];

	GetPlayerName(playerid, name, sizeof(name));
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	format(string, sizeof(string), " %s silahlar: ( %d)", name, gettime());
	SendClientMessage(playerid, COLOR_WHITE, string);
	for (new i = 0; i < 13; i++)
	{
		GetPlayerWeaponData(playerid, i, myweapons[i][0], myweapons[i][1]);
		if(myweapons[i][0] > 0)
		{
			if(PlayerInfo[playerid][pGuns][i] == myweapons[i][0])
			{
				GetWeaponName(myweapons[i][0], weaponname, sizeof(weaponname));
				format(string, sizeof(string), "%s (%d)", weaponname, myweapons[i][0]);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(encryption, sizeof(encryption), "%s%d", encryption, myweapons[i][0]);
			}
		}
	}
	new year, month, day, hour, minute, second;
	getdate(year, month, day);
	gettime(hour, minute, second);
	format(encryption, sizeof(encryption), "%s%s%d%d%d%d%d6524", encryption, name, month, day, year, hour, minute);
	new encrypt = crc32(encryption);
	format(string, sizeof(string), "[%d/%d/%d %d:%d:%d] - [%d]", month, day, year, hour, minute,second, encrypt);
	SendClientMessage(playerid, COLOR_GREEN, string);
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	return 1;
}

CMD:aractanat(playerid, params[])
{
	new State;
	if(IsPlayerInAnyVehicle(playerid))
	{
		State=GetPlayerState(playerid);
		if(State!=PLAYER_STATE_DRIVER)
		{
			SendClientMessage(playerid,COLOR_GREY,"   ofr olarak sadece oturanlar atabilirsin!");
			return 1;
		}

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aractanat [Oyuncu ID/sim]");

		new test;
		test = GetPlayerVehicleID(playerid);
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendini atamazsn!"); return 1; }
				if(IsPlayerInVehicle(giveplayerid,test))
				{
					if(GetPVarInt(giveplayerid, "EMSAttempt") != 0) return SendClientMessage(playerid, COLOR_GRAD2, "Hastalar atamazsn!");
					format(string, sizeof(string), "* %s kiisini aratan attn.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s tarafndan aratan atldn.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicle(giveplayerid);
					format(string, sizeof(string), "* %s, %s kiisini aratan att.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "   Oyuncu arabada deil!");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Bunu kullanabilmek iin bir arata olman gerek!");
	}
	return 1;
}

CMD:refund(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 5)
	{
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
        return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

	new string[128], giveplayerid, item[32], amount;
	if(sscanf(params, "us[32]d", giveplayerid, item, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /refund [playerid] [item] [weapon ID or amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Eyalar: Gun, Mats, Pot, Crack");
  		SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
    	SendClientMessage(playerid, COLOR_GRAD4, "1: Brass Knuckles 2: Golf Club 3: Nite Stick 4: Knife 5: Baseball Bat 6: Shovel 7: Pool Cue 8: Katana");
     	SendClientMessage(playerid, COLOR_GRAD4, "10: Purple Dildo 11: Small White Vibrator 12: Large White Vibrator 13: Silver Vibrator 14: Flowers 15: Cane");
      	SendClientMessage(playerid, COLOR_GRAD3, "22: 9mm 23: Silenced 9mm 24: Desert Eagle 27: Combat Shotgun 28: Micro SMG (Mac 10) 29: SMG (MP5)");
       	SendClientMessage(playerid, COLOR_GRAD4, " 30: AK-47 31: M4 32: Tec9 33: Rifle 25: Shotgun 34: Sniper Rifle ");
       	SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
		return 1;
	}

	new sstring[128];
	if(strcmp(item, "gun", true) == 0)
	{
        if(amount < 1 || amount > 34 || amount == 9 || (amount >= 16 && amount <= 21) || amount == 26)
        { SendClientMessage(playerid, COLOR_GRAD1, "Bu silah iade edemezsin!"); return 1; }

        if(IsPlayerConnected(giveplayerid)) {
            if(PlayerInfo[giveplayerid][pConnectTime] < 2 && amount != 46 && amount != 43) return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun silah tamas yasaklanm");
            if(giveplayerid != INVALID_PLAYER_ID)
			{
                GivePlayerValidWeapon(giveplayerid, amount, 60000);

                new weaponname[32];
                GetWeaponName(amount, weaponname, sizeof(weaponname));

                format(sstring, sizeof(sstring), " %s kiisine silah iade ettin: ID %d (%s)!",GetPlayerNameEx(giveplayerid), amount, weaponname);
                SendClientMessage(playerid, COLOR_WHITE, sstring);

				format(sstring, sizeof(sstring), "Admin %s sana silah iade etti: ID %d (%s).", GetPlayerNameEx(playerid), amount, weaponname);
				SendClientMessage(giveplayerid, COLOR_WHITE, sstring);

				format(sstring, sizeof(sstring), "%s, %s kiisine silah iade etti: ID %d (%s).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount, weaponname);
				Log("logs/refunds.log", sstring);
            }
            else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
        }
    	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	if(strcmp(item, "mats", true) == 0)
	{
		if(amount < 1 || amount > 100000)
		{
		    SendClientMessage(playerid,COLOR_WHITE, "Bu miktar 1 ile 100.000 arasnda olmal.");
		    return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			PlayerInfo[giveplayerid][pMats] += amount;
			format(string, sizeof(string), "%s kiisine %d materyal iade ettin!",GetPlayerNameEx(giveplayerid), amount);
			SendClientMessage(playerid, COLOR_WHITE, string);

			format(string, sizeof(string), "Admin %s sana %d materyal iade etti.", GetPlayerNameEx(playerid), amount);
			SendClientMessage(giveplayerid, COLOR_WHITE, string);

			format(string, sizeof(string), "%s, %s kiisine %d materyal iade etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount);
			Log("logs/refunds.log", string);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	if(strcmp(item, "pot", true) == 0)
	{
		if(amount < 1 || amount > 100000)
		{
		    SendClientMessage(playerid,COLOR_WHITE, "Bu miktar 1 ile 100.000 arasnda olmal.");
		    return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			PlayerInfo[giveplayerid][pPot] += amount;
			format(string, sizeof(string), "%s kiisine %d gram pot iade ettin",GetPlayerNameEx(giveplayerid), amount);
			SendClientMessage(playerid, COLOR_WHITE, string);

			format(string, sizeof(string), "Admin %s sana %d gram pot iade etti.", GetPlayerNameEx(playerid), amount);
			SendClientMessage(giveplayerid, COLOR_WHITE, string);

			format(string, sizeof(string), "%s, %s kiisine %d gram pot iade etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount);
			Log("logs/refunds.log", string);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	if(strcmp(item, "crack", true) == 0)
	{
		if(amount < 1 || amount > 100000)
		{
		    SendClientMessage(playerid,COLOR_WHITE, "Bu miktar 1 ile 100.000 arasnda olmal.");
		    return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			PlayerInfo[giveplayerid][pCrack] += amount;
			format(string, sizeof(string), "%s kiisine %d gram crack iade ettin!",GetPlayerNameEx(giveplayerid), amount);
			SendClientMessage(playerid, COLOR_WHITE, string);

			format(string, sizeof(string), "Admin %s sana %d gram crack iade etti.", GetPlayerNameEx(playerid), amount);
			SendClientMessage(giveplayerid, COLOR_WHITE, string);

			format(string, sizeof(string), "%s, %s kiisine %d gram crack iade etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), amount);
			Log("logs/refunds.log", string);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:forceoffduty(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 7)
		return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");

	new
		string[128],
		giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /forceoffduty [Oyuncu ID/sim]");

	if(PlayerInfo[giveplayerid][pAdmin] < 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Bu oyuncu admin deil.");

	if(AdminDuty[giveplayerid] != 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Bu admin ibanda deil.");

	if(GetPlayerState(giveplayerid) == PLAYER_STATE_WASTED)
 		return SendClientMessage(playerid, COLOR_GRAD2, "Admin lyken bunu yapamazsn.");

	format(string, sizeof(string), "AdminKomut: %s, %s kiisini ibandan kard.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	ABroadCast(COLOR_LIGHTRED,string,1);

    if(AdminDuty[giveplayerid] != 0) {
		if(GetPlayerState(giveplayerid) == PLAYER_STATE_WASTED)
			return SendClientMessage(playerid, COLOR_GRAD2, "Onlar lyken bunu yapamazsn.");

		ResetPlayerWeapons(giveplayerid);
		SetPlayerArmedWeapon(giveplayerid, 0);

		if(Spectating[giveplayerid] > 0 && PlayerInfo[giveplayerid][pAdmin] >= 2) {
			GettingSpectated[Spectate[giveplayerid]] = 999;
			Spectating[giveplayerid] = 0;
			Spectate[giveplayerid] = 999;
			SetPVarInt(giveplayerid, "SpecOff", 1);
			TogglePlayerSpectating(giveplayerid, false);
			SetCameraBehindPlayer(giveplayerid);
		}

		if(MP3Station[giveplayerid] != 0) {
			MP3Station[giveplayerid] = 0;
			StopAudioStreamForPlayer(giveplayerid);
		}

		SetPlayerHealth(giveplayerid, PlayerInfo[giveplayerid][pHealth]);
		SetPlayerArmourEx(giveplayerid, PlayerInfo[giveplayerid][pArmor]);

		format(string, sizeof(string), "%s (ID %d - %s) iban brakt: Level %d Admin.", PlayerInfo[giveplayerid][pAdminName], giveplayerid, GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pAdmin]);
		ABroadCast(COLOR_WHITE, string, 1);

		if(PlayerInfo[giveplayerid][pAdmin] == 1) {
			SendClientMessage(giveplayerid, COLOR_YELLOW, "Admin olarak iban braktn, yine de Level 1 Admin komutlarna eriim hakkn var.");
		} else if(PlayerInfo[giveplayerid][pAdmin] > 1 && PlayerInfo[giveplayerid][pAdmin] < 6) {
			SendClientMessage(giveplayerid, COLOR_YELLOW, "Admin olarak iban braktn, ve sadece u komutlara eriimin var: /admins /check /jail /ban /sban /kick /skick /showflags /reports /nrn");
		} else if(PlayerInfo[giveplayerid][pAdmin] == 6) {
			SendClientMessage(giveplayerid, COLOR_YELLOW, "Admin olarak iban braktn, Level 6 Admin olduundan dolay tm komutlara eriimin var.");
		} else { }

		SendClientMessage(giveplayerid, COLOR_REALRED, "Hack programlarnz varsa kapatmay unutmayn(s0beit'i devred brakmak iin F12).");

		ResetPlayerVariables(giveplayerid);
		AttemptPlayerLogin(giveplayerid, AdminRelogPassword[giveplayerid]);
    }
    return 1;
}

CMD:nsayibak(playerid,params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
	    }

		new giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /nsayibak [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			new string[256];
			format(string, sizeof(string), "%s adl kiinin newbie puan>>>>- : %d",GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][Newbiepuan]);
			SendClientMessage(playerid,COLOR_LIGHTBLUE,string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "{FFFFFF}[{FF0000}@{FFFFFF}] Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:evbug(playerid, params[])
{
if(PlayerInfo[playerid][pAdmin] >= 8)
{
new giveplayerid;
if(sscanf(params, "d", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: {FFFFFF}/evbug [OyuncuID/Isim]");
PlayerInfo[giveplayerid][pHouse] = INVALID_HOUSE_ID;
PlayerInfo[giveplayerid][pHouse2] = INVALID_HOUSE_ID;
}
return 1;
}

CMD:asellhouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));

		new string[128], house;
		if(sscanf(params, "d", house)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /asellhouse [houseid]");

		HouseInfo[house][hLock] = 1;
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"Admin %s (IP: %s) evi satt: Ev ID %d (eski sahibi: %s).",GetPlayerNameEx(playerid),ip,house,HouseInfo[house][hOwner]);
		Log("logs/house.log", string);
		ClearHouse(house);
		format(HouseInfo[house][hOwner], 128, "Nobody");
		HouseInfo[house][hGLUpgrade] = 1;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~Evi sattn: %d.", house);
		GameTextForPlayer(playerid, string, 10000, 3);
		SaveHouses();
		DestroyPickup(HouseInfo[house][hPickupID]);
		HouseInfo[house][hPickupID] = CreatePickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ], -1);
		DestroyDynamic3DTextLabel(HouseInfo[house][hTextID]);
		format(string, sizeof(string), "Bu ev satlk!\n Level: %d\nID: %d\nFiyat: $%d\nEvi satn almak iin /evsatinal komutunu kullan",HouseInfo[house][hLevel],house,HouseInfo[house][hValue]);
		HouseInfo[house][hTextID] = CreateDynamic3DTextLabel(string, COLOR_HOUSEGREEN, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:intihar(playerid,params[])
{
	if(GetPVarInt(playerid, "EventToken") == 1 || GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0||PlayerInfo[playerid][pJailed]!=0||PlayerTied[playerid] == 1)
 		return SendClientMessage (playerid, COLOR_GRAD2, "u an bunu yapamazsn.");

	if(GetPVarInt(playerid, "EventToken") >= 1 || GetPVarInt(playerid, "PBM") > 0)
		ResetPlayerWeapons(playerid);


	new weaponid = GetPlayerWeapon(playerid), string[128];

	if(weaponid == 46)
		return SendClientMessage(playerid, COLOR_GRAD2, "lmek istiyorsan parat amaya alma.");
	else if(weaponid == 0)  {
		ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop",3.0,0,1,1,0,0);
		format(string, sizeof(string), "* %s etrafa bakt, gzleri yal, akana hzlca vurdu.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else if(weaponid == 22||weaponid == 23||weaponid == 24||weaponid == 25||weaponid == 29||weaponid == 30||weaponid == 31||weaponid == 33||weaponid == 26||weaponid == 27||weaponid == 28||weaponid == 32||weaponid == 34) {
		ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",3.0,0,1,1,0,0);
		format(string, sizeof(string), "* %s etrafna bakt, gzleri yal,beynini havaya uurdu.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else if(weaponid == 4) {
		ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",3.0,0,1,1,0,0);
		format(string, sizeof(string), "* %s hzlca ba kapp boazn kesti.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else if(weaponid == 41||weaponid == 2||weaponid == 3||weaponid == 5||weaponid == 6||weaponid == 7||weaponid == 10||weaponid == 11||weaponid == 12||weaponid == 13||weaponid == 14||weaponid == 15)  {
		format(string, sizeof(string), "* %s etrafa bakt, gzleri yal adamn beynini silahla havaya uurdu.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid,"ON_LOOKERS","lkup_loop",3.0,0,1,1,0,0);
	} else if(weaponid == 43) {
		format(string, sizeof(string), "* %s etrafa bakp gzne yaptrd.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	} else if(weaponid == 1||weaponid == 8||weaponid == 9) {
		format(string, sizeof(string), "* %s kendisini doramaya balad.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid,"KNIFE","KILL_Knife_Ped_Die",3.0,0,1,1,0,0);
	} else if(weaponid == 16||weaponid == 17||weaponid == 18||weaponid == 39||weaponid == 40) {
		format(string, sizeof(string), "* %s etrafna bakt, gz yal bir ekilde patlad.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		ApplyAnimation(playerid,"ped","floor_hit_f",3.0,1,0,1,1,0);
		new Float: killX, Float: killY, Float: killZ;
		GetPlayerPos(playerid,killX,killY,killZ);
		CreateExplosion(killX,killY,killZ,12,20);
	} else if(weaponid == 35||weaponid == 36||weaponid == 37||weaponid == 38) {
		ApplyAnimation(playerid,"ped","floor_hit",3.0,1,1,1,0,0);
		format(string, sizeof(string), "* %s koklad ve kendilerini havaya uurdu.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new Float: killX, Float: killY, Float: killZ;
		GetPlayerPos(playerid,killX,killY,killZ);
		CreateExplosion(killX,killY,killZ,12,20);
	} else {
		format(string, sizeof(string), "* %s etrafna bakt ve omzunu silkeledi.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	JustSuicided[playerid] = 1;
	SetPlayerHealth(playerid, 0);
	return true;
}

CMD:setstat(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
	    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid, statcode, amount;
		if(sscanf(params, "udd", giveplayerid, statcode, amount)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setstat [Oyuncu ID/sim] [statcode] [amount]");
			SendClientMessage(playerid, COLOR_GRAD4, "|1 Level |2 SpawnArmor |3 UpgradePoints |4 BankAccount |5 PhoneNumber |6 RespectPoints |7 Playing hours");
			SendClientMessage(playerid, COLOR_GRAD2, "|8 Gang |9 Det |10 Lawyer |11 Mech |12 Drug |13 Whore |14 Box |15 Arms |16 Materials |17 Pot |18 Crack");
			SendClientMessage(playerid, COLOR_GRAD2, "|20 Job |21 Rank |22 Packages |23 Crates |24 Smuggler |25 Warnings |26 Screwdriver |27 Age");
			SendClientMessage(playerid, COLOR_GRAD1, "|28 Sex |29 NMute |30 AdMute |31 Faction |32 RMute |33 Carjacker |34 Trucker |35 Crimes 36| Arrests");
			return 1;
		}

		if(IsPlayerConnected(giveplayerid)) {
			switch(statcode) {
				case 1: {
					PlayerInfo[giveplayerid][pLevel] = amount;
					format(string, sizeof(string), "   %s kiisinin Leveli %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
					SetPlayerScore(giveplayerid, PlayerInfo[giveplayerid][pLevel]);
				}
				case 2: {
					PlayerInfo[giveplayerid][pSarmor] = amount;
					format(string, sizeof(string), "   %s kiisinin zrh %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 3: {
					PlayerInfo[giveplayerid][gPupgrade] = amount;
					format(string, sizeof(string), "   %s kiisinin gelitirme puanlar %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 4: {
					PlayerInfo[giveplayerid][pBank] = amount;
					format(string, sizeof(string), "   %s kiisinin banka hesab $%d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 5: {
					if(AdminDuty[giveplayerid] == 1)
					    return SendClientMessage(playerid, COLOR_GREY, "Ibandaki adminlerin telefon numarasn deitiremezsin.");

					if(amount != 555 && amount != 911 && amount != 0 && amount != 912) {
						if(CheckVPH(amount) == 0) {
							ReplacePH(PlayerInfo[giveplayerid][pNumber], amount);
							PlayerInfo[giveplayerid][pNumber] = amount;
							format(string, sizeof(string), "   %s kiisinin telefon numaras %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
						} else {
							format(string, sizeof(string), "Telefon numaras %d u an kullanmda. Baka bir numara dene.");
							SendClientMessage(playerid, COLOR_WHITE, string);
							return 1;
						}
					} else SendClientMessage(playerid, COLOR_GREY, "Istenen numara senaryo tarafndan rezerve edilmi.");
				}
				case 6: {
					PlayerInfo[giveplayerid][pRespect] = amount;
					format(string, sizeof(string), "   %s kiisinin onur puanlar %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 7: {
					PlayerInfo[giveplayerid][pConnectTime] = amount;
					format(string, sizeof(string), "   %s kiisinin oyun oynama saati %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 8: {
					PlayerInfo[giveplayerid][pGang] = amount-1;
					format(string, sizeof(string), "   %s kiisinin aile yelii %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 9: {
					PlayerInfo[giveplayerid][pDetSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Dedektif yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 10: {
					PlayerInfo[giveplayerid][pLawSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Avukat yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 11: {
					PlayerInfo[giveplayerid][pMechSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Tamirci yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 12: {
					PlayerInfo[giveplayerid][pDrugsSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Uyuturucu Satcs yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 13: {
					PlayerInfo[giveplayerid][pSexSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Hayat Kadn yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 14: {
					PlayerInfo[giveplayerid][pBoxSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Boks yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 15: {
					PlayerInfo[giveplayerid][pArmsSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Silah yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 16: {
					PlayerInfo[giveplayerid][pMats] = amount;
					format(string, sizeof(string), "   %s kiisinin Materyalleri %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 17: {
					PlayerInfo[giveplayerid][pPot] = amount;
					format(string, sizeof(string), "   %s kiisinin Potlar %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 18: {
					PlayerInfo[giveplayerid][pCrack] = amount;
					format(string, sizeof(string), "   %s kiisinin Crackleri %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 20: {
					PlayerInfo[giveplayerid][pJob] = amount;
					format(string, sizeof(string), "   %s kiisinin meslei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 21: {
					PlayerInfo[giveplayerid][pRank] = amount;
					format(string, sizeof(string), "   %s kiisinin Seviyesi %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 22: {
					SetPVarInt(playerid, "Packages", amount);
					format(string, sizeof(string), "   %s kiisinin Materyal Paketleri %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 23: {
					PlayerInfo[giveplayerid][pCrates] = amount;
					format(string, sizeof(string), "   %s kiisinin Uyuturucu kutular %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 24: {
					PlayerInfo[giveplayerid][pSmugSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Kaaklk yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 25: {
					PlayerInfo[giveplayerid][pWarns] = amount;
					format(string, sizeof(string), "   %s kiisinin Uyarlar %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 26: {
					PlayerInfo[giveplayerid][pScrewdriver] = amount;
					format(string, sizeof(string), "   %s kiisinin Tornavidalar %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 27: {
					PlayerInfo[giveplayerid][pAge] = amount;
					format(string, sizeof(string), "   %s kiisinin Ya %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 28: {
					PlayerInfo[giveplayerid][pSex] = amount;
					format(string, sizeof(string), "   %s kiisinin cinsiyeti %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 29: {
					PlayerInfo[giveplayerid][pNMuteTotal] = amount;
					format(string, sizeof(string), "   %s kiisinin Toplam Newbie Mutesi %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 30: {
					PlayerInfo[giveplayerid][pADMuteTotal] = amount;
					format(string, sizeof(string), "   %s kiisinin Toplam Reklam Mutesi %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 31: {
					PlayerInfo[giveplayerid][pFaction] = amount;
					format(string, sizeof(string), "   %s kiisinin Kuruluu %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 32: {
					PlayerInfo[giveplayerid][pRMutedTotal] = amount;
					format(string, sizeof(string), "   %s kiisinin Report Mutesi %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 33: {
					PlayerInfo[giveplayerid][pCarSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Araba alma yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 34: {
					PlayerInfo[giveplayerid][pTruckSkill] = amount;
					format(string, sizeof(string), "   %s kiisinin Kamyonculuk yetenei %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 35: {
					PlayerInfo[giveplayerid][pCrimes] = amount;
					format(string, sizeof(string), "   %s kiisinin Sular %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				case 36: {
					PlayerInfo[giveplayerid][pArrested] = amount;
					format(string, sizeof(string), "   %s kiisinin Yakalanmalar %d olarak ayarland", GetPlayerNameEx(giveplayerid), amount);
				}
				default: {
					format(string, sizeof(string), "   Geersiz stat kodu.", amount);
				}
			}

			new log[128];
			format(log, sizeof(log), "%s by %s", string, GetPlayerNameEx(playerid));
			Log("logs/stats.log", log);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:setinsurance(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, insurance;
		if(sscanf(params, "ud", giveplayerid, insurance))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setinsurance [Oyuncu ID/sim] [insurance]");
			SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Sigorta: 0, 1, 2");
			return 1;
		}

		if(insurance >= 0 && insurance <= 2)
		{
			format(string, sizeof(string), " Sigortan %d olarak deitirildi.", insurance);
			SendClientMessage(giveplayerid,COLOR_YELLOW,string);
			format(string, sizeof(string), " %s kiisinin sigortasn %d olarak deitirdin.", GetPlayerNameEx(giveplayerid), insurance);
			SendClientMessage(playerid,COLOR_YELLOW,string);
			PlayerInfo[giveplayerid][pInsurance] = insurance;
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:countdown(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		SetTimer("Three", 1000, 0);
		SetTimer("Two", 2000, 0);
		SetTimer("One", 3000, 0);
		SetTimer("GoGoGo", 4000, 0);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

forward Three();
public Three()
{
 	SendClientMessageToAllEx(COLOR_LIGHTBLUE, "3");
	return 1;
}

forward Two();
public Two()
{
	SendClientMessageToAllEx(COLOR_LIGHTBLUE, "2");
	return 1;
}

forward One();
public One()
{
	SendClientMessageToAllEx(COLOR_LIGHTBLUE, "1");
 	return 1;
}

forward GoGoGo();
public GoGoGo()
{
	SendClientMessageToAllEx(COLOR_LIGHTBLUE, "HADI!");
 	return 1;
}

CMD:fackick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /fackick [Oyuncu ID/sim]");


		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pFaction] >= 1 || PlayerInfo[giveplayerid][pLeader] >= 1)
			{
				format(string, sizeof(string), "Kurulutan, %s tarafndan atldnz.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[giveplayerid][pFaction] = 0;
				PlayerInfo[giveplayerid][pRank] = 0;
				PlayerInfo[giveplayerid][pDuty] = 0;
				PlayerInfo[giveplayerid][pLeader] = 0;
				PlayerInfo[giveplayerid][pDivision] = 0;
				if(!IsValidSkin(GetPlayerSkin(giveplayerid)))
				{
					new rand = random(sizeof(CIV));
					SetPlayerSkin(giveplayerid,CIV[rand]);
					PlayerInfo[giveplayerid][pSkin] = CIV[rand];
				}
				player_remove_vip_toys(giveplayerid);
				pTazer[giveplayerid] = 0;
				SetPlayerToTeamColor(giveplayerid);
				format(string, sizeof(string), "%s kiisini kurulutan attnz.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "ye olmayan birini kurulutan atamazsn.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		}
	}
	return 1;
}

CMD:setmyname(playerid, params[]) {
	new string[128];
	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setmyname [newname]");

	if(PlayerInfo[playerid][pAdmin] >= 4) {
		if(AdminDuty[playerid] != 1)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		if((strfind(params, "Zhao", false) != -1 || strfind(params, "Z_hao", false) != -1 || strfind(params, "Zh_ao", false) != -1 || strfind(params, "Zha_o", false) != -1 || strfind(params, "zao", false) != -1) && PlayerInfo[playerid][pAdmin] < 6)
		    return SendClientMessage(playerid, COLOR_WHITE, "Dur ! Ben zao'yum ! Sen zao deilsin !");

		if(strfind(params, "_", false) == -1 && strcmp(params, "off") != 0)
		    return SendClientMessage(playerid, COLOR_GREY, "Ad Soyad arasnda alttan izgi ('_') olmal.");

		if(strlen(params) > 18)
		    return SendClientMessage(playerid, COLOR_GREY, "Isminizin uzunluu SA-MP iin karakter limitini geiyor.");

		if(GetPVarInt(playerid, "AdminUndercover") == 0)
		{
			format(string, sizeof(string), "Ismini geici olarak %s yaptn.", params);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SendClientMessage(playerid, COLOR_YELLOW, "Admin ismine geri dnmek iin '/setmyname off' .");
			SetPVarInt(playerid, "AdminUndercover", 1);
			SetPlayerName(playerid, params);
			PlayerInfo[playerid][pAccent] = 25;
			format(string, sizeof(string), "%s, ismini %s olarak deitirdi.", PlayerInfo[playerid][pAdminName], params);
			Log("logs/undercover.log", string);
		}
		else
		{
			format(string, sizeof(string), "Ismini tekrar %s olarak deitirdin", PlayerInfo[playerid][pAdminName]);
			SendClientMessage(playerid, COLOR_YELLOW, string);
			SetPVarInt(playerid, "AdminUndercover", 0);
			PlayerInfo[playerid][pAccent] = 0;
			SetPlayerName(playerid, PlayerInfo[playerid][pAdminName]);
		}
	}
	return 1;
}

CMD:jetpack(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}
    if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pAdmin] < 4) {
        JetPack[playerid] = 1;
        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
        return 1;
    }
    new string[128], plo;
    if(sscanf(params, "u", plo)) {
        SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /jetpack [Oyuncu ID/sim]");
        return 1;
    }
    if(IsPlayerConnected(plo)) {
        if(plo != INVALID_PLAYER_ID) {
            if(PlayerInfo[playerid][pAdmin] >= 4) {
                SendClientMessage(plo, COLOR_GRAD1, "Jetpack ile iyi elenceler!");
                JetPack[plo] = 1;
                SetPlayerSpecialAction(plo, SPECIAL_ACTION_USEJETPACK);
                format(string, sizeof(string), "AdminKomutu: %s kiisi,  %s kiisinden jetpack ald", GetPlayerNameEx(plo), GetPlayerNameEx(playerid));
                ABroadCast(COLOR_LIGHTRED, string, 1);
            }
            else {
                SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
            }
        }
    }
    else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
    return 1;
}

CMD:serial(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 		{
  			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
		}
		new giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /serial [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			new string[256];
			new serial[128];
			gpci(giveplayerid, serial, sizeof(serial));
			format(string, sizeof(string), "(ID: %d) - (Name: %s) - (Serial: %s)", giveplayerid, GetPlayerNameEx(giveplayerid), serial);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:ipcheck(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 		{
  			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
		}
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ipcheck [Oyuncu ID/sim]");

		if(giveplayerid == INVALID_PLAYER_ID) return 1;
		if(IsPlayerConnected(giveplayerid))
		{
			new playerip[32];
			GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
			format(string, sizeof(string), "(ID: %d) - (Isim: %s) - (IP: %s)", giveplayerid, GetPlayerNameEx(giveplayerid), playerip);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:oipcheck(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /oipcheck [name]");

	new
		string[128],
		szPlayerName[MAX_PLAYER_NAME];

	mysql_real_escape_string(params, szPlayerName, g_MySQLConnections[0]);

	format(string, sizeof(string), "SELECT Username, LastIP FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(string, THREAD_OFFLINE_IP_CHECK, playerid, g_MySQLConnections[0]);
	return 1;
}

CMD:ip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
		{
			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
		}
		if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ip [ip]");

		new string[128], IP[32];

		foreach(Player, i)
		{
			GetPlayerIp(i, IP, sizeof(IP));
			if(strfind(IP, params, true) != -1)
			{
				format(string, sizeof(string), "Oyuncu: %s (ID: %d) | IP: %s", GetPlayerNameEx(i), i, IP);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
	}

	return 1;
}

CMD:unbanip(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pBanAppealer] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
		{
			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
		}
		if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /unbanip [ip]");
		if(IsValidIP(params)) return SendClientMessage(playerid, COLOR_WHITE, "Bu geerli bir IP adresi deil!");

		new string[128];
		RemoveBan(params);
		format(string, 128, "AdminKomutu: %s, IP %s nin bann at", GetPlayerNameEx(playerid), params);
		ABroadCast(COLOR_LIGHTRED,string,2);
		format(string, sizeof(string), "AdminKomutu: %s, IP %s nin bann at", GetPlayerNameEx(playerid), params);
		Log("logs/ban.log", string);
	}

	return 1;
}

CMD:unban(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4 || PlayerInfo[playerid][pBanAppealer] >= 1) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
		    szPlayerName[MAX_PLAYER_NAME],
			string[128];

		if(isnull(params))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /unban [oyuncuad]");

		mysql_real_escape_string(params, szPlayerName, g_MySQLConnections[0]);

		format(string, sizeof(string), "SELECT Banned, Permabanned, Warnings, LastIP, Username FROM players WHERE Username = '%s'", szPlayerName);
		mysql_query(string, THREAD_CHECK_BANNED, playerid, g_MySQLConnections[0]);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:oban(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 4)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
		string[128],
		playername[MAX_PLAYER_NAME],
		reason[64];

	if(sscanf(params, "s[MAX_PLAYER_NAME]s[64]", playername, reason))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /oban [oyuncuad] [sebep]");

    new
		giveplayerid = ReturnUser(playername);

	if(IsPlayerConnected(giveplayerid))
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu kullanc online, /ban komutunu kullanabilirsin.");

	SetPVarString(playerid, "obanreason", reason);

	new
	    szPlayerName[MAX_PLAYER_NAME];

	mysql_real_escape_string(playername, szPlayerName, g_MySQLConnections[0]);

	format(string, sizeof(string), "SELECT Permabanned, Banned, AdminLevel, Username, LastIP, ID FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(string, THREAD_OFFLINE_BAN, playerid, g_MySQLConnections[0]);
	return 1;
}

CMD:genelmesaj(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3)
		return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");

 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
		string[128];

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ozelmesaj [text]");

	format(string, sizeof(string), "SMS: %s, Gnderen: OZELMESAJ (555)",params);
	SendClientMessageToAllEx(COLOR_YELLOW, string);
	return 1;
}

CMD:warn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			giveplayerid,
			reason[64];

		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /warn [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pAdmin] >= 1)
				return SendClientMessage(playerid, COLOR_GRAD2, "Adminler uyarlamaz!");

			PlayerInfo[giveplayerid][pWarns] += 1;

			if(PlayerInfo[giveplayerid][pWarns] >= 3) {
				new ip[32];
				GetPlayerIp(giveplayerid,ip,sizeof(ip));
				format(string, sizeof(string), "AdminKomutu: %s (IP: %s), %s tarafndan banland(3 uyars vard), sebep: %s", GetPlayerNameEx(giveplayerid), ip, GetPlayerNameEx(playerid), reason);
				Log("logs/ban.log", string);
				format(string, sizeof(string), "AdminKomutu: %s,  %s tarafndan banland(3 uyars vard), sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				PlayerInfo[giveplayerid][pBanned] = 1;
				AddBan(ip);
				Kick(giveplayerid);
				return 1;
			}

			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan uyarld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan uyarld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			Log("logs/admin.log", string);
			punishmentLog(giveplayerid, playerid, 1, string, reason);

			format(string, sizeof(string), "%s tarafndan uyarldn, sebep: %s", GetPlayerNameEx(playerid), reason);
			SendClientMessage(giveplayerid, COLOR_LIGHTRED, string);
			return 1;

		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:owarn(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
		string[128],
		name[MAX_PLAYER_NAME],
		reason[64];

	if(sscanf(params, "s[24]s[64]", name, reason))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /owarn [name] [sebep]");

	new
		giveplayerid = ReturnUser(name);

	if(giveplayerid != INVALID_PLAYER_ID)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu online, /warn komutunu kullanabilirsin.");

	SetPVarString(playerid, "owarnreason", reason);

	new
	    szPlayerName[MAX_PLAYER_NAME];

	mysql_real_escape_string(name, szPlayerName, g_MySQLConnections[0]);

	format(string, sizeof(string), "SELECT Permabanned, Banned, AdminLevel, Username, LastIP, Warnings, ID FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(string, THREAD_OFFLINE_WARN, playerid, g_MySQLConnections[0]);
	return 1;
}

CMD:ofine(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
		string[128],
		name[MAX_PLAYER_NAME],
		amount,
		reason[64];

	if(sscanf(params, "s[MAX_PLAYER_NAME]ds[64]", name, amount, reason))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ofine [name] [amount] [sebep]");

	new
		giveplayerid = ReturnUser(name);

	if(giveplayerid != INVALID_PLAYER_ID)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu online, /fine komutunu kullanabilirsin.");

	if(amount < 1)
		return SendClientMessage(playerid, COLOR_GRAD2, "Miktar 0'dan byk olmal.");

	SetPVarString(playerid, "ofinereason", reason);
	SetPVarInt(playerid, "ofineamount", amount);

	new
	    szPlayerName[MAX_PLAYER_NAME];

	mysql_real_escape_string(name, szPlayerName, g_MySQLConnections[0]);

	format(string, sizeof(string), "SELECT Permabanned, Banned, AdminLevel, Username, LastIP, Bank, Cash FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(string, THREAD_OFFLINE_FINE, playerid, g_MySQLConnections[0]);

	return 1;
}

CMD:showflags(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128];
		SendClientMessage(playerid, COLOR_YELLOW, "nemli bayrak: (tarih format DD/MM/YYYY r. 03/05/2012)");
		new fCounter;
		foreach(Player, i)
		{
			if(strlen(PlayerInfo[i][pFlag]) > 0)
			{
				format(string, sizeof(string), "%s (ID %d) | Sebep: %s.",GetPlayerNameEx(i),i,PlayerInfo[i][pFlag]);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				fCounter += 1;
			}
		}
		if(fCounter <= 0)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Yok.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanmaya yetkin yok.");
	}
	return 1;
}

CMD:oflag(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
    	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			name[MAX_PLAYER_NAME],
			reason[64];

		if(sscanf(params, "s[24]s[64]", name, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /oflag [name] [sebep]");

    	new
			giveplayerid = ReturnUser(name);

        if(IsPlayerConnected(giveplayerid)) {
			AddFlag(giveplayerid, playerid, reason);
			SendClientMessage(playerid, COLOR_WHITE, "Oyuncu online ve bayrakland!");

			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan bayrakland, sebep: %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			ABroadCast(COLOR_LIGHTRED, string, 1);
		} else {
		    new
		        szPlayerName[MAX_PLAYER_NAME],
		        szFlag[128],
		        szQuery[128];

			mysql_real_escape_string(name, szPlayerName, g_MySQLConnections[0]);

			mysql_real_escape_string(reason, szFlag, g_MySQLConnections[0]);
			SetPVarString(playerid, "offline_flag", szFlag);
			SetPVarString(playerid, "offline_flag_target", szPlayerName);

			format(szQuery, sizeof(szQuery), "SELECT Username FROM players WHERE Username = '%s'", szPlayerName);
			mysql_query(szQuery, THREAD_OFFLINE_FLAG, playerid, g_MySQLConnections[0]);
		}
		return 1;
	}
	return 1;
}

CMD:flag(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2) {
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /flag [Oyuncu ID/sim] [sebep]");

		if(giveplayerid != INVALID_PLAYER_ID) {
			AddFlag(giveplayerid, playerid, reason);
			format(string, sizeof(string), "AdminKomutu: %s,%s kiisini bayraklad, sebep: %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
			ABroadCast(COLOR_LIGHTRED, string, 1);
			return 1;
		} else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	else if(PlayerInfo[playerid][pHelper] >= 1) {
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /flag [Oyuncu ID/sim] [sebep]");

		if(giveplayerid != INVALID_PLAYER_ID) {
		    if(strlen(PlayerInfo[giveplayerid][pFlag]) != 0) {
				return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten aktif bir bayraa sahip, yardmclar sadece bayra olmayan oyuncular iin bayrak oluturabilir.");
			}

			AddFlag(giveplayerid, playerid, reason);
			format(string, sizeof(string), "AdminKomutu: %s, Yardmc %s tarafndan bayrakland, sebep: %s.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			ABroadCast(COLOR_LIGHTRED, string, 1);

			format(string, sizeof(string), "%s kiisi %s sebebiyle bayrakland.", GetPlayerNameEx(giveplayerid), reason);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
		} else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:clearflag(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
	    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /clearflag [Oyuncu ID/sim]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(!isnull(PlayerInfo[iTargetID][pFlag])) {

				new
					szMessage[59 + (MAX_PLAYER_NAME * 2)];

                format(PlayerInfo[iTargetID][pFlag], 128, "");
				format(szMessage, sizeof(szMessage), "{AA3333}AdminUyar{FFFF00}: %s, %s kiisinin tm bayraklarn temizledi.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
				PlayerInfo[iTargetID][pInt] = GetPlayerInterior(iTargetID);

				if(GetPVarType(iTargetID, "tabbedVW") != 0) {
					PlayerInfo[iTargetID][pVW] = GetPVarInt(iTargetID, "tabbedVW");
				} else PlayerInfo[iTargetID][pVW] = GetPlayerVirtualWorld(iTargetID);

				GetPlayerIp(iTargetID, PlayerInfo[iTargetID][pIP], 32);
				GetPlayerPos(iTargetID, PlayerInfo[iTargetID][pPos_x], PlayerInfo[iTargetID][pPos_y], PlayerInfo[iTargetID][pPos_z]);
				GetPlayerFacingAngle(iTargetID, PlayerInfo[iTargetID][pPos_r]);
				OnPlayerStatsUpdate(iTargetID);
				return ABroadCast(COLOR_YELLOW, szMessage, 1);
			}
			SendClientMessage(playerid, COLOR_GRAD1, "Oyuncunun nemli bayra yok.");
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:elkoysurucubelgesi(playerid, params[])
{
	if(IsACop(playerid)) {
		new
			string[128],
			giveplayerid,
			reason[64],
			copveh = GetPlayerVehicleID(playerid);

		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /elkoysurucubelgesi [Oyuncu ID/sim] [sebep]");

		if((IsACopCar(copveh)) || (IsAFBICar(copveh))) {
			if(IsPlayerConnected(giveplayerid)) {
				if(PlayerInfo[giveplayerid][pCarLic] == 0)
					return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun iptal edilebilecek src belgesi yok.");

				new
					szRank[64],
					szEmployer[64],
					szDivision[64];
				GetPlayerFactionInfo(playerid, szRank, szDivision, szEmployer);

				format(string,sizeof(string),"%s %s %s, src belgeni iptal etti, sebep: %s.",szEmployer, szRank, GetPlayerNameEx(playerid), reason);
				SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);

				format(string,sizeof(string),"HQ: %s %s %s, %s kiisinin src belgesini iptal etti, sebep: %s.",szEmployer, szRank, GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
				SendRadioMessage(1,TEAM_BLUE_COLOR,string);
				SendRadioMessage(2,TEAM_BLUE_COLOR,string);

				SendClientMessage(giveplayerid,COLOR_WHITE,"(( Yeni bir src belgesi City Hall'dan alnabilir. Eer bunu bir suistimal/ktye kullanma olarak gryorsan adminle balantya ge. ))");
				format(string, sizeof(string), "%s, %s kiisinin src belgesini ald. Sebep: %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pCarLic] = 0;
				return 1;
			} else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
		} else SendClientMessage(playerid, COLOR_GRAD2,"Bunu yapmak iin bir kurulu aracnda olman gerekir.");
	} else SendClientMessage(playerid, COLOR_GRAD2, "Bunu yapmaya yetkin yok.");
	return 1;
}

CMD:elkoydenizcibelgesi(playerid, params[])
{
	if(IsACop(playerid)) {
		new
			string[128],
			giveplayerid,
			reason[64],
			copveh = GetPlayerVehicleID(playerid);

		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /elkoydenizcibelgesi [Oyuncu ID/sim] [sebep]");

		if((IsACopCar(copveh)) || (IsAFBICar(copveh))) {
			if(IsPlayerConnected(giveplayerid)) {
				if(PlayerInfo[giveplayerid][pBoatLic] == 0)
					return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun iptal edilebilecek bir tekne lisans yok.");

				new
					szRank[64],
					szEmployer[64],
					szDivision[64];
				GetPlayerFactionInfo(playerid, szRank, szDivision, szEmployer);

				format(string,sizeof(string),"%s %s %s, senin tekne lisansn iptal etti, sebep: %s.",szEmployer, szRank, GetPlayerNameEx(playerid), reason);
				SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);

				format(string,sizeof(string),"HQ: %s %s %s, %s kiisinin tekne lisansn iptal etti, sebep: %s.",szEmployer, szRank, GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
				SendRadioMessage(1,TEAM_BLUE_COLOR,string);
				SendRadioMessage(2,TEAM_BLUE_COLOR,string);

				SendClientMessage(giveplayerid,COLOR_WHITE,"(( Yeni bir tekne lisans City Hall'dan alnabilir. Eer bunu bir suistimal/ktye kullanma olarak gryorsan adminle balantya ge. ))");
				format(string, sizeof(string), "%s, %s kiisinin tekne lisansn ald. Sebep: %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pBoatLic] = 0;
				return 1;
			} else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
		} else SendClientMessage(playerid, COLOR_GRAD2,"Bunu yapmak iin bir kurulu aracnda olman gerekir.");
	} else SendClientMessage(playerid, COLOR_GRAD2, "Bunu yapmaya yetkin yok.");
	return 1;
}

CMD:elkoypilotbelgesi(playerid, params[])
{
	if(IsACop(playerid)) {
		new
			string[128],
			giveplayerid,
			reason[64],
			copveh = GetPlayerVehicleID(playerid);

		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /elkoypilotbelgesi [Oyuncu ID/sim] [sebep]");

		if((IsACopCar(copveh)) || (IsAFBICar(copveh))) {
			if(IsPlayerConnected(giveplayerid)) {
				if(PlayerInfo[giveplayerid][pFlyLic] == 0)
					return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun iptal edilebilecek pilot lisans yok.");

				new
					szRank[64],
					szEmployer[64],
					szDivision[64];
				GetPlayerFactionInfo(playerid, szRank, szDivision, szEmployer);

				format(string,sizeof(string),"%s %s %s, senin pilot lisansn iptal etti, sebep: %s.",szEmployer, szRank, GetPlayerNameEx(playerid), reason);
				SendClientMessage(giveplayerid,COLOR_LIGHTBLUE,string);

				format(string,sizeof(string),"HQ: %s %s %s, %s kiisinin pilot lisansn iptal etti, sebep: %s.",szEmployer, szRank, GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
				SendRadioMessage(1,TEAM_BLUE_COLOR,string);
				SendRadioMessage(2,TEAM_BLUE_COLOR,string);

				SendClientMessage(giveplayerid,COLOR_WHITE,"(( Yeni bir pilot lisans City Hall'dan alnabilir. Eer bunu bir suistimal/ktye kullanma olarak gryorsan adminle balantya ge. ))");
				format(string, sizeof(string), "%s took %s's pilot license. sebep: %s.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),reason);
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pFlyLic] = 0;
				return 1;
			} else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
		} else SendClientMessage(playerid, COLOR_GRAD2,"Bunu yapmak iin bir kurulu aracnda olman gerekir.");
	} else SendClientMessage(playerid, COLOR_GRAD2, "Bunu yapmaya yetkin yok.");
	return 1;
}

CMD:belgeal(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid,2.0,429.070556,128.319992,1008.382812)) { return 1; }
	if(PlayerInfo[playerid][pWantedLevel] > 0)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED, "nemli bir arama iznin var - belgenin elde edilmesi yasaklanm.");
		return 1;
	}
	ShowPlayerDialogEx(playerid, DIALOG_LICENSE_BUY, DIALOG_STYLE_LIST, "Elde etmek istediin belgeyi se.", "Src Belgesi ($500)\r\nTekne Belgesi ($500)\r\nPilot Belgesi ($2500)", "Satn Al", "Iptal");
	return 1;
}

CMD:yoketlisans(playerid, params[])
{
	new string[128], type;
	if(sscanf(params, "d", type))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yoketlisans [type]");
		SendClientMessage(playerid, COLOR_GRAD2, "Tip: 1 = Src, 2 = Tekne, 3 = Uu.");
	}

	switch(type)
	{
	case 1:
		{
			if(PlayerInfo[playerid][pCarLic] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Brakabilecein bir src belgen yok.");
				return 1;
			}
			format(string, sizeof(string), "Src belgeni braktn.");
			SendClientMessage(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pCarLic] = 0;
			return 1;
		}
	case 2:
		{
			if(PlayerInfo[playerid][pBoatLic] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Brakabilecein bir tekne belgen yok.");
				return 1;
			}
			format(string, sizeof(string), "Tekne belgeni braktn.");
			SendClientMessage(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pBoatLic] = 0;
			return 1;
		}
	case 3:
		{
			if(PlayerInfo[playerid][pFlyLic] == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Brakabilecein bir pilot belgen yok.");
				return 1;
			}
			format(string, sizeof(string), "Pilot belgeni braktn.");
			SendClientMessage(playerid, COLOR_WHITE, string);
			PlayerInfo[playerid][pFlyLic] = 0;
			return 1;
		}
	default:
		{
			SendClientMessage(playerid, COLOR_WHITE, "Geersiz lisans tipi! /yoketlicense [type]");
			SendClientMessage(playerid, COLOR_GRAD2, "Tip: 1 = Src, 2 = Tekne, 3 = Uu.");
		}
	}
	return 1;
}

CMD:cetearaclarispawnla(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
	    new
			iGang;

	    if(sscanf(params, "d", iGang))
	        return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /cetearaclarispawnla [gang slot ID]");

		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6) {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	    if(iGang < 1 || iGang > MAX_FAMILY || iGang > 255)
			return SendClientMessage(playerid, COLOR_GREY, "Aile slotu 1 ve 14 arasnda olmal.");

		iGang--; // the silly way the family system is scripted

		for(new v = 0; v < MAX_GANG_VEHICLES; v++) {
		    if(FamilyVehicleInfo[iGang][v][fvId] > 0 && IsVehicleOccupied(FamilyVehicleInfo[iGang][v][fvId]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(FamilyVehicleInfo[iGang][v][fvId]);
		}

		new
		    szMessage[64];

		format(szMessage, sizeof(szMessage), "Tm ete arabalarn kardnz: %s.", FamilyInfo[iGang][FamilyName]);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);
	} else return SendClientMessage(playerid, COLOR_GREY, "Geersiz ete ID'si.");
	return 1;
}

CMD:olusumaraclarispawnla(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 1 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 1) {
		for(new v = 0; v < sizeof(LSPDVehicles); v++) {
		    if(LSPDVehicles[v] > 0 && IsVehicleOccupied(LSPDVehicles[v]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(LSPDVehicles[v]);
		}

		SendClientMessage(playerid, COLOR_WHITE, "LSPD'nin tm bo aralar yeniden karld.");
	} else if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 2) {
		for(new v = 0; v < sizeof(FBIVehicles); v++) {
		    if(FBIVehicles[v] > 0 && IsVehicleOccupied(FBIVehicles[v]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(FBIVehicles[v]);
		}

		SendClientMessage(playerid, COLOR_WHITE, "FBI'n tm bo aralar yeniden karld.");
	} else if(PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 3) {
		for(new v = 0; v < sizeof(LSFMDVehicles); v++) {
		    if(LSFMDVehicles[v] > 0 && IsVehicleOccupied(LSFMDVehicles[v]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(LSFMDVehicles[v]);
		}

		SendClientMessage(playerid, COLOR_WHITE, "LSFMD'nin tm bo aralar yeniden karld.");
	} else if(PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 5) {
		for(new v = 0; v < sizeof(GovVehicles); v++) {
		    if(GovVehicles[v] > 0 && IsVehicleOccupied(GovVehicles[v]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(GovVehicles[v]);
		}
		SendClientMessage(playerid, COLOR_WHITE, "LST'nin tm bo aralar yeniden karld.");
	} else if(PlayerInfo[playerid][pFaction] == 6 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 6) {
		for(new v = 0; v < sizeof(GovVehicles); v++) {
		    if(GovVehicles[v] > 0 && IsVehicleOccupied(GovVehicles[v]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(GovVehicles[v]);
		}
		SendClientMessage(playerid, COLOR_WHITE, "SAN Network'un tm bo aralar yeniden karld.");
	} else if(PlayerInfo[playerid][pFaction] == 9 && PlayerInfo[playerid][pRank] >= 5 || PlayerInfo[playerid][pLeader] == 9) {
		for(new v = 0; v < sizeof(GovVehicles); v++) {
		    if(GovVehicles[v] > 0 && IsVehicleOccupied(GovVehicles[v]) == INVALID_VEHICLE_ID)
				SetVehicleToRespawn(GovVehicles[v]);
		}


		SendClientMessage(playerid, COLOR_WHITE, "GOV'in tm bo aralar yeniden karld.");
	} else return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanmaya yetkin yok. (ya da kuruluunda yeniden karlabilecek ara yok).");
	return 1;
}

CMD:givelicense(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin]>=5)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, type;
		if(sscanf(params, "ud", giveplayerid, type))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /givelicense [Oyuncu ID/sim] [type]");
			SendClientMessage(playerid, COLOR_GRAD2, "Tip: 1 = Src, 2 = Tekne, 3 = Uu.");
			return 1;
		}

		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
			return 1;
		}

		switch(type)
		{
		case 1:
			{
				if(PlayerInfo[giveplayerid][pCarLic] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun zaten src belgesi var.");
					return 1;
				}
				format(string, sizeof(string), "%s kiisine src belgesi verdin.",GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Admin %s sana src belgesi verdi.",GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Admin %s, %s kiisine src belgesi verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pCarLic] = 1;
				return 1;
			}
		case 2:
			{
				if(PlayerInfo[giveplayerid][pBoatLic] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun zaten tekne belgesi var.");
					return 1;
				}
				format(string, sizeof(string), "%s kiisine tekne belgesi verdin.",GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Admin %s sana tekne belgesi verdi.",GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Admin %s, %s kiisine tekne belgesi verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pBoatLic] = 1;
				return 1;
			}
		case 3:
			{
				if(PlayerInfo[giveplayerid][pFlyLic] == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun zaten pilot belgesi var.");
					return 1;
				}
				format(string, sizeof(string), "%s kiisine pilot belgesi verdin.",GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Admin %s sana pilot belgesi verdi.",GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_WHITE, string);
				format(string, sizeof(string), "Admin %s, %s kiisine pilot belgesi verdi.",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
				Log("logs/licenses.log", string);
				PlayerInfo[giveplayerid][pFlyLic] = 1;
				return 1;
			}
		default:
			{
				SendClientMessage(playerid, COLOR_WHITE, "Geersiz lisans tipi! /lisansver [Oyuncu ID/sim] [type]");
				SendClientMessage(playerid, COLOR_GRAD2, "Tip: 1 = Src, 2 = Tekne, 3 = Uu.");
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanmaya yetkin yok.");
	return 1;
}

CMD:rto(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
	    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[512], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rto [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pRMuted] == 0)
			{
			    if(PlayerInfo[giveplayerid][pRMutedTotal] == 0)
			    {
  					PlayerInfo[giveplayerid][pRMutedTotal] = 1;
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisine raporu ktye kullanmaktan ilk uyarsn verdi, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,1);

					format(string, sizeof(string), "Admin /rapor ksmn ktye kullanmaktan seni uyard.\n\nBir sonraki /rapor ktye kullanm /rapor ksmndan mute yemene veya bu zellii tamamen kullanamamana yol aacak.");
					ShowPlayerDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"Rapor ktye kullanm uyars", string,"Ileri", "");

					format(string, sizeof(string), "AdminKomutu: %s, %s kiisine raporu ktye kullanmaktan ilk uyarsn verdi, sebep: %s", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					Log("logs/mute.log", string);

			    }
			    else if(PlayerInfo[giveplayerid][pRMutedTotal] == 1)
			    {
  					PlayerInfo[giveplayerid][pRMuted] = 2;
  					PlayerInfo[giveplayerid][pRMutedTotal] = 2;
					PlayerInfo[giveplayerid][pRMutedTime] = 15*60;
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin rapor gndermesini bloklad, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,1);

					format(string, sizeof(string), "%s tarafndan rapor gndermen blokland, sebep: %s.\n\nRapordan dolay bu ikinci bloklanman, 15 dakika boyunca /rapor kullanamayacaksn.\n\nBir daha /rapor un ktye kullanm daha uzun sre mute yemene sebep olacaktr.", GetPlayerNameEx(playerid), reason);
					ShowPlayerDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"Rapordan geici olarak blokland", string,"Ileri", "");

					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan /rapor kullanm geici olarak blokland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
			    }
			    else if(PlayerInfo[giveplayerid][pRMutedTotal] == 2)
			    {
  					PlayerInfo[giveplayerid][pRMuted] = 2;
  					PlayerInfo[giveplayerid][pRMutedTotal] = 3;
					PlayerInfo[giveplayerid][pRMutedTime] = 30*60;
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisini rapor gndermekten bloklad, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,1);

					format(string, sizeof(string), "Rapor gndermekten %s tarafndan geici olarak bloklandn, sebep: %s.\n\nBu nc defa rapor gndermekten bloklann, 30 dakika boyunca /rapor kullanamayacaksn.\n\nBir daha /rapor un ktye kullanm daha uzun sre mute yemene sebep olacaktr.", GetPlayerNameEx(playerid), reason);
					ShowPlayerDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"Rapordan geici olarak blokland", string,"Ileri", "");

					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan /rapor kullanm geici olarak blokland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
			    }
			    else if(PlayerInfo[giveplayerid][pRMutedTotal] == 3)
			    {
  					PlayerInfo[giveplayerid][pRMuted] = 2;
  					PlayerInfo[giveplayerid][pRMutedTotal] = 4;
					PlayerInfo[giveplayerid][pRMutedTime] = 45*60;
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisini rapor gndermekten bloklad, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,1);

					format(string, sizeof(string), "Rapor gndermekten %s tarafndan geici olarak bloklandn, sebep: %s.\n\nBu drdnc defa rapor gndermekten bloklann, 45 dakika boyunca /rapor kullanamayacaksn.\n\nBir daha /rapor un ktye kullanm daha uzun sre mute yemene sebep olacaktr.", GetPlayerNameEx(playerid), reason);
					ShowPlayerDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"Rapordan geici olarak blokland", string,"Ileri", "");

					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan /rapor kullanm geici olarak blokland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
				}
			    else if(PlayerInfo[giveplayerid][pRMutedTotal] == 4)
			    {
  					PlayerInfo[giveplayerid][pRMuted] = 2;
  					PlayerInfo[giveplayerid][pRMutedTotal] = 5;
					PlayerInfo[giveplayerid][pRMutedTime] = 60*60;
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisini rapor gndermekten bloklad, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,1);

					format(string, sizeof(string), "Rapor gndermekten %s tarafndan geici olarak bloklandn, sebep: %s.\n\nBu beinci defa rapor gndermekten bloklann, 60 dakika boyunca /rapor kullanamayacaksn.\n\nBir daha /rapor un ktye kullanm daha uzun sre mute yemene sebep olacaktr.", GetPlayerNameEx(playerid), reason);
					ShowPlayerDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"Rapordan geici olarak blokland", string,"Ileri", "");

					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan /rapor kullanm geici olarak blokland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
				}
			    else if(PlayerInfo[giveplayerid][pRMutedTotal] >= 5)
			    {
  					PlayerInfo[giveplayerid][pRMuted] = 2;
  					PlayerInfo[giveplayerid][pRMutedTotal] = 6;
					PlayerInfo[giveplayerid][pRMutedTime] = 300*60;
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisini rapor gndermekten bloklad, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
					ABroadCast(COLOR_LIGHTRED,string,1);

					format(string, sizeof(string), "Rapor gndermekten %s tarafndan geici olarak bloklandn, sebep: %s.\n\nBu altnc defa rapor gndermekten bloklann, 5 saat boyunca /rapor kullanamayacaksn.\n\nBir daha /rapor un ktye kullanm daha uzun sre mute yemene sebep olacaktr.", GetPlayerNameEx(playerid), reason);
					ShowPlayerDialogEx(giveplayerid,7954,DIALOG_STYLE_MSGBOX,"Rapordan geici olarak blokland", string,"Ileri", "");

					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan /rapor kullanm geici olarak blokland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
					Log("logs/mute.log", string);
				}

				for(new i = 0; i < MAX_REPORTS; i++)
				{
					if(Reports[i][ReportFrom] == giveplayerid)
					{
						Reports[i][BeingUsed] = 0;
					}
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu zaten /rapor kullanamyor.");
			}

		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:rtoreset(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rtoreset [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pRMuted] == 2)
			{
				PlayerInfo[giveplayerid][pRMuted] = 0;
				PlayerInfo[giveplayerid][pRMutedTotal]--;
				PlayerInfo[giveplayerid][pRMutedTime] = 0;
				format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin rapor bloklamasn kaldrd, sebep: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid), reason);
				ABroadCast(COLOR_LIGHTRED,string,1);
				SendClientMessage(giveplayerid, COLOR_GRAD2, "Rapor bloklaman kaldrld. Artk rapor sistemini kullanabilirsin.");
				SendClientMessage(giveplayerid, COLOR_GRAD2, "Yaplan hata ve yanllk iin zr dileriz.");
				format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan rapor bloklamas kaldrld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				Log("logs/mute.log", string);
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Bu oyuncu rapordan blok yememi!");
			}

		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:rmute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rmute [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pRMuted] == 0)
			{
				PlayerInfo[giveplayerid][pRMuted] = 1;
				format(string, sizeof(string), "AdminKomutu: %s, %s kiisini sresiz olarak rapordan bloklad.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
				format(string, sizeof(string), "%s tarafndan /rapor kullanmn blokland.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_GRAD2, string);
				SendClientMessage(giveplayerid, COLOR_GRAD2, "Blok kaldrlana kadar rapor gnderemeyeceksin. Temyiz iin "WEBSITE);
				format(string, sizeof(string), "AdminKomutu: %s kiisinin /rapor kullanm, %s tarafndan blokland", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
			else
			{
				PlayerInfo[giveplayerid][pRMuted] = 0;
				PlayerInfo[giveplayerid][pRMutedTime] = 0;
				format(string, sizeof(string), "AdminKomutu: %s kiisinin rapor kullanm, %s tarafndan tekrar ald",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
				format(string, sizeof(string), "%s tarafndan /rapor kullanmn tekrar ald.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_GRAD2, string);
				format(string, sizeof(string), "AdminKomutu: %s kiisinin rapor bloklamas, %s tarafndan kaldrld", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:silahsat(playerid, params[])
{
    new string[128];
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
    if(GetPVarInt(playerid, "PBM") > 0) {
        SendClientMessage(playerid,COLOR_GREY,"Arenadayken bunu yapamazsn!");
        return 1;
    }
   	if(GetPVarInt(playerid, "EventToken") == 1) {
		SendClientMessage(playerid, COLOR_WHITE, "Etkinlikteyken bu komutu kullanamazsn.");
		return 1;
	}
    if(PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob2] != 9) {
        SendClientMessage(playerid,COLOR_GREY,"Silah Satcs deilsin!");
        return 1;
    }
    if(PlayerInfo[playerid][pScrewdriver] == 0) {
        SendClientMessage(playerid,COLOR_GREY,"Silah yapabilmek iin zanaatkardan tornavidaya ihtiyacn var!");
        return 1;
    }
    if(PlayerInfo[playerid][pJailTime] > 0) {
        SendClientMessage(playerid,COLOR_GREY,"Hapisteyken silah yapamazsn!");
        return 1;
    }
   	if(PlayerBoxing[playerid] == 1)
  	{
   		SendClientMessage(playerid, COLOR_GREY, "Boks yaparken silah yapabilirsin.");
     	return 1;
   	}
    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Aratayken silah satamazsn.");

    if(GetPVarInt(playerid, "ArmsTimer") > 0) {
        format(string, sizeof(string), "   Baka silah satmadan nce %d saniye beklemelisin.", GetPVarInt(playerid, "ArmsTimer"));
        SendClientMessage(playerid,COLOR_GREY,string);
        return 1;
    }
    if(GetPVarInt(playerid, "Hospital") == 1 || GetPVarInt(playerid, "Hospital") == 2 || GetPVarInt(playerid, "Hospital") == 3 || GetPVarInt(playerid, "Hospital") == 4 || GetPVarInt(playerid, "Hospital") == 5) {
        SendClientMessage(playerid, COLOR_GREY, "Hastanedeyken silah karamazsn.");
        return 1;
    }
    new giveplayerid,x_weapon[20],weapon,price;
    if(sscanf(params, "us[20]", giveplayerid, x_weapon)) {
        SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
        SendClientMessage(playerid, COLOR_YELLOW, "<< Kullanlabilir Silahlar >>");
        new level = PlayerInfo[playerid][pArmsSkill];
        if(level >= 0 && level < 50) {
            SendClientMessage(playerid, COLOR_GRAD1, "sdpistol(500)	flowers(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "shotgun(850)	 knuckles(25)");
        }
        else if(level >= 50 && level < 100) {
            SendClientMessage(playerid, COLOR_GRAD1, "sdpistol(500)	flowers(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "shotgun(850)	 knuckles(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "mp5(1250)		 baseballbat(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "rifle(1500)	  cane(25)");
        }
        else if(level >= 100 && level < 200) {
            SendClientMessage(playerid, COLOR_GRAD1, "sdpistol(500)	flowers(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "shotgun(850)	 knuckles(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "mp5(1250)		 baseballbat(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "rifle(1500)	  cane(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "deagle(5000)	 shovel(25)");
        }
        else if(level >= 200 && level < 400) {
            SendClientMessage(playerid, COLOR_GRAD1, "sdpistol(500)	flowers(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "shotgun(850)	 knuckles(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "mp5(1250)		 baseballbat(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "rifle(1500)	  cane(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "deagle(5000)	 shovel(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "ak47(7000)	   poolcue(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "m4(7000)		 golfclub(25)");
        }
        else if(level >= 400) {
            SendClientMessage(playerid, COLOR_GRAD1, "sdpistol(500)	flowers(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "shotgun(850)	 knuckles(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "mp5(1250)		 baseballbat(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "rifle(1500)	  cane(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "deagle(5000)	 shovel(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "ak47(7000)	   poolcue(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "m4(7000)		 golfclub(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "spas12(13500)	 dildo(25)");
            SendClientMessage(playerid, COLOR_GRAD1, "sniper(13500)	 katana(25)");
        }
        SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
        SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /silahsat [Oyuncu ID/sim] [weaponname]");
        return 1;
    }
   	if(giveplayerid == INVALID_PLAYER_ID) return SendClientMessage(playerid, COLOR_GREY, "Oyunda olmayan kullancya silah veremezsin.");

	if(PlayerInfo[giveplayerid][pJailTime] > 0 || PlayerCuffed[giveplayerid] > 0)
        return SendClientMessage(playerid,COLOR_GREY,"Hapisteki veya kelepeli oyuncuya silah veremezsin!");

    if(strcmp(x_weapon,"dildo",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 400) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 10; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"   Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"katana",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 400) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 8; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"golfclub",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 200) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 2; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"poolcue",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 200) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 7; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"shovel",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 100) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 6; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"cane",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 15; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"baseballbat",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 5; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"knuckles",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 1; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"sdpistol",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 499) {
            weapon = 23; price = 500;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"flowers",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 24) {
            weapon = 14; price = 25;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"deagle",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 100) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 4999) {
            weapon = 24; price = 5000;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"mp5",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 1249) {
            weapon = 29; price = 1250;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"shotgun",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 849) {
            weapon = 25; price = 850;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"9mm",true) == 0) {
        if(PlayerInfo[playerid][pMats] > 149) {
            weapon = 22; price = 150;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"spas12",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 400) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 13499) {
            weapon = 27; price = 13500;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"sniper",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 400) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 13499) {
            weapon = 34; price = 13500;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"ak47",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 200) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 6999) {
            weapon = 30; price = 7000;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"m4",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 200) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 6999) {
            weapon = 31; price = 7000;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else if(strcmp(x_weapon,"rifle",true) == 0) {
        if(PlayerInfo[playerid][pArmsSkill] < 50) return SendClientMessage(playerid, COLOR_GREY, "Bunu yapmak iin yeterli Level'a sahip deilsin!");
        if(PlayerInfo[playerid][pMats] > 1499) {
            weapon = 33; price = 1500;
        }
        else {
            SendClientMessage(playerid,COLOR_GREY,"Bu silah iin yeterli materyalin yok!");
            return 1;
        }
    }

    else { SendClientMessage(playerid,COLOR_GREY,"   Geersiz silah ismi!"); return 1; }
    if(ProxDetectorS(5.0, playerid, giveplayerid)) {
        if(PlayerInfo[giveplayerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun silah bulundurmas yasaklanm!");

        if(giveplayerid == playerid) {
            format(string, sizeof(string), "   You have given yourself a %s.", x_weapon);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            SendClientMessage(playerid, COLOR_GRAD1, string);
            PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
            switch(PlayerInfo[playerid][pSex])
			{
                case 1: format(string, sizeof(string), "* %s Materyallerden bir silah yapt ve kendisine verdi.", GetPlayerNameEx(playerid));
                case 2: format(string, sizeof(string), "* %s Materyallerden bir silah yapt ve kendisine verdi.", GetPlayerNameEx(playerid));
            }
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            GivePlayerValidWeapon(playerid,weapon,50000);
            PlayerInfo[playerid][pMats] -= price;
            if(weapon > 15) {
                #if defined DOUBLE_EXP_ENABLED
					new hour,minuite,second;
					gettime(hour,minuite,second);
					if(DoubleEXPcheck(hour))
					{
				    	PlayerInfo[playerid][pArmsSkill] += 2;
				    	SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
					}
					else
					{
						SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
						PlayerInfo[playerid][pArmsSkill]++;
					}
				#else
					PlayerInfo[playerid][pArmsSkill]++;
				#endif
            }

            SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);

            if(PlayerInfo[playerid][pArmsSkill] == 50)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 2 oldu, daha ok silah eidi artk ak."); }
            else if(PlayerInfo[playerid][pArmsSkill] == 100)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 3 oldu, daha ok silah eidi artk ak."); }
            else if(PlayerInfo[playerid][pArmsSkill] == 200)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 4 oldu, daha ok silah eidi artk ak."); }
            else if(PlayerInfo[playerid][pArmsSkill] == 400)
            { SendClientMessage(playerid, COLOR_YELLOW, "* Silah Satcs yeteneiniz Level 5 oldu, daha ok silah eidi artk ak."); }
            return 1;
        }

        format(string, sizeof(string), "* %s kiisine %s satmay nerdin.", GetPlayerNameEx(giveplayerid), x_weapon);
        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
        format(string, sizeof(string), "* Silah Satcs %s sana %s satmay nerdi, (/kabulet silah) yazarak satn alabilirsin.", GetPlayerNameEx(playerid), x_weapon);
        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
        GunOffer[giveplayerid] = playerid;
        GunId[giveplayerid] = weapon;
        GunMats[giveplayerid] = price;

        SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
    }
    else
	{
        SendClientMessage(playerid, COLOR_GREY, "Oyuncu yannda deil.");
        return 1;
    }
	return 1;
}

CMD:silahver(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

	if(GetPVarInt(playerid, "PBM") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");

	if(GetPVarInt(playerid, "EventToken") != 0)
		return SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0||GetPlayerState(playerid) == 7)
		return SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");

	if(IsPlayerInAnyVehicle(playerid))
		return SendClientMessage (playerid, COLOR_GRAD2, "Arabadayken silah veremezsin!");

	new
		Float:health,
		string[128];

	GetPlayerHealth(playerid, health);

	if(health < 80)
		return SendClientMessage(playerid, COLOR_GRAD1, "Cann 80'in altndayken silah veremezsin!");

	if(GetPVarInt(playerid, "GiveWeaponTimer") > 0) {
		format(string, sizeof(string), "Baka silah vermeden nce %d saniye beklemelisin.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}

	new
		giveplayerid,
		weapon[64];

	if(sscanf(params, "us[64]", giveplayerid, weapon)) {
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /silahver [Oyuncu ID/sim] [weapon name]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: sdpistol, shotgun, 9mm, mp5, uzi, tec9, rifle, deagle, ak47, m4, spas12, sniper");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: flowers, knuckles, baseballbat, cane, shovel, poolcue, golfclub, katana, dildo, parachute");
		return 1;
	}

	if(giveplayerid == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "Online olmayan kullancya silah veremezsin.");

	if(IsPlayerInAnyVehicle(giveplayerid))
		return SendClientMessage (playerid, COLOR_GRAD2, "Arabadayken oyunculara silah veremezsin!");

	if(giveplayerid == playerid)
		return SendClientMessage(playerid, COLOR_GRAD1, "Kendine silah veremezsin!");

	if(!ProxDetectorS(3.0, playerid, giveplayerid))
		return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");

	if(PlayerInfo[playerid][pFaction] != PlayerInfo[giveplayerid][pFaction] && PlayerInfo[playerid][pFaction] > 0)
		return SendClientMessage(playerid, COLOR_GRAD1, "Kuruluunun dndaki oyunculara silah veremezsin!");

	if(PlayerInfo[giveplayerid][pConnectTime] < 2)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncunun silah bulundurmas yasaklanm.");

	if(IsPlayerInAnyVehicle(giveplayerid))
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmadan nce aratan in.");

	if(strcmp(weapon, "9mm", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 22)
		{
			if(PlayerInfo[giveplayerid][pGuns][2] != 22 && PlayerInfo[giveplayerid][pGuns][2] != 23 && PlayerInfo[giveplayerid][pGuns][2] != 24)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " 9mm pistol'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine 9mm pistol verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 22);
				GivePlayerValidWeapon(giveplayerid, 22, 60000);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "sdpistol", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 23)
		{
			if(PlayerInfo[giveplayerid][pGuns][2] != 22 && PlayerInfo[giveplayerid][pGuns][2] != 23 && PlayerInfo[giveplayerid][pGuns][2] != 24)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " silenced pistol'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine silenced pistol verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 23);
				GivePlayerValidWeapon(giveplayerid, 23, 60000);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "deagle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 24)
		{
			if(PlayerInfo[giveplayerid][pGuns][2] != 22 && PlayerInfo[giveplayerid][pGuns][2] != 23 && PlayerInfo[giveplayerid][pGuns][2] != 24)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Desert Eagle'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine Desert Eagle verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 24);
				GivePlayerValidWeapon(giveplayerid, 24, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "shotgun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 25)
		{
			if(PlayerInfo[giveplayerid][pGuns][3] != 25 && PlayerInfo[giveplayerid][pGuns][3] != 27)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shotgun'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine Shotgun verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 25);
				GivePlayerValidWeapon(giveplayerid, 25, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "spas12", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 27)
		{
			if(PlayerInfo[giveplayerid][pGuns][3] != 25 && PlayerInfo[giveplayerid][pGuns][3] != 27)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "SPAS-12'ni verdin.");
				format(string, sizeof(string), "* %s, %s kiisine SPAS-12 verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 27);
				GivePlayerValidWeapon(giveplayerid, 27, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "mp5", true) == 0) {
		if(PlayerInfo[playerid][pGuns][4] == 29)
		{
			if(PlayerInfo[giveplayerid][pGuns][4] != 28 && PlayerInfo[giveplayerid][pGuns][4] != 29 && PlayerInfo[giveplayerid][pGuns][4] != 32)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "MP5'ini verdin.");
				format(string, sizeof(string), "* %s, %s kiisine MP5 verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 29);
				GivePlayerValidWeapon(giveplayerid, 29, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 28)
		{
			if(PlayerInfo[giveplayerid][pGuns][4] != 28 && PlayerInfo[giveplayerid][pGuns][4] != 29 && PlayerInfo[giveplayerid][pGuns][4] != 32)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Micro SMG'ni verdin.");
				format(string, sizeof(string), "* %s, %s kiisine Micro SMG verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 28);
				GivePlayerValidWeapon(giveplayerid, 28, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "tec9", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 32)
		{
			if(PlayerInfo[giveplayerid][pGuns][4] != 28 && PlayerInfo[giveplayerid][pGuns][4] != 29 && PlayerInfo[giveplayerid][pGuns][4] != 32)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Tec-9'unu verdin.");
				format(string, sizeof(string), "* %s, %s kiisine Tec-9 verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 32);
				GivePlayerValidWeapon(giveplayerid, 32, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "ak47", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 30)
		{
			if(PlayerInfo[giveplayerid][pGuns][5] != 30 && PlayerInfo[giveplayerid][pGuns][5] != 31)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "AK-47'ni verdin.");
				format(string, sizeof(string), "* %s, %s kiisine AK-47 verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 30);
				GivePlayerValidWeapon(giveplayerid, 30, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "m4", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 31)
		{
			if(PlayerInfo[giveplayerid][pGuns][5] != 30 && PlayerInfo[giveplayerid][pGuns][5] != 31)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "M4'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine M4 verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 31);
				GivePlayerValidWeapon(giveplayerid, 31, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "rifle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 33)
		{
			if(PlayerInfo[giveplayerid][pGuns][6] != 33 && PlayerInfo[giveplayerid][pGuns][6] != 34)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Rifle'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine rifle verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 33);
				GivePlayerValidWeapon(giveplayerid, 33, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}

	else if(strcmp(weapon, "sniper", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 34)
		{
			if(PlayerInfo[giveplayerid][pGuns][6] != 33 && PlayerInfo[giveplayerid][pGuns][6] != 34)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sniper rifle'n verdin.");
				format(string, sizeof(string), "* %s, %s kiisine sniper rifle verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				RemovePlayerWeapon(playerid, 34);
				GivePlayerValidWeapon(giveplayerid, 34, 60000);
				SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten benzer bir silaha sahip!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "flowers", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][10] == 14)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Flowers verdin.");
			format(string, sizeof(string), "* %s, %s kiisine flowers verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 14);
			GivePlayerValidWeapon(giveplayerid, 14, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "knuckles", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][0] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Brass knuckles'n verdin.");
			format(string, sizeof(string), "* %s, %s kiisine brass knuckles verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 1);
			GivePlayerValidWeapon(giveplayerid, 1, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "baseballbat", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Baseball bat'ini verdin.");
			format(string, sizeof(string), "* %s, %s kiisine baseball bat verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 5);
			GivePlayerValidWeapon(giveplayerid, 5, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "cane", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][10] == 15)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Cane'ini verdin.");
			format(string, sizeof(string), "* %s, %s kiisine cane verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 15);
			GivePlayerValidWeapon(giveplayerid, 15, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "shovel", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shovel'n verdin.");
			format(string, sizeof(string), "* %s, %s kiisine shovel verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 6);
			GivePlayerValidWeapon(giveplayerid, 6, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "golfclub", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 2)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Golf club'n verdin.");
			format(string, sizeof(string), "* %s, %s kiisine golf club verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 2);
			GivePlayerValidWeapon(giveplayerid, 2, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "katana") == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 8)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Katana'n verdin.");
			format(string, sizeof(string), "* %s, %s kiisine katana verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 8);
			GivePlayerValidWeapon(giveplayerid, 8, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "dildo", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][10] == 10)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Dildo'nu verdin.");
			format(string, sizeof(string), "* %s, %s kiisine dildo verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 10);
			GivePlayerValidWeapon(giveplayerid, 10, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(weapon, "parachute", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][11] == 46)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Paratn verdin.");
			format(string, sizeof(string), "* %s, %s kiisine parat verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 46);
			GivePlayerValidWeapon(giveplayerid, 46, 60000);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz bir silah ismi girdin.");
	}

	return 1;
}

CMD:yoketsilah(playerid, params[])
{
	return cmd_silahyoket(playerid, params);
}

CMD:silahyoket(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /silahyoket [silah ismi]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: sdpistol, shotgun, 9mm, mp5, uzi, tec9, rifle, deagle, ak47, m4, spas12, sniper, kamera");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: cicekler, knuckles, bezbolsopasi, baston, kurek, istaka, golfsopasi, katana, dildo, parachute");
		if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: knife");
		}
		if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: cop, sprey, smoke, testere, yanginsondurucu");
		}
		return 1;
	}

	if(PlayerCuffed[playerid] >= 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Kelepeliyken/okluyken bu komutu kullanamazsn.");

	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Aratayken silahn atamazsn!");
		return 1;
	}
	if(GetPVarInt(playerid, "PBM") > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "EventToken") != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");
		return 1;
	}
	new string[128];
	if(strcmp(params, "sdpistol", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 23)
		{
			if(pTazer[playerid] == 1) return SendClientMessage(playerid, COLOR_RED, "Tazer'n brakamazsn.");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silenced pistol'unu braktn.");
			format(string, sizeof(string), "* %s silenced pistol'unu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 23);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "kamera", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][9] == 43)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kameran braktn.");
			format(string, sizeof(string), "* %s kamerasn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 43);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "Cop", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 3)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Nitestick'ini braktn.");
			format(string, sizeof(string), "* %s nitestick'ini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 3);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "Sprey", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][9] == 41)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Mace'ini braktn.");
			format(string, sizeof(string), "* %s mace'ini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 41);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "bicak", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 4)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Knife'n braktn.");
			format(string, sizeof(string), "* %s knife'n brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 4);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "9mm", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 22)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  9mm pistol'unu braktn.");
			format(string, sizeof(string), "* %s 9mm pistol'unu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 22);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "shotgun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 25)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  shotgun'unu braktn.");
			format(string, sizeof(string), "* %s shotgun'unu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 25);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "mp5", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 29)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  MP5'ini braktn.");
			format(string, sizeof(string), "* %s MP5'ini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 29);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 28)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  Micro SMG'ni braktn.");
			format(string, sizeof(string), "* %s Micro SMG'sini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 28);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "uzi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 32)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  Tec-9'unu braktn.");
			format(string, sizeof(string), "* %s Tec-9'unu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 32);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "deagle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 24)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  Desert Eagle'n braktn.");
			format(string, sizeof(string), "* %s Desert Eagle'n brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 24);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "rifle", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 33)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  rifle'n braktn.");
			format(string, sizeof(string), "* %s rifle'n brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 33);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "ak47", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 30)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  AK-47'ni braktn.");
			format(string, sizeof(string), "* %s AK-47'sini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 30);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "m4", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 31)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  M4'n braktn.");
			format(string, sizeof(string), "* %s M4'n brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 31);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "spas12", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 27)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  SPAS-12'ni braktn.");
			format(string, sizeof(string), "* %s SPAS-12'sini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 27);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "sniper", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 34)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " Sniper tfeini braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki sniper tfeini brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 34);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "cicekler", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][10] == 14)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "iekleri braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki iekleri brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 14);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "knuckles", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][0] == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Mutay braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki mutay brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "bezbolsopasi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bezbol sopasn braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki bezbol sopasn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 5);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "baston", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][10] == 15)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Bastonu braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki bastonu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			PlayerInfo[playerid][pGuns][10] = 0;
			RemovePlayerWeapon(playerid, 15);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "kurek", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Krei braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki krei brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 6);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "golfsopasi", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 2)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Golf sopasn braktn.");
			format(string, sizeof(string), "%s adl kii elindeki golf sopasn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 2);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "katana") == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 8)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Katanan braktn.");
			format(string, sizeof(string), "%s adl kii elindeki katanay brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 8);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "dildo", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][10] == 10)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  dildo'nu braktn.");
			format(string, sizeof(string), "%s adl kii elindeki dildoyu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 10);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "parachute", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][11] == 46)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "  Paratn braktn.");
			format(string, sizeof(string), "* %s paratn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 46);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "smoke", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][8] == 17)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Gaz bombasn braktn.");
			format(string, sizeof(string), "%s adl kii elindeki gaz bombasn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 17);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "testere", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 9)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Testereyi braktn.");
			format(string, sizeof(string), "%s adl kii elindeki testereyi brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 9);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "yanginsondurucu", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][9] == 42)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Yangn sndrcsn braktn.");
			format(string, sizeof(string), "%s adl kii elindeki yangn sndrcsn brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 42);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "minigun", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][7] == 38)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Minigun' braktn.");
			format(string, sizeof(string), "%s adl kii elindeki minigunu brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 38);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else if(strcmp(params, "istaka", true) == 0)
	{
		if(PlayerInfo[playerid][pGuns][1] == 7)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, " Istakay braktn.");
			format(string, sizeof(string), "%s adl oyuncu elindeki stakay brakt.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			RemovePlayerWeapon(playerid, 7);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz bir silah ismi girdin.");
	}
	return 1;
}

/* CMD:radar(playerid, params[])
{
    if(IsMDCPermitted(playerid)) {
		if(!IsPlayerInAnyVehicle(playerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "MVB Hz radarn kullanabilmen iin arata olman gerekiyor.");

		if(RadarActive[playerid] == 0) {
			RadarTitle[playerid] = TextDrawCreate(530.000000, 126.000000, "MVB - Hiz Radari");
			TextDrawBackgroundColor(RadarTitle[playerid], 255);
			TextDrawFont(RadarTitle[playerid], 1);
			TextDrawLetterSize(RadarTitle[playerid], 0.240000, 1.000000);
			TextDrawColor(RadarTitle[playerid], -1);
			TextDrawSetOutline(RadarTitle[playerid], 0);
			TextDrawSetProportional(RadarTitle[playerid], 1);
			TextDrawSetShadow(RadarTitle[playerid], 1);
			TextDrawUseBox(RadarTitle[playerid], 1);
			TextDrawBoxColor(RadarTitle[playerid], 255);
			TextDrawTextSize(RadarTitle[playerid], 606.000000, 1.000000);

			RadarContext[playerid] = TextDrawCreate(530.000000, 138.000000, "Hiz Araniyor...");
			TextDrawBackgroundColor(RadarContext[playerid], 255);
			TextDrawFont(RadarContext[playerid], 1);
			TextDrawLetterSize(RadarContext[playerid], 0.200000, 0.899999);
			TextDrawColor(RadarContext[playerid], -1);
			TextDrawSetOutline(RadarContext[playerid], 0);
			TextDrawSetProportional(RadarContext[playerid], 1);
			TextDrawSetShadow(RadarContext[playerid], 1);
			TextDrawUseBox(RadarContext[playerid], 1);
			TextDrawBoxColor(RadarContext[playerid], 170);
			TextDrawTextSize(RadarContext[playerid], 606.000000, 1.000000);
			TextDrawShowForPlayer(playerid, RadarTitle[playerid]);
			TextDrawShowForPlayer(playerid, RadarContext[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB Hz Radarna balandn.");
			RadarActive[playerid] = 1;
		} else {
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB Hz Radarndan k yaptn.");
			RadarActive[playerid] = 0;
			TextDrawDestroy(RadarTitle[playerid]);
			TextDrawDestroy(RadarContext[playerid]);
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, " Polis/MIT deilsin!");
	return 1;
} */

CMD:destek(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pFaction] == 5) {
		if(Backup[playerid] != 1) {
			new
				zone[MAX_ZONE_NAME],
				string[40 + MAX_PLAYER_NAME];

			GetPlayer3DZone(playerid, zone, sizeof(zone));
			format(string, sizeof(string), "* %s radyodan destek istiyor.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			format(string, sizeof(string), "%s, %s blgesine acil destek istiyor.", GetPlayerNameEx(playerid), zone);
            Backup[playerid] = 1;
			foreach(Player, i) {
				if(IsACop(i)) {
      				SetPlayerMarkerForPlayer(i, playerid, 0x2641FEAA);
					SendClientMessage(i, TEAM_BLUE_COLOR, string);
				}
			}
			SendClientMessage(playerid, COLOR_WHITE, "Destek isteini silmek iin /destekiptal.");
			SetTimerEx("BackupClear", 180000, false, "ii", playerid, 1);
		} else return SendClientMessage(playerid, COLOR_GREY, "  Aktif bir destek istein var!");
	} else return SendClientMessage(playerid, COLOR_GRAD2, "   Polis - FBI deilsin!");
	return 1;
}

CMD:destekiptal(playerid, params[])
{
    BackupClear(playerid, 0);
	return 1;
}

CMD:rozet(playerid, params[]) {
    if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9)
	{
		if(GetPVarInt(playerid, "EventToken") == 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Etkinlikteyken bu komutu kullanamazsn.");
			return 1;
	    }
		if(PlayerInfo[playerid][pDuty])
		{
			PlayerInfo[playerid][pDuty] = 0;
			SetPlayerToTeamColor(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Rozetini sakladn ve u an iban braktn.");
		}
		else
		{
			PlayerInfo[playerid][pDuty] = 1;
			SetPlayerToTeamColor(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Rozetini gsterdin ve u an ibandasn.");
		}
	}
	return 1;
}

CMD:me(playerid, params[])
{
	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /me [action]");

	new string[128];
	format(string, sizeof(string), "* %s %s", GetPlayerNameEx(playerid), params);
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

CMD:yap(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
		return 1;
	}
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yap [action]");
	else if(strlen(params) >= 100) return SendClientMessage(playerid, COLOR_GREY, "Belirlenen mesaj 99 karakterden daha uzun olamaz.");
	new string[128];
	format(string, sizeof(string), "* %s (( %s ))", params, GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	return 1;
}

CMD:bagir(playerid, params[]) {
	return cmd_s(playerid, params);
}

CMD:s(playerid, params[]) {
	if(gPlayerLogged[playerid] == 0)
		return SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/s) yada (/bagir) [shout chat]");

	new string[128];
	format(string, sizeof(string), "(barr) %s!", params);
	SetPlayerChatBubble(playerid,string,COLOR_WHITE,60.0,5000);
	format(string, sizeof(string), "%s barr: %s!", GetPlayerNameEx(playerid), params);
	ProxDetector(30.0, playerid, string,COLOR_WHITE,COLOR_WHITE,COLOR_WHITE,COLOR_FADE1,COLOR_FADE2);

	if(PlayerInfo[playerid][pBugged] == 1) {
		format(string, sizeof(string), "(bug) %s barr: %s!", GetPlayerNameEx(playerid), params);
		SendBugMessage(2, COLOR_LIGHTGREEN, string);
	}
	return 1;
}

CMD:sessiz(playerid, params[]) {
	return cmd_l(playerid, params);
}

CMD:l(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
		return 1;
	}

	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/l) yada (/sessiz) [close chat]");

	new string[128];
	format(string, sizeof(string), "%s sessizce: %s", GetPlayerNameEx(playerid), params);
	ProxDetector(5.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	format(string, sizeof(string), "(sessizce) %s", params);
	SetPlayerChatBubble(playerid,string,COLOR_WHITE,5.0,5000);
	if(PlayerInfo[playerid][pBugged] == 1)
	{
		format(string, sizeof(string), "(bug) %s sessizce syler: %s", GetPlayerNameEx(playerid), params);
		SendBugMessage(2, COLOR_LIGHTGREEN, string);
	}
	return 1;
}

CMD:b(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
		return 1;
	}
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /b [local ooc chat]");
	new string[128];
	format(string, sizeof(string), "%s syler: (( %s ))", GetPlayerNameEx(playerid), params);
	ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
	return 1;
}

CMD:w(playerid, params[])
{
	new giveplayerid, whisper[128];

	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
		return 1;
	}
	if(sscanf(params, "us[128]", giveplayerid, whisper))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/w)[Oyuncu ID/sim] [text]");
		return 1;
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(HidePM[giveplayerid] > 0 && AdminDuty[playerid] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Oyuncu fslty bloklam!");
			return 1;
		}
		new giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], string[128];
		sendername = GetPlayerNameEx(playerid);
		giveplayer = GetPlayerNameEx(giveplayerid);
		if(giveplayerid == playerid)
		{
			if(PlayerInfo[playerid][pSex] == 1) format(string, sizeof(string), "* %s kendi kendine homurdanr.", GetPlayerNameEx(playerid));
			else format(string, sizeof(string), " %s kendi kendine homurdanr.", GetPlayerNameEx(playerid));
			return ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		if(ProxDetectorS(5.0, playerid, giveplayerid) || AdminDuty[playerid] == 1)
		{
			format(string, sizeof(string), "%s (ID %d) sana fsldad: %s", GetPlayerNameEx(playerid), playerid, whisper);

			if(strlen(string) > 92)
			{
				new firstline[128], secondline[128];
				strmid(firstline, string, 0, 88);
				strmid(secondline, string, 88, 128);
				format(firstline, sizeof(firstline), "%s ...", firstline);
				SendClientMessage(giveplayerid, COLOR_YELLOW, firstline);
				SendClientMessage(giveplayerid, COLOR_YELLOW, secondline);
			}
			else SendClientMessage(giveplayerid,COLOR_YELLOW, string);

			format(string, sizeof(string), " %s oyuncusuna fsldadn: %s", GetPlayerNameEx(giveplayerid),whisper);
			if(strlen(string) > 92)
			{
				new firstline[128], secondline[128];
				strmid(firstline, string, 0, 88);
				strmid(secondline, string, 88, 128);
				format(firstline, sizeof(firstline), "%s ...", firstline);
				SendClientMessage(playerid, COLOR_YELLOW, firstline);
				SendClientMessage(playerid, COLOR_YELLOW, secondline);
			}
			else SendClientMessage(playerid,COLOR_YELLOW, string);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		}
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:fisiltikapat(playerid, params[])
{
	if(!HidePM[playerid])
	{
		HidePM[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "Fslt sohbetini kapattn.");
	}
	else
	{
		HidePM[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "Fslt sohbetini atn.");
	}
	return 1;
}

CMD:parasutal(playerid, params[]) {
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1544.2, -1353.4, 329.4)) { // Startower parachute
	    if(PlayerInfo[playerid][pGuns][11] == 46)
	        RemovePlayerWeapon(playerid, 46);

 		if(PlayerInfo[playerid][pGuns][11] != 46) {
    		GivePlayerValidWeapon(playerid, 46, 99999);
		}
		else SendClientMessage(playerid, COLOR_GREY,"Zaten bir paratn var.");
	}
	else SendClientMessage(playerid, COLOR_GREY,"Startower'daki parate yeterince yakn deilsin.");
	return 1;
}

CMD:isimdegistir(playerid, params[])
{
	if(IsAtNameChange(playerid))
	{
		if(AdminDuty[playerid] == 1)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak iba yaparken buna eriemezsin.");
			return 1;
	    }
		if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] >= 3 || PlayerInfo[playerid][pFaction] == 4)
		{
			ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Isim Deitirme","Istediin ismi yaz!\n\nNot: Isim Deitirme Hitman ve FBI iin cretsiz.", "Deitir", "Iptal");
		}
		else
		{
			ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE, DIALOG_STYLE_INPUT, "Isim Deitirme","Istediin ismi yaz!\n\nNot: Isim Deitirme level bana $15000.", "Deitir", "Iptal");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "   Isim Deitirme yerinde deilsin!");
	}
	return 1;
}

CMD:nrn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 2) {
		new string[128], giveplayerid;

		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /nrn [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pAdmin] >= 1 || PlayerInfo[giveplayerid][pHelper] >= 1 || PlayerInfo[giveplayerid][pLevel] >= 2 && PlayerInfo[playerid][pAdmin] < 1)
				return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu adminler, yardmclar veya Level 1'den yksek oyuncular iin kullanamazsn (eer bir yardmcysan).");

			format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s,%s kiisine cretsiz isim deiiklii nerdi. Sebep: non-RP isim.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_YELLOW, string, 1);
			ShowPlayerDialogEx(giveplayerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "Bu bir roleplay sunucusudur. Isminiz Ad_Soyad formatnda olmaldr. \nrnek: Burak_Yilmaz veya Wesley_Sneijder\n\n Admin ismini cretsiz olarak uygun formata gre evirmeni nerdi. Istediin ismi aaya yaz.\n\nNot: Iptal'e basarsan sunucudan atlacaksn.", "Deitir", "Iptal","");

			format(string, sizeof(string), "%s kiisini isim deiikliine zorladn.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);

			SetPVarInt(giveplayerid, "requestpath", 1);

			if(strlen(PlayerInfo[giveplayerid][pFlag]) == 0)
            	AddFlag(giveplayerid, playerid, "Non-RP isim, deitirilmesi gerekiyor");
		}
	}

	return 1;
}

CMD:nchange(playerid, params[])
	return cmd_namechanges(playerid, params);

CMD:namechanges(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
 	{
		new
			nstring[64 + (MAX_PLAYER_NAME * 2)],
			newname[MAX_PLAYER_NAME];

  		SendClientMessage(playerid, COLOR_GREEN, "* Isim deiiklii beklemede:");
   		foreach(Player, i)
		{
			if(GetPVarType(i, "RequestingNameChange"))
			{
  				GetPVarString(i, "NewNameRequest", newname, MAX_PLAYER_NAME);
				format(nstring, sizeof(nstring), "u anki isim: %s (ID: %d) | Istenen isim: %s | cret: %d", GetPlayerNameEx(i), i, newname, GetPVarInt(i, "NameChangeCost"));
				SendClientMessage(playerid, COLOR_YELLOW, nstring);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN, "_____________________________________________________");
	}
	return 1;
}

CMD:ikabul(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkin yok.");

	new
	    iTarget,
		szQuery[128];

	if(sscanf(params, "u", iTarget))
	    return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ikabul [Oyuncu ID/sim]");

	if(iTarget == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

    if(GetPVarInt(iTarget, "RequestingNameChange") == 0)
		return SendClientMessage(playerid, COLOR_GREY, "Belirlenen oyuncu isim deiiklii talep etmemi.");

	new
	    szPlayerName[MAX_PLAYER_NAME];

    GetPVarString(iTarget, "NewNameRequest", szPlayerName, MAX_PLAYER_NAME);
    SetPVarInt(iTarget, "requestby", playerid);

    mysql_real_escape_string(szPlayerName, szPlayerName, g_MySQLConnections[0]);

    SetPVarString(iTarget, "requestedname", szPlayerName);

    format(szQuery, sizeof(szQuery), "SELECT Username FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(szQuery, THREAD_CHECK_NEW_NAME, iTarget, g_MySQLConnections[0]);
	return 1;
}

CMD:ired(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ired [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(GetPVarInt(giveplayerid, "RequestingNameChange") == 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Oyuncu isim deiiklii istememi!");
				return 1;
			}

			SendClientMessage(giveplayerid,COLOR_YELLOW," Isim deitirme istein reddedildi.");
			format(string, sizeof(string), "%s, %s kiisinin isim deiikliini reddetti",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
			ABroadCast(COLOR_YELLOW, string, 1);
			DeletePVar(giveplayerid, "RequestingNameChange");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkin yok.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Byle bir oyuncu yok.");
	}
	return 1;
}

CMD:camdanbak(playerid, params[])
{
	new string[128];
    if(InsideShamal[playerid] != INVALID_VEHICLE_ID)
	{
        if(GetPlayerInterior(playerid) == 1)
		{
            new
                Float: fSpecPos[6];

            GetPlayerPos(playerid, fSpecPos[0], fSpecPos[1], fSpecPos[2]);
            GetPlayerFacingAngle(playerid, fSpecPos[3]);
            GetPlayerHealth(playerid, fSpecPos[4]);
            GetPlayerArmour(playerid, fSpecPos[5]);

            SetPVarFloat(playerid, "air_Xpos", fSpecPos[0]);
            SetPVarFloat(playerid, "air_Ypos", fSpecPos[1]);
            SetPVarFloat(playerid, "air_Zpos", fSpecPos[2]);
            SetPVarFloat(playerid, "air_Rpos", fSpecPos[3]);
            SetPVarFloat(playerid, "air_HP", fSpecPos[4]);
            SetPVarFloat(playerid, "air_Arm", fSpecPos[5]);

            SetPlayerInterior(playerid, 0);
            SetPlayerVirtualWorld(playerid, 0);
            TogglePlayerSpectating(playerid, 1);
            PlayerSpectateVehicle(playerid, InsideShamal[playerid]);

            format(string, sizeof(string), "* %s camdan dar gz atar.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
        }
        else TogglePlayerSpectating(playerid, 0);
    }
    return 1;
}

CMD:hesapla(playerid, params[])
{
	new string[128], method[20], value1, value2;
	if(sscanf(params, "ds[20]d", value1, method, value2))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hesapla [value] [operation] [value].");
		SendClientMessage(playerid, COLOR_GRAD2, "Ilemler: Topla, kar, arp, Bl.");
		return 1;
	}

	if(strcmp(method,"multiply",true) == 0 || strcmp(method,"*",true) == 0)
	{
		new sum = value1*value2;
		format(string,sizeof(string),"%d arp %d eittir %d.",value1,value2,sum);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"divide",true) == 0 || strcmp(method,"/",true) == 0)
	{
		if(value2 == 0)
			return GameTextForPlayer(playerid, "face~r~palm", 1000, 3);

		new sum = value1/value2;
		format(string,sizeof(string),"%d bl %d eittir %d.",value1,value2,sum);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"add",true) == 0 || strcmp(method,"+",true) == 0)
	{
		new sum = value1+value2;
		format(string,sizeof(string),"%d art %d eittir %d.",value1,value2,sum);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	if(strcmp(method,"subtract",true) == 0 || strcmp(method,"-",true) == 0)
	{
		new sum = value1-value2;
		format(string,sizeof(string),"%d eksi %d eittir %d.",value1,value2,sum);
		SendClientMessage(playerid,COLOR_WHITE,string);
	}
	return 1;
}

CMD:kills(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kills [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
			format(string, sizeof(string), "<< %s kiisinin Son 10 ldrd >>", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_YELLOW, string);

			if(!isnull(PlayerInfo[giveplayerid][pKillLog9]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog9]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog8]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog8]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog7]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog7]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog6]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog6]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog5]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog5]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog4]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog4]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog3]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog3]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog2]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog2]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog1]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog1]);
			if(!isnull(PlayerInfo[giveplayerid][pKillLog0]))
				SendClientMessage(playerid, COLOR_YELLOW, PlayerInfo[giveplayerid][pKillLog0]);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:kiyafetler(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 9) {
        return ShowPlayerDialogEx(playerid, DIALOG_SAN_CLOTHES, DIALOG_STYLE_LIST, "Kurulu kyafetleri", "Erkek Rportajc (ID: 113)\nBayan Rportajc (ID: 148)", "Tamam", "Iptal");
	}
	else if(PlayerInfo[playerid][pGang] != 255) {
		if(IsAtClothShop(playerid)) {
			new string[128];
			new PG = PlayerInfo[playerid][pGang];

			if(FamilyInfo[PG][FamilyMaxSkins] == 0)
			{
            	SendClientMessage(playerid, COLOR_WHITE, "Aile skinin henz bir admin tarafndan ayarlanmad.");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 1)
			{
  				format(string,sizeof(string),"Skin 1: %d", FamilyInfo[PG][FamilySkins][0]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 2)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 3)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d\nSkin 3: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1], FamilyInfo[PG][FamilySkins][2]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 4)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d\nSkin 3: ID %d\nSkin 4: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1], FamilyInfo[PG][FamilySkins][2], FamilyInfo[PG][FamilySkins][3]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 5)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d\nSkin 3: ID %d\nSkin 4: ID %d\nSkin 5: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1], FamilyInfo[PG][FamilySkins][2], FamilyInfo[PG][FamilySkins][3], FamilyInfo[PG][FamilySkins][4]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
   			if(FamilyInfo[PG][FamilyMaxSkins] == 6)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d\nSkin 3: ID %d\nSkin 4: ID %d\nSkin 5: ID %d\nSkin 6: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1], FamilyInfo[PG][FamilySkins][2], FamilyInfo[PG][FamilySkins][3], FamilyInfo[PG][FamilySkins][4], FamilyInfo[PG][FamilySkins][5]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 7)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d\nSkin 3: ID %d\nSkin 4: ID %d\nSkin 5: ID %d\nSkin 6: ID %d\nSkin 7: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1], FamilyInfo[PG][FamilySkins][2], FamilyInfo[PG][FamilySkins][3], FamilyInfo[PG][FamilySkins][4], FamilyInfo[PG][FamilySkins][5], FamilyInfo[PG][FamilySkins][6]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			if(FamilyInfo[PG][FamilyMaxSkins] == 8)
			{
				format(string,sizeof(string),"Skin 1: ID %d\nSkin 2: ID %d\nSkin 3: ID %d\nSkin 4: ID %d\nSkin 5: ID %d\nSkin 6: ID %d\nSkin 7: ID %d\nSkin 8: ID %d", FamilyInfo[PG][FamilySkins][0], FamilyInfo[PG][FamilySkins][1], FamilyInfo[PG][FamilySkins][2], FamilyInfo[PG][FamilySkins][3], FamilyInfo[PG][FamilySkins][4], FamilyInfo[PG][FamilySkins][5], FamilyInfo[PG][FamilySkins][6], FamilyInfo[PG][FamilySkins][7]);
				ShowPlayerDialogEx(playerid,FAMILYSKINDIALOG,DIALOG_STYLE_LIST,"Aile skin seimi",string,"Se","Iptal");
			}
			return 1;
		}
		else {
			SendClientMessage(playerid, COLOR_GRAD2, "   Kyafet dkkannda deilsin!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid,COLOR_GREY, "   Ailede deilsin, /kiyafetal komutunu kullan!");
	}
	return 1;
}

CMD:lisanslar(playerid, params[])
{
	new string[128], text1[20], text2[20], text4[20];
	if(PlayerInfo[playerid][pCarLic]) { text1 = "Mevcut"; } else { text1 = "Mevcut deil"; }
	if(PlayerInfo[playerid][pFlyLic]) { text4 = "Mevcut"; } else { text4 = "Mevcut deil"; }
	if(PlayerInfo[playerid][pBoatLic]) { text2 = "Mevcut"; } else { text2 = "Mevcut deil"; }
	SendClientMessage(playerid, COLOR_WHITE, "Lisanslarn...");
	format(string, sizeof(string), "** Src lisans: %s.", text1);
	SendClientMessage(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** Pilot lisans: %s.", text4);
	SendClientMessage(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "** Tekne lisans: %s.", text2);
	SendClientMessage(playerid, COLOR_GREY, string);
	return 1;
}

CMD:lisansgoster(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /lisansgoster [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Lisanslar kendine gsteremezsin -  bunun iin /lisanslar komutunu kullan."); return 1; }
			new text1[20], text2[20], text4[20];
			if(PlayerInfo[playerid][pCarLic]) { text1 = "Mevcut"; } else { text1 = "Mevcut deil"; }
			if(PlayerInfo[playerid][pFlyLic]) { text4 = "Mevcut"; } else { text4 = "Mevcut deil"; }
			if(PlayerInfo[playerid][pBoatLic]) { text2 = "Mevcut"; } else { text2 = "Mevcut deil"; }
			format(string, sizeof(string), "%s kiisinin lisanslar...", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_WHITE, string);
			format(string, sizeof(string), "** Src lisans: %s.", text1);
			SendClientMessage(giveplayerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Pilot lisans: %s.", text4);
			SendClientMessage(giveplayerid, COLOR_GREY, string);
			format(string, sizeof(string), "** Tekne lisans: %s.", text2);
			SendClientMessage(giveplayerid, COLOR_GREY, string);
			format(string, sizeof(string), "* %s lisanslarn sana gsterdi.", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Lisanslarn %s kiisine gsterdin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s, lisanslarn %s kiisine gsterdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			return 1;
		}

	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		return 1;
	}
	return 1;
}

CMD:rozetgoster(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] >= 1 || PlayerInfo[playerid][pLeader] >= 1) {
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rozetgoster [Oyuncu ID/sim]");

		if(giveplayerid != INVALID_PLAYER_ID) {
			if(ProxDetectorS(5.0, playerid, giveplayerid)) {
				switch(PlayerInfo[playerid][pFaction]) {
					case 1, 2, 3, 5: {
						new
							infoArrays[3][64];

						GetPlayerFactionInfo(playerid, infoArrays[0], infoArrays[1], infoArrays[2]);

						SendClientMessage(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
						format(string, sizeof(string), "%s %s is kiisi yetkili yedir: %s (%s).", infoArrays[0], GetPlayerNameEx(playerid), infoArrays[2], infoArrays[1]);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);
						format(string, sizeof(string), "u anki Grev: %s.", infoArrays[1]);
						SendClientMessage(giveplayerid, COLOR_WHITE, string);

						switch(PlayerInfo[playerid][pFaction]) {
							case 1: SendClientMessage(giveplayerid, COLOR_WHITE, "Los Santos adna almaktadr..");
							case 2, 5: SendClientMessage(giveplayerid, COLOR_WHITE, "ABD Hakimiyeti Altnda.");
							default: SendClientMessage(giveplayerid, COLOR_WHITE, "Los Santos Government Hakimiyeti Altnda.");
						}

						if(PlayerInfo[playerid][pFaction] != 3) SendClientMessage(giveplayerid, COLOR_WHITE, "Memur, tutuklama yetkisine sahip.");
						if(PlayerInfo[playerid][pFaction] == 3) SendClientMessage(giveplayerid, COLOR_WHITE, "Memur, tutuklamaya yardm yetkisine sahip.");
						SendClientMessage(giveplayerid, COLOR_GRAD2, "----------------------------------------------------------------------------------------------------");
						format(string, sizeof(string), "* %s rozetini %s kiisine gsterir.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
					default: SendClientMessage(playerid, COLOR_WHITE, "Sivil Servis kuruluunda deilsin.");
				}
			}
			else SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		}
		else SendClientMessage(playerid, COLOR_WHITE, "Sivil Servis kuruluunda deilsin.");
	}
	return 1;
}

CMD:cagir(playerid, params[])
{
	new string[128], choice[32];
	if(sscanf(params, "s[32]", choice))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /cagir [isim]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Taksi, Otobus, Doktor, Tamirci, Ambulans");
		return 1;
	}

	if(PlayerInfo[playerid][pJailed] > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Hapiste bunu kullanamazsn.");
		return 1;
	}
	if(ServiceTime[playerid] > 0) return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu tekrar kullanmak iin 30 saniye beklemelisin.");

	if(strcmp(choice,"ambulans",true) == 0)
	{
		if(GetPVarInt(playerid, "Injured") == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Yaral deilsin, Acil yardm aramazsn!");
			return 1;
		}
		new zone[MAX_ZONE_NAME];
		GetPlayer2DZone(playerid, zone, MAX_ZONE_NAME);
		SetPVarInt(playerid, "EMSAttempt", 1);
		SendClientMessage(playerid, COLOR_WHITE, "Acil yardm ekibi yerini biliyor ve yoldalar.");
		format(string, sizeof(string), "Acil Yardm raporuna gre (%d) %s, %s blgesinden yaral, Acil nakil arac gerekiyor.",playerid, GetPlayerNameEx(playerid), zone);
		SendRadioMessage(3, TEAM_MED_COLOR, string);
		ServiceTime[playerid] = 30;
		return 1;
	}
	else if(strcmp(choice,"taksi",true) == 0)
	{
		if(TaxiDrivers < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   u an ibanda taksici yok, daha sonra tekrar deneyin!");
			return 1;
		}
		if(TransportDuty[playerid] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   u an taksi aramazsn!");
			return 1;
		}

		new
			szZoneName[MAX_ZONE_NAME];

		GetPlayer2DZone(playerid, szZoneName, MAX_ZONE_NAME);
		format(string, sizeof(string), "** %s, %s blgesinde taksiye ihtiyac var - /kabulet taksi yazarak ary kabul edebilirsin.", GetPlayerNameEx(playerid), szZoneName);
		SendTaxiMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Taksi ardn, Yant iin bekle.");
		TaxiCall = playerid;
		ServiceTime[playerid] = 30;
		return 1;
	}
	else if(strcmp(choice,"otobus",true) == 0)
	{
		if(BusDrivers < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   u an ibanda otobs ofr yok, daha sonra tekrar deneyin!");
			return 1;
		}
		if(TransportDuty[playerid] > 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   u an otobs aramazsn!");
			return 1;
		}
		format(string, sizeof(string), "** %s, %s blgesinde otobse ihtiyac var - /kabulet otobus yazarak ary kabul edebilirsin.", GetPlayerNameEx(playerid));
		SendBusMessage(TEAM_AZTECAS_COLOR, string);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Otobs ardn, Yant iin bekle.");
		BusCall = playerid;
		ServiceTime[playerid] = 30;
		return 1;
	}
	else if(strcmp(choice,"doktor",true) == 0)
	{
		if(Medics < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   uan ibanda ilkyardm ekibi yok, daha sonra tekrar deneyin!");
			return 1;
		}
		format(string, sizeof(string), "** %s, %s blgesinde ilkyardma ihtiyac var - /kabulet doktor yazarak ary kabul edebilirsin.", GetPlayerNameEx(playerid));
		SendRadioMessage(3, TEAM_AZTECAS_COLOR, string);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ilkyardm ardn, Yant iin bekle.");
		MedicCall = playerid;
		ServiceTime[playerid] = 30;
		return 1;
	}
	else if(strcmp(choice,"tamirci",true) == 0)
	{
		if(Mechanics < 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   u an ibanda tamirci yok, daha sonra tekrar deneyin!");
			return 1;
		}
		format(string, sizeof(string), "** %s, %s blgesinde tamirciye ihtiyac var - /kabulet tamirci yazarak ary kabul edebilirsin.", GetPlayerNameEx(playerid));
		SendJobMessage(7, TEAM_AZTECAS_COLOR, string);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Tamirci ardn, Yant iin bekle.");
		MechanicCall = playerid;
		ServiceTime[playerid] = 30;
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Bilinmeyen servis ismi!");
		return 1;
	}
}

CMD:oyuncakyardim(playerid, params[])
{
	SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	SendClientMessage(playerid, COLOR_WHITE,"*** OYUNCAK YARDIM ***");
	SendClientMessage(playerid, COLOR_GRAD3,"Oyuncak satn almak iin, herhangi bir kyafet dkkanna gidip {AA3333}/oyuncakal yaz");
	SendClientMessage(playerid, COLOR_GRAD3,"Oyuncak takp karmak, dzeltmek veya silmek iin iin, {AA3333}/oyuncaklar yaz");
	SendClientMessage(playerid, COLOR_GRAD3,"Hzlca oyuncaklarn takmak iin, {AA3333}/wat yaz");
	SendClientMessage(playerid, COLOR_GRAD3,"Hzlca oyuncaklarn karmak iin, {AA3333}/dat yaz");
	return 1;
}

CMD:oyuncakal(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

	if(IsAtClothShop(playerid))
		ShowPlayerDialogEx(playerid, BUYTOYS, DIALOG_STYLE_MSGBOX, "Oyuncak Dkkan", "Oyuncak dkkanna hogeldin! Oyuncuna takmak iin aksesuar satn alabilirsin.\n\nIlk olarak, biz oyunca depolamak iin bir slot seeceiz.\n(Not: VIP olmayanlar 5 oyuncak alabilir, Yakut-Elmas VIP  6-8 oyuncak)","Devam", "Iptal");
	else
		SendClientMessage(playerid, COLOR_WHITE, "Kyafet dkkannda deilsin.");

	return 1;
}

CMD:oyuncaklistesi(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /oyuncaklistesi [Oyuncu ID/sim]");
		}
		else if(IsPlayerConnected(iTargetID)) for(new iToyIter, szMessage[128]; iToyIter < MAX_PLAYER_ATTOBJECTS; ++iToyIter) {
			for(new LoopRapist; LoopRapist < sizeof(HoldingObjectsAll); ++LoopRapist) {
				if(HoldingObjectsAll[LoopRapist][holdingmodelid] == PlayerToyInfo[iTargetID][iToyIter][ptModelID]) {
					format(szMessage, sizeof(szMessage), "%s (slot %i, Kemik: %s)", HoldingObjectsAll[LoopRapist][holdingmodelname], iToyIter, HoldingBones[PlayerToyInfo[iTargetID][iToyIter][ptBone]]);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
					break;
				}
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:oyuncaklar(playerid, params[]) {
	if(PlayerCuffed[playerid] != 0)
	    return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

	ShowPlayerDialogEx(playerid, TOYS, DIALOG_STYLE_LIST, "Oyuncak Mens", "Oyuncak Tak/kar\nOyunca Dzelt\nOyuncak Sil","Se", "Iptal");
	return 1;
}

CMD:wat(playerid, params[]) {
	if(PlayerCuffed[playerid] != 0)
	    return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

	SendClientMessage(playerid, COLOR_WHITE, "* Tm oyuncaklar takl.");

	if(PlayerInfo[playerid][pDonator] <= 0)
	{
		for(new x;x<5;x++)
		{
			if(PlayerToyInfo[playerid][x][ptScaleX] == 0) {
				PlayerToyInfo[playerid][x][ptScaleX] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleY] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleZ] = 1.0;
			}
			if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], PlayerToyInfo[playerid][x][ptScaleX], PlayerToyInfo[playerid][x][ptScaleY], PlayerToyInfo[playerid][x][ptScaleZ]);
		}
	}
	else if(PlayerInfo[playerid][pDonator] == 1)
	{
		for(new x;x<6;x++)
		{
			if(PlayerToyInfo[playerid][x][ptScaleX] == 0) {
				PlayerToyInfo[playerid][x][ptScaleX] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleY] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleZ] = 1.0;
			}
			if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], PlayerToyInfo[playerid][x][ptScaleX], PlayerToyInfo[playerid][x][ptScaleY], PlayerToyInfo[playerid][x][ptScaleZ]);
		}
	}
	else if(PlayerInfo[playerid][pDonator] == 2)
	{
		for(new x;x<7;x++)
		{
			if(PlayerToyInfo[playerid][x][ptScaleX] == 0) {
				PlayerToyInfo[playerid][x][ptScaleX] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleY] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleZ] = 1.0;
			}
			if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], PlayerToyInfo[playerid][x][ptScaleX], PlayerToyInfo[playerid][x][ptScaleY], PlayerToyInfo[playerid][x][ptScaleZ]);
		}
	}
	else if(PlayerInfo[playerid][pDonator] >= 3)
	{
		for(new x;x<8;x++)
		{
			if(PlayerToyInfo[playerid][x][ptScaleX] == 0) {
				PlayerToyInfo[playerid][x][ptScaleX] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleY] = 1.0;
				PlayerToyInfo[playerid][x][ptScaleZ] = 1.0;
			}
			if(PlayerToyInfo[playerid][x][ptModelID] != 0) SetPlayerAttachedObject(playerid, x, PlayerToyInfo[playerid][x][ptModelID], PlayerToyInfo[playerid][x][ptBone], PlayerToyInfo[playerid][x][ptPosX], PlayerToyInfo[playerid][x][ptPosY], PlayerToyInfo[playerid][x][ptPosZ], PlayerToyInfo[playerid][x][ptRotX], PlayerToyInfo[playerid][x][ptRotY], PlayerToyInfo[playerid][x][ptRotZ], PlayerToyInfo[playerid][x][ptScaleX], PlayerToyInfo[playerid][x][ptScaleY], PlayerToyInfo[playerid][x][ptScaleZ]);
		}
	}
	return 1;
}

CMD:dat(playerid, params[]) {
	if(PlayerCuffed[playerid] != 0)
	    return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

	SendClientMessage(playerid, COLOR_WHITE, "* Oyuncaklar karld.");
	for(new x;x<MAX_PLAYERTOYS;x++)
	{
		RemovePlayerAttachedObject(playerid, x);
    }
    return 1;
}

CMD:bosan(playerid, params[])
{
	if(PlayerInfo[playerid][pMarried] < 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Evli deilsin!");
		return 1;
	}

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /bosan [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			new dstring[MAX_PLAYER_NAME];
			new wstring[MAX_PLAYER_NAME];
			new giveplayer[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
			format(string, sizeof(string), "%s", giveplayer);
			strmid(wstring, string, 0, strlen(string), 24);
			format(string, sizeof(string), "%s", PlayerInfo[playerid][pMarriedTo]);
			strmid(dstring, string, 0, strlen(string), 24);
			if(strcmp(dstring ,wstring, true) == 0)
			{
				format(string, sizeof(string), "* Boanma evraklarn %s kiisine gnderdin.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s sana boanma evraklarn gnderdi (/kabulet bosanmak yazarak kabul et).", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				DivorceOffer[giveplayerid] = playerid;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Oyuncu seninle evli deil!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			return 1;
		}

	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		return 1;
	}
}

CMD:adivorce(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] > 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /adivorce [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			ClearMarriage(giveplayerid);
			format(string, sizeof(string), "*%s kiisinden admin olarak boandn.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Admin tarafndan admin olarak boandn.", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			return 1;

		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
}

CMD:sahit(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /sahit [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendine teklif edemezsin!"); return 1; }
			format(string, sizeof(string), "* %s kiisine Nikah ahitlii teklif ettin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s Nikah ahidin olmay teklif etti (kabul etmek iin /kabulet sahitlik).", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			MarryWitnessOffer[giveplayerid] = playerid;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			return 1;
		}

	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		return 1;
	}
	return 1;
}

CMD:evlilikteklifi(playerid, params[])
{
	new
		string[128],
		giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evlililkteklifi [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid)) {
		if(PlayerInfo[giveplayerid][pMarried] > 0)
			return SendClientMessage(playerid, COLOR_GREY, "   Bu oyuncu zaten evli!");

		if(GetPlayerCash(playerid) < 10000)
			return SendClientMessage(playerid, COLOR_GREY, "   Evlilik ve resepsiyon masraflar $10000!");

		if(PlayerInfo[playerid][pMarried] > 0)
			return SendClientMessage(playerid, COLOR_GREY, "   Zaten evlisin!");

		if(MarryWitness[playerid] == giveplayerid)
			return SendClientMessage(playerid, COLOR_GREY, "   ahitle evlenemezsin!");

		if(giveplayerid == playerid)
			return SendClientMessage(playerid, COLOR_GREY, "Kendine teklif edemezsin!");

		if(ProxDetectorS(8.0, playerid, giveplayerid)) {
			format(string, sizeof(string), "* %s kiisine teklif ettin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* %s sana teklif etti(kabul etmek iin /kabulet evlilik).", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			ProposeOffer[giveplayerid] = playerid;
		} else return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
	} else return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	return 1;
}

CMD:sigortaal(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid,4.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 1) {
        if(GetPlayerCash(playerid) >= 400) {
            if(PlayerInfo[playerid][pInsurance] != 1) {
                GivePlayerCash(playerid, -400);
                PlayerInfo[playerid][pInsurance] = 1;
                SendClientMessage(playerid, COLOR_WHITE, "   Sigorta alnd,  $150 + Bir seferlik $250 transfer creti dedin, Artk $150 karlnda All Saints Hastanesi'nde tedavi edileceksin.");
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GRAD4, "All Saints Hastanesi'nde zaten sigortan var!");
            }
        }
        else {
            SendClientMessage(playerid, COLOR_GRAD4, "Sigorta iin yeterli paran yok!");
        }
    }
    else if(IsPlayerInRangeOfPoint(playerid,4.0,1169.7209472656,-1348.3218994141,2423.0461425781) && PlayerInfo[playerid][pVW] == 2) {
        if(GetPlayerCash(playerid) >= 400) {
            if(PlayerInfo[playerid][pInsurance] != 2) {
                GivePlayerCash(playerid, -400);
                PlayerInfo[playerid][pInsurance] = 2;
                SendClientMessage(playerid, COLOR_WHITE, "   Sigorta alnd,  $150 + Bir seferlik $250 transfer creti dedin, Artk $150 karlnda County General Hastanesi'nde tedavi edileceksin.");
                return 1;
            }
            else {
                SendClientMessage(playerid, COLOR_GRAD4, "County General Hastanesi'nde zaten sigortan var!");
            }
        }
        else {
            SendClientMessage(playerid, COLOR_GRAD4, "Sigorta iin yeterli paran yok!");
        }
    }
    return 1;
}

/* CMD:sigortayardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessage(playerid, COLOR_WHITE,"*** SIGORTA YARDIM *** Daha ok bilgi iin komut gir.");
    SendClientMessage(playerid, COLOR_GRAD3,"*** SIGORTA *** /sigortaal");
    SendClientMessage(playerid, COLOR_LIGHTRED,"*** SIGORTA *** ATATURK: $150 + Transfer (Bir Seferlik) $250");
    SendClientMessage(playerid, COLOR_LIGHTRED,"*** SIGORTA *** GUVEN: $150 + Transfer (Bir Seferlik) $250");
    return 1;
} */

CMD:fmdc(playerid, params[])
{
    new MemberString[1024], giveplayer[MAX_PLAYER_NAME], duty[10], string[128];
    if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= 4)
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
			foreach(Player, i)
			{
			    giveplayer = GetPlayerNameEx(i);
				if(PlayerInfo[i][pFaction] == 3)
				{
				    switch(PlayerInfo[i][pDuty])
			    	{
      	 				case 0:
			        	{
			        	    duty = "Off Duty";
						}
						case 1:
						{
						    duty = "On Duty";
						}
			        }
					format(string, sizeof(string), "*(%s) - (ar Kabul: %d) - (Teslim Edilen Hasta: %d) - (%s)\n", giveplayer, PlayerInfo[i][pCallsAccepted], PlayerInfo[i][pPatientsDelivered], duty);
					strcat(MemberString, string, sizeof(MemberString));
				}
			}
			if(strlen(MemberString) == 0)
			{
			    strcat(MemberString, "Online ye yok.", sizeof(MemberString));
			}
			ShowPlayerDialogEx(playerid, FMDC, DIALOG_STYLE_LIST, "FMVB - Giri Yaplm | LSFMD yeleri", MemberString, "Se", "Iptal");
        }
        else SendClientMessage(playerid, COLOR_GREY, "Arata deilsin.");
    }
    return 1;
}

CMD:tedaviol(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1179.4012451172,-1331.5632324219,2423.0461425781))
	{
		if(GetPVarType(playerid, "STD"))
		{
			DeletePVar(playerid, "STD");
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hastane yardm sayesinde STD mikrobu tamyorsun!");
			GivePlayerCash(playerid, -100);
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Doktor: tbbi faturan $100. Iyi gnler!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Iyiletirilecek STD mikrobun yok!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Hastanede deilsin!");
	}
	return 1;
}

CMD:tedaviasfafa(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction]==3||PlayerInfo[playerid][pLeader]==3)//model
	{
 		if(PlayerInfo[playerid][pTriageTime] != 0)
   		{
     		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanmak iin 2 dakika beklemelisin.");
       		return 1;
	    }

	    new string[128], giveplayerid;
	    if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /tedavi [Oyuncu ID/sim]");

   		if(IsPlayerConnected(giveplayerid))
   		{
    	    if(playerid == giveplayerid) return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kendi zerinde kullanamazsn.");
    	    if(ProxDetectorS(5.0, playerid, giveplayerid))
			{
	    	    new Float: health;
	    	    GetPlayerHealth(giveplayerid, health);
	    	    if(health >= 85) SetPlayerHealth(giveplayerid, 100);
				else SetPlayerHealth(giveplayerid, health+15.0);
	    	    format(string, sizeof(string), "* %s, %s kiisini iyiletirdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	    	    ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				PlayerInfo[playerid][pTriageTime] = 120;
			}
			else
			{
			    SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			}
 		}
	}
	return 1;
}

CMD:iyilestir(playerid, params[])
{
	if(GetPVarInt(playerid, "EventToken") == 1 && EventInfo[EventToggleHeal] == 1)
		return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlikte iyiletiremezsin!");

	new
		giveplayerid,
		price;

	if(sscanf(params, "ud", giveplayerid, price))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /iyilestir [Oyuncu ID/sim] [fiyat]");

	if(price < 20 || price > 100)
		return SendClientMessage(playerid, COLOR_GREY, "Iyiletirme creti $20-$100 aras olmal.");

	if(giveplayerid == playerid)
		return SendClientMessage(playerid, COLOR_GRAD1, "Kendini iyiletiremezsin.");

	if(IsPlayerConnected(giveplayerid)) {
	    if(GetDistanceBetweenPlayers(giveplayerid, playerid) > 10)
	        return SendClientMessage(playerid, COLOR_GREY, "Hedefi iyiletirmek iin ok uzaktasn.");

		if(PlayerInfo[giveplayerid][pCash] < price && price > 0)
		    return SendClientMessage(playerid, COLOR_GREY, "Iyiletirme creti oyuncu iin ok pahal.");

		new
			iVehicle = GetPlayerVehicleID(playerid),
			iGiveVehicle = GetPlayerVehicleID(giveplayerid);

		if(IsInLSFMD(playerid)) {
			if(IsAnAmbulance(iVehicle) && iVehicle == iGiveVehicle) {
				new
					Float:tempheal;
				GetPlayerHealth(giveplayerid, tempheal);

				if(tempheal >= 100.0)
					return SendClientMessage(playerid, TEAM_GREEN_COLOR,"Bu oyuncu full canda.");

				new
					string[64];

				format(string, sizeof(string), "%s kiisini $%d kadara iyiletirdin.", GetPlayerNameEx(giveplayerid),price);
				SendClientMessage(playerid, COLOR_PINK, string);

				GivePlayerCash(playerid, price / 2);
				GivePlayerCash(giveplayerid, -price);
				SetPlayerHealth(giveplayerid, 100);
				PlayerPlaySound(playerid, 1150, 0.0, 0.0, 0.0);
				PlayerPlaySound(giveplayerid, 1150, 0.0, 0.0, 0.0);

				format(string, sizeof(string), " $%d karlnda %s tarafndan iyiletirildin.",price, GetPlayerNameEx(playerid));
				Log("logs/iyilestir.log", string);
				SendClientMessage(giveplayerid, TEAM_GREEN_COLOR,string);

				if(GetPVarType(giveplayerid, "STD")) {
					DeletePVar(giveplayerid, "STD");
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* Ilkyardim mdahalesi sayesinde STD mikrobu tamyorsun.");
				}
			} else SendClientMessage(playerid, COLOR_GRAD1, "Hasta ve sen ikiniz de ambulansta olmanz gerekiyor.");
		} else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	} else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:lsmfd(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3,1188.5157470703,-1350.9741210938, 2423.2648925781) || IsPlayerInRangeOfPoint(playerid,3,190.006759, 166.887557, 1997.859375))
		{
			ShowPlayerDialogEx(playerid, LSFMDMENU, DIALOG_STYLE_LIST, "LSFMD","ba\nUniforma\nEkipman\nSivil", "Se", "Iptal");
		}
		else
		{
			SendClientMessage(playerid, COLOR_RED, "LSFMD dolaplarndan uzaktasn.");
		}
	}
	return 1;
}

CMD:lsfmdbirim(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= 5) {
		new
			string[128],
			giveplayerid,
			division;

		if(sscanf(params, "ud", giveplayerid, division)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /lsfmdbirim [Oyuncu ID/sim] [division]");
			SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Birim Isimleri: 0 (None), 1 (T&R), 2 (LF), 3 (FD), 4 (I&A)");
			return 1;
		}

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pFaction] == 3) {
				if(division == 0) {
					PlayerInfo[giveplayerid][pDivision] = 0;
					format(string, sizeof(string), "Biriminden %s tarafndan atldn.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi birimden attn.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				} else if(division == 1) {
					PlayerInfo[giveplayerid][pDivision] = 1;
					format(string, sizeof(string), "u an Eitim & e Alma birimindesin, Davet Eden: %s.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi Eitim & e Alma birimine davet ettin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				} else if(division == 2) {
					PlayerInfo[giveplayerid][pDivision] = 2;
					format(string, sizeof(string), "Hayat Uuu birimindesin, Davet Eden: %s.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi Hayat Uuu birimine davet ettin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				} else if(division == 3) {
					PlayerInfo[giveplayerid][pDivision] = 3;
					format(string, sizeof(string), "Yangn Departman birimindesin, Davet Eden: %s.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi Yangn Departman birimine davet ettin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                } else if(division == 4) {
					PlayerInfo[giveplayerid][pDivision] = 4;
					format(string, sizeof(string), "nternal Affairs birimindesin, Davet Eden: %s.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi nternal Affairs birimine davet ettin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				} else cmd_lsfmdbirim(playerid, "");
			} else SendClientMessage(playerid, COLOR_GRAD1, "Setiin oyuncu sizin kuruluta deil.");
		} else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	} else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkin yok - LSFMD R5+ kiiler kullanabilir.");
	return 1;
}

CMD:ykabul(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ykabul [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
		    if(giveplayerid == playerid)
		    {
		        SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kendi ilkyardm arn kabul edemezsin!");
				return 1;
		    }
			if(GetPVarInt(giveplayerid,"MedicCall") == 1)
			{
				if(PlayerInfo[giveplayerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "Hapistekilere mdahale edemezsin.");
				format(string, sizeof(string), "Ilkyardm ofr %s (%d) %s kiisinin ilkyardm arsn kabul etti.",GetPlayerNameEx(playerid),giveplayerid,GetPlayerNameEx(giveplayerid));
				SendRadioMessage(3, TEAM_MED_COLOR, string);
				format(string, sizeof(string), "* %s adl kiinin ilkyardm arsn kabul ettin, ulaana kadar iareti greceksin.",GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Ilkyardm ofr %s ilkyardm arn kabul etti; bulunduun noktada bekle.",GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				GameTextForPlayer(playerid, "~w~Ilkyardm ars~n~~r~Krmz iarete git.", 5000, 1);
				EMSCallTime[playerid] = 1;
				EMSAccepted[playerid] = giveplayerid;
				SetPVarInt(giveplayerid, "EMSAttempt", 1);
				SetPVarInt(giveplayerid, "EMSWaiting", playerid);
				PlayerInfo[playerid][pCallsAccepted]++;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Oyuncu ilkyardm istememi!");
			}
		}
	}
	return 1;
}

CMD:yaralilistesi(playerid, params[]) {
    if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3) {
        new
            szPlayerZone[MAX_ZONE_NAME],
            szMessage[128],
            Float:health,
			iCount;

        SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastalar mdahale bekliyor:");

        foreach(Player, i) {
            if(GetPVarInt(i, "Injured") == 1) {
                GetPlayerHealth(i,health);
                GetPlayer3DZone(i, szPlayerZone, MAX_ZONE_NAME);
				foreach(Player, j) {
					if(EMSAccepted[j] == i) {
						format(szMessage, sizeof(szMessage), "%s (ID: %d) - (blge: %s) - kalan can: %.1f - Kabul Edildi: %s", GetPlayerNameEx(i), i, szPlayerZone, health, GetPlayerNameEx(j));
						SendClientMessage(playerid, COLOR_WHITE, szMessage);
						iCount ++;
					}
				}
				if(iCount == 0) {
					format(szMessage, sizeof(szMessage), "%s (ID: %d) - (blge: %s) - kalan can: %.1f ", GetPlayerNameEx(i), i, szPlayerZone, health);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
				}
            }
        }
    }
	return 1;
}

CMD:ytasi(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ytasi [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid,"Injured") == 1)
			{
				if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD2, "Aratayken bu komutu kullanamazsn.");
				if(PlayerInfo[giveplayerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu hapisteki oyuncular iin kullanamazsn.");
				if(GetPVarInt(giveplayerid, "OnStretcher") == 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Oyuncu zaten sedyede, u an bunu yapamazsn!");
					return 1;
				}

				new Float:mX, Float:mY, Float:mZ;
				GetPlayerPos(giveplayerid, mX, mY, mZ);
				if(!IsPlayerInRangeOfPoint(playerid, 5.0, mX, mY, mZ))
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Hastay tamak iin yannda olmalsn!");
					return 1;
				}
				SendClientMessage(playerid, COLOR_GRAD2, "Baka bir noktaya gtrmek iin 30 saniyen var ya da '{AA3333}FIRE{BFC0C2}' dmesine basabilirsin.");
				format(string, sizeof(string), "* %s tarafndan sedyeye yatrldn.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s adl kiiyi sedyeye koydun, artk gtrebilirsin.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s, %s adl kiiyi sedyeye koydu,kemeri emniyetlice balad.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
                Log("logs/ytasi.log", string);
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				SetPVarInt(giveplayerid, "OnStretcher", 1);
				SetPVarInt(playerid, "TickEMSMove", SetTimerEx("MoveEMS", 30000, false, "d", playerid));
				SetPVarInt(playerid, "MovingStretcher", giveplayerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Oyuncunun tanabilmesi iin yaral olmas gerek!");
			}
		}
	}
	return 1;
}

CMD:yaracaat(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] ==3)
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
            SendClientMessage(playerid, COLOR_GREY, "Arabadayken bunu yapamazsn!");
            return 1;
        }

        new string[128], giveplayerid, seat;
        if(sscanf(params, "ud", giveplayerid, seat)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yaracaat [Oyuncu ID/sim] [seatid]");

        if(IsPlayerConnected(giveplayerid))
		{
            if(giveplayerid != INVALID_PLAYER_ID)
			{
                if(seat < 2 || seat > 3)
				{
                    SendClientMessage(playerid, COLOR_GRAD1, "Koltuk ID'si 2 veya 3 olmal.");
                    return 1;
                }
                if(GetPVarInt(giveplayerid, "Injured") != 1)
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Hasta yaral deil - onu ykleyemezsin.");
                    return 1;
                }
                if(IsPlayerInAnyVehicle(giveplayerid))
				{
                    SendClientMessage(playerid, COLOR_GREY, "   Hasta arabann iinde - onu ykleyemezsin.");
                    return 1;
                }
                if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
                    if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendini ykleyemezsin!"); return 1; }
                    if(PlayerInfo[giveplayerid][pJailed] > 0) return SendClientMessage(playerid, COLOR_GRAD2, "Hapisteki oyuncular iin bu komutu kullanamazsn.");
                    new carid = gLastCar[playerid];

                    if(IsAnAmbulance(carid))
					{
                        new Float:pos[6];
                        GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
                        GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
                        GetVehiclePos(carid, pos[0], pos[1], pos[2]);
                        if(floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
                            floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
                            floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
                        format(string, sizeof(string), "* Ilkyardm grevlisi %s tarafndan yklendiniz.", GetPlayerNameEx(playerid));
                        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* Hasta %s adl kiiyi yklediniz.", GetPlayerNameEx(giveplayerid));
                        SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                        format(string, sizeof(string), "* %s, %s adl kiiyi ambulansa bindirdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
                        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                        SetPVarInt(giveplayerid, "EMSAttempt", 3);
                        ClearAnimations(giveplayerid, 1);
                        PutPlayerInVehicle(giveplayerid,carid,seat);
                        TogglePlayerControllable(giveplayerid, false);
                    }
                    else
					{
                        SendClientMessage(playerid, COLOR_GRAD2, "Son araban ambulans olmas gerekiyor!");
                    }
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "Arabana ya da oyuncuya yeterince yakn deilsin!");
                    return 1;
                }
            }
        }
        else
		{
            SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
            return 1;
        }
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD2, "   LSFMD yesi deilsin!");
    }
    return 1;
}

CMD:yteslimet(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction]==3||PlayerInfo[playerid][pLeader]==3)
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
			new string[128], giveplayerid;
		    if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yteslimet [Oyuncu ID/sim]");

            new carid = GetPlayerVehicleID(playerid);
            new caridex = GetPlayerVehicleID(giveplayerid);
            if(IsAnAmbulance(carid))
			{
                if(carid == caridex)
				{
                    if(IsAtDeliverPatientPoint(playerid))
					{
                        if(playerid == giveplayerid)
						{
                            SendClientMessage(playerid, COLOR_GRAD2, "Kendini hastaneye teslim edemezsin!");
                            return 1;
                        }
                        if(GetPVarInt(giveplayerid, "Injured") == 0)
						{
                            return SendClientMessage(playerid, COLOR_GRAD2, "Oyuncu yaral deil!");
                        }
                        if(playerTabbed[giveplayerid] == 1)
						{
                            SendClientMessage(playerid, COLOR_GRAD2, "Oyuncu oyunu durdurmu, imdilik onu teslim edemezsin!");
                            return 1;
                        }
                        SetPlayerHealth(giveplayerid, 100);
                        if(GetPVarType(giveplayerid, "STD"))
						{
							DeletePVar(giveplayerid, "STD");
                            SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Hastane yardm sayesinde STD mikrobu tamyorsun!");
                        }
                        GivePlayerCash(giveplayerid, -100);
                        GivePlayerCash(playerid,250);
                        KillEMSQueue(giveplayerid);
                        DeletePVar(giveplayerid, "DoktorMasrafi");
                        SendClientMessage(giveplayerid, TEAM_CYAN_COLOR, "Doktor: Tbbi fatura $100. yi gnler!");
                        format(string,sizeof(string),"Hastay teslim ettiin iin $250 aldn!");
                        SendClientMessage(playerid, TEAM_CYAN_COLOR, string);
                        SetPlayerPos(giveplayerid, 1169.7588,-1351.5490,2423.0461);
                        SetPlayerInterior(giveplayerid, 1);
                        PlayerInfo[giveplayerid][pInt] = 1;

		    			LoadObjectsForPlayer(giveplayerid);

                        PlayerInfo[playerid][pPatientsDelivered]++;
                        format(string, sizeof(string), "Ilkyardm ofr %s hasta %s adl kiiyi hastaneye teslim etti.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
                        Log("logs/yteslimet.log", string);
						SendRadioMessage(3, TEAM_MED_COLOR, string);

                        if(IsPlayerInRangeOfPoint(playerid, 5.0,1142.4733,-1326.3633,13.6259) || IsPlayerInRangeOfPoint(playerid, 5.0, 1165.1564,-1368.8240,26.6502))
						{
                            SetPlayerVirtualWorld(giveplayerid, 1);
                            PlayerInfo[giveplayerid][pVW] = 1;
                        }
                        else if(IsPlayerInRangeOfPoint(playerid, 5.0,2027.0599,-1410.6870,16.9922) || IsPlayerInRangeOfPoint(playerid, 5.0, 2024.5742,-1382.7844,48.3359))
					 	{
                            SetPlayerVirtualWorld(giveplayerid, 2);
                            PlayerInfo[giveplayerid][pVW] = 2;
                        }
                    }
                    else
					{
                        SendClientMessage(playerid, COLOR_GRAD2, "Herhangi bir teslim noktasnda deilsin - hastanelerin yaknna bak.");
                    }
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GRAD2, "Hastay teslim etmek iin senin aracnda olmas gerekir.");
                }
            }
            else
			{
                SendClientMessage(playerid, COLOR_GRAD2, "LSFMD aracnda deilsin.");
            }
        }
    }
    return 1;
}
/*
Global kanal deaktif edildi
CMD:toggc(playerid, params[])
{
	if(GlobalChat[playerid] == 0)
	{
        SendClientMessage(playerid, COLOR_WHITE, "Global kanaln atn, /g ile konuabilirsin.");
        GlobalChat[playerid] = 1;
	}
	else if(GlobalChat[playerid] == 1)
	{
        SendClientMessage(playerid, COLOR_WHITE, "Global kanaln kapattn.");
        GlobalChat[playerid] = 0;
	}
	return 1;
}

CMD:g(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
		return 1;
	}
	if(PlayerInfo[playerid][pGCMuted] > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu kanaldan mutelisin.");
		return 1;
	}
	new string[128];
	if(GlobalChatTimer[playerid] > 0)
	{
		format(string, sizeof(string), "Bu kanalda tekrar konuabilmek iin %d saniye beklemelisin.", GlobalChatTimer[playerid]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}
	if(GlobalChat[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Global sohbette deilsin, /toggc yaz.");
		return 1;
	}

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/g) [text]");

	if(strlen(params) > 80)
	    return SendClientMessage(playerid, COLOR_GREY, "Mesaj ok uzun - limit 80 karakter.");

	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pDonator] == 1)
	{
		format(string, sizeof(string), "(( Yakut VIP %s: %s ))", GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 5;
	}
	else if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pDonator] == 2)
	{
		format(string, sizeof(string), "(( Master VIP %s: %s ))", GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 5;
	}
	else if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pDonator] == 3)
	{
		format(string, sizeof(string), "(( Elmas VIP %s: %s ))", GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 5;
	}
	else if(PlayerInfo[playerid][pHelper] == 1)
	{
		format(string, sizeof(string), "(( Yeni Yardmc %s: %s ))", GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 2;
	}
	else if(PlayerInfo[playerid][pHelper] == 2)
	{
		format(string, sizeof(string), "(( Kdemli Yardmc %s: %s ))", GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 2;
	}
	else if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pDonator] == 1)
	{
		format(string, sizeof(string), "(( Level %d Oyuncu %s: %s ))", PlayerInfo[playerid][pLevel], GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 5;
	}
	else if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pDonator] == 0)
	{
		format(string, sizeof(string), "(( Level %d Oyuncu %s: %s ))", PlayerInfo[playerid][pLevel], GetPlayerNameEx(playerid), params);
		GlobalChatTimer[playerid] = 5;
	}
	else if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		format(string, sizeof(string), "(( Level %d Admin %s: %s ))", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid), params);
	}

	foreach(Player, i)
	{
		if(GlobalChat[i] == 1)
		{
			SendClientMessage(i, COLOR_NEWS, string);
		}
	}
	return 1;
}
*/
CMD:yardimiste(playerid, params[]) {
	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /yardimiste [Sorunuz]");

	if(PlayerInfo[playerid][pNMute] == 0 && PlayerInfo[playerid][pHelper] == 0) {
	    SetPVarString(playerid, "helpreq", params);

	    SendClientMessage(playerid, COLOR_LIGHTBLUE, "Yardm isteiniz yardmc takmna gnderildi.");

	    new
	        szMessage[128];

	    format(szMessage, sizeof(szMessage), "YardmKomutu: %s (%d) yardm istei gnderdi; %s", GetPlayerNameEx(playerid), playerid, params);
	    HelperBroadcast(COLOR_LIGHTBLUE, szMessage, 1);
	} else SendClientMessage(playerid, COLOR_GREY, "Yardm Kanalndan muteliysen yardm istei gnderemezsin, /rapor kullanarak mute kaldrlmasn talep etmelisin.");

	return 1;
}

CMD:yardimcilar(playerid, params[]) {
    if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1) {
        new
            iCount,
            szMessage[128];

        foreach(Player, x) {
            if(PlayerInfo[x][pHelper] > 0) {
				format(szMessage, sizeof(szMessage), "Level %d Yardmc: %s | Kabul Edilen Istekler: %d", PlayerInfo[x][pHelper], GetPlayerNameEx(x), PlayerInfo[x][pAcceptReport]);
				SendClientMessage(playerid, COLOR_GREY, szMessage);

				iCount++;
			}
		}

		if(iCount == 0)
		    return SendClientMessage(playerid, COLOR_GREY, "u an online yardmc yok.");
    }
	return 1;
}

CMD:yardimistekleri(playerid, params[]) {
    if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1) {
        new
            szReason[100],
            iCount,
            szMessage[128];

		foreach(Player, x) {
		    if(GetPVarType(x, "helpreq") != 0) {
			    GetPVarString(x, "helpreq", szReason, sizeof(szReason));
			    format(szMessage, sizeof(szMessage), "Isim: %s (ID: %d) | Mesaj: %s", GetPlayerNameEx(x), x, szReason);
			    SendClientMessage(playerid, COLOR_WHITE, szMessage);

				iCount++;
		    }
		}

		if(iCount == 0)
		    SendClientMessage(playerid, COLOR_GREY, "u an aktif yardm istei yok.");
	}
	return 1;
}

 CMD:pmkapat(playerid, params[])
{
   PlayerInfo[playerid][pmka] = 1;
   SendClientMessage(playerid,COLOR_WHITE,"PM kanaln kapattnz.");
   return 1;
}

CMD:pmac(playerid, params[])
{
   PlayerInfo[playerid][pmka] = 0;
   SendClientMessage(playerid,COLOR_WHITE,"PM kanaln atnz.");
   return 1;
}

CMD:pm(playerid, params[])
{
 new playerb, string[256], text[128];
 if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");

 if(sscanf(params, "us[128]", playerb, text)) return SendClientMessage(playerid, COLOR_WHITE, "{FF0000}KULLANIM: {FFFFFF}/pm [playerid] [yaziniz]");

 if(!strlen(text)) return SendClientMessage(playerid, COLOR_GREY, "PM Atmak iin bireyler yazmalsn.");

 if(PlayerInfo[playerb][pmka] == 1) return SendClientMessage(playerid, COLOR_GREY, "Bu kiinin PM Kanal Kapal!");

 if(!gPlayerLogged[playerid]) return SendClientMessage(playerid, COLOR_GREY, "Byle bir oyuncu bulunamad.");



 format(string, sizeof(string), "{EAE549}[PM]{F1B62C} %s [%d]: {CBCBC5}(( {F3F99E}%s {CBCBC5}))", nPlayerName(playerb, 0),playerb, text);
 SendClientMessage(playerid, COLOR_YELLOW, string);


 format(string, sizeof(string), "{EAE549}[PM]{F1B62C} %s [%d]: {CBCBC5}(( {F3F99E}%s {CBCBC5}))", nPlayerName(playerid, 0),playerid, text);
 SendClientMessage(playerb, COLOR_YELLOW, string);
 format(string, sizeof(string), "[PM] %s >> %s: %s",  nPlayerName(playerid, 0),nPlayerName(playerb,0 ), text); 
 Log("logs/pm.log", string);
 foreach(Player, i)
 {
 }
 return 1;
}

stock nPlayerName(playerid, underscore=1) {
new name[MAX_PLAYER_NAME];
GetPlayerName(playerid, name, sizeof(name));

if(!underscore)
{
for(new i; i < strlen(name); i++) {
if(name[i] == '_') name[i] = ' ';
}
}
return name;
}

/* CMD:pmkabul(playerid, params[]) {
	if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1) {
		new
		    szMessage[128],
		    szReason[100],
			iTarget;

		if(sscanf(params, "u", iTarget))
		    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /kabuletpm [playerid]");

		if(iTarget == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(GetPVarType(iTarget, "helpreq") == 0)
		    return SendClientMessage(playerid, COLOR_GREY, "Belirlenen oyuncunun yardm istei yok.");

		GetPVarString(iTarget, "helpreq", szReason, sizeof(szReason));

		format(szMessage, sizeof(szMessage), "%s (ID: %d) adl kiinin yardm isteini kabul ettin; %s", GetPlayerNameEx(iTarget), iTarget, szReason);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "/pm kullanarak mesajlar deiebilirsin.");

		PlayerInfo[playerid][pAcceptReport]++;

		HelperPM[iTarget] = playerid;
		HelperPM[playerid] = iTarget;

		format(szMessage, sizeof(szMessage), "%s yardm isteini kabul etti, '/pm' kullanarak yantlayabilirsin.", GetPlayerNameEx(playerid));
		SendClientMessage(iTarget, COLOR_LIGHTBLUE, szMessage);

		format(szMessage, sizeof(szMessage), "YardmKomutu: %s, %s (ID: %d) adl kiinin yardm isteini kabul etti(PM).", GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget), iTarget);
		HelperBroadcast(COLOR_ORANGE, szMessage, 1);

		DeletePVar(iTarget, "helpreq");
	}
	return 1;  //DEAKTF
}  */

CMD:yardimkabul(playerid, params[]) {
	if(PlayerInfo[playerid][pHelper] >= 1 || PlayerInfo[playerid][pAdmin] >= 1) {
		new
		    szMessage[128],
		    szReason[100],
			iTarget;

		if(sscanf(params, "u", iTarget))
		    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /yardimkabul [playerid]");

		if(GetPVarInt(playerid, "EventToken") == 1 || PlayerInfo[playerid][pJailTime] > 0)
			return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

		if(iTarget == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(GetPVarType(iTarget, "helpreq") == 0)
		    return SendClientMessage(playerid, COLOR_GREY, "Belirlenen oyuncu yardm istemedi.");

		if(GetPVarType(playerid, "posX") != 0)
			return SendClientMessage(playerid, COLOR_GREY, "Aktif olarak birine yardm ediyorsun.");

		GetPVarString(iTarget, "helpreq", szReason, sizeof(szReason));

		format(szMessage, sizeof(szMessage), "%s adl kiinin yardm isteini kabul ettin; %s", GetPlayerNameEx(iTarget), szReason);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);

	/*	GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
		SetPVarFloat(playerid, "posX", PlayerInfo[playerid][pPos_x]);
        SetPVarFloat(playerid, "posY", PlayerInfo[playerid][pPos_y]);
        SetPVarFloat(playerid, "posZ", PlayerInfo[playerid][pPos_z]);
        SetPVarInt(playerid, "posInt", GetPlayerInterior(playerid));
        SetPVarInt(playerid, "posVW", GetPlayerVirtualWorld(playerid));
		new Float:hp;
		GetPlayerHealth(playerid, hp);
        SetPVarFloat(playerid, "HelpHealth", hp);
		new Float: fArmour;
		if(GetPlayerArmour(playerid, fArmour) < ValidArmor[playerid]) GetPlayerArmour(playerid, PlayerInfo[playerid][pArmor]);
		else PlayerInfo[playerid][pArmor] = ValidArmor[playerid];
        SetPVarFloat(playerid, "HelpArmour", PlayerInfo[playerid][pArmor]);

		Helper[playerid] = CreateDynamic3DTextLabel("HELPER", COLOR_LIGHTBLUE, 0.0, 0.0, 0.0, 7.5, playerid, INVALID_VEHICLE_ID, 1, GetPlayerVirtualWorld(iTarget), GetPlayerInterior(iTarget), playerid, 7.5);


		TogglePlayerControllable(iTarget, 0);
		UnfreezeDelay(iTarget);

        GetPlayerPos(iTarget, PlayerInfo[iTarget][pPos_x], PlayerInfo[iTarget][pPos_y], PlayerInfo[iTarget][pPos_z]);
        SetPlayerPos(playerid, PlayerInfo[iTarget][pPos_x], PlayerInfo[iTarget][pPos_y], PlayerInfo[iTarget][pPos_z]);
		SetPlayerInterior(playerid, GetPlayerInterior(iTarget));
		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(iTarget));

		if(GetPlayerInterior(iTarget) > 0 || GetPlayerVirtualWorld(iTarget) > 0) {
			LoadObjectsForPlayer(playerid);
		} */

		PlayerInfo[playerid][pAcceptReport]++;

		format(szMessage, sizeof(szMessage), "%s senin yardm isteini kabul etti. (/hcevap)", GetPlayerNameEx(playerid));
		SendClientMessage(iTarget, COLOR_LIGHTBLUE, szMessage);

		format(szMessage, sizeof(szMessage), "YardmKomutu: %s, %s (ID: %d) kiisinin yardm isteini kabul etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget), iTarget);
		HelperBroadcast(COLOR_ORANGE, szMessage, 1);
		format(HelperKanal[iTarget][kName], 32, "%s", nPlayerName(playerid));
		format(HelperKanal[playerid][kAcceptName], 32, "%s", nPlayerName(iTarget));
  HelperKanal[iTarget][kCount] = true;
  HelperKanal[playerid][kCount] = true;
		DeletePVar(iTarget, "helpreq");
	}
	return 1;
}
/*
stock HelperKontrolEt(playerid)
{
foreach(new i: Player)
{
if(strcmp(HelperKanal[i][kAcceptName], nPlayerName(playerid), false))
{// eer sunucudaki herhangi bir yardm istiyen kii benim admla uyuursa
SendClientMessage(playerid, -1, "asd 1");
return 3;
}

if(strcmp(HelperKanal[i][kName], nPlayerName(playerid), false))
{//eer sunucudaki helper ismi benle uyuursa
SendClientMessage(playerid, -1, "asd 22");
return 2;
}
}
return -1;
}
*/
CMD:hcevap(playerid, params[])
{
if(!HelperKanal[playerid][kCount])
		    return SendClientMessage(playerid, COLOR_GREY, "Aktif bir yardm isteiniz/istei yok!");
		    
new text[256];
if(isnull(params)) return SendClientMessage(playerid, -1, "Ltfen metninizi giriniz.");
if(sscanf(params, "s[64]", text))
return SendClientMessage(playerid, -1, "KULLANIM: /hcevap [Mesajnz]");
if(strlen(params) > 64) return SendClientMessage(playerid, -1, "64 karakter uzunluunu getiniz...");
new str[256];
foreach(new i: Player)
{
if(!strcmp(nPlayerName(playerid), HelperKanal[i][kName], false))
{// eer benim adm sunucudaki herhangi bir yardim istiyenin adyla uyuursa
format(str, 256, "{33CCDD}[%s] (%d): %s",nPlayerName(playerid),playerid,text);

SendClientMessage(i, -1, str);
SendClientMessage(playerid, -1, str);
}
if(!strcmp(nPlayerName(playerid), HelperKanal[i][kAcceptName], false))
{// eer benim helperimin ad ... ysa
format(str, 256, "{33CCDD}[%s] (%d): %s",nPlayerName(playerid),playerid,text);
SendClientMessage(i, -1, str);
SendClientMessage(playerid, -1, str);
}
}
return 1;
}
CMD:bugrapor(playerid, params[])
{
   	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /bugrapor [yaziniz]");
	if(strlen(params) > 128) return SendClientMessage(playerid, COLOR_GREY, "Maximum karakter limiti 128.");
 new File: file = fopen("bugrapor.log", io_append), string[128];
	format(string, sizeof(string), "[%s] %s\r\n", (playerid), params);
	fwrite(file, string);
	fclose(file);
	SendClientMessage(playerid, COLOR_ORANGE, "Bug raporunuz kaydedilmitir, pawno ekibimiz inceleyecektir.");
	format(string, sizeof(string), "AdmUyari: %s adl kii bir bug rapor etti.", (playerid));
	SendAdminMessage(COLOR_RED, 1, string);
	return 1;
}

CMD:istek(playerid, params[])
{
   	if(gPlayerLogged[playerid] == 0) return SendClientMessage(playerid, COLOR_GREY, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(sscanf(params, "s[128]", params)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /istek [yaziniz]");
	if(strlen(params) > 128) return SendClientMessage(playerid, COLOR_GREY, "Maximum karakter limiti 128.");
 new File: file = fopen("istek.log", io_append), string[128];
	format(string, sizeof(string), "[%s] %s\r\n", (playerid), params);
	fwrite(file, string);
	fclose(file);
	SendClientMessage(playerid, COLOR_ORANGE, "steiniz kaydedilmitir, pawno ekibimiz inceleyecektir.");
	format(string, sizeof(string), "Admin Bildirim: %s adl kii bir istek yolladi, /istek", (playerid));
	SendAdminMessage(COLOR_RED, 1, string);
	return 1;
}

CMD:yardimbitir(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
      /*  if(GetPVarType(playerid, "posX") != 0) {
	        SetPlayerInterior(playerid, GetPVarInt(playerid, "posInt"));
	        SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "posVW"));
	        SetPlayerArmourEx(playerid, GetPVarFloat(playerid, "HelpArmour"));
	        SetPlayerHealth(playerid, GetPVarFloat(playerid, "HelpHealth"));
	        SetPlayerPos(playerid, GetPVarFloat(playerid, "posX"), GetPVarFloat(playerid, "posY"), GetPVarFloat(playerid, "posZ"));
			DestroyDynamic3DTextLabel(Helper[playerid]);

	        SendClientMessage(playerid, COLOR_WHITE, "kmadan nceki bulunduun noktaya nlandn.");

	        DeletePVar(playerid, "posX");
	        DeletePVar(playerid, "posY");
	        DeletePVar(playerid, "posZ");
	        DeletePVar(playerid, "posInt");
	        DeletePVar(playerid, "posVW");
	        DeletePVar(playerid, "HelpHealth");
	        DeletePVar(playerid, "HelpArmour"); */
			new playerids = GetPlayerID(HelperKanal[playerid][kAcceptName]);
			format(HelperKanal[playerids][kName], 32, "Yok");
			HelperKanal[playerids][kCount] = false;
			HelperKanal[playerid][kCount] = false;
			format(HelperKanal[playerid][kAcceptName], 32, "Yok");
        	SendClientMessage(playerid, COLOR_GREY, "Aktif olarak birine yardm etmiyorsun.");
    }
	return 1;
}

CMD:hkanalikapat(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1) {
        switch(GetPVarInt(playerid, "cschat")) {
			case 0: {
			    SetPVarInt(playerid, "cschat", 1);
			    SendClientMessage(playerid, COLOR_WHITE, "Artk helper kanaldaki mesajlar grmeyeceksin. /hkanalikapat ile mesajlar tekrar grebilirsin.");
			}
			case 1: {
			    DeletePVar(playerid, "cschat");
			    SendClientMessage(playerid, COLOR_WHITE, "Artk helper kanaldaki mesajlar tekrar grebilirsin.");
			}
		}
    }
	return 1;
}

CMD:c(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1)
	{
		if(isnull(params))
		    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /c(Helper-Admin) [mesaj]");

		new
		    string[128];

		if(PlayerInfo[playerid][pAdmin] >= 1)
			format(string, sizeof(string), "*** Level %d Admin %s: {FFFFFF}%s", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid), params);
		else if(PlayerInfo[playerid][pHelper] == 1)
		    format(string, sizeof(string), "*** Level 1 Helper %s: {FFFFFF}%s", GetPlayerNameEx(playerid), params);
  		else if(PlayerInfo[playerid][pHelper] == 2)
		    format(string, sizeof(string), "*** Level 2 Helper %s: {FFFFFF}%s", GetPlayerNameEx(playerid), params);
  		else if(PlayerInfo[playerid][pHelper] == 3)
		    format(string, sizeof(string), "*** Level 3 Helper %s: {FFFFFF}%s", GetPlayerNameEx(playerid), params);
  		else if(PlayerInfo[playerid][pHelper] == 4)
		    format(string, sizeof(string), "*** Level 4 Helper %s: {FFFFFF}%s", GetPlayerNameEx(playerid), params);
   	    else if(PlayerInfo[playerid][pHelper] == 5)
		    format(string, sizeof(string), "*** Community Advisor %s: {FFFFFF}%s", GetPlayerNameEx(playerid), params);

		foreach(Player, x) {
		    if(PlayerInfo[x][pAdmin] > 0 && GetPVarInt(x, "cschat") == 0 || PlayerInfo[x][pHelper] >= 1 && GetPVarInt(x, "cschat") == 0)
		        SendClientMessage(x, COLOR_LIGHTBLUE, string);
		}
	}
	return 1;
}

CMD:setdonator(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 6) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  		{
     	SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   		}
		new string[128], giveplayerid, level;
		if(sscanf(params, "ud", giveplayerid, level)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setdonator [player] [level]");
			SendClientMessage(playerid, COLOR_GRAD3, "Kullanlabilir Level: |0| Yok |1| Yakut |2| Master |3| Elmas");
			return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(level < 0 || level > 3)
				{
					SendClientMessage(playerid, COLOR_GRAD1, "VIP seviyesi 0-3 arasnda olmal!");
					return 1;
				}
				PlayerInfo[giveplayerid][pDonator] = level;

				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				if(level == 0)
				{
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin VIP Level'ini Yok (%d)yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 4);
					format(string, sizeof(string), "VIP Levelin Admin %s tarafndan Yok olarak ayarland.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "AdminKomutu: %s, %s (IP:%s) kiisinin VIP Levelini Yok (%d) yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 1)
				{
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin VIP Level'ini Yakut (%d)yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 4);
					format(string, sizeof(string), "VIP Levelin Admin %s tarafndan Yakut olarak ayarland.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "AdminKomutu: %s, %s (IP:%s) kiisinin VIP Levelini Yakut (%d) yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 2)
				{
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin VIP Level'ini Master (%d)yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 4);
					format(string, sizeof(string), "VIP Levelin Admin %s tarafndan Master olarak ayarland.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "AdminKomutu: %s, %s (IP:%s) kiisinin VIP Levelini Master (%d) yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level);
					Log("logs/setvip.log", string);
					return 1;
				}
				if(level == 3)
				{
					format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin VIP Level'ini Elmas (%d)yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), level);
					ABroadCast(COLOR_LIGHTRED,string, 4);
					format(string, sizeof(string), "VIP Levelin Admin %s tarafndan Elmas olarak ayarland.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);

					format(string, sizeof(string), "AdminKomutu: %s, %s (IP:%s) kiisinin VIP Levelini Elmas (%d) yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), playerip, level);
					Log("logs/setvip.log", string);
					return 1;
				}
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:gcto(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gcto [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pGCMuted] == 0)
			{
				PlayerInfo[giveplayerid][pGCMutedTime] = 15*60;
				PlayerInfo[giveplayerid][pGCMuted] = 2;
				format(string, sizeof(string), "AdminKomutu: %s, %s kiisini geici olarak Global Kanaldan bloklad, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
				ABroadCast(COLOR_LIGHTRED,string,1);

				format(string, sizeof(string), "%s tarafndan Global Kanalndan bloklandn, sebep: %s.", GetPlayerNameEx(playerid), reason);
				SendClientMessage(giveplayerid, COLOR_GRAD2, string);

				SendClientMessage(giveplayerid, COLOR_GRAD2, "Global Kanal 15 dakika kullanamayacaksn.");
				SendClientMessage(giveplayerid, COLOR_GRAD2, "Gelecekte Global Kanaln ktye kullanman, yetkilerinin kaybna veya sunucudan banlanmana sebep olacak.");


				format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan Global Kanaldan geici olarak blokland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Oyuncu zaten Global Kanal kullanamyor.");
			}

		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:gcreset(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gcoreset [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pGCMuted] == 2)
			{
				PlayerInfo[giveplayerid][pGCMuted] = 0;
				PlayerInfo[giveplayerid][pGCMutedTime] = 0;
				format(string, sizeof(string), "AdminKomutu: %s, %s adl kiinin Global Kanal bloklamasn kaldrd, sebep: %s",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), reason);
				ABroadCast(COLOR_LIGHTRED,string,1);

				SendClientMessage(giveplayerid, COLOR_GRAD2, "Global Kanal bloklaman kaldrld. Global Kanal sistemini tekrar kullanabilirsin.");
				SendClientMessage(giveplayerid, COLOR_GRAD2, "Yaplan hata ve yanllklardan dolay zr dileriz.");

				format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan Global Kanal bloklamas kaldrld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid),reason);
				Log("logs/mute.log", string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Oyuncu Global Kanal kullanabilir durumda.");
			}

		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:gcmute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gcmute [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pGCMuted] == 0)
			{
				PlayerInfo[giveplayerid][pGCMuted] = 1;
				format(string, sizeof(string), "AdminKomutu: %s, %s kiisini Global Kanaldan sresiz bloklad.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				ABroadCast(COLOR_LIGHTRED,string,1);

				foreach(Player, i)
				{
					if(GlobalChat[i] == 1 && PlayerInfo[i][pAdmin] < 2)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
					}
				}

				format(string, sizeof(string), "Global Kanal ktye kullanmaktan %s tarafndan sresiz mutelendiniz. Temyiz iin bavurun (admin ikayetleri)", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "AdminKomutu: %s /gc den blokland, Bloklayan: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
			else
			{
				PlayerInfo[giveplayerid][pGCMuted] = 0;
				PlayerInfo[giveplayerid][pGCMutedTime] = 0;
				format(string, sizeof(string), "AdminKomutu: %s kiisinin Global Kanal kullanm, %s tarafndan tekrar ald.",GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);

				foreach(Player, i)
				{
					if(GlobalChat[i] == 1 && PlayerInfo[i][pAdmin] < 2)
					{
						SendClientMessage(playerid, COLOR_LIGHTRED, string);
					}
				}

				format(string, sizeof(string), "%s tarafndan Global Kanal kullanmn ald.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_GRAD2, string);

				format(string, sizeof(string), "AdminKomutu: %s kiisinin /gc bloklamas kaldrld, Kaldran: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				Log("logs/mute.log", string);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:hizgostergesi(playerid, params[]) {
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) {
		SendClientMessage(playerid, COLOR_GREY, "Ara srmyorsun.");
	}
	else if(!PlayerInfo[playerid][pSpeedo]) {
		SendClientMessage(playerid, COLOR_WHITE, "Hz gstergesini altrdn.");
		PlayerInfo[playerid][pSpeedo] = 1;

		if(!FindTimePoints[playerid]) {

			new
				szSpeed[42];

			format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%.0f MPH", player_get_speed(playerid));
			GameTextForPlayer(playerid, szSpeed, 1500, 3);
		}
	}
	else {
		SendClientMessage(playerid, COLOR_WHITE, "Hz gstergesini kapattn.");
		PlayerInfo[playerid][pSpeedo] = 0;
		if(!FindTimePoints[playerid]) GameTextForPlayer(playerid, " ", 1500, 3);
	}
	return 1;
}

CMD:yukkontrol(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 20 && PlayerInfo[playerid][pJob2] != 20 && !IsACop(playerid))
	{
        SendClientMessage(playerid, COLOR_GRAD2, "Kamyon ofr veya polis deilsin!");
        return 1;
	}

	new carid = GetPlayerVehicleID(playerid);
 	new closestcar = GetClosestCar(playerid, carid);
  	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && IsATruckerCar(closestcar))
	{
		new string[128];

		new truckcontents = TruckContents[closestcar];
		new truckcontentname[50];
		if(truckcontents == 0)
		{ format(truckcontentname, sizeof(truckcontentname), "Yok"); }
		else if(truckcontents >= 1 && truckcontents <= 3)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Yiyecek & Iecek");}
		else if(truckcontents >= 4 && truckcontents <= 6)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Kyafet"); }
		else if(truckcontents == 7)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Yasal materyaller"); }
		else if(truckcontents >= 8 && truckcontents <= 10)
		{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}24/7 eyalar"); }
		else if(truckcontents >= 11 && truckcontents <= 15)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Illegal silahlar"); }
		else if(truckcontents >= 16 && truckcontents <= 20)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Illegal uyuturucular"); }
		else if(truckcontents >= 21 && truckcontents <= 25)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Illegal materyaller"); }

     	SendClientMessage(playerid, COLOR_GREEN,"________________ OCEAN DOCKS KAMYONLARI ________________");
		if(IsPlayerInVehicle(playerid, closestcar))
  		{
    		SendClientMessage(playerid, COLOR_WHITE, "O kamyonda bir oyuncu var. Kamyonun ieriini kontrol etmek iin ofrn inmesi gerekir.");
      		return 1;
		}

		format(string, sizeof(string), "Ara Kayt: %s (%d)", GetVehicleName(closestcar), closestcar);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "Ierik: %s", truckcontentname);
		SendClientMessage(playerid, COLOR_WHITE, string);

		if(IsACop(playerid) && truckcontents >= 11)
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Yasal olmayan rnleri silmek iin arabann yannda /yuktemizle yazn.");
		}

		if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20)
		{
			if(truckcontents > 0 && TruckUsed[playerid] == INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "rnleri teslim etmek iin ofr olarak /yukcal yaz.");
			}
			else if(TruckUsed[playerid] == INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "rnleri almak iin ofr olarak /yukyukle yaz.");
			}
			else if(TruckUsed[playerid] == closestcar && gPlayerCheckpointStatus[playerid] == CHECKPOINT_RETURNTRUCK)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Bu senin kamyonun, deme almak iin rnleri hala teslim etmedin.");
			}
			else if(TruckUsed[playerid] == closestcar)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Bu senin kamyonun, deme almak iin rnleri hala teslim etmedin.");
			}
			else if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
			{
				SendClientMessage(playerid, COLOR_YELLOW, "Baka bir teslimattasn, /iptal truck yazarak teslimat iptal et.");
			}
		}
     	SendClientMessage(playerid, COLOR_GREEN,"_________________________________________________________");
    }
	else
	{
 		SendClientMessage(playerid, COLOR_GRAD1, "Ocean Docks Kamyonuna yakn deilsin.");
 	}
    return 1;
}

CMD:yuktemizle(playerid, params[])
{
	if(!IsACop(playerid))
	{
        SendClientMessage(playerid, COLOR_GRAD2, "Polis deilsin!");
        return 1;
	}

	new carid = GetPlayerVehicleID(playerid);
 	new closestcar = GetClosestCar(playerid, carid);
  	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && IsATruckerCar(closestcar))
	{
		new truckcontents = TruckContents[closestcar];
		if(truckcontents < 11)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Bu kamyonda illegal eya yok.");
			return 1;
		}
		new string[128];

		new truckcontentname[50];
		if(truckcontents >= 11 && truckcontents <= 15)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}illegal silahlar"); }
		else if(truckcontents >= 16 && truckcontents <= 20)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}illegal uyuturucular"); }
		else if(truckcontents >= 21 && truckcontents <= 25)
		{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}illegal materyal"); }
 		foreach(Player, i)
		{
  			if(TruckUsed[i] == closestcar)
     		{
    			DestroyProgressBar(LoadTruckBar[i]);
				LoadTruckBar[i] = INVALID_BAR_ID;
				LoadTruckTime[i] = 0;
				DeletePVar(i, "TruckDeliver");
				TruckUsed[i] = INVALID_VEHICLE_ID;
				TruckContents[closestcar] = 0;
				DisablePlayerCheckpoint(i);
				gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
 				SendClientMessage(i, COLOR_WHITE, "Kamyon teslimatn iptal edildi. Devlet memuru illegal rnlere el koydu.");
       		}
		}
		format(string, sizeof(string), "Kamyondan %s {FFFFFF} adl ierii sildin.", truckcontentname);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "* %s kamyondaki illegal eyalar ald.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
    }
   	else
	{
 		SendClientMessage(playerid, COLOR_GRAD1, "Ocean Docks Kamyonlarna yakn deilsin.");
 	}
    return 1;
}

CMD:yukcal(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
     		if(CheckPointCheck(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");

			if(GetProgressBarValue(LoadTruckBar[playerid]) > 10)
       		{
         		SendClientMessage(playerid, COLOR_WHITE, "u an kamyonunu yklyorsun!");
				return 1;
     		}
       		if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
         	{
          		SendClientMessage(playerid, COLOR_WHITE, "Zaten baka bir teslimattasn, /iptal truck yazarak teslimat iptal et.");
				return 1;
     		}
			if(TruckContents[vehicleid] == 0)
			{
   				SendClientMessage(playerid, COLOR_WHITE, "Bu kamyon bo, hibir rn iermiyor!");
				return 1;
			}
			if(IsPlayerInRangeOfPoint(playerid, 65, 2225.343261, -2635.977294, 13.438463))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Ocean Docks'a bu kadar yaknken karamazsn!");
				return 1;
			}

			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonu karmaya alyorsun, ltfen bekle....");

			TogglePlayerControllable(playerid, 0);
			SetPVarInt(playerid, "IsFrozen", 1);

			LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
			SetProgressBarValue(LoadTruckBar[playerid], 100.0);
			ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
			SetTimerEx("HijackTruck", 1000, 0, "dd", playerid);
	    }
	    else return SendClientMessage(playerid, COLOR_GREY, "Ocean Docks Kamyonu srmyorsun!");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Kamyoncu deilsin!");
	return 1;
}


forward HijackTruck(playerid);
public HijackTruck(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
	LoadTruckTime[playerid]--;
	SetProgressBarValue(LoadTruckBar[playerid], GetProgressBarValue(LoadTruckBar[playerid])-10.0);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
	if(GetProgressBarValue(LoadTruckBar[playerid]) > 10) SetTimerEx("HijackTruck", 1000, 0, "d", playerid);

	if(GetProgressBarValue(LoadTruckBar[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_RED);
		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) <= 10.0)
	{
		DeletePVar(playerid, "IsFrozen");
		TogglePlayerControllable(playerid, 1);
  		DestroyProgressBar(LoadTruckBar[playerid]);
    	LoadTruckBar[playerid] = INVALID_BAR_ID;

        if(!IsPlayerInVehicle(playerid, vehicleid))
        {
       		DestroyProgressBar(LoadTruckBar[playerid]);
			LoadTruckBar[playerid] = INVALID_BAR_ID;
			LoadTruckTime[playerid] = 0;
			DeletePVar(playerid, "TruckDeliver");
			TruckUsed[playerid] = INVALID_VEHICLE_ID;
			gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 			DisablePlayerCheckpoint(playerid);
            SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Karma giriimin baarsz oldu.");
			return 1;
        }


		foreach(Player, i)
		{
  			if(TruckUsed[i] == vehicleid)
  			{
				DestroyProgressBar(LoadTruckBar[i]);
				LoadTruckBar[i] = INVALID_BAR_ID;
				LoadTruckTime[i] = 0;
				DeletePVar(i, "TruckDeliver");
				TruckUsed[i] = INVALID_VEHICLE_ID;
				DisablePlayerCheckpoint(i);
				gPlayerCheckpointStatus[i] = CHECKPOINT_NONE;
 				SendClientMessage(i, COLOR_WHITE, "Teslimatn baarsz oldu, kamyonun karld.");
			}
		}

  		new truckdeliver = TruckContents[vehicleid];
  		SetPVarInt(playerid, "TruckDeliver", truckdeliver);
  		TruckUsed[playerid] = vehicleid;

		if(truckdeliver == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Yiyecek & ecek ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 812.287231, -1623.678222, 13.546875, 5);
		}
		else if(truckdeliver == 2)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Yiyecek & ecek ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 1204.510375, -920.674499, 43.074016, 5);
		}
		else if(truckdeliver == 3)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Yiyecek & ecek ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 2402.169677, -1502.789306, 23.834865, 5);
		}
		else if(truckdeliver == 4)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kyafet ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 2110.254394, -1214.892578, 23.485479, 5);
		}
		else if(truckdeliver == 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kyafet ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 1458.425292, -1140.346069, 23.938444, 5);
		}
		else if(truckdeliver == 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kyafet ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 500.889678, -1352.339843, 15.463395, 5);
		}
		else if(truckdeliver == 7)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Materyal ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 334.012207, -1373.775146, 14.230167, 5);
		}
		else if(truckdeliver == 8)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* 24/7 eyalar ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 1317.785522, -870.413818, 39.089378, 5);
		}
		else if(truckdeliver == 9)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* 24/7 eyalar ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 1342.577026, -1748.498535, 12.934987, 5);
		}
		else if(truckdeliver == 10)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* 24/7 eyalar ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 653.629699, -579.503051, 15.889705, 5);
		}
		else if(truckdeliver >= 11 && truckdeliver <= 15)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Silah ile dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 1634.834716, 757.830017, 10.820312, 5);

			new level = PlayerInfo[playerid][pTruckSkill];
			if(level >= 0 && level < 50)
			{ SetPVarInt(playerid, "TruckDeliver", 11); }
			else if(level >= 50 && level < 100)
			{ SetPVarInt(playerid, "TruckDeliver", 12); }
			else if(level >= 100 && level < 200)
			{ SetPVarInt(playerid, "TruckDeliver", 13); }
			else if(level >= 200 && level < 400)
			{ SetPVarInt(playerid, "TruckDeliver", 14); }
			else if(level >= 400)
			{ SetPVarInt(playerid, "TruckDeliver", 15); }
		}
		else if(truckdeliver >= 16 && truckdeliver <= 20)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, 2833.109375, 893.754699, 10.757797, 5);

			new level = PlayerInfo[playerid][pTruckSkill];
			if(level >= 0 && level < 50)
			{ SetPVarInt(playerid, "TruckDeliver", 16); }
			else if(level >= 50 && level < 100)
			{ SetPVarInt(playerid, "TruckDeliver", 17); }
			else if(level >= 100 && level < 200)
			{ SetPVarInt(playerid, "TruckDeliver", 18); }
			else if(level >= 200 && level < 400)
			{ SetPVarInt(playerid, "TruckDeliver", 19); }
			else if(level >= 400)
			{ SetPVarInt(playerid, "TruckDeliver", 20); }
		}
		else if(truckdeliver >= 21 && truckdeliver <= 25)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Illegal materyalle dolu bir kamyon kardn.");
			SetPlayerCheckpoint(playerid, -510.522918, -501.250030, 25.523437, 5);

			new level = PlayerInfo[playerid][pTruckSkill];
			if(level >= 0 && level < 50)
			{ SetPVarInt(playerid, "TruckDeliver", 21); }
			else if(level >= 50 && level < 100)
			{ SetPVarInt(playerid, "TruckDeliver", 22); }
			else if(level >= 100 && level < 200)
			{ SetPVarInt(playerid, "TruckDeliver", 23); }
			else if(level >= 200 && level < 400)
			{ SetPVarInt(playerid, "TruckDeliver", 24); }
			else if(level >= 400)
			{ SetPVarInt(playerid, "TruckDeliver", 25); }
		}

		SendClientMessage(playerid, COLOR_WHITE,"IPUCU: rnleri belirlenen noktaya teslim et (checkpoint'i radarda gr).");
		SendClientMessage(playerid, COLOR_REALRED, "UYARI: Kamyon korsanlarna dikkat et, kamyonunu alp rnlerle beraber kaabilirler.");
		if(truckdeliver >= 9)
		{
			SendClientMessage(playerid, COLOR_REALRED, "UYARI #2: Illegal rn tayorsun, bu yzden devlet memurlarna dikkat et.");
		}
	}
	return 1;
}

CMD:cimentoyukle(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 23 || PlayerInfo[playerid][pJob2] == 23)
	{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 1949.4131,-1810.0487,13.7095))
	{
		SendClientMessage(playerid, COLOR_GREY, "Yukleme Yerinde Deilsin .");
		return 1;
    }
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsACimentoCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(CheckPointCheck(playerid))return SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");

      		if(CimentoUsed[playerid] != INVALID_VEHICLE_ID)
        	{
         		SendClientMessage(playerid, COLOR_WHITE, "Zaten baka bir teslimattasn, /iptal cimentocu yazarak teslimat iptal et.");
				return 1;
     		}
     		CimentoUsed[playerid] = 1;
       		gPlayerCheckpointStatus[playerid] = CHECKPOINT_BETONBITIS;
         	SetPlayerCheckpoint(playerid,2656.4585,866.1746,6.3096, 5);
          	GameTextForPlayer(playerid, "~w~Cimento ~r~Yuklendi", 5000, 1);
           	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Cimento Yuklendi .");
	    }
	    else return SendClientMessage(playerid, COLOR_GREY, "irketinin Cimento arabasnda deilsin!");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Cimento fr deilsin!");
	return 1;
}

CMD:tiryukle(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 22 || PlayerInfo[playerid][pJob2] == 22)
	{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 1726.8732,2314.3066,10.8203))
	{
		SendClientMessage(playerid, COLOR_GREY, "Yukleme Yerinde Deilsin .");
		return 1;
    }
    new vehicleid = GetPlayerVehicleID(playerid);
    if(IsATirCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(CheckPointCheck(playerid))return SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");

      		if(TirUsed[playerid] != INVALID_VEHICLE_ID)
        	{
         		SendClientMessage(playerid, COLOR_WHITE, "Zaten baka bir teslimattasn, /iptal tirci yazarak teslimat iptal et.");
				return 1;
     		}
     		TirUsed[playerid] = 1;
       		gPlayerCheckpointStatus[playerid] = CHECKPOINT_TIRBITIS;
         	SetPlayerCheckpoint(playerid,2483.8091,-2483.4810,13.6482, 5);
          	GameTextForPlayer(playerid, "~w~Yuk ~r~Yuklendi", 5000, 1);
           	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Yk Yuklendi .");
	    }
	    else return SendClientMessage(playerid, COLOR_GREY, "irketinin Trnda deilsin Veya Arkanda Kasa Takl Deil!");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Tr fr deilsin!");
	return 1;
}

CMD:yukyukle(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        if(CheckPointCheck(playerid))return SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");

		 	if(GetProgressBarValue(LoadTruckBar[playerid]) > 10)
    		{
      			SendClientMessage(playerid, COLOR_WHITE, "u an kamyonunu yklyorsun!");
				return 1;
    		}
      		if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
        	{
         		SendClientMessage(playerid, COLOR_WHITE, "Zaten baka bir teslimattasn, /iptal truck yazarak teslimat iptal et.");
				return 1;
     		}
       		gPlayerCheckpointStatus[playerid] = CHECKPOINT_LOADTRUCK;
         	SetPlayerCheckpoint(playerid,2197.660644, -2662.190185, 13.546875, 5);
          	GameTextForPlayer(playerid, "~w~Gecis Noktasi Ayarlandi ~r~Ocean Docks", 5000, 1);
           	SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Ocean Docks'a teslimat iin biraz rn al (checkpoint'i radarda gr).");
	    }
	    else return SendClientMessage(playerid, COLOR_GREY, "Ocean Docks Kamyonunda deilsin!");
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Kamyoncu deilsin!");
	return 1;
}

forward LoadTruck(playerid);
public LoadTruck(playerid)
{
	LoadTruckTime[playerid]--;
	SetProgressBarValue(LoadTruckBar[playerid], GetProgressBarValue(LoadTruckBar[playerid])-10.0);
	UpdateProgressBar(LoadTruckBar[playerid], playerid);
	if(GetProgressBarValue(LoadTruckBar[playerid]) > 10) SetTimerEx("LoadTruck", 1000, 0, "d", playerid);

	if(GetProgressBarValue(LoadTruckBar[playerid]) == 50.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_YELLOW);
   		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) == 20.0)
	{
 		SetProgressBarColor(LoadTruckBar[playerid], COLOR_RED);
		UpdateProgressBar(LoadTruckBar[playerid], playerid);
	}
	else if(GetProgressBarValue(LoadTruckBar[playerid]) <= 10.0)
	{
		DeletePVar(playerid, "IsFrozen");
		TogglePlayerControllable(playerid, 1);
  		DestroyProgressBar(LoadTruckBar[playerid]);
    	LoadTruckBar[playerid] = INVALID_BAR_ID;

  		new vehicleid = GetPlayerVehicleID(playerid);
  		new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
  		TruckContents[vehicleid] = truckdeliver;
  		TruckUsed[playerid] = vehicleid;

		if(truckdeliver == 1)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Yiyecek & ecek dolu.");
			SetPlayerCheckpoint(playerid, 812.287231, -1623.678222, 13.546875, 5);
		}
		else if(truckdeliver == 2)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Yiyecek & ecek dolu.");
			SetPlayerCheckpoint(playerid, 1204.510375, -920.674499, 43.074016, 5);
		}
		else if(truckdeliver == 3)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Yiyecek & ecek dolu.");
			SetPlayerCheckpoint(playerid, 2402.169677, -1502.789306, 23.834865, 5);
		}
		else if(truckdeliver == 4)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Kyafet dolu.");
			SetPlayerCheckpoint(playerid, 2110.254394, -1214.892578, 23.485479, 5);
		}
		else if(truckdeliver == 5)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Kyafet dolu.");
			SetPlayerCheckpoint(playerid, 1458.425292, -1140.346069, 23.938444, 5);
		}
		else if(truckdeliver == 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Kyafet dolu.");
			SetPlayerCheckpoint(playerid, 500.889678, -1352.339843, 15.463395, 5);
		}
		else if(truckdeliver == 7)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun Materyal dolu.");
			SetPlayerCheckpoint(playerid, 334.012207, -1373.775146, 14.230167, 5);
		}
		else if(truckdeliver == 8)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun 24/7 eyalar ile dolu.");
			SetPlayerCheckpoint(playerid, 1317.785522, -870.413818, 39.089378, 5);
		}
		else if(truckdeliver == 9)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun 24/7 eyalar ile dolu.");
			SetPlayerCheckpoint(playerid, 1342.577026, -1748.498535, 12.934987, 5);
		}
		else if(truckdeliver == 10)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun 24/7 eyalar ile dolu.");
			SetPlayerCheckpoint(playerid, 653.629699, -579.503051, 15.889705, 5);
		}
		else if(truckdeliver >= 11 && truckdeliver <= 15)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun silah ile dolu.");
			SetPlayerCheckpoint(playerid, 1634.834716, 757.830017, 10.820312, 5);
		}
		else if(truckdeliver >= 16 && truckdeliver <= 20)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun uyuturucu ile dolu.");
			SetPlayerCheckpoint(playerid, 2833.109375, 893.754699, 10.757797, 5);
		}
		else if(truckdeliver >= 21 && truckdeliver <= 25)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Kamyonun illegal materyal ile dolu.");
			SetPlayerCheckpoint(playerid, -510.522918, -501.250030, 25.523437, 5);
		}

		SendClientMessage(playerid, COLOR_WHITE,"IPUCU: rnleri belirlenen noktaya teslim et (checkpoint'i radarda gr)..");
		SendClientMessage(playerid, COLOR_REALRED, "UYARI: Kamyon korsanlarna dikkat et, kamyonunu alp rnlerle beraber kaabilirler.");
		if(truckdeliver >= 11)
		{
			SendClientMessage(playerid, COLOR_REALRED, "UYARI #2: Illegal rn tayorsun, bu yzden devlet memurlarna dikkat et.");
		}
		SetPVarInt(playerid, "tpTruckRunTimer", 30);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
	}
	return 1;
}

CMD:mp3(playerid, params[])
{
    if(PlayerInfo[playerid][pDonator] < 2 && AdminDuty[playerid] == 0)
        return SendClientMessage(playerid, COLOR_WHITE, "Bu zellii kullanabilmek iin en az Master+ VIP olman gerekir.");

   	if(PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

	ShowPlayerDialogEx(playerid, DIALOG_MP3_START, DIALOG_STYLE_LIST, "Radyo", "MP3 Player'i kapat\nIsim ile ara\nTr ile ara", "Se", "Iptal");
    return 1;
}

 CMD:radyoistasyonu(playerid, params[]) {
	return cmd_radyoac(playerid, params);
}

CMD:radyoac(playerid, params[]) {
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
        ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_START, DIALOG_STYLE_LIST, "Radyo", "Radyoyu kapat\nTr ile ara", "Se", "Iptal");
    else SendClientMessage(playerid, COLOR_GRAD1, "Bir ara kullanmyorsun.");

    return 1;
} 

CMD:telefonkapat(playerid, params[])
{
	if(PlayerInfo[playerid][pJailed] > 0)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Hapisteyken telefon kullanamazsn.");
		return 1;
	}
	if(!PhoneOnline[playerid])
	{
		PhoneOnline[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "Telefonun kapatld.");
	}
	else
	{
		PhoneOnline[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "Telefonun ald.");
	}
	return 1;
}

CMD:reklam(playerid, params[])
{
	return cmd_reklamlar(playerid, params);
}

CMD:reklamver(playerid, params[]) {
	return cmd_reklamlar(playerid, params);
}

CMD:ilanver(playerid, params[]) {
	return cmd_reklamlar(playerid, params);
}

CMD:reklamlar(playerid, params[]) {
	if(gPlayerLogged[playerid] == 0) {
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
	}
	else if(GetPVarType(playerid, "Injured")) {
		SendClientMessage(playerid, COLOR_GREY, "Yaralyken reklam kullanamazsn.");
	}
	else if(PlayerCuffed[playerid] != 0) {
		SendClientMessage(playerid, COLOR_GREY, "u an reklam kullanamazsn.");
	}
	else if(PlayerInfo[playerid][pJailTime] > 0) {
		SendClientMessage(playerid, COLOR_GREY, "Hapisteyken reklam kullanamazsn.");
	}
	else ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam Ver\nncelikli Reklam Ver", "Se", "Iptal");
	return 1;
}

CMD:acek(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(!IsAtATM(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "   ATM yaknnda deilsin!");
		return 1;
	}
	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /acek [miktar]");
		format(string, sizeof(string), "  Hesabnda $%d var.", PlayerInfo[playerid][pBank]);
		SendClientMessage(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if(amount > PlayerInfo[playerid][pBank] || amount < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   O kadar paran yok!");
		return 1;
	}
	if(PlayerInfo[playerid][pDonator] == 0)
	{
		new fee;
		fee = 3*amount/100;
		PlayerInfo[playerid][pBank]=PlayerInfo[playerid][pBank]-fee;
		format(string, sizeof(string), "-$%d yzde 3 cret.", fee);
		SendClientMessage(playerid, COLOR_GRAD2, string);
	}

	if(PlayerInfo[playerid][pBank]-amount < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Yeterli paran yok, bankaya git ve tm paran ek.");

	PlayerInfo[playerid][pBank]=PlayerInfo[playerid][pBank]-amount;
	GivePlayerCash(playerid,amount);
	format(string, sizeof(string), "  Hesabndan $%d kadar ektin. Gncel Bakiye: $%d ", amount,PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:aparayatir(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(!IsAtATM(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "   ATM yaknnda deilsin!");
		return 1;
	}
	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /aparayatir [miktar]");
		format(string, sizeof(string), "   Hesabnda $%d paran var.", PlayerInfo[playerid][pBank]);
		SendClientMessage(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if(amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   O kadar paran yok!");
		return 1;
	}
	if(PlayerInfo[playerid][pDonator] == 0)
	{
		new fee;
		fee = 3*amount/100;
		PlayerInfo[playerid][pBank]=PlayerInfo[playerid][pBank]-fee;
		format(string, sizeof(string), "-$%d money (3 percent fee).", fee);
		SendClientMessage(playerid, COLOR_GRAD2, string);
	}
	GivePlayerCash(playerid,-amount);
	new curfunds = PlayerInfo[playerid][pBank];
	PlayerInfo[playerid][pBank]=amount+PlayerInfo[playerid][pBank];
	SendClientMessage(playerid, COLOR_WHITE, "|___ ATM STATMENT ___|");
	format(string, sizeof(string), "  Eski bakiye: $%d", curfunds);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Yatirilan: $%d",amount);
	SendClientMessage(playerid, COLOR_GRAD4, string);
	SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
	format(string, sizeof(string), " Yeni bakiye: $%d", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:ahesap(playerid, params[])
{
	if(!IsAtATM(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "   ATM yaknnda deilsin!");
		return 1;
	}
	new string[128];
	format(string, sizeof(string), "   Hesabnda $%d paran var.",PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:atransfer(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] < 3)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "   En az Level 3 olman lazm!");
		return 1;
	}
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	if(!IsAtATM(playerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "   ATM yaknnda deilsin!");
		return 1;
	}
	new string[128], giveplayerid, amount;
	if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /atransfer [Oyuncu ID/sim] [miktar]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			new playermoney = PlayerInfo[playerid][pBank];
			if(amount > 0 && playermoney >= amount)
			{
				if(PlayerInfo[playerid][pDonator] == 0)
				{
					new fee;
					fee = 3*amount/100;
					PlayerInfo[playerid][pBank]=PlayerInfo[playerid][pBank]-fee;
					format(string, sizeof(string), "-$%d para (yzde 3 cret).", fee);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
				PlayerInfo[playerid][pBank] -= amount;
				PlayerInfo[giveplayerid][pBank] += amount;
				format(string, sizeof(string), "   $%d kadar paray %s adl kiinin hesabna transfer ettin.", amount, GetPlayerNameEx(giveplayerid),giveplayerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "   $%d hesabna transfer edildi, Gnderen: %s.", amount, GetPlayerNameEx(playerid), playerid);
				SendClientMessage(giveplayerid, COLOR_GRAD1, string);
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "[ATM] %s (IP:%s), $%d paray  %s (IP:%s) kiisine transfer etti.", GetPlayerNameEx(playerid), ip, amount, GetPlayerNameEx(giveplayerid), ipex);
				if(amount >= 42000)
				{
					ABroadCast(COLOR_YELLOW,string,2);
				}
				Log("logs/pay.log", string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Geersiz ilem miktar.");
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:paracek(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}
	new string[128], amount;

	if(sscanf(params, "d", amount))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /paracek [miktar]");
		format(string, sizeof(string), "   Hesabnda $%d paran var.", PlayerInfo[playerid][pBank]);
		SendClientMessage(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if(amount > PlayerInfo[playerid][pBank] || amount < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   O kadar paran yok!");
		return 1;
	}
	GivePlayerCash(playerid,amount);
	PlayerInfo[playerid][pBank]=PlayerInfo[playerid][pBank]-amount;
	format(string, sizeof(string), "  Hesabndan $%d kadar para ektin. Gncel Bakiye: $%d ", amount,PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:parayatir(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}
	new string[128], amount;

	if(sscanf(params, "d", amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /parayatir [miktar]");
		format(string, sizeof(string), "   Hesabnda $%d paran var.", PlayerInfo[playerid][pBank]);
		SendClientMessage(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if(amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   O kadar paran yok!");
		return 1;
	}
	GivePlayerCash(playerid,-amount);
	new curfunds = PlayerInfo[playerid][pBank];
	PlayerInfo[playerid][pBank]=amount+PlayerInfo[playerid][pBank];
	SendClientMessage(playerid, COLOR_WHITE, "|___ BANKA AIKLAMASI ___|");
	format(string, sizeof(string), "  Eski Bakiye: $%d", curfunds);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Mevduat: $%d",amount);
	SendClientMessage(playerid, COLOR_GRAD4, string);
	SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
	format(string, sizeof(string), "  Yeni Bakiye: $%d", PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:hesap(playerid, params[])
{
	new string[128];
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}
	format(string, sizeof(string), "Hesabnda $%d kadar paran var.",PlayerInfo[playerid][pBank]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:transfer(playerid, params[])
{
	if(PlayerInfo[playerid][pLevel] < 3)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "   En az Level 3 olman lazm!");
		return 1;
	}
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}
	new string[128], giveplayerid, amount;
	if(sscanf(params, "ud", giveplayerid, amount)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /transfer [Oyuncu ID/sim] [amount]");


	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			new playermoney = PlayerInfo[playerid][pBank] ;
			if(amount > 0 && playermoney >= amount)
			{
				PlayerInfo[playerid][pBank] -= amount;
				PlayerInfo[giveplayerid][pBank] += amount;
				format(string, sizeof(string), "   $%d miktar %s adl kiinin hesabna transfer ettin.", amount, GetPlayerNameEx(giveplayerid),giveplayerid);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				format(string, sizeof(string), "   $%d hesabna transfer edildi, Gnderen: %s.", amount, GetPlayerNameEx(playerid), playerid);
				SendClientMessage(giveplayerid, COLOR_GRAD1, string);
				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
				format(string, sizeof(string), "[BANK] %s (IP:%s) $%d miktar paray %s (IP:%s) kiisine transfer etti.", GetPlayerNameEx(playerid), ip, amount, GetPlayerNameEx(giveplayerid), ipex);

				if(amount >= 500000)
					ABroadCast(COLOR_YELLOW,string,2);

				Log("logs/pay.log", string);
				PlayerPlaySound(giveplayerid, 1052, 0.0, 0.0, 0.0);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Geersiz ilem miktar.");
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:prkapat(playerid, params[])
{
	if(PlayerInfo[playerid][pRadio] == 1)
	{
 		if(gRadio[playerid] == 0)
   		{
   		    new string[128];
     		gRadio[playerid] = 1;
       		format(string,sizeof(string),"Portatif radyonu atn, ve %d kHz frekansnda alyor.",PlayerInfo[playerid][pRadioFreq]);
	        SendClientMessage(playerid,COLOR_WHITE,string);
	    }
	    else
	    {
     		gRadio[playerid] = 0;
       		SendClientMessage(playerid,COLOR_WHITE,"Portatif radyonu kapadn.");
	    }
	}
	else
	{
 		SendClientMessage(playerid, COLOR_GRAD2, "Portatif radyon yok!");
	}
  	return 1;
}

CMD:satinal(playerid, params[])
{
    if(!IsAt247(playerid))
	{
        SendClientMessage(playerid, COLOR_GRAD2, "   24-7'de deilsin.");
        return 1;
    }
 	ShowPlayerDialogEx(playerid, STOREMENU, DIALOG_STYLE_LIST, "24/7","Cep Telefonu($50)\nTelefon Defteri($25)\nZar($50)\nKondom($5)\nCD alar($5)\nSprey($20)\nIp($100)\nSigara($5)\nGazoz($1)\nPortatif Radyo($500)\nKamera($20)\nGz Bandanas($50)\nBenzin Bidonu($50)", "Satn Al", "Iptal");
    return 1;
}

CMD:telefonyardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
    if(PlayerInfo[playerid][pNumber] != 0) {
        SendClientMessage(playerid, COLOR_WHITE,"*** YARDIM *** - daha ok bilgi iin komut yaz.");
        SendClientMessage(playerid, COLOR_GRAD3,"*** CEP TELEFONU *** /ara 'rn: /ara 911' /sms (/p)ac (/h)kapat /numara /rt /telefonhoparlor");
    } else SendClientMessage(playerid, COLOR_WHITE,"24-7 dkkanlarndan cep telefonu alabilirsin");
    return 1;
}

CMD:ara(playerid, params[])
{
	new string[128], phonenumb;

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ara [telefon numaras]");

	phonenumb = strval(params);

	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"Hapisteyken telefon aamazsn.");
		return 1;
	}
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"Tutukluyken telefonla konuamazsn.");
		return 1;
	}
	if(PlayerInfo[playerid][pNumber] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Cep telefonun yok.");
		return 1;
	}
	if(PhoneOnline[playerid] > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Telefonun kapal.");
		return 1;
	}
	format(string, sizeof(string), "* %s telefonunu kard.", GetPlayerNameEx(playerid));
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	if(phonenumb == 911)
	{
		if(PlayerInfo[playerid][pJailed] == 3 || PlayerInfo[playerid][pJailed] == 4)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Hapisteyken kullanamazsn!");
			return 1;
		}
		SendClientMessage(playerid, COLOR_WHITE,"IPUCU: T'yi kullanarak telefonda konuabilirsin, kapatmak iin /hangup.");
		SendClientMessage(playerid, COLOR_ALLDEPT, "ACIL: Hangi servise ihtiyacn var, polis yada hastane?");
		Mobile[playerid] = 911;
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
		SetPlayerAttachedObject(playerid, 9, 330, 6);
		return 1;
	}
	if(phonenumb == PlayerInfo[playerid][pNumber])
	{
		SendClientMessage(playerid, COLOR_GRAD2, "  Megul tonu aldn...");
		return 1;
	}
	if(Mobile[playerid] != INVALID_PLAYER_ID)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Zaten aramadasn...");
		return 1;
	}
	foreach(Player, i)
	{
		if(PlayerInfo[i][pNumber] == phonenumb && phonenumb != 0)
		{
			new giveplayerid = i;
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					if(PhoneOnline[giveplayerid] > 0)
					{
						SendClientMessage(playerid, COLOR_GREY, "Oyuncunun telefonu kapal.");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					if(Mobile[giveplayerid] != INVALID_PLAYER_ID)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Megul tonu aldn...");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					if(Spectating[giveplayerid]!=0)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Megul tonu aldn...");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}
					if(Mobile[giveplayerid] == INVALID_PLAYER_ID)
					{
						format(string, sizeof(string), "Telefonun alyor - cevaplamak iin /p. [Arayan Numara: %s]", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_YELLOW, string);
						format(string, sizeof(string), "* %s adl kiinin telefonu alyor.", GetPlayerNameEx(i));
						SendClientMessage(playerid, COLOR_WHITE,"IPUCU: T'yi kullanarak telefonda konuabilirsin, kapatmak iin /hangup.");
						ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						CellTime[playerid] = 1;
						SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
						SetPlayerAttachedObject(playerid, 9, 330, 6);
						return 1;
					}
				}
			}
		}
	}
	SendClientMessage(playerid, COLOR_GRAD2, "Numara aranamad, aradnz numaray kontrol edin.");
	return 1;
}

CMD:t(playerid, params[])
{
	return cmd_sms(playerid, params);
}

CMD:mesaj(playerid, params[])
{
	return cmd_sms(playerid, params);
}

CMD:rt(playerid, params[])
{
	new string[128], text[100];
	if(sscanf(params, "s[100]", text)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rt [text chat]");

	if(gPlayerLogged[playerid] == 0)
		return SendClientMessage(playerid, COLOR_GREY, "Giri yapmadnz!");

	if(GetPVarInt(playerid, "Injured") != 0||GetPVarInt(playerid, "Hospital")!=0)
		return SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");

	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0)
		return SendClientMessage(playerid,COLOR_GREY,"Tutukluyken telefonu kullanamazsn.");

	if(PlayerInfo[playerid][pNumber] == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "  Telefonun yok...");

	if(PlayerInfo[playerid][pJailTime] > 0)
		return SendClientMessage(playerid,COLOR_GREY,"   Hapisteyken telefonu kullanamazsn!");


	if(PhoneOnline[playerid] > 0)
		return SendClientMessage(playerid, COLOR_GREY, "Telefonun kapal.");

	if(Spectating[playerid] == 0){
		format(string, sizeof(string), "* %s telefonunu kard.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}

	if(LastSMS[playerid] == 555)
		return SendClientMessage(playerid, COLOR_GREY, "evirilen numara tannamad.");

	foreach(Player, i) {
		if(PlayerInfo[i][pNumber] == LastSMS[playerid] && LastSMS[playerid] != 0) {
			new giveplayerid = i;
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnected(giveplayerid)) {
				if(PhoneOnline[giveplayerid] > 0 || PhonePrivacy[giveplayerid] > 0) {
					SendClientMessage(playerid, COLOR_GREY, "Oyuncunun telefonu kapal.");
					Mobile[playerid] = INVALID_PLAYER_ID;
					return 1;
				}

				if(PhonePrivacy[playerid] == 1)
					format(string, sizeof(string), "SMS: %s, Gnderen: Bilinmeyen.", text, GetPlayerNameEx(playerid), PlayerInfo[playerid][pNumber]);
				else format(string, sizeof(string), "SMS: %s, Gnderen: %s (%d)", text, GetPlayerNameEx(playerid), PlayerInfo[playerid][pNumber]);

				LastSMS[playerid] = PlayerInfo[giveplayerid][pNumber];
				LastSMS[giveplayerid] = PlayerInfo[playerid][pNumber];
				SendClientMessage(giveplayerid, COLOR_YELLOW, string);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SendClientMessage(playerid, COLOR_WHITE, "SMS iletildi.");
				format(string, sizeof(string), "~r~$-%d", txtcost);
				GameTextForPlayer(playerid, string, 5000, 1);
				GivePlayerCash(playerid,-txtcost);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				Mobile[playerid] = INVALID_PLAYER_ID;
				return 1;
			}
		}
	}
	SendClientMessage(playerid, COLOR_GRAD2, "  Mesaj iletilmedi...");
	return 1;
}

CMD:sms(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadnz!");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") != 0||GetPVarInt(playerid, "Hospital")!=0)
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");
		return 1;
	}
	if(PlayerTied[playerid] != 0 || PlayerCuffed[playerid] != 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"Tutukluyken telefonu kullanamazsn.");
		return 1;
	}

	new string[128], phonenumb, text[100];
	if(sscanf(params, "ds[100]", phonenumb, text)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/t)[telefon numaras] [mesaj]");

	if(PlayerInfo[playerid][pNumber] == 0)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "  Telefonun yok...");
		return 1;
	}
	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"   Hapisteyken telefonu kullanamazsn!");
		return 1;
	}
	if(PhoneOnline[playerid] > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Telefonun kapal.");
		return 1;
	}

	if(Spectating[playerid]==0)
	{
		format(string, sizeof(string), "* %s telefonunu kard.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}

	if(phonenumb == 555)
	{
		SendClientMessage(playerid, COLOR_GREY, "evirilen numara tannamad.");
		return 1;
	}

	foreach(Player, i)
	{
		if(PlayerInfo[i][pNumber] == phonenumb && phonenumb != 0)
		{
			new giveplayerid = i;
			Mobile[playerid] = giveplayerid; //caller connecting
			if(IsPlayerConnected(giveplayerid)) {
				if(giveplayerid != INVALID_PLAYER_ID) {
					if(PhoneOnline[giveplayerid] > 0) {
						SendClientMessage(playerid, COLOR_GREY, "Oyuncunun telefonu kapal.");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 1;
					}

					if(PhonePrivacy[playerid] == 1)
						format(string, sizeof(string), "SMS: %s, Gnderen: Bilinmeyen.", text,GetPlayerNameEx(playerid),PlayerInfo[playerid][pNumber]);
					else format(string, sizeof(string), "SMS: %s, Gnderen: %s (%d)", text,GetPlayerNameEx(playerid),PlayerInfo[playerid][pNumber]);

					LastSMS[playerid] = PlayerInfo[giveplayerid][pNumber];
					LastSMS[giveplayerid] = PlayerInfo[playerid][pNumber];
					SendClientMessage(giveplayerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					SendClientMessage(playerid, COLOR_WHITE, "SMS iletildi.");
					format(string, sizeof(string), "~r~$-%d", txtcost);
					GameTextForPlayer(playerid, string, 5000, 1);
					GivePlayerCash(playerid,-txtcost);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					Mobile[playerid] = INVALID_PLAYER_ID;
					return 1;
				}
			}
		}
	}
	SendClientMessage(playerid, COLOR_GRAD2, "  Mesaj iletilmedi...");
	return 1;
}

CMD:p(playerid, params[])
{
	new string[128];
	if(Mobile[playerid] != INVALID_PLAYER_ID)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "  you're already on a call...");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0)
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");
		return 1;
	}
	foreach(Player, i)
	{
		if(Mobile[i] == playerid)
		{
			Mobile[playerid] = i; //caller connecting
			SendClientMessage(i,  COLOR_GRAD2, "   Telefonu at.");
			format(string, sizeof(string), "* %s telefonu cevaplad.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USECELLPHONE);
			SetPlayerAttachedObject(playerid, 9, 330, 6);
		}
	}
	return 1;
}

CMD:h(playerid,params[])
{
	new string[128];

	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0)
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");
		return 1;
	}
	new caller = Mobile[playerid];
	if((IsPlayerConnected(caller) && caller != INVALID_PLAYER_ID)|| caller == 911 || caller == 912 || caller == 913 || caller == 914)
	{
		if(caller < 500)
		{
			SendClientMessage(caller,  COLOR_GRAD2, "   Telefonu kapatt.");
			format(string, sizeof(string), "* %s telefonu kaldrd.", GetPlayerNameEx(caller));
			ProxDetector(30.0, caller, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			CellTime[caller] = 0;
			Mobile[caller] = INVALID_PLAYER_ID;
		}
		CellTime[playerid] = 0;
		SendClientMessage(playerid,  COLOR_GRAD2, "   Telefonu kapattn.");
		format(string, sizeof(string), "* %s telefonu kaldrd.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		Mobile[playerid] = INVALID_PLAYER_ID;
		CellTime[playerid] = 0;
		SetPlayerSpecialAction(caller, SPECIAL_ACTION_STOPUSECELLPHONE);
        RemovePlayerAttachedObject(caller, 9);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
		RemovePlayerAttachedObject(playerid, 9);
		return 1;
	}
	SendClientMessage(playerid,  COLOR_GRAD2, "   Telefonun cebinde.");
	return 1;
}

CMD:numara(playerid, params[]) {
	if(PlayerInfo[playerid][pPhoneBook] == 1) {

		new
			iTarget;

		if(sscanf(params, "u", iTarget)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /numara [Oyuncu ID/sim]");
		}
		else if(IsPlayerConnected(iTarget)) {
			new
				szNumber[16 + MAX_PLAYER_NAME];

			format(szNumber, sizeof(szNumber), "* %s (%i)", GetPlayerNameEx(iTarget), PlayerInfo[iTarget][pNumber]);
			SendClientMessage(playerid, COLOR_GRAD1, szNumber);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Telefon defterin yok.");
	return 1;
}

CMD:zarat(playerid, params[])
{
    new string[128];
    new dice = random(6)+1;
    if(PlayerInfo[playerid][pDice])
	{
        format(string, sizeof(string), "* %s zar atar ve %d gelir.", GetPlayerNameEx(playerid),dice);
        ProxDetector(5.0, playerid, string, COLOR_NG,COLOR_NG,COLOR_NG,COLOR_NG,COLOR_NG);
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD2, "Zarn yok.");
        return 1;
    }
    return 1;
}

CMD:muzik(playerid, params[])
{
	if(PlayerInfo[playerid][pCDPlayer])
	{
		new choice[32];
		if(sscanf(params, "s[32]", choice))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /muzik [isim]");
			SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Ak, Kapal, Ileri");
			return 1;
		}

		if(strcmp(choice,"on",true) == 0)
		{
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~g~CD alar Ak", 5000, 5);
			new channel = Music[playerid];
			PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
		}
		else if(strcmp(choice,"off",true) == 0)
		{
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~r~CD alar Kapal", 5000, 5);
			PlayerFixRadio(playerid);
		}
		else if(strcmp(choice,"next",true) == 0)
		{
			if(Music[playerid] == 0) { Music[playerid] = 1; }
			else if(Music[playerid] == 1) { Music[playerid] = 2; }
			else if(Music[playerid] == 2) { Music[playerid] = 3; }
			else if(Music[playerid] == 3) { Music[playerid] = 4; }
			else if(Music[playerid] == 4) { Music[playerid] = 5; }
			else if(Music[playerid] == 5) { Music[playerid] = 6; }
			else if(Music[playerid] == 6) { Music[playerid] = 0; }
			new channel = Music[playerid];
			PlayerPlaySound(playerid, Songs[channel][0], 0.0, 0.0, 0.0);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Bilinmeyen mzik komutu!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   CD-alarn yok!");
		return 1;
	}
	return 1;
}

CMD:araciboya(playerid, params[]) {
	if(!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_GRAD2, "Arata deilsin.");

	if(PlayerInfo[playerid][pSpraycan] == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Sprey kutun bo.");

	if(GetPlayerVehicleSeat(playerid) != 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Arac boyamak iin ofr olmalsn.");

	new
		iVeh = GetPlayerVehicleID(playerid);
	if(IsAnAmbulance(iVeh) || IsAFBICar(iVeh) || IsANewsVeh(iVeh))
		return SendClientMessage(playerid, COLOR_GREY, "Kurulu aralarn boyayamazsn.");



	new
		iColors[2],
		iPlayerVeh;

	if(sscanf(params, "ii", iColors[0], iColors[1]))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /araciboya [ID 1] [ID 2]. Colors must be an ID.");

	if(!(0 <= iColors[0] <= 255 && 0 <= iColors[1] <= 255))
		return SendClientMessage(playerid, COLOR_GRAD2, "Geersiz renk belirlendi (ID 0 ile 255 aras olmal).");

	foreach(Player, i) {
		iPlayerVeh = GetPlayerVehicle(i, iVeh);
		if(iPlayerVeh != -1) {
			if(i == playerid) PlayerVehicleInfo[playerid][iPlayerVeh][pvColor1] = iColors[0], PlayerVehicleInfo[playerid][iPlayerVeh][pvColor2] = iColors[1];
			else return SendClientMessage(playerid,COLOR_GREY,"Bakalarnn arabasn boyayamazsn.");
		}
	}

	new
		szMessage[60];

	PlayerInfo[playerid][pSpraycan]--;
	format(szMessage, sizeof(szMessage), "Arabann rengini ID %d, %d yaptn.", iColors[0], iColors[1]);
	SendClientMessage(playerid, COLOR_GRAD2, szMessage);
	return ChangeVehicleColor(iVeh, iColors[0], iColors[1]);
}

CMD:boyaisi(playerid, params[]) {
	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /boyaisi [0-6] (3 to remove a paintjob)");

	if(!IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_GRAD2, "Arata deilsin.");

	if(PlayerInfo[playerid][pSpraycan] == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Sprey kutun bo.");

	if(GetPlayerVehicleSeat(playerid) != 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Arac boyamak iin ofr olmalsn.");

	new
		iVeh = GetPlayerVehicleID(playerid),
		iPaintID = strval(params),
		iPlayerVeh;

	if(IsAnAmbulance(iVeh) || IsACopCar(iVeh) || IsAFBICar(iVeh) || IsANewsVeh(iVeh))
		return SendClientMessage(playerid, COLOR_GREY, "Kurulu aralarn boyayamazsn.");

	if(!(0 <= iPaintID <= 6)) {
		return SendClientMessage(playerid, COLOR_GRAD2, "Belirlenen boya ii ID 0-6 aras olmal.");
	}
	foreach(Player, i) {
		iPlayerVeh = GetPlayerVehicle(i, iVeh);
		if(iPlayerVeh != -1) {
			if(i == playerid) PlayerVehicleInfo[playerid][iPlayerVeh][pvPaintJob] = iPaintID;
			else return SendClientMessage(playerid,COLOR_GREY,"Bakalarnn aracn boyayamazsn.");
		}
	}

	ChangeVehiclePaintjob(iVeh, iPaintID);
	PlayerInfo[playerid][pSpraycan]--;
	return SendClientMessage(playerid, COLOR_GRAD2, "Boyay baaryla aracna uyguladn.");
}

CMD:bagla(playerid, params[])
{
	if(PlayerInfo[playerid][pRope] > 0)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /bagla [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerTied[giveplayerid] > 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Oyuncu zaten bal!");
				return 1;
			}
			if(PlayerCuffed[giveplayerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Kelepeli/oklu oyuncuyu balayamazsn.");
			if(PlayerInfo[giveplayerid][pJailed] >= 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Hapisteki oyuncuyu balayamazsn.");
				return 1;
			}
			if(PlayerInfo[playerid][pRope] == 0)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Hi ipin kalmam.");
			}
			else
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					new car = GetPlayerVehicleID(playerid);
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendini balayamazsn!"); return 1; }
					if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2 && IsPlayerInVehicle(giveplayerid, car))
					{
						if(PlayerCuffed[giveplayerid] == 1 || PlayerCuffed[giveplayerid] == 2) {
							SendClientMessage(playerid, COLOR_GRAD2, "u an bunu yapamazsn.");
							return 1;
						}

						format(string, sizeof(string), "* %s seni balad, zlene kadar balsn.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s kiisini baladn, zlene kadar bal kalacak.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s , %s adl kiiyi balad, hibir yere gidemez.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						GameTextForPlayer(giveplayerid, "~r~Tied", 2500, 3);
						SetPVarInt(giveplayerid, "IsFrozen", 1);
						TogglePlayerControllable(giveplayerid, 0);
						PlayerTied[giveplayerid] = 1;
						PlayerInfo[playerid][pRope]--;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Oyuncu arabanda deil, ya da ofr deilsin!");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}
			}

		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Ipin yok!");
	}
	return 1;
}

CMD:coz(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /coz [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendini zemezsin!"); return 1; }
			if(PlayerCuffed[giveplayerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Kelepeli/oklu oyuncuyu zemezsin.");
			if(PlayerTied[giveplayerid])
			{
				DeletePVar(giveplayerid, "IsFrozen");
				format(string, sizeof(string), "* %s seni zd.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s kiisini zdn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GameTextForPlayer(giveplayerid, "~g~zl", 2500, 3);
				TogglePlayerControllable(giveplayerid, 1);
				PlayerTied[giveplayerid] = 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu oyuncu bal deil!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		return 1;
	}
	return 1;
}

CMD:sigara(playerid, params[]) {
	if(PlayerInfo[playerid][pCigar] > 0) {
		if(PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1)
			return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

		new string[128];
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_SMOKE_CIGGY);
		format(string, sizeof(string), "* %s bir sigara karp yakar.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pCigar]--;
	}
	else SendClientMessage(playerid, COLOR_GREY, "Hi sigaran yok, 24/7'den biraz satn al!");

	return 1;
}

CMD:gazozic(playerid, params[])
{
	if(PlayerInfo[playerid][pSprunk] > 0) {
		if(PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1)
			return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

		if(GetPVarInt(playerid, "EventToken") == 1 && EventInfo[EventToggleHeal] == 1)
			return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlikteyken iyiletiremezsin!");

		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			return SendClientMessage(playerid, COLOR_WHITE, "Gazoz imek iin ayakta durman gerekiyor.");

		if(IsPlayerInAnyVehicle(playerid))
			return SendClientMessage(playerid, COLOR_WHITE, "Aratayken bunu yapamazsn.");

		if(GetPlayerState(playerid) == PLAYER_STATE_ENTER_VEHICLE_DRIVER || GetPlayerState(playerid) == PLAYER_STATE_ENTER_VEHICLE_PASSENGER || GetPlayerState(playerid) == PLAYER_STATE_EXIT_VEHICLE)
			return SendClientMessage(playerid, COLOR_WHITE, "Aratayken bunu yapamazsn.");

		new string[128];
		SetPlayerSpecialAction(playerid,SPECIAL_ACTION_DRINK_SPRUNK);
		format(string, sizeof(string), "* %s bir kutu gazoz aar.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		SetPVarInt(playerid, "UsingSprunk", 1);
		PlayerInfo[playerid][pSprunk]--;
		return 1;
	}
	else return SendClientMessage(playerid, COLOR_GREY, "Hi gazozun yok, 24/7'den biraz satn al!");
}

CMD:pr(playerid, params[]) {
	if(PlayerInfo[playerid][pRadio] == 1) {
		if(isnull(params))
		    return SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /pr [chat message] (use /frekans to set your radio frequency)");

		if(PlayerInfo[playerid][pRadioFreq] >= 1 || PlayerInfo[playerid][pRadioFreq] <= -1) {
			if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0 || PlayerInfo[playerid][pJailTime] > 0)
				return SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");

			RadioBroadCast(playerid, params);
		} else SendClientMessage(playerid, COLOR_GRAD2, "Radyo frekansn 0 olarak ayarl, bu frekanstan yayn yapamazsn.");
	} else SendClientMessage(playerid, COLOR_GRAD2, "Portatif radyon yok, 24/7'den alabilirsin.");
	return 1;
}

CMD:frekans(playerid, params[]) {
	new
		string[128],
		frequency;

	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /frekans [frequency] ('0' will disable your portable radio)");

	frequency = strval(params);

	if(frequency > 9999999 || frequency < -9999999)
		return SendClientMessage(playerid, COLOR_GREY, "Frekans -9999999 ile 9999999 arasnda olmal!");

	if(PlayerInfo[playerid][pRadio] == 1) {
		PlayerInfo[playerid][pRadioFreq] = frequency;
		format(string, sizeof(string), "Portatif radyonun frekansn %d kHz olarak ayarladn.",frequency);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Portatif bir radyon yok, 24/7'den alabilirsin.");
	return 1;
}

CMD:noooc(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(!noooc)
		{
			noooc = 1;
			SendClientMessageToAllEx(COLOR_GRAD2, "   OOC Sohbet Kanal Admin tarafndan kapatld!");
		}
		else
		{
			noooc = 0;
			SendClientMessageToAllEx(COLOR_GRAD2, "   OOC Sohbet Kanal Admin tarafndan ald!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:o(playerid, params[])
{
	if(gPlayerLogged[playerid] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");
		return 1;
	}
	if((noooc) && PlayerInfo[playerid][pAdmin] < 1 && EventInfo[EventCreator] != playerid)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "    OOC Kanal Admin tarafndan kapatld!");
		return 1;
	}

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/o)oc [ooc chat]");

	else if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new
			string[128];

		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			format(string, sizeof(string), "(( {FF6347}Level %d Admin %s: {FFFFFF}%s ))", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid), params);
			SendClientMessageToAllEx(COLOR_WHITE,string);
		}
	}
	else if(PlayerInfo[playerid][pAdmin] < 1)
	{
		new
			string[128];

		format(string, sizeof(string), "(( %s: %s ))", GetPlayerNameEx(playerid), params);
		SendClientMessageToAllEx(COLOR_OOC,string);
		return 1;
	}
	return 1;
}

CMD:eventhelp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5 || EventInfo[EventCreator] == playerid)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		SendClientMessage(playerid, COLOR_GRAD4,"*** ETKINLIK YARDIM *** daha ok bilgi iin komut yaz");
		SendClientMessage(playerid, COLOR_WHITE,"*** ETKINLIK YARDIM *** /seteventpos /seteventinfo /startevent /lockevent /endevent /announceevent /beginevent");
		SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
	}
	return 1;
}

CMD:eventstaff(playerid, params[])
{
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}

    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        if(EventInfo[EventJoinStaff] == 1) {
            for(new i; i < sizeof(EventInfo[EventStaff]); i++) if(EventInfo[EventStaff][i] == 999) {
                SetPVarInt(playerid, "EventToken", 1);
                GetPlayerHealth(playerid, EventFloats[playerid][4]);
                GetPlayerArmour(playerid, EventFloats[playerid][5]);
                EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
                EventLastInt[playerid] = GetPlayerInterior(playerid);
                GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
                GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
                SetPlayerPos(playerid, EventInfo[EventPositionX], EventInfo[EventPositionY], EventInfo[EventPositionZ]);
                SetPlayerInterior(playerid, EventInfo[EventInterior]);
                SetPlayerHealth(playerid, 999999);
                SetPlayerVirtualWorld(playerid, EventInfo[EventWorld]);
                GivePlayerValidAdminWeapon(playerid, 38, 60000);
                EventInfo[EventStaff][i] = playerid;
                return SendClientMessage(playerid, COLOR_WHITE, "Etkinlik personeline katldn.");
            }
            SendClientMessage(playerid, COLOR_GRAD2, "Etkinlik personeline katlamadn, maksimum 5 kii.");
        }
    }
    return 1;
}

CMD:seteventpos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
		{
			new string[128];

			GetPlayerPos(playerid, EventInfo[EventPositionX], EventInfo[EventPositionY], EventInfo[EventPositionZ]);
			EventInfo[EventInterior] = GetPlayerInterior(playerid);
			EventInfo[EventWorld] = GetPlayerVirtualWorld(playerid);
			SendClientMessage(playerid, COLOR_WHITE, "Etkinlik pozisyonunu ayarladn, etkinlik zelliklerini deitirmek iin /seteventinfo.");
			EventInfo[EventJoinStaff] = 1;
			format(string, sizeof(string), "{AA3333}AdminUyar{FFFF00}: %s etkinlik balatt, /eventstaff yazarak etkinlik personeline katlabilirsin.", GetPlayerNameEx(playerid));
			ABroadCast(COLOR_YELLOW, string, 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Etkinlik yapmyorsun, ya da yeterli admin levelin yok.");
		}
	}
	return 1;
}

CMD:seteventinfo(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
		{   // No VIP yet
			//SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /seteventtype /editevent /seteventviponly (once ready, type /startevent)");
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /seteventtype /editevent (once ready, type /startevent)");
			return 1;
		}
	}
	return 1;
}

CMD:atip(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
		    iTarget;

		if(sscanf(params, "u", iTarget))
		    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /atip [playerid]");

		if(iTarget == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(playerTabbedTime[iTarget] <= 0)
		    return SendClientMessage(playerid, COLOR_GREY, "Belirlenen oyuncu alt-tab yapmam, nlayabilirsin.");

        playerTabbedTime[iTarget] = 3599;

        new
            szMessage[86];

		format(szMessage, sizeof(szMessage), "%s oyuncusunu genel alanda alt-tab yapt iin uzaa nladn.", GetPlayerNameEx(iTarget));
		SendClientMessage(playerid, COLOR_WHITE, szMessage);
 	}
	return 1;
}

CMD:seteventtype(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
		{
			if(isnull(params))
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /seteventtype [type]");
				SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: DM, TDM");
				return 1;
			}

			if(strcmp(params,"dm",true) == 0) {
				EventInfo[EventType] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik trn DM olarak ayarladn.");
			} else if(strcmp(params,"tdm",true) == 0) {
				EventInfo[EventType] = 2;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik trn TDM olarak ayarladn.");
			} else if(strcmp(params,"Yok",true) == 0) {
				EventInfo[EventType] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik trn Yok olarak ayarladn.");
			} else { }
		}
	}
	return 1;
}

CMD:editevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
		{
			new choice[32], opstring[64];
			if(EventInfo[EventType] == 1)
			{
			    if(sscanf(params, "s[32]S()[64]", choice, opstring))
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent [name]");
					SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Jointext, Limit, Health, Armor, Gun1, Gun2, Gun3, Gun4, Gun5");
					SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Faction, Family, Heal, Anims");
					return 1;
				}
			}
			else if(EventInfo[EventType] == 2)
			{
			    if(sscanf(params, "s[32]S()[64]", choice, opstring))
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent [name]");
					SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Jointext, Limit, Team1Skin, Team2Skin, Team1Color, Team2Color");
					SendClientMessage(playerid, COLOR_GREY, "Team1Spawn, Team2Spawn, Health, Armor, Gun1, Gun2, Gun3, Gun4, Gun5, Faction, Family, Heal, Anims");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "nce etkinlik tipini ayarlamalsn!");
				return 1;
			}

			if(strcmp(choice, "jointext",true) == 0)
			{
				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent jointext [text]");
					return 1;
				}
				strmid(EventInfo[EventJT], opstring, 0, strlen(opstring), 64);
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik katlma metnini baaryla ayarladn.");
			}
			else if(strcmp(choice, "family",true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent family [family (1337 = all families, 255 = default)]");
					return 1;
				}

				new family;
				family = strval(opstring);
				if(EventInfo[EventFamily] != 1337 || EventInfo[EventFamily] != 255) EventInfo[EventFamily] = (family - 1);
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik ailesini ayarladn.");
			}
			else if(strcmp(choice, "heal",true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent heal [1 = yes, 0 = no]");
					return 1;
				}

				new healval;
				healval = strval(opstring);
				EventInfo[EventToggleHeal] = healval;
				if(healval == 0) SendClientMessage(playerid, COLOR_WHITE, "Etkinliklerde iyiletirmeyi aktifletirdin.");
				else if(healval == 1) SendClientMessage(playerid, COLOR_WHITE, "Etkinliklerde iyiletirmeyi kapattn.");
				else return SendClientMessage(playerid, COLOR_WHITE, "Geersiz deer, 1 = Iyiletirme yok ve 0 = Iyiletirme ak.");
			}
			else if(strcmp(choice, "anims",true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent anims [1 = yes, 0 = no]");
					return 1;
				}

				new animsval;
				animsval = strval(opstring);
				EventInfo[EventToggleAnims] = animsval;
				if(animsval == 0) SendClientMessage(playerid, COLOR_WHITE, "Etkinliklerde animasyon kullanmn atn.");
				else if(animsval == 1) SendClientMessage(playerid, COLOR_WHITE, "Etkinliklerde animasyon kullanmn kapattn.");
				else return SendClientMessage(playerid, COLOR_WHITE, "Geersiz deer, 1 = Animasyon yok  0 = Animasyon ak.");
			}
			else if(strcmp(choice, "faction",true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent faction [faction (1337 = all factions, 0 = default)]");
					return 1;
				}

				new faction;
				faction = strval(opstring);
				EventInfo[EventFaction] = faction;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik kuruluunu ayarladn.");
			}
			else if(strcmp(choice, "health", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1 && EventInfo[EventType] != 3)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent health [health]");
					return 1;
				}
				new Float: health;
				health = floatstr(opstring);
				EventInfo[EventHealth] = health;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik iyiletirmesini ayarladn.");
			}
			else if(strcmp(choice, "armor", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent armor [armor]");
					return 1;
				}

				new Float: armor;
				armor = floatstr(opstring);
				EventInfo[EventArmor] = armor;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik zrhn ayarladn.");
			}
			else if(strcmp(choice, "team1skin", true) == 0)
			{
				if(EventInfo[EventType] != 2)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent team1skin [skinid]");
					return 1;
				}

				new skin;
				skin = strval(opstring);
				EventInfo[EventTeamSkin][0] = skin;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik takm 1'in skinini ayarladn.");
			}
			else if(strcmp(choice, "team2skin", true) == 0)
			{
				if(EventInfo[EventType] != 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent team2skin [skinid]");
					return 1;
				}

				new skin;
				skin = strval(opstring);
				EventInfo[EventTeamSkin][1] = skin;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik takm 2'nin skinini ayarladn.");
			}
			else if(strcmp(choice, "team1color", true) == 0)
			{
				if(EventInfo[EventType] != 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!strlen(opstring))
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent team1color [color]");
					SendClientMessage(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
					SendClientMessage(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
					return 1;
				}
				EventInfo[EventTeamColor][0] = GetColorCode(opstring);
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik takm 1'in rengini ayarladn.");
			}
			else if(strcmp(choice, "team2color", true) == 0)
			{
				if(EventInfo[EventType] != 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!strlen(opstring))
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent team2color [color]");
					SendClientMessage(playerid, COLOR_GREY, "black | white | blue | red | green | purple | yellow | lightblue |");
					SendClientMessage(playerid, COLOR_GREY, "darkgreen | darkblue | darkgrey | brown | darkbrown | darkred | pink ");
					return 1;
				}
				EventInfo[EventTeamColor][1] = GetColorCode(opstring);
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik takm 2'nin rengini ayarladn.");
			}
			else if(strcmp(choice, "team1spawn", true) == 0)
			{
				if(EventInfo[EventType] != 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}
				EventInfo[EventWorld] = GetPlayerVirtualWorld(playerid);
				EventInfo[EventInterior] = GetPlayerInterior(playerid);
				GetPlayerPos(playerid, EventInfo[EventTeamPosX1], EventInfo[EventTeamPosY1], EventInfo[EventTeamPosZ1]);
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik takm 1'in kma pozisyonunu ayarladn.");
			}
			else if(strcmp(choice, "team2spawn", true) == 0)
			{
				if(EventInfo[EventType] != 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu zellik bu etkinlik tipi iin kullanlamaz.");
					return 1;
				}
				EventInfo[EventWorld] = GetPlayerVirtualWorld(playerid);
				EventInfo[EventInterior] = GetPlayerInterior(playerid);
				GetPlayerPos(playerid, EventInfo[EventTeamPosX2], EventInfo[EventTeamPosY2], EventInfo[EventTeamPosZ2]);
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik takm 2'nin kma pozisyonunu ayarladn.");
			}
			else if(strcmp(choice, "limit", true) == 0)
			{
			    if(EventInfo[EventTime] != 0)
			        return SendClientMessage(playerid, COLOR_GRAD2, "Bu zellik bu etkinlik iin kullanlamaz, herkes girebilir. Aktifletirmek iin saati 0'a ayarla.");
				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent limit [limit 0-60]");
					return 1;
				}

				new limit;
				limit = strval(opstring);
				if(limit < 0 || limit > 60) return SendClientMessage(playerid, COLOR_RED, "Etkinlik limiti 0-60 arasdr.");
				EventInfo[EventLimit] = limit;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlikteki oyuncu limitini ayarladn.");
			}
			else if(strcmp(choice, "gun1", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessage(playerid, COLOR_WHITE, "Bu silah etkinlik silah olarak ayarlanamaz!");
				EventInfo[EventWeapons][0] = weapon;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik silah 1'i ayarladn.");
			}
			else if(strcmp(choice, "gun2", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessage(playerid, COLOR_WHITE, "Bu silah etkinlik silah olarak ayarlanamaz!");
				EventInfo[EventWeapons][1] = weapon;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik silah 2'yi ayarladn.");
			}
			else if(strcmp(choice, "gun3", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 16 || weapon == 18 || weapon == 35 || weapon == 37 || weapon == 38 || weapon == 39) return SendClientMessage(playerid, COLOR_WHITE, "Bu silah etkinlik silah olarak ayarlanamaz!");
				EventInfo[EventWeapons][2] = weapon;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik silah 3' ayarladn.");
			}
			else if(strcmp(choice, "gun4", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessage(playerid, COLOR_WHITE, "Bu silah etkinlik silah olarak ayarlanamaz!");
				EventInfo[EventWeapons][3] = weapon;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik silah 4' ayarladn.");
			}
			else if(strcmp(choice, "gun5", true) == 0)
			{
				if(EventInfo[EventType] != 2 && EventInfo[EventType] != 1)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu isim bu etkinlik tipi iin kullanlabilir deil.");
					return 1;
				}

				if(!opstring[0])
				{
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /editevent gun1 [weaponid]");
					return 1;
				}

				new weapon;
				weapon = strval(opstring);
				if(weapon == 35 || weapon == 37 || weapon == 38) return SendClientMessage(playerid, COLOR_WHITE, "Bu silah etkinlik silah olarak ayarlanamaz!");
				EventInfo[EventWeapons][4] = weapon;
				SendClientMessage(playerid, COLOR_WHITE, "Etkinlik silah 5'i ayarladn.");
			}
		}
	}
	return 1;
}

CMD:endevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(EventInfo[EventStatus] != 0)
		{
			foreach(Player, i)
			{
				if(GetPVarInt(i, "EventToken") == 1) {
				    if(EventInfo[EventType] == 3) {
						DisablePlayerCheckpoint(i);
					} else {
						ResetPlayerWeapons(i);
						SetPlayerWeapons(i);
						SetPlayerToTeamColor(i);
						SetPlayerTeam(i, -1);
						EventTeam[i] = -1;
						SetPlayerSkin(i, PlayerInfo[i][pSkin]);
						SetPlayerPos(i,EventFloats[i][1],EventFloats[i][2],EventFloats[i][3]);
						if(EventLastInt[i] > 0 || EventLastVW[i] > 0) {
							LoadObjectsForPlayer(i);
						}
						SetPlayerVirtualWorld(i, EventLastVW[i]);
						SetPlayerFacingAngle(i, EventFloats[i][0]);
						SetPlayerInterior(i,EventLastInt[i]);
						SetPlayerHealth(i, EventFloats[i][4]);
						SetPlayerArmourEx(i, EventFloats[i][5]);
						for(new d = 0; d < 6; d++)
						{
							EventFloats[i][d] = 0.0;
						}
						EventLastVW[i] = 0;
						EventLastInt[i] = 0;
					}
					DeletePVar(i, "EventAnims");
					DeletePVar(i, "EventToken");
					SendClientMessage(i, COLOR_YELLOW, "Bir etkinlikten karldn, Etkinlik admin tarafndan sonlandrld.");
				}
			}

			EventInfo[EventPositionX] = 0;
			EventInfo[EventPositionY] = 0;
			EventInfo[EventPositionZ] = 0;
			EventInfo[EventTeamPosX1] = 0;
			EventInfo[EventTeamPosY1] = 0;
			EventInfo[EventTeamPosZ1] = 0;
			EventInfo[EventTeamPosX2] = 0;
			EventInfo[EventTeamPosY2] = 0;
			EventInfo[EventTeamPosZ2] = 0;
			EventInfo[EventStatus] = 0;
			EventInfo[EventType] = 0;
			EventInfo[EventHealth] = 0;
			EventInfo[EventLimit] = 0;
			EventInfo[EventPlayers] = 0;
			EventInfo[EventWeapons][0] = 0;
			EventInfo[EventWeapons][1] = 0;
			EventInfo[EventWeapons][2] = 0;
			EventInfo[EventWeapons][3] = 0;
			EventInfo[EventWeapons][4] = 0;
			EventInfo[EventCreator] = 999;
			EventInfo[VipOnly] = 0;
			EventInfo[EventJoinStaff] = 0;
			EventInfo[EventFaction] = 0;
			EventInfo[EventFamily] = 255;
			EventInfo[EventToggleHeal] = 0;
			EventInfo[EventToggleAnims] = 0;
			SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Etkinlik admin tarafndan bitirildi.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "u an aktif bir etkinlik yok.");
		}

	}
	return 1;
}

CMD:startevent(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4){
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		if(EventInfo[EventStatus] == 0) {
			if(PlayerInfo[playerid][pAdmin] >= 4)
			{
				if(EventInfo[EventHealth] == 0)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Etkinlik cann ayarlamadn!");
					return 1;
				}
				if((EventInfo[EventPositionX] == 0 || EventInfo[EventPositionY] == 0 || EventInfo[EventPositionZ] == 0) && EventInfo[EventType] != 3)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Etkinlik pozisyonunu ayarlamadn!");
					return 1;
				}
				if((EventInfo[EventTeamPosX1] == 0 || EventInfo[EventTeamPosY1] == 0 || EventInfo[EventTeamPosZ1] == 0) && EventInfo[EventType] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Takm 1'in kma pozisyonunu ayarlamadn!");
					return 1;
				}
				if((EventInfo[EventTeamPosX2] == 0 || EventInfo[EventTeamPosY2] == 0 || EventInfo[EventTeamPosZ2] == 0) && EventInfo[EventType] == 2)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Takm 2'nin kma pozisyonunu ayarlamadn!");
					return 1;
				}
				if(EventInfo[EventLimit] == 0)
				{
					EventInfo[EventLimit] = 60;
				}
				EventInfo[EventStatus] = 1;
				SendClientMessage(playerid, COLOR_GRAD2, "Bir etkinlik balattn, /announceevent ile etkinlii tm sunucuya duyur.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Zaten aktif bir etkinlik var.");
		}
	}

	return 1;
}

CMD:announceevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid) {
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new
			szMessage[128];
		if(EventInfo[EventStatus] == 1) {
			if(EventInfo[EventFaction] > 0 && EventInfo[EventFamily] == 255 && EventInfo[EventFaction] != 1337) {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				format(szMessage, sizeof(szMessage), "* %s iin Admin tarafndan etkinlik balatld, /etkgit ile katl.", GetFactionName(EventInfo[EventFaction]));
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, szMessage);
			} else if(EventInfo[EventFamily] < 255 && EventInfo[EventFaction] == 0 && EventInfo[EventFamily] != 1337) {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				format(szMessage, sizeof(szMessage), "* %s iin Admin tarafndan etkinlik balatld, /etkgit ile katl.", FamilyInfo[EventInfo[EventFamily]][FamilyName]);
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, szMessage);
			} else if(EventInfo[EventFaction] == 1337 && EventInfo[EventFamily] == 255) {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Kurulular iin Admin tarafndan etkinlik balatld, /etkgit ile katl.");
			} else if(EventInfo[EventFamily] == 1337 && EventInfo[EventFaction] == 0) {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Aileler iin Admin tarafndan etkinlik balatld, /etkgit ile katl.");
			} else if(EventInfo[EventFaction] == 1337 && EventInfo[EventFamily] == 1337) {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Aileler ve kurulular iin Admin tarafndan etkinlik balatld, /etkgit ile katl.");
			} else if(EventInfo[EventFaction] > 0 && EventInfo[EventFamily] < 255 && EventInfo[EventFaction] != 1337 && EventInfo[EventFamily] != 1337) {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				format(szMessage, sizeof(szMessage), "* %s ve %s iin etkinlik balatld, /etkgit ile katl.", FamilyInfo[EventInfo[EventFamily]][FamilyName], GetFactionName(EventInfo[EventFaction]));
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, szMessage);
			} else {
				EventInfo[EventStatus] = 2;
				SendClientMessage(playerid, COLOR_GRAD2, "Etkinlii kitlemek iin /lockevent");
				SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Admin tarafndan bir etkinlik balatld, /etkgit ile katl.");
			}
		} else SendClientMessage(playerid, COLOR_WHITE, "Zaten aktif bir etkinlik var.");
	}
	return 1;
}

CMD:lockevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(EventInfo[EventStatus] == 2)
		{
		    if(EventInfo[EventType] == 3 && EventInfo[EventTime] != 0)
				return SendClientMessage(playerid, COLOR_RED, "HATA: Bu zellik, bu etkinlik iin ayarlanan konfigrasyonla kullanlamaz.");

			EventInfo[EventStatus] = 3;
			SendClientMessage(playerid, COLOR_GRAD2, "Bir etkinlii kitledin, /beginevent ile resmi olarak etkinlii balat.");
			SendClientMessageToAllEx(COLOR_LIGHTBLUE, "* Etkinlik admin tarafndan kitlendi.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Zaten aktif bir etkinlik var.");
		}
	}
	return 1;
}

CMD:beginevent(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4 || EventInfo[EventCreator] == playerid)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(EventInfo[EventStatus] == 3) {
			EventInfo[EventStatus] = 4;

			foreach(Player, i) {
				if(GetPVarInt(i, "EventToken") == 1) {
					if(EventInfo[EventType] == 1) {
						SendClientMessage(i, COLOR_LIGHTBLUE, "HADI! Etkinlik balad.");
						SetPlayerHealth(i, EventInfo[EventHealth]);
						SetPlayerArmourEx(i, EventInfo[EventArmor]);
						for(new d = 0; d < sizeof(EventInfo[EventStaff]); d++) {
							if(i == EventInfo[EventStaff][d])
								SetPlayerHealth(i, 999999);
						}

						GivePlayerEventWeapons(i);
					}
					else if(EventInfo[EventType] == 2) {
						SendClientMessage(i, COLOR_LIGHTBLUE, "HADI! Etkinlik balad.");
						SetPlayerHealth(i, EventInfo[EventHealth]);
						SetPlayerArmourEx(i, EventInfo[EventArmor]);
						for(new d = 0; d < sizeof(EventInfo[EventStaff]); d++)
						{
							if(i == EventInfo[EventStaff][d])
							{
								SetPlayerHealth(i, 999999);
							}
						}
						GivePlayerEventWeapons(i);
					}
				}
				else
				{
					SendClientMessage(i, COLOR_WHITE, "Etkinlik balad. Baka zaman katlmak istersen /etkgit komutunu kullan.");
				}
			}

		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Yeni bir etkinlik amak iin /lockevent ile nce etkinlii kitle, ya da /endevent kullanarak mevcut etkinlii bitir.");
		}
	}
	return 1;
}

CMD:etkgit(playerid, params[]) {
	new
		szMessage[128];
	if(EventInfo[EventStatus] == 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Aktif bir etkinlik yok.");

	if(AdminDuty[playerid] != 0)
	    return SendClientMessage(playerid, COLOR_GREY, "Admin olarak ibandayken etkinlie katlamazsn. /eventstaff kullan ya da iban brak.");

	if(GetPVarType(playerid, "posX") != 0)
		return SendClientMessage(playerid, COLOR_GREY, "Yardm isteiyle ilgilendiinden etkinlie katlamazsn.");

	if(GetPVarInt(playerid, "EventToken") == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Zaten etkinliktesin.");

	if(GetPVarInt(playerid, "PBM") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");

	if(PlayerCuffed[playerid] >= 1 || PlayerInfo[playerid][pJailTime] > 0 || GetPVarInt(playerid, "Hospital") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

	if(PlayerInfo[playerid][pConnectTime] < 2)
		return SendClientMessage(playerid, COLOR_GRAD2, "Gen padawan, Silah yasaklamasndan dolay 2 saat oynamadan nce etkinlie katlamazsn.");

	if(EventInfo[EventPlayers] >= EventInfo[EventLimit] && EventInfo[EventTime] == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlik maksimum oyuncuya ulat.");

	if(PlayerDragged[playerid] != 0 || IsCopDragging[playerid] != INVALID_PLAYER_ID)
		return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

	if(EventInfo[EventFaction] > 0 && EventInfo[EventFamily] == 255 && EventInfo[EventFaction] != 1337 && EventInfo[EventFaction] != PlayerInfo[playerid][pFaction]) {
		format(szMessage, sizeof(szMessage), "Bu etkinlik sadece %s yeleri iin.", GetFactionName(EventInfo[EventFaction]));
		SendClientMessage(playerid, COLOR_GRAD2, szMessage);
		return 1;
	} else if(EventInfo[EventFamily] < 255 && EventInfo[EventFaction] == 0 && EventInfo[EventFamily] != 1337 && EventInfo[EventFamily] != PlayerInfo[playerid][pGang]) {
		format(szMessage, sizeof(szMessage), "Bu etkinlik sadece %s yeleri iin.", FamilyInfo[EventInfo[EventFamily]][FamilyName]);
		SendClientMessage(playerid, COLOR_GRAD2, szMessage);
		return 1;
	} else if(EventInfo[EventFaction] == 1337 && EventInfo[EventFamily] == 255 && PlayerInfo[playerid][pFaction] == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu etkinlik sadece kurulu yeleri iin.");
	else if(EventInfo[EventFamily] == 1337 && EventInfo[EventFaction] == 0 && PlayerInfo[playerid][pGang] == 255)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu etkinlik sadece aile yeleri iin.");
	else if(EventInfo[EventFaction] == 1337 && EventInfo[EventFamily] == 1337 && PlayerInfo[playerid][pGang] == 255 && PlayerInfo[playerid][pFaction] == 0)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu etkinlik sadece aile ve kurulu yeleri iin.");
	else if(EventInfo[EventFaction] > 0 && EventInfo[EventFamily] < 255 && EventInfo[EventFaction] != 1337 && EventInfo[EventFamily] != 1337) {
		if(PlayerInfo[playerid][pGang] != EventInfo[EventFamily] && PlayerInfo[playerid][pFaction] != EventInfo[EventFaction]) {
			format(szMessage, sizeof(szMessage), "Bu etkinlik sadece %s ve %s yeleri iin.", FamilyInfo[EventInfo[EventFamily]][FamilyName], GetFactionName(EventInfo[EventFaction]));
			SendClientMessage(playerid, COLOR_GRAD2, szMessage);
			return 1;
		}
	} else { }

	if(EventInfo[EventStatus] == 2) {
		if(EventInfo[EventType] == 3)
		{
			// For down the road, racing
		}
		else
		{
			if(IsPlayerInAnyVehicle(playerid)) {
				return SendClientMessage(playerid, COLOR_GRAD2, "Aratayken katlamazsn.");
			}

			SetPVarInt(playerid, "EventToken", 1);
			if(EventInfo[EventToggleAnims] == 1) SetPVarInt(playerid, "EventAnims", 1);
			ResetPlayerWeapons(playerid);
			pTazer[playerid] = 0;
			GetPlayerHealth(playerid, EventFloats[playerid][4]);
			GetPlayerArmour(playerid, EventFloats[playerid][5]);
			EventLastVW[playerid] = GetPlayerVirtualWorld(playerid);
			EventLastInt[playerid] = GetPlayerInterior(playerid);
			GetPlayerPos(playerid, EventFloats[playerid][1], EventFloats[playerid][2], EventFloats[playerid][3]);
			GetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
			if(EventInfo[EventType] != 2)
			{
				SetPlayerPos(playerid, EventInfo[EventPositionX], EventInfo[EventPositionY], EventInfo[EventPositionZ]);
			}
			SetPlayerInterior(playerid, EventInfo[EventInterior]);
			SetPlayerVirtualWorld(playerid, EventInfo[EventWorld]);
			SendClientMessage(playerid, COLOR_WHITE, EventInfo[EventJT]);
			SetPlayerHealth(playerid, EventInfo[EventHealth]);
			SetPlayerArmourEx(playerid, EventInfo[EventArmor]);

			if(EventInfo[EventType] == 2)
			{
				SetPlayerSkin(playerid, EventInfo[EventTeamSkin][nextteam]);
				new color = EventInfo[EventTeamColor][nextteam];
				if(color==0) SetPlayerColor(playerid, 0x00000000);
				if(color==1) SetPlayerColor(playerid, 0xFFFFFF00);
				if(color==2) SetPlayerColor(playerid, 0x2641FE00);
				if(color==3) SetPlayerColor(playerid, 0xAA333300);
				if(color==16) SetPlayerColor(playerid, 0x33AA3300);
				if(color==5) SetPlayerColor(playerid, 0xC2A2DA00);
				if(color==6) SetPlayerColor(playerid, 0xFFFF0000);
				if(color==7) SetPlayerColor(playerid, 0x33CCFF00);
				//if(strcmp(clr, "navy", true)==0) color=94;
				//if(strcmp(clr, "beige", true)==0) color=102;
				if(color==51) SetPlayerColor(playerid, 0x2D6F0000);
				if(color==103) SetPlayerColor(playerid, 0x0B006F00);
				if(color==13) SetPlayerColor(playerid, 0x52525200);
				if(color==55) SetPlayerColor(playerid, 0xB46F0000);
				if(color==84) SetPlayerColor(playerid, 0x814F0000);
				if(color==74) SetPlayerColor(playerid, 0x750A0000);
				//if(strcmp(clr, "maroon", true)==0) color=115;
				if(color==126) SetPlayerColor(playerid, 0xFF51F100);
				if(nextteam == 0)
				{
					SetPlayerPos(playerid, EventInfo[EventTeamPosX1], EventInfo[EventTeamPosY1], EventInfo[EventTeamPosZ1]);
				}
				else
				{
					SetPlayerPos(playerid, EventInfo[EventTeamPosX2], EventInfo[EventTeamPosY2], EventInfo[EventTeamPosZ2]);
				}
				SetPlayerTeam(playerid, nextteam);
				EventTeam[playerid] = nextteam;

				if(nextteam == 0) nextteam++;
				else if(nextteam == 1) nextteam--;
			}
		}
		EventInfo[EventPlayers] ++;
		if(EventInfo[EventPlayers] == EventInfo[EventLimit] && EventInfo[EventTime] == 0)
		{
			ABroadCast(COLOR_YELLOW, "Etkinlik maksimum oyuncu saysna ulat, imdi balatabilirsin.", 2);
		}
	}

	else if(EventInfo[EventStatus] == 3)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Etkinlik kilitlendi. Katlamazsn.");
	}
	else if(EventInfo[EventStatus] == 4)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Etkinlik balatld. Katlamazsn.");
	}
	return 1;
}

CMD:etkcik(playerid, params[])
{
    if(GetPVarInt(playerid, "EventToken") == 1) {
        if(EventInfo[EventStatus] == 1 || EventInfo[EventStatus] == 2)
		{
       		SendClientMessage(playerid, COLOR_WHITE, "Etkinliin bu aamasnda kamazsn.");
       		return 1;
		}
      	ResetPlayerWeapons(playerid);
		SetPlayerTeam(playerid, -1);
		EventTeam[playerid] = -1;
		DeletePVar(playerid, "EventToken");
		DeletePVar(playerid, "EventAnims");
       	SetPlayerWeapons(playerid);
       	SetPlayerToTeamColor(playerid);
       	SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
       	SetPlayerPos(playerid,EventFloats[playerid][1],EventFloats[playerid][2],EventFloats[playerid][3]);
      	SetPlayerVirtualWorld(playerid, EventLastVW[playerid]);
		if(EventLastInt[playerid] > 0 || EventLastVW[playerid] > 0) {
			LoadObjectsForPlayer(playerid);
		}
       	SetPlayerFacingAngle(playerid, EventFloats[playerid][0]);
       	SetPlayerInterior(playerid,EventLastInt[playerid]);
       	SetPlayerHealth(playerid, EventFloats[playerid][4]);
       	SetPlayerArmourEx(playerid, EventFloats[playerid][5]);
       	for(new i = 0; i < 6; i++) {
        	EventFloats[playerid][i] = 0.0;
        }
        EventLastVW[playerid] = 0;
        EventLastInt[playerid] = 0;
        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Etkinlikten ktn.");
    }
    return 1;
}

CMD:newbie(playerid, params[]) {
	return cmd_n(playerid, params);
}

CMD:n(playerid, params[]) {
	return cmd_yardimiste(playerid, params);
}
/*	if(gPlayerLogged[playerid] == 0)
		return SendClientMessage(playerid, COLOR_GREY, "Giri yapmadn.");

	if((nonewbie) && PlayerInfo[playerid][pAdmin] < 1)
		return SendClientMessage(playerid, COLOR_GRAD2, "Newbie Sohbet Kanal Admin tarafndan kapatld!");

	if(gNewbie[playerid] == 1)
		return SendClientMessage(playerid, COLOR_GREY, "Kanal kapadn, /sorukapat ile tekrar aktifletir!");

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] {FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /n (Yaznz)");

	if(PlayerInfo[playerid][pNMute] == 1)
		return SendClientMessage(playerid, COLOR_GREY, "Newbie Sohbet Kanalndan mutelendin.");

	new
		string[128];

	if(NewbieTimer[playerid] > 0) {
		format(string, sizeof(string), "Bu kanalda tekrar konuabilmek iin %d saniye beklemelisin.", NewbieTimer[playerid]);
		SendClientMessage(playerid, COLOR_GREY, string);
		return 1;
	}

	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1)
		NewbieTimer[playerid] = 30;

	if(PlayerInfo[playerid][pHelper] == 1)
		format(string, sizeof(string), "** Newbie Level 1 Helper %s: %s", GetPlayerNameEx(playerid), params);
 	else if(PlayerInfo[playerid][pHelper] == 2)
		format(string, sizeof(string), "** Newbie Level 2 Helper %s: %s", GetPlayerNameEx(playerid), params);
 	else if(PlayerInfo[playerid][pHelper] == 3)
		format(string, sizeof(string), "** Newbie Level 3 Helper %s: %s", GetPlayerNameEx(playerid), params);
 	else if(PlayerInfo[playerid][pHelper] == 4)
		format(string, sizeof(string), "** Newbie Level 4 Helper %s: %s", GetPlayerNameEx(playerid), params);
 	else if(PlayerInfo[playerid][pHelper] == 5)
		format(string, sizeof(string), "** Community Advisor %s: %s", GetPlayerNameEx(playerid), params);
	else if(PlayerInfo[playerid][pAdmin] < 1)
		format(string, sizeof(string), "** Newbie Oyuncu %s: %s", GetPlayerNameEx(playerid), params);
	else if(PlayerInfo[playerid][pAdmin] >= 1)
		format(string, sizeof(string), "** Newbie Admin %s: %s", GetPlayerNameEx(playerid), params);
		
        PlayerInfo[playerid][Newbiepuan] += 1;
        foreach(Player, n) {
		if(gNewbie[n] == 0)
			SendClientMessageEx(n, COLOR_CYAN, string);
	}
	return 1;
} */

CMD:nonewbie(playerid)
return SendClientMessage(playerid, -1, "Bu kanal devre d braklmtr!");
/*
	if(PlayerInfo[playerid][pAdmin] >= 3) {
		if(!nonewbie) {
			nonewbie = 1;
			SendClientMessageToAllEx(COLOR_GRAD2, "Newbie Sohbet Kanal bir Admin tarafndan kapatld!");
		}
		else {
			nonewbie = 0;
			SendClientMessageToAllEx(COLOR_GRAD2, "Newbie Sohbet Kanal bir Admin tarafndan ald!");
		}
	}
	else return	SendClientMessage(playerid, COLOR_GRAD1, "{FFFFFF}[{FF0000}@{FFFFFF}] Bu komutu kullanma yetkiniz yok!");*/

CMD:nmute(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		new
			string[128],
			giveplayerid;

		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /nmute [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pAdmin] >= 1)
				return SendClientMessage(playerid, COLOR_LIGHTRED, "Adminleri /nmute yapamazsn.");

			if(PlayerInfo[giveplayerid][pNMute] == 0) {
				PlayerInfo[giveplayerid][pNMute] = 1;
				PlayerInfo[giveplayerid][pNMuteTotal] += 1;
				format(string, sizeof(string), "AdminKomutu: %s, Soru [/newbie] kanalndan %s tarafndan mutelendi.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
				Log("logs/admin.log", string);

				if(PlayerInfo[giveplayerid][pNMuteTotal] > 6) {
					new playerip[32];
					GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
					format(string, sizeof(string), "AdminKomutu: %s(IP:%s), %s tarafndan banland, sebep: Ar newbie sohbet mutesi", GetPlayerNameEx(giveplayerid),playerip,GetPlayerNameEx(playerid));
					Log("logs/ban.log", string);
					format(string, sizeof(string), "AdminKomutu: %s banland, sebep: Ar newbie sohbet mutesi.", GetPlayerNameEx(giveplayerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
					PlayerInfo[giveplayerid][pBanned] = 1;
					new ip[32];
					GetPlayerIp(giveplayerid,ip,sizeof(ip));
					AddBan(ip);
					Kick(giveplayerid);
				}

				SendClientMessage(giveplayerid, COLOR_WHITE, "Unutma, Newbie Sohbet Kanal sadece senaryo/sunucu ile alakal sorular iindir ve baka hibir ama iin kullanlamaz, (eer baka bir Admin tarafndan durum deitirilmediyse).");
				SendClientMessage(giveplayerid, COLOR_WHITE, "Mutenin almasn istiyorsan, Ya para ya hapis cezas alacaksn. Ilerideki ktye kullanmalar ceza miktarn arttrr. Bunun bir hata olduunu dnyorsan, Level 4+ Admin ile balantya ge.");

				foreach(Player, i)
				{
					if(PlayerInfo[i][pAdmin] == 0)
					{
						format(string, sizeof(string), "AdminKomutu: %s, Sorusor Kanalndan [/newbie] ktye kullanmaktan mutelendi.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(i, COLOR_LIGHTRED, string);
					}
				}
			}
			else {
				ShowNMuteFine(giveplayerid);
				format(string, sizeof(string), "%s adl kiiye Sorusor kanal [/newbie iin mute kaldrmay nerdin.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTRED, string);
			}
		}
	}
	else return SendClientMessage(playerid, COLOR_GRAD1, "{FFFFFF}[{FF0000}@{FFFFFF}] Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:nunmute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "{FFFFFF}[{FF0000}@{FFFFFF}] KULLANIM: /nunmute [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pNMute] == 1)
			{
				format(string, sizeof(string), "AdminKomutu: %s, Soru [/newbie] kanalndan %s tarafndan mutesi kaldrld.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
				Log("logs/admin.log", string);
				PlayerInfo[giveplayerid][pNMute] = 0;
				PlayerInfo[giveplayerid][pNMuteTotal]--;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED,"Oyuncu Newbie Kanalndan mutelenmemi!");
			}

		}
	}
	return 1;
}

CMD:admute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /admute [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
				if(PlayerInfo[giveplayerid][pAdmin] >= 1)
				{
					return SendClientMessage(playerid, COLOR_LIGHTRED, "Adminleri /admute yapamazsn!");
				}
				if(PlayerInfo[giveplayerid][pADMute] == 0)
				{
					PlayerInfo[giveplayerid][pADMute] = 1;
					PlayerInfo[giveplayerid][pADMuteTotal] += 1;
	    			szAdvert[giveplayerid][0] = 0;
					format(string, sizeof(string), "AdminKomutu: %s, /reklamlar 'dan dolay %s tarafndan mutelendi.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
					Log("logs/admin.log", string);
					ABroadCast(COLOR_LIGHTRED,string,1);

					if(PlayerInfo[giveplayerid][pADMuteTotal] > 6)
					{
						new playerip[32];
						GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
						format(string, sizeof(string), "AdminKomutu: %s(IP:%s), %s tarafndan banland, sebep: Ar reklam mutesi", GetPlayerNameEx(giveplayerid),playerip,GetPlayerNameEx(playerid));
						Log("logs/ban.log", string);
						format(string, sizeof(string), "AdminKomutu: %s banland, sebep: Ar reklam mutesi.", GetPlayerNameEx(giveplayerid));
						SendClientMessageToAllEx(COLOR_LIGHTRED, string);
						PlayerInfo[giveplayerid][pBanned] = 1;
						new ip[32];
						GetPlayerIp(giveplayerid,ip,sizeof(ip));
						AddBan(ip);
						Kick(giveplayerid);
					}

					SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Unutma, Reklamlar sadece IC amalar iin kullanlabilir ve baka hibir ama iin kullanlamaz(eer admin tarafndan durum deitirilmediyse).");
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, "Mutenin almasn istiyorsan, Ya para ya hapis cezas alacaksn. Ilerideki ktye kullanmalar ceza miktarn arttrr. Bunun bir hata olduunu dnyorsan, Level 4+ Admin ile balantya ge.");

					format(string, sizeof(string), "AdminKomutu: %s, [/reklamlar] Reklam ktye kullanmaktan mutelendi.", GetPlayerNameEx(giveplayerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				}
				else
				{
					ShowAdMuteFine(giveplayerid);
					format(string, sizeof(string), "%s adl kiiye /reklamlar mutesini kaldrmay teklif ettin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTRED, string);
				}

		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:adunmute(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;

		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /adunmute [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pADMute] == 1)
			{
				if(PlayerInfo[giveplayerid][pJailed] != 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTRED, "Hapisteki birine mute kaldrmay neremezsin!");
					SendClientMessage(giveplayerid, COLOR_LIGHTRED, "zgnz, Hapisteyken /reklamlar muten kaldrlamaz.");
					return 1;
				}
				format(string, sizeof(string), "AdminKomutu: %s adl kiinin /reklamlar mutesi %s tarafndan kaldrld.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
				ABroadCast(COLOR_LIGHTRED,string,1);
				Log("logs/admin.log", string);
				PlayerInfo[giveplayerid][pADMute] = 0;
				PlayerInfo[giveplayerid][pADMuteTotal]--;
			}
			else
			{
				SendClientMessage(playerid, COLOR_LIGHTRED,"Oyuncu Newbie Kanalndan mutelenmemi!");
			}

		}
	}
	return 1;
}

CMD:setname(playerid, params[]) {
	new
		szQuery[128],
		iTarget,
		szNewName[MAX_PLAYER_NAME];

	if(sscanf(params, "us[24]", iTarget, szNewName))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setname [Oyuncu ID/sim] [newname]");

	if(iTarget == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

	if(PlayerInfo[playerid][pAdmin] < 4)
	    return SendClientMessage(playerid, COLOR_GREY, "Yetersiz Admin leveli.");

 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	if(AdminDuty[iTarget] == 1)
 		return SendClientMessage(playerid,COLOR_WHITE, "Ibandaki bir admin zerinde /setname komutunu kullanamazsn.");

	if(strfind(szNewName, "_", false) == -1)
		return SendClientMessage(playerid, COLOR_GREY, "Isim alttan izgi ('_') iermeli.");

	mysql_real_escape_string(szNewName, szNewName, g_MySQLConnections[0]);

	SetPVarInt(iTarget, "requestby", playerid);
	SetPVarInt(iTarget, "requestpath", 3);
	SetPVarString(iTarget, "requestedname", szNewName);

	format(szQuery, sizeof(szQuery), "SELECT Username FROM players WHERE Username = '%s'", szNewName);
	mysql_query(szQuery, THREAD_CHECK_NEW_NAME, iTarget, g_MySQLConnections[0]);

	return 1;
}

CMD:sprison(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		new string[128], giveplayerid, minutes, reason[64];
		if(sscanf(params, "uds[64]", giveplayerid, minutes, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /sprison [Oyuncu ID/sim] [dakika] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin] && AdminDuty[giveplayerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Bu komutu sana eit veya daha yksek leveldeki admin  zerinde uygulayamazsn.");
				return 1;
			}

			if(strlen(reason) >= 25)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Daha ksa bir sebep yaz. Hapis sebebi maksimum 25 karakter.");
				return 1;
			}
			if(PlayerDraggedBy[giveplayerid] != INVALID_PLAYER_ID) {
				IsCopDragging[PlayerDraggedBy[giveplayerid]] = INVALID_PLAYER_ID;
				PlayerDragged[giveplayerid] = 0;
				PlayerDraggedBy[giveplayerid] = INVALID_PLAYER_ID;
			}
			if(IsPlayerAttachedObjectSlotUsed(giveplayerid, 0))
				RemovePlayerAttachedObject(giveplayerid, 0);
			GameTextForPlayer(giveplayerid, "~w~HOSGELDIN ~n~~r~OOC HAPISHANE", 5000, 3);
			ResetPlayerWeaponsEx(giveplayerid);
			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan sessiz hapse atld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
			Log("logs/admin.log", string);
			format(string, sizeof(string), "AdminKomutu: %s, Admin tarafndan hapse atld, sebep: %s", GetPlayerNameEx(giveplayerid), reason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
			PlayerInfo[giveplayerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(giveplayerid, 0);
			PlayerInfo[giveplayerid][pJailed] = 3;
			PlayerInfo[giveplayerid][pJailTime] = minutes*60;
			format(PlayerInfo[giveplayerid][pPrisonReason], 128, "%s", reason);
			format(PlayerInfo[giveplayerid][pPrisonedBy], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(playerid));
			PhoneOnline[giveplayerid] = 1;

		    LoadObjectsForPlayer(giveplayerid);

			SetPlayerInterior(giveplayerid, 69);
			PlayerInfo[giveplayerid][pVW] = 696969;
			PlayerInfo[giveplayerid][pInt] = 69;
			SetPlayerVirtualWorld(giveplayerid, 696969);
			new rand = random(sizeof(AdminPrisonFloat));
			SetPlayerPos(giveplayerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);

			SetPlayerSkin(giveplayerid, 50);
			SetPlayerColor(giveplayerid, TEAM_APRISON_COLOR);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:switchfac(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  		{
   			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
		}
		new string[128], factionid;
		if(sscanf(params, "d", factionid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /switchfac [factionid]");
			SendClientMessage(playerid, COLOR_GRAD3, "|1 LSPD |2 FBI |3 LSFMD |4 Bo |5 GOV |6 LST |9 SAN News");
			return 1;
		}

		switch(factionid) {
			case 1: {
				format(string, sizeof(string), "Kurulu ID %d (LSPD) tarafna getin.", factionid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFaction] = factionid;
				PlayerInfo[playerid][pRank] = 6;
				PlayerInfo[playerid][pGang] = 255;
			}
			case 2: {
				format(string, sizeof(string), "Kurulu ID %d (FBI) tarafna getin.", factionid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFaction] = factionid;
				PlayerInfo[playerid][pRank] = 6;
				PlayerInfo[playerid][pGang] = 255;
			}
			case 3:	{
				format(string, sizeof(string), "Kurulu ID %d (LSFMD) tarafna getin.", factionid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFaction] = factionid;
				PlayerInfo[playerid][pRank] = 6;
				PlayerInfo[playerid][pGang] = 255;
			}
			case 4: {
				SendClientMessage(playerid, COLOR_LIGHTBLUE, " /switchfac Hitman Ajansna /switchfac ile geemezsin.");
			}
			case 5: {
				format(string, sizeof(string), "Kurulu ID %d (GOV) tarafna getin.", factionid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFaction] = factionid;
				PlayerInfo[playerid][pRank] = 6;
				PlayerInfo[playerid][pGang] = 255;
			}
			case 6: {
				format(string, sizeof(string), "Kurulu ID %d (LST) tarafna getin.", factionid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFaction] = factionid;
				PlayerInfo[playerid][pRank] = 6;
				PlayerInfo[playerid][pGang] = 255;
			}
			case 9: {
				format(string, sizeof(string), "Kurulu ID %d (SAN News) tarafna getin.", factionid);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pFaction] = factionid;
				PlayerInfo[playerid][pRank] = 6;
				PlayerInfo[playerid][pGang] = 255;
			}
			default: {
				SendClientMessage(playerid, COLOR_WHITE, "Geersiz Kurulu ID!");
				SendClientMessage(playerid, COLOR_GRAD3, "|1 LSPD |2 FBI |3 LSFMD |4 Bo |5 GOV |6 LST |9 SAN News");
			}
		}
	}
	return 1;
}

CMD:switchfam(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], familyid;
		if(sscanf(params, "d", familyid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /switchfam [familyid]");

		if(familyid < 1 || familyid > 14) return SendClientMessage(playerid, COLOR_WHITE, "Geersiz Aile Numaras.");
		format(string, sizeof(string), "Aile ID %d (%s) tarafna getin.", familyid, FamilyInfo[familyid-1][FamilyName]);
		SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		PlayerInfo[playerid][pRank] = 6;
		PlayerInfo[playerid][pGang] = familyid-1;
		PlayerInfo[playerid][pFaction] = 0;
		PlayerInfo[playerid][pLeader] = 0;
	}
	return 1;
}

CMD:clearall(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  		{
   			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
		}
        foreach(Player, i) {
            PlayerInfo[i][pWantedLevel] = 0;
            SetPlayerToTeamColor(i);
            SetPlayerWantedLevel(i, 0);
            ClearCrime(i);
        }
        SendClientMessage(playerid,COLOR_GRAD1, "Herkesin Aranma Level'ini temizledin.");
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:permaban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /permaban [Oyuncu ID/sim] [sebep]");
			return 1;
		}
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
			{
				if(AdminDuty[playerid] == 1)
				{
					new username[MAX_PLAYER_NAME];
					GetPVarString(playerid, "TempNameName", username, sizeof(username));
					SetPVarInt(playerid, "TempName", 0);
					SetPlayerName(playerid, username);
				}
				format(string, sizeof(string), "AdminKomutu: %s otomatik banland, sebep: /permaban ile daha yksek bir admini banlamaya almak.", PlayerInfo[playerid][pAdminName]);
				ABroadCast(COLOR_YELLOW,string,1);
				PlayerInfo[playerid][pBanned] = 3;
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
			}
			else
			{
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));

				if(AdminDuty[giveplayerid] == 1)
				{
					new username[MAX_PLAYER_NAME];
					GetPVarString(giveplayerid, "TempNameName", username, sizeof(username));
					SetPVarInt(giveplayerid, "TempName", 0);
					SetPlayerName(giveplayerid, username);

					format(string, sizeof(string), "AdminKomutu: %s(IP:%s), %s tarafndan kalc olarak banland, sebep: %s", PlayerInfo[giveplayerid][pAdminName], playerip, GetPlayerNameEx(playerid), reason);
					Log("logs/ban.log", string);
					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan kalc olarak banland, sebep: %s", PlayerInfo[giveplayerid][pAdminName], GetPlayerNameEx(playerid), reason);
				}
				else
				{
					format(string, sizeof(string), "AdminKomutu: %s(IP:%s), %s tarafndan kalc olarak banland, sebep: %s", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason);
					Log("logs/ban.log", string);
					format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan kalc olarak banland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				}

				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				PlayerInfo[giveplayerid][pPermaBanned] = 1;
				new ip[32];
				GetPlayerIp(giveplayerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(giveplayerid);
			}
			return 1;
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:setcolormert(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        ShowPlayerDialogEx(playerid, COLORMENU, DIALOG_STYLE_LIST, "Renk Mens", "A8\nA7\nA6\nA5\nA4\nA3\nA2\nA1\nNormal", "Se", "Iptal");
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:aksan(playerid, params[])
{
	new accent;
	if(sscanf(params, "d", accent))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aksan [Aksan ID]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Normal [1], Amerika [2], Almanya [3], spanya [4], talya [5], Arap [6], Rusya [7]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Aksanlar: Kanada [8], Balkan [9], Hollanda [10], Afrika [11]");
		return 1;
	}

	switch(accent)
	{
	case 1:
		{
			PlayerInfo[playerid][pAccent] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "u an Normal aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 2:
		{
			PlayerInfo[playerid][pAccent] = 2;
			SendClientMessage(playerid, COLOR_WHITE, "u an Amerika aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 3:
		{
			PlayerInfo[playerid][pAccent] = 3;
			SendClientMessage(playerid, COLOR_WHITE, "u an Almanya aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 4:
		{
			PlayerInfo[playerid][pAccent] = 4;
			SendClientMessage(playerid, COLOR_WHITE, "u an spanya aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 5:
		{
			PlayerInfo[playerid][pAccent] = 5;
			SendClientMessage(playerid, COLOR_WHITE, "u an talya aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 6:
		{
			PlayerInfo[playerid][pAccent] = 6;
			SendClientMessage(playerid, COLOR_WHITE, "u an Arap aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 7:
		{
			PlayerInfo[playerid][pAccent] = 7;
			SendClientMessage(playerid, COLOR_WHITE, "u an Rusya aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 8:
		{
			PlayerInfo[playerid][pAccent] = 8;
			SendClientMessage(playerid, COLOR_WHITE, "u an Kanada aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 9:
		{
			PlayerInfo[playerid][pAccent] = 9;
			SendClientMessage(playerid, COLOR_WHITE, "u an Balkan aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 10:
		{
			PlayerInfo[playerid][pAccent] = 10;
			SendClientMessage(playerid, COLOR_WHITE, "u an Hollanda aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	case 11:
		{
			PlayerInfo[playerid][pAccent] = 11;
			SendClientMessage(playerid, COLOR_WHITE, "u an Afrika aksan ile konuuyorsun, /aksan ile deitirebilirsin.");
		}
	}
	return 1;
}

CMD:cevap(playerid, params[])
{
	new string[128];
	new reportid = INVALID_REPORT_ID;
	for(new i = 0; i < MAX_REPORTS; i++)
	{
		if(Reports[i][ReportFrom] == playerid && Reports[i][CheckingReport] != 999)
		{
			reportid = i;
		}
	}
	if(reportid == INVALID_REPORT_ID)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "u an incenen hi raporun yok.");
		return 1;
	}
	if(IsPlayerConnected(Reports[reportid][CheckingReport]))
	{
		format(string, sizeof(string), "%s(ID: %d) cevaplar: %s", GetPlayerNameEx(playerid), playerid, params);
		SendClientMessage(Reports[reportid][CheckingReport], COLOR_YELLOW, string);

		format(string, sizeof(string), "Cevap %s kiisine gnderildi: %s", GetPlayerNameEx(Reports[reportid][CheckingReport]), params);
		SendClientMessage(playerid,  COLOR_YELLOW, string);
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Oyuncu bal deil.");
	return 1;
}

CMD:raportipleri(playerid, params[])
{
	ShowPlayerDialogEx(playerid,7955,DIALOG_STYLE_MSGBOX,"Rapor Tyolar","Rapor atarken tyolar:\n- Ne gerekiyorsa onu rapor et, kim gerekiyorsa deil.\n- Belirleyici ol, tam olarak ne istiyorsan onu rapor et.\n- Yanl raporlar yapma.\n- Sadece oyun ii problemleri rapor et.","Kapat", "");
	return 1;
}

CMD:reportbugasfafasfafsa(playerid, params[])
{
	if(!IsBETAServer())
	    return SendClientMessage(playerid, COLOR_GREY, "Bu beta sunucuda deil!");

	if(AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] < 6)
		return SendClientMessage(playerid, COLOR_GRAD2, "Ibandayken rapor gnderemezsin.");

	if(PlayerInfo[playerid][pRMuted] != 0)
		return ShowPlayerDialogEx(playerid,7955,DIALOG_STYLE_MSGBOX,"Rapor Tyolar","Rapor atarken tyolar:\n- Belirleyici ol, sorunu tarif et.\n- Yanl hata raporlar gnderme.","Kapat", "");

	if(JustReported[playerid] > 0)
		return SendClientMessage(playerid, COLOR_GREY, "Baka bir hata raporu gndermeden nce 10 saniye bekle!");

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /reportbug [text]");

	JustReported[playerid] = 10;
	SendBugReportToQueue(playerid, params);
	SendClientMessage(playerid, COLOR_YELLOW, "Rapor mesajn gelitiricilere gnderildi.");
	return 1;
}

CMD:rapor(playerid, params[])
{
	if(AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Ibandayken rapor gnderemezsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pRMuted] != 0)
	{
		ShowPlayerDialogEx(playerid,7955,DIALOG_STYLE_MSGBOX,"Rapor Tyolar","Rapor atarken tyolar:\n- Ne gerekiyorsa onu rapor et, kim gerekiyorsa deil.\n- Belirleyici ol, tam olarak ne istiyorsan onu rapor et.\n- Yanl raporlar yapma.\n- Sadece oyun ii problemleri rapor et.","Kapat", "");
		return 1;
	}
	if(JustReported[playerid] > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Baka bir rapor gndermeden nce 25 saniye bekle!");
		return 1;
	}

	if(isnull(params)) return SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /rapor [text]");

	JustReported[playerid]=25;
	SendReportToQueue(playerid, params);
	SendClientMessage(playerid, COLOR_YELLOW, "Rapor mesajn Adminlere gnderildi.");
	return 1;
}

CMD:reports(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128];
		SendClientMessage(playerid, COLOR_GREEN, "____________________ RAPORLAR _____________________");
		for(new i = 0; i < MAX_REPORTS; i++)
		{
			if(Reports[i][BeingUsed] == 1 && Reports[i][BugReport] == 0)
			{
				format(string, sizeof(string), "%s(ID: %i) | RID: %i | Raporlar: %s | Geerlilik Sresi: %d dakika.", GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]), Reports[i][TimeToExpire]);
				SendClientMessage(playerid, COLOR_REPORT, string);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN, "___________________________________________________");
	}
	return 1;
}

CMD:ar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], reportid;
		if(sscanf(params, "d", reportid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ar [reportid]");
		if(Reports[reportid][BugReport] == 1 && PlayerInfo[playerid][pAdmin] < 6 && IsBETAServer())
			return SendClientMessage(playerid,COLOR_WHITE, "Bu rapor tr sadece gelitiriciler ve beta test ediciler tarafndan kabul edilebilir.");
		if(reportid < 0 || reportid > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
		if(Reports[reportid][BeingUsed] == 0) {
			SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom])) {
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}
		format(string, sizeof(string), "AdminKomutu: %s, %s (ID: %i, RID: %i) kiisinden gelen raporu kabul etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]),Reports[reportid][ReportFrom],reportid);
		ABroadCast(COLOR_ORANGE, string, 1);
		AddReportToken(playerid); // Report Tokens
		format(string, sizeof(string), "%s raporunu kabul etti ve inceliyor, /cevap ile raporunu inceleyen Admin'e mesaj gnderebilirsin.", GetPlayerNameEx(playerid));
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
		PlayerInfo[playerid][pAcceptReport]++;
		Reports[reportid][ReplyTimerr] = SetTimerEx("ReplyTimer", 60000, 0, "d", reportid);
		Reports[reportid][CheckingReport] = playerid;
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][TimeToExpire] = 0;
		strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:tr(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			reportid;

		if(sscanf(params, "d", reportid))
			return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /tr [reportid]");

		if(Reports[reportid][BugReport] == 1 && PlayerInfo[playerid][pAdmin] < 6 && IsBETAServer())
			return SendClientMessage(playerid,COLOR_WHITE, "Bu rapor tr sadece gelitiriciler ve beta test ediciler tarafndan kabul edilebilir.");

		if(reportid < 0 || reportid > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
		if(Reports[reportid][BeingUsed] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}
		format(string, sizeof(string), "AdminKomutu: %s, %s kiisinden gelen raporu pe att.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]));
		ABroadCast(COLOR_ORANGE, string, 1);
		format(string, sizeof(string), "%s raporunu geersiz sayd. Raporun incelenmeyecek. /raportipleri komutunu incele", GetPlayerNameEx(playerid));
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
		PlayerInfo[playerid][pTrashReport]++;
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][TimeToExpire] = 0;
		strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:listpnamechanges(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkin yok.");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	new
	    iTarget;

	if(sscanf(params, "u", iTarget))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /listnchanges [Oyuncu ID/sim]");

	if(iTarget == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

	new
	    szQuery[114];

	SetPVarInt(playerid, "namechanges_target", iTarget);

	format(szQuery, sizeof(szQuery), "SELECT oldname, unixts, newname, approvedbyname FROM namechanges WHERE dbid = %d ORDER BY unixts DESC LIMIT 10", PlayerInfo[iTarget][pID]);
	mysql_query(szQuery, THREAD_LIST_NAMECHANGES, playerid, g_MySQLConnections[0]);
	return 1;
}

CMD:sth(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(isnull(params))
			return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /sth [reportid]");

		new
			iReportID = strval(params);

		if(iReportID < 0 || iReportID > 999)
			return SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!");

		if(Reports[iReportID][BeingUsed] == 0)
			return SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");

		if(!IsPlayerConnected(Reports[iReportID][ReportFrom]))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[iReportID][ReportFrom] = 999;
			Reports[iReportID][BeingUsed] = 0;
			return 1;
		}

		SendClientMessage(Reports[iReportID][ReportFrom], COLOR_WHITE, "Bir admin raporunu kdemli yardmclara sevk etti. /yardimiste ile bunu yapabilirsin.");
		SendClientMessage(Reports[iReportID][ReportFrom], COLOR_WHITE, "Kdemli yardmclar ve dier insanlar bu konuda sana yardmc olacaklar.");

		if(gNewbie[Reports[iReportID][ReportFrom]] != 0)
			gNewbie[Reports[iReportID][ReportFrom]] = 0;


	    SetPVarString(Reports[iReportID][ReportFrom], "helpreq", Reports[iReportID][Report]);

	    new
	        szMessage[128];

	    format(szMessage, sizeof(szMessage), "YardmKomutu: %s (%d) yardm iin istek gnderdi; %s", GetPlayerNameEx(Reports[iReportID][ReportFrom]), Reports[iReportID][ReportFrom], Reports[iReportID][Report]);
	    HelperBroadcast(COLOR_LIGHTBLUE, szMessage, 1);

		format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s kiisinin raporunu (RID: %d) kdemli yardmclara sevk etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[iReportID][ReportFrom]), iReportID);
		ABroadCast(COLOR_ORANGE, szMessage, 1);

		Reports[iReportID][ReportFrom] = 999;
		Reports[iReportID][BeingUsed] = 0;
		Reports[iReportID][TimeToExpire] = 0;
		strmid(Reports[iReportID][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:rtnc(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1 || PlayerInfo[playerid][pHelper] >= 1) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(PlayerInfo[playerid][pHelper] >= 1) {
		    new
		        iTarget,
				szMessage[128],
				szHelp[128];

	    	if(sscanf(params, "u", iTarget))
	        	return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /rtnc [Oyuncu ID/sim]");

	        if(iTarget == INVALID_PLAYER_ID)
	            return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

			if(GetPVarType(iTarget, "helpreq") == 0)
			    return SendClientMessage(playerid, COLOR_GREY, "Belirlenen oyuncu yardm isteinde bulunmad.");

			SendClientMessage(iTarget, COLOR_WHITE, "Bir yardmc raporunu Newbie Kanalna sevk etti. Yant iin /newb.");
			SendClientMessage(iTarget, COLOR_WHITE, "Oyuncular, adminler ve dier insanlar sorun hakknda yardmc olacaklar.");

			if(gNewbie[iTarget] != 0)
				gNewbie[iTarget] = 0;

			GetPVarString(playerid, "helpreq", szHelp, sizeof(szHelp));

			format(szMessage, sizeof(szMessage), "** Newbie %s: %s", GetPlayerNameEx(iTarget), szHelp);
			foreach(Player, n) {
				if(gNewbie[n]==0) {
					SendClientMessage(n, COLOR_NEWBIE, szMessage);
				}
			}

			format(szMessage, sizeof(szMessage), "YardmKomutu: %s, %s kiisinin isteini (ID: %d) Newbie Kanalna sevk etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget), iTarget);
			HelperBroadcast(COLOR_ORANGE, szMessage, 1);
		} else {
	 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
		        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		    if(isnull(params))
		        return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /rtnc [reportid]");

		    new
		        iReportID = strval(params);

			if(iReportID < 0 || iReportID > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
			if(Reports[iReportID][BeingUsed] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
				return 1;
			}
			if(!IsPlayerConnected(Reports[iReportID][ReportFrom]))
			{
				SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
				Reports[iReportID][ReportFrom] = 999;
				Reports[iReportID][BeingUsed] = 0;
				return 1;
			}

			SendClientMessage(Reports[iReportID][ReportFrom], COLOR_WHITE, "Bir admin raporunu Newbie Kanalna sevk etti. /newb ile yant verebilirsin.");
			SendClientMessage(Reports[iReportID][ReportFrom], COLOR_WHITE, "Oyuncular, yardmclar ve dier insanlar sorunuza yardmc olacaklar.");

			if(gNewbie[Reports[iReportID][ReportFrom]] != 0)
				gNewbie[Reports[iReportID][ReportFrom]] = 0;

			new
			    szMessage[128];

			format(szMessage, sizeof(szMessage), "** Newbie %s: %s", GetPlayerNameEx(Reports[iReportID][ReportFrom]), Reports[iReportID][Report]);
			foreach(Player, n) {
				if(gNewbie[n]==0) {
					SendClientMessage(n, COLOR_NEWBIE, szMessage);
				}
			}

			format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s kiisinin raporunu (RID: %d) Newbie Kanalna sevk etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[iReportID][ReportFrom]), iReportID);
			ABroadCast(COLOR_ORANGE, szMessage, 1);

			Reports[iReportID][ReportFrom] = 999;
			Reports[iReportID][BeingUsed] = 0;
			Reports[iReportID][TimeToExpire] = 0;
			strmid(Reports[iReportID][Report], "Yok", 0, 4, 4);
		}
	}

	return 1;
}

CMD:nro(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], reportid;
		if(sscanf(params, "d", reportid)) return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /nro [reportid]");
		if(Reports[reportid][BugReport] == 1 && PlayerInfo[playerid][pAdmin] < 6 && IsBETAServer())
			return SendClientMessage(playerid,COLOR_WHITE, "Bu rapor tr sadece gelitiriciler ve beta test ediciler tarafndan kabul edilebilir.");
		if(reportid < 0 || reportid > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
		if(Reports[reportid][BeingUsed] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}
		format(string, sizeof(string), "AdminKomutu: %s, %s kiisinden gelen raporu (RID: %d)temizledi, raporlanan ey kural bozan bir su deil.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
		ABroadCast(COLOR_ORANGE, string, 1);
		format(string, sizeof(string), "%s raporunu inceledi ve geersiz sayd. Rapor ettiin oyuncu hibir kural bozmuyor.", GetPlayerNameEx(playerid));
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, "Bunun kural bozan bir su olduunu dnyorsan, bunun bize yeni bir kural olarak foruma kayt edilmesini teklif edebilirsin.");
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][TimeToExpire] = 0;
		strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:post(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], reportid;
		if(sscanf(params, "d", reportid)) return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /post [reportid]");
		if(Reports[reportid][BugReport] == 1 && PlayerInfo[playerid][pAdmin] < 6 && IsBETAServer())
			return SendClientMessage(playerid,COLOR_WHITE, "Bu rapor tr sadece gelitiriciler ve beta test ediciler tarafndan kabul edilebilir.");
		if(reportid < 0 || reportid > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
		if(Reports[reportid][BeingUsed] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}
		format(string, sizeof(string), "AdminKomutu: %s, %s kiisinden gelen raporu(RID: %d) temizledi, nk forumda halledilmesi gereken bir konu.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
		ABroadCast(COLOR_ORANGE, string, 1);
		format(string, sizeof(string), "%s raporunu inceledi ve forumda halledilmesi gereken bir konu olduuna karar verdi (rnek: istek veya ikayet.)", GetPlayerNameEx(playerid));
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, "Yalnzca oyunda aktife kan eyalar iin rapor atn. ("WEBSITE")");
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][TimeToExpire] = 0;
		strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:norevive(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], reportid;
		if(sscanf(params, "d", reportid)) return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /norevive [reportid]");
		if(Reports[reportid][BugReport] == 1 && PlayerInfo[playerid][pAdmin] < 6 && IsBETAServer())
			return SendClientMessage(playerid,COLOR_WHITE, "Bu rapor tr sadece gelitiriciler ve beta test ediciler tarafndan kabul edilebilir.");
		if(reportid < 0 || reportid > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
		if(Reports[reportid][BeingUsed] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}
		format(string, sizeof(string), "AdminKomutu: %s, %s kiisinin raporunu (RID: %d) temizledi, nk diriltme istei geersiz bir rapor.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
		ABroadCast(COLOR_ORANGE, string, 1);
		format(string, sizeof(string), "%s raporunu inceledi ve diriltilemeyeceine karar verdi.", GetPlayerNameEx(playerid));
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, "Bir hata veya DM'den dolay ldysen (ve bir admin buna tank olduysa), o zaman diriltilebilirsin.");
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][TimeToExpire] = 0;
		strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:nao(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], reportid;
		if(sscanf(params, "d", reportid)) return SendClientMessage(playerid, COLOR_WHITE,"KULLANIM: /nao [reportid]");
		if(Reports[reportid][BugReport] == 1 && PlayerInfo[playerid][pAdmin] < 6 && IsBETAServer())
			return SendClientMessage(playerid,COLOR_WHITE, "Bu rapor tr sadece gelitiriciler ve beta test ediciler tarafndan kabul edilebilir.");
		if(reportid < 0 || reportid > 999) { SendClientMessage(playerid, COLOR_GREY, "Rapor ID'si 0-999 arasnda olmal!"); return 1; }
		if(Reports[reportid][BeingUsed] == 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			return 1;
		}
		if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			return 1;
		}
		format(string, sizeof(string), "AdminKomutu: %s, %s kiisinden gelen raporu (RID: %d) temizledi, nk oyunda u an yeterli yetkiye sahip admin yok.", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
		ABroadCast(COLOR_ORANGE, string, 1);
		format(string, sizeof(string), "%s raporunuzu inceledi, fakat isteinizi halledebilecek seviyede yetkili bir online admin yok.", GetPlayerNameEx(playerid));
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
		SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, "Ek yardm iin foruma konu aabilirsin ("WEBSITE"). Rahatszlktan dolay zr dileriz. ");
		Reports[reportid][ReportFrom] = 999;
		Reports[reportid][BeingUsed] = 0;
		Reports[reportid][TimeToExpire] = 0;
		strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	}
	return 1;
}

CMD:clearallreports(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 5) {
  		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        new string[128];
        ClearReports();
        SendClientMessage(playerid,COLOR_GRAD1, "Tm aktif raporlar temizledin.");
        format(string, sizeof(string), "AdminKomutu: %s bekleyen tm raporlar temizledi.", GetPlayerNameEx(playerid));
        ABroadCast(COLOR_LIGHTRED, string, 1);
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:admins(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

        SendClientMessage(playerid, COLOR_NEWS, "Online Adminler:");
        foreach(Player, i)
		{
            if(PlayerInfo[i][pAdmin] >= 1 && PlayerInfo[i][pAdmin] <= PlayerInfo[playerid][pAdmin])
			{
				new string[128], strFromFile[128], sstring[128], rtoken;
	 			new playern[MAX_PLAYER_NAME];
  				new month, day, year;
  		 		GetPlayerName(i, playern, sizeof(playern));
  		 		getdate(year, month, day);

                if(PlayerInfo[playerid][pAdmin] >= 5)
				{
					if(AdminDuty[i] == 1)
					{
                		format(sstring,sizeof(sstring),"admins/rtokens/%s[%d'%d'%d]",playern,month,day,year);
                		if(fexist(sstring))
						{
                			new File: file = fopen(sstring, io_read);
                    		if(file)
							{
                    	    fread(file, strFromFile);
                        	fclose(file);
                        	rtoken = strval(strFromFile);
                    		}
                		}

                        format(string, sizeof(string), "(Level %d Admin: %s) - (banda) - (Bugnk Raporlar: %d)", PlayerInfo[i][pAdmin], GetPlayerNameEx(i), rtoken);
					}
					else
					{
   						format(sstring,sizeof(sstring),"admins/rtokens/%s[%d'%d'%d]",PlayerInfo[i][pAdminName],month,day,year);
                		if(fexist(sstring))
						{
                			new File: file = fopen(sstring, io_read);
                    		if(file)
							{
                    	    fread(file, strFromFile);
                        	fclose(file);
                        	rtoken = strval(strFromFile);
                    		}
                		}

   						if(strlen(PlayerInfo[i][pAdminName]) > 2 && strlen(PlayerInfo[i][pAdminName]) < 20)
						{
							format(string, sizeof(string), "(Level %d Admin: %s) - (banda deil) - (ID %d - %s) - (Bugnk Raporlar: %d)", PlayerInfo[i][pAdmin], PlayerInfo[i][pAdminName], i, GetPlayerNameEx(i), rtoken);
						}
						else
						{
							format(string, sizeof(string), "(Level %d Admin: Admin ismi ayarlanmam) - (banda deil) - (ID %d - %s) - (Bugnk Raporlar: %d)", PlayerInfo[i][pAdmin], i, GetPlayerNameEx(i), rtoken);
						}
					}
                }
                else
				{
					if(AdminDuty[i] == 1)
					{
						format(string, sizeof(string), "(Level %d Admin: %s) - (banda)", PlayerInfo[i][pAdmin], GetPlayerNameEx(i));
					}
					else
					{
 						if(strlen(PlayerInfo[i][pAdminName]) > 2 && strlen(PlayerInfo[i][pAdminName]) < 20)
						{
							format(string, sizeof(string), "(Level %d Admin: %s) - (banda deil) - (ID %d - %s)", PlayerInfo[i][pAdmin], PlayerInfo[i][pAdminName], i, GetPlayerNameEx(i));
						}
						else
						{
							format(string, sizeof(string), "(Level %d Admin: Admin ismi ayarlanmam) - (banda deil) - (ID %d - %s)", PlayerInfo[i][pAdmin], i, GetPlayerNameEx(i));
						}
					}
                }

                SendClientMessage(playerid, COLOR_WHITE, string);
            }
        }
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Oyunla veya sunucuyla ilgili bir sorun varsa, /newb kullan.");
        SendClientMessage(playerid, COLOR_GRAD1, "pheli olaylar/oyuncular gryorsan /rapor [id] [sebep].");
    }
    return 1;
}

CMD:jail(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			iTargetID,
			szReason[64];

		if(sscanf(params, "us[64]", iTargetID, szReason)) {
			SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /jail [Oyuncu ID/sim] [sebep]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(AdminDuty[iTargetID] == 1) {
				return SendClientMessage(playerid, COLOR_WHITE, "bandaki adminler zerinde bunu deneyemezsin.");
			}
			if(PlayerInfo[iTargetID][pAdmin] >= PlayerInfo[playerid][pAdmin]) {
				return SendClientMessage(playerid, COLOR_WHITE, "Ayn veya daha yksek seviye adminler zerinde bunu deneyemezsin.");
			}

			//if(GetPVarInt(iTargetID, "PBM") > 0) LeavePaintballArena(iTargetID, GetPVarInt(iTargetID, "IsInArena"));

			new
				szMessage[128];

			ResetPlayerWeaponsEx(iTargetID);
			if(PlayerDraggedBy[iTargetID] != INVALID_PLAYER_ID) {
				IsCopDragging[PlayerDraggedBy[iTargetID]] = INVALID_PLAYER_ID;
				PlayerDragged[iTargetID] = 0;
				PlayerDraggedBy[iTargetID] = INVALID_PLAYER_ID;
			}
			if(IsPlayerAttachedObjectSlotUsed(iTargetID, 0))
				RemovePlayerAttachedObject(iTargetID, 0);
			PlayerInfo[iTargetID][pJailed] = 3;
			PhoneOnline[iTargetID] = 1;
			PlayerInfo[iTargetID][pJailTime] = 20*60;

		    LoadObjectsForPlayer(iTargetID);

			SetPlayerInterior(iTargetID, 69);
			PlayerInfo[iTargetID][pVW] = 696969;
			PlayerInfo[iTargetID][pInt] = 69;
			SetPlayerVirtualWorld(iTargetID, 696969);
			new rand = random(sizeof(AdminPrisonFloat));
			SetPlayerPos(iTargetID, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);

			format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s tarafndan hapse gnderildi, sebep: %s", GetPlayerNameEx(iTargetID), GetPlayerNameEx(playerid), szReason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, szMessage);

			format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s tarafndan hapse gnderildi, sebep: %s", GetPlayerNameEx(iTargetID), GetPlayerNameEx(playerid), szReason);
			Log("logs/admin.log", szMessage);

			format(szMessage, sizeof(szMessage), "Admin %s tarafndan 20 dakika hapse gnderildin, sebep: %s.", GetPlayerNameEx(playerid), szReason);
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			format(szMessage, sizeof(szMessage), "%s", szReason);
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			strcpy(PlayerInfo[iTargetID][pPrisonedBy], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
			strcpy(PlayerInfo[iTargetID][pPrisonReason], szReason, 128);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		}
	}
	return 1;
}

CMD:hjail(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 5)
	{
		new
			iTargetID,
			szReason[64];

		if(sscanf(params, "us[64]", iTargetID, szReason)) {
			SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /hjail [Oyuncu ID/sim] [sebep]");
		}
		else if(IsPlayerConnected(iTargetID)) {
			if(AdminDuty[iTargetID] == 1) {
				return SendClientMessage(playerid, COLOR_WHITE, "bandaki adminler zerinde bunu deneyemezsin.");
			}
			new
				szMessage[128];

			ResetPlayerWeaponsEx(iTargetID);
			if(PlayerDraggedBy[iTargetID] != INVALID_PLAYER_ID) {
				IsCopDragging[PlayerDraggedBy[iTargetID]] = INVALID_PLAYER_ID;
				PlayerDragged[iTargetID] = 0;
				PlayerDraggedBy[iTargetID] = INVALID_PLAYER_ID;
			}
			if(IsPlayerAttachedObjectSlotUsed(iTargetID, 0))
				RemovePlayerAttachedObject(iTargetID, 0);
			PlayerInfo[iTargetID][pJailed] = 3;
			PhoneOnline[iTargetID] = 1;
			PlayerInfo[iTargetID][pJailTime] = 20*60;

		    LoadObjectsForPlayer(iTargetID);

			SetPlayerInterior(iTargetID, 69);
			PlayerInfo[iTargetID][pVW] = 696969;
			PlayerInfo[iTargetID][pInt] = 69;
			SetPlayerVirtualWorld(iTargetID, 696969);
			new rand = random(sizeof(AdminPrisonFloat));
			SetPlayerPos(iTargetID, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);

			format(szMessage, sizeof(szMessage), "HelperKomutu: %s, %s tarafndan hapse gnderildi, sebep: %s", GetPlayerNameEx(iTargetID), GetPlayerNameEx(playerid), szReason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, szMessage);

			format(szMessage, sizeof(szMessage), "HelperKomutu: %s, %s tarafndan hapse gnderildi, sebep: %s", GetPlayerNameEx(iTargetID), GetPlayerNameEx(playerid), szReason);
			Log("logs/admin.log", szMessage);

			format(szMessage, sizeof(szMessage), "Helper %s tarafndan 20 dakika hapse gnderildin, sebep: %s.", GetPlayerNameEx(playerid), szReason);
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			format(szMessage, sizeof(szMessage), "%s", szReason);
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			strcpy(PlayerInfo[iTargetID][pPrisonedBy], GetPlayerNameEx(playerid), MAX_PLAYER_NAME);
			strcpy(PlayerInfo[iTargetID][pPrisonReason], szReason, 128);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		}
	}
	return 1;
}

CMD:gotoplayerscar(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

        new
			iTargetID;

        if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gotoplayerscar [Oyuncu ID/sim]");
		}
		else if(IsPlayerConnected(iTargetID)) {

			new
				szVehString[1024];

			for(new i, iModelID; i < MAX_PLAYERVEHICLES; i++) {
				if((iModelID = PlayerVehicleInfo[iTargetID][i][pvModelId] - 400) >= 0) {
					if(PlayerVehicleInfo[iTargetID][i][pvImpounded]) {
						format(szVehString, sizeof(szVehString), "%s\n%s (El koyulmu)", szVehString, VehicleName[iModelID]);
					}
					else if(PlayerVehicleInfo[iTargetID][i][pvDisabled]) {
						format(szVehString, sizeof(szVehString), "%s\n%s (Geersiz)", szVehString, VehicleName[iModelID]);
					}
					else if(!PlayerVehicleInfo[iTargetID][i][pvSpawned]) {
						format(szVehString, sizeof(szVehString), "%s\n%s (Saklanm)", szVehString, VehicleName[iModelID]);
					}
					else format(szVehString, sizeof(szVehString), "%s\n%s (ID %i)", szVehString, VehicleName[iModelID], PlayerVehicleInfo[iTargetID][i][pvId]);
				}
				else strcat(szVehString, "\nYok");
			}
		    ShowPlayerDialogEx(playerid, GOTOPLAYERCAR, DIALOG_STYLE_LIST, "Ara Inlama", szVehString, "Inla", "Iptal");
       		SetPVarInt(playerid, "playeraffectedcarTP", iTargetID);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		{

		}
  	}
	return 1;
}

CMD:watch(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 2)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkin yok.");
		return 1;
	}
	if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Izlerken bunu yapamazsn.");
		return 1;
	}
 	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  	{
   		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

	if(isnull(params))
	{
	    // VIP gold room needs to be fixed
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /watch [location] (or /watch off)");
		SendClientMessage(playerid, COLOR_GRAD2, "Genel Yerler: gym, lspd, allsaints, countygen, grove, tgb, bank, motel, cityhall, mall");
        SendClientMessage(playerid, COLOR_GRAD2, "Nokta Yerler: mp1, df, mf1, dh, mp2, cl, mf2, aec, ffc");
	}
	// GENERAL LOCATIONS
	if(strcmp(params, "gym", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Ganton gym'i izliyorsun.");
		SetPlayerPos(playerid, 2212.61, -1730.57, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2208.67, -1733.71, 27.48);
		SetPlayerCameraLookAt(playerid, 2225.25, -1723.1, 13.56);
	}
	else if(strcmp(params, "lspd", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "LSPD'yi izliyorsun.");
		SetPlayerPos(playerid, 1504.23, -1700.17, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1500.21, -1691.75, 38.38);
		SetPlayerCameraLookAt(playerid, 1541.46, -1676.17, 13.55);
	}
	else if(strcmp(params, "allsaints", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "All Saints Hastanesi'ni izliyorsun.");
		SetPlayerPos(playerid, 1201.12, -1324, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1207.39, -1294.71, 24.61);
		SetPlayerCameraLookAt(playerid, 1181.72, -1322.65, 13.58);
	}
	else if(strcmp(params, "countygen", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "County General Hastanesi'ni izliyorsun.");
		SetPlayerPos(playerid, 1989.24, -1461.38, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1981.79, -1461.55, 31.93);
		SetPlayerCameraLookAt(playerid, 2021.23, -1427.48, 13.97);
	}
	else if(strcmp(params, "grove", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Grove Street'i izliyorsun.");
		SetPlayerPos(playerid, 2489.09, -1669.88, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2459.82, -1652.68, 26.45);
		SetPlayerCameraLookAt(playerid, 2489.09, -1669.88, 13.34);
	}
	else if(strcmp(params, "tgb", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Ten Green Bottles' izliyorsun.");
		SetPlayerPos(playerid, 2319.09, -1650.90, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2336.31, -1664.76, 24.98);
		SetPlayerCameraLookAt(playerid, 2319.09, -1650.90, 14.16);
	}
	else if(strcmp(params, "bank", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Los Santos Bankasn izliyorsun.");
		SetPlayerPos(playerid, 1466.24, -1023.05, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1502.28, -1044.47, 31.19);
		SetPlayerCameraLookAt(playerid, 1466.24, -1023.05, 23.83);
	}
	else if(strcmp(params, "motel", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Jefferson Motelini izliyorsun.");
		SetPlayerPos(playerid, 2215.73, -1163.39, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2203.05, -1152.81, 37.03);
		SetPlayerCameraLookAt(playerid, 2215.73, -1163.39, 25.73);
	}
	else if(strcmp(params, "cityhall", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Los Santos City Hall' izliyorsun.");
		SetPlayerPos(playerid, 1478.936035, -1746.446655, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1447.461669, -1717.788085, 44.047473);
		SetPlayerCameraLookAt(playerid, 1478.936035, -1746.446655, 14.347633);
	}
	else if(strcmp(params, "mall", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Los Santos Mall' izliyorsun.");
		SetPlayerPos(playerid, 1127.245483, -1451.613891, -80.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1092.614868, -1499.197998, 42.018226);
		SetPlayerCameraLookAt(playerid, 1127.245483, -1451.613891, 15.796875);
	}

	// Points (mp1, df, mf1, dh, mp2, cl, mf2, aec, ffc)
	else if(strcmp(params, "mp1", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Materyal Pickup 1'i izliyorsun.");
  		SetPlayerPos(playerid, 1423.773437, -1320.386962, -60.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 1411.689941, -1352.002929, 24.477527);
		SetPlayerCameraLookAt(playerid, 1423.773437, -1320.386962, 13.554687);
	}
	else if(strcmp(params, "df", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Drug Factory'i izliyorsun.");
  		SetPlayerPos(playerid, 2205.938964, 1582.210449, 987.316528);
		SetPlayerInterior(playerid, 1);
		PlayerInfo[playerid][pInt] = 1;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2222.844482, 1590.667968, 1002.612915);
		SetPlayerCameraLookAt(playerid, 2206.402587, 1582.398681, 999.976562);
	}
	else if(strcmp(params, "mf1", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Materyal Factory 1'i izliyorsun.");
  		SetPlayerPos(playerid, 2172.315185, -2263.781250, -60.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2206.363769, -2262.568359, 24.240808);
		SetPlayerCameraLookAt(playerid, 2172.315185, -2263.781250, 13.335824);
	}
	else if(strcmp(params, "dh", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Drug House'u izliyorsun.");
  		SetPlayerPos(playerid, 323.577026, 1118.344116, 1063.765625);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerVirtualWorld(playerid, 20019);
		PlayerInfo[playerid][pVW] = 20019;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 316.387817, 1123.946289, 1085.046020);
		SetPlayerCameraLookAt(playerid, 323.577026, 1118.344116, 1083.882812);
	}
	else if(strcmp(params, "mp2", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Materyal Pickup 2'yi izliyorsun.");
  		SetPlayerPos(playerid, 2390.212402, -2008.328491, -60.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2410.285644, -2013.919433, 21.716161);
		SetPlayerCameraLookAt(playerid, 2390.212402, -2008.328491, 13.553703);
	}
	else if(strcmp(params, "cl", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Crack Lab' izliyorsun.");
  		SetPlayerPos(playerid, 2346.013916, -1185.367065, 977.425842);
		SetPlayerInterior(playerid, 5);
		PlayerInfo[playerid][pInt] = 5;
		SetPlayerVirtualWorld(playerid, 20020);
		PlayerInfo[playerid][pVW] = 20020;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2342.012207, -1180.969848, 1029.412353);
		SetPlayerCameraLookAt(playerid, 2346.013916, -1185.367065, 1027.976562);
	}
	else if(strcmp(params, "mf2", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Materyal Factory 2'yi izliyorsun.");
  		SetPlayerPos(playerid, 2282.298828, -1110.143798, -35.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2306.088623, -1133.968627, 52.929584);
		SetPlayerCameraLookAt(playerid, 2282.298828, -1110.143798, 37.976562);
	}
	else if(strcmp(params, "aec", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Auto Export Company'i izliyorsun.");
  		SetPlayerPos(playerid,2729.929687, -2451.353271, -60.0);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2780.443847, -2383.833984, 31.127187);
		SetPlayerCameraLookAt(playerid, 2729.929687, -2451.353271, 17.593746);
	}
	else if(strcmp(params, "ffc", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Fossil Fuel Company'i izliyorsun.");
  		SetPlayerPos(playerid, 2662.808105, -2133.713623, -39.590702);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		TogglePlayerControllable(playerid,0);
		SetPlayerCameraPos(playerid, 2662.808105, -2133.713623, 26.140636);
		SetPlayerCameraLookAt(playerid, 2636.352294, -2109.808349, 13.546875);
	}


	// OFF
	else if(strcmp(params, "off", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Hibir blgeyi izlemiyorsun.");
		SetPlayerPos(playerid, 1520.50, -1674.70, 13.55);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pVW] = 0;
		SetPlayerFacingAngle(playerid, 270.0);
		SetCameraBehindPlayer(playerid);
		TogglePlayerControllable(playerid,1);
	}
	return 1;
}

CMD:hapistekiler(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
 	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  		{
   			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibanda deilsin. Admin komutlarna erimek iin iba yapman gerekiyor. iba yapmak iin /aduty komutunu kullan.");
			return 1;
   		}

  		new
  		    string[128];

		SendClientMessage(playerid, COLOR_GREEN, "----------------------------------------");

		foreach(Player, i) {
    		if(PlayerInfo[i][pJailed] >= 1 && PlayerInfo[i][pJailTime] >= 1) {
        		if(strlen(PlayerInfo[i][pPrisonReason]) >= 1 && strlen(PlayerInfo[i][pPrisonedBy]) >= 1) {
					format(string, sizeof(string), "%s (Kim tarafndan: %s), sebep: %s (%d dakika)", GetPlayerNameEx(i), PlayerInfo[i][pPrisonedBy], PlayerInfo[i][pPrisonReason], PlayerInfo[i][pJailTime]/60);
	                SendClientMessage(playerid, COLOR_GREY, string);
      			}
         		else
           		{
            		format(string, sizeof(string), "%s (Kim tarafndan: bilinmiyor), sebep: bilinmiyor (%d dakika)", GetPlayerNameEx(i), PlayerInfo[i][pJailTime]/60);
             		SendClientMessage(playerid, COLOR_GREY, string);
             	}
      		}
      	}

      	SendClientMessage(playerid, COLOR_GREEN, "----------------------------------------");
	}
	return 1;
}

CMD:prisoners(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
 	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
  		{
   			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
   		}

  		new
  		    string[128];

		SendClientMessage(playerid, COLOR_WHITE, "----------------------------------------");

		foreach(Player, i) {
    		if(PlayerInfo[i][pJailed] >= 1 && PlayerInfo[i][pJailTime] >= 1) {
        		if(strlen(PlayerInfo[i][pPrisonReason]) >= 1 && strlen(PlayerInfo[i][pPrisonedBy]) >= 1) {
					format(string, sizeof(string), "%s (Kim tarafndan: %s), sebep: %s (%d dakika)", GetPlayerNameEx(i), PlayerInfo[i][pPrisonedBy], PlayerInfo[i][pPrisonReason], PlayerInfo[i][pJailTime]/60);
	                SendClientMessage(playerid, COLOR_GREY, string);
      			}
         		else
           		{
            		format(string, sizeof(string), "%s (Kim tarafndan: bilinmiyor), sebep: bilinmiyor (%d dakika)", GetPlayerNameEx(i), PlayerInfo[i][pJailTime]/60);
             		SendClientMessage(playerid, COLOR_GREY, string);
             	}
      		}
      	}

      	SendClientMessage(playerid, COLOR_WHITE, "----------------------------------------");
	}
	return 1;
}

CMD:prison(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
	    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			giveplayerid,
			minutes,
			reason[64];

		if(sscanf(params, "uds[64]", giveplayerid, minutes, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /prison [Oyuncu ID/sim] [dakika] [sebep]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin] && AdminDuty[giveplayerid] == 1)
				return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu sana eit veya daha yksek leveldeki admin  zerinde uygulayamazsn.");

			SetPlayerArmedWeapon(giveplayerid, 0);

			GameTextForPlayer(giveplayerid, "~w~HOSGELDIN ~n~~r~OOC HAPISHANE", 5000, 3);

			ResetPlayerWeaponsEx(giveplayerid);
			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan hapse gnderildi, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			Log("logs/admin.log", string);
			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan hapse gnderildi, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
			punishmentLog(giveplayerid, playerid, 2, string, reason);
			if(PlayerDraggedBy[giveplayerid] != INVALID_PLAYER_ID) {
				IsCopDragging[PlayerDraggedBy[giveplayerid]] = INVALID_PLAYER_ID;
				PlayerDragged[giveplayerid] = 0;
				PlayerDraggedBy[giveplayerid] = INVALID_PLAYER_ID;
			}
			PlayerInfo[giveplayerid][pWantedLevel] = 0;
			SetPlayerWantedLevel(giveplayerid, 0);
			PlayerInfo[giveplayerid][pJailed] = 3;
			PlayerInfo[giveplayerid][pJailTime] = minutes*60;

			if(IsPlayerAttachedObjectSlotUsed(giveplayerid, 0))
				RemovePlayerAttachedObject(giveplayerid, 0);

			format(PlayerInfo[giveplayerid][pPrisonReason], 128, "%s", reason);
			format(PlayerInfo[giveplayerid][pPrisonedBy], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(playerid));
			PhoneOnline[giveplayerid] = 1;

		    LoadObjectsForPlayer(giveplayerid);

			SetPlayerInterior(giveplayerid, 69);
			PlayerInfo[giveplayerid][pVW] = 696969;
			PlayerInfo[giveplayerid][pInt] = 69;
			SetPlayerVirtualWorld(giveplayerid, 696969);
			new rand = random(sizeof(AdminPrisonFloat));
			SetPlayerPos(giveplayerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);

			SetPlayerSkin(giveplayerid, 50);
			SetPlayerColor(giveplayerid, TEAM_APRISON_COLOR);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:oprison(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			name[MAX_PLAYER_NAME],
			minutes,
			reason[64];

		if(sscanf(params, "s[24]ds[64]", name, minutes, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /oprison [oyuncuad] [zaman (dakika)] [sebep]");

        new giveplayerid = ReturnUser(name);
        if(IsPlayerConnected(giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu online, /prison komutunu online oyuncular iin kullan.");

		SetPVarInt(playerid, "oprisontime", minutes*60);
		SetPVarString(playerid, "oprisonreason", reason);

		new
		    szPlayerName[MAX_PLAYER_NAME];

		mysql_real_escape_string(name, szPlayerName, g_MySQLConnections[0]);

		format(string, sizeof(string), "SELECT Permabanned, Banned, AdminLevel, Username, LastIP, JailTime, ID FROM players WHERE Username = '%s'", szPlayerName);
		mysql_query(string, THREAD_OFFLINE_PRISON, playerid, g_MySQLConnections[0]);
	}
	return 1;
}

CMD:fine(playerid, params[])
{
	new string[128], giveplayerid, amount, reason[64];
	if(sscanf(params, "uds", giveplayerid, amount, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /fine [Oyuncu ID/sim] [amount] [sebep]");

	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(IsPlayerConnected(giveplayerid))
		{
			if(amount < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Miktar 0'dan byk olmal.");
				return 1;
			}
			format(string, sizeof(string), "AdminKomutu: Birkii Admin Tarafndan Para Cezasna arptrld", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), amount, reason);
			Log("logs/admin.log", string);
			punishmentLog(giveplayerid, playerid, 3, string, reason);

			format(string, sizeof(string), "AdminKomutu: Birkii Admin Tarafndan Para Cezasna arptrld", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), amount, reason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
			GivePlayerCash(giveplayerid, -amount);
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Level 3 Admin deilsin.");
	}
	return 1;
}

CMD:pfine(playerid, params[])
{
	new string[128], giveplayerid, percentage, reason[64];
	if(sscanf(params, "uds[64]", giveplayerid, percentage, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /pfine [Oyuncu ID/sim] [percentage] [sebep]");

	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(IsPlayerConnected(giveplayerid))
		{
			new fine, allmoney;

			if(PlayerInfo[giveplayerid][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[giveplayerid][pHouse]][hOwner], true) == 0)
			{
				allmoney = HouseInfo[PlayerInfo[giveplayerid][pHouse]][hSafeMoney]+GetPlayerCash(giveplayerid)+PlayerInfo[giveplayerid][pBank];
			}
			else if(PlayerInfo[giveplayerid][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[giveplayerid][pHouse2]][hOwner], true) == 0)
			{
				allmoney += HouseInfo[PlayerInfo[giveplayerid][pHouse2]][hSafeMoney];
			}
			else
			{
				allmoney = GetPlayerCash(giveplayerid)+PlayerInfo[giveplayerid][pBank];
			}
			if(allmoney < 1)
			{
				SendClientMessage(giveplayerid, COLOR_GRAD2, "Bu oyuncunun hi paras yok!");
				return 1;
			}

			fine = percentage*allmoney/100;
			if(percentage < 1 || percentage > 100)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Miktar 0-100 aras olmal.");
				return 1;
			}
			format(string, sizeof(string), "AdminKomutu: %s tarafndan $%d para cezasna arptrld, sebep: %s", GetPlayerNameEx(giveplayerid), fine, GetPlayerNameEx(playerid), reason);
			Log("logs/admin.log", string);
			format(string, sizeof(string), "AdminKomutu: %s tarafndan $%d para cezasna arptrld, sebep: %s", GetPlayerNameEx(giveplayerid), fine, GetPlayerNameEx(playerid), reason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
			punishmentLog(giveplayerid, playerid, 3, string, reason);
			GivePlayerCash(giveplayerid, -fine);
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Level 3 Admin deilsin.");
	}
	return 1;
}

CMD:takeadminweapons(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /takeadminweapons [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			for(new s = 0; s < 12; s++)
			{
				if(PlayerInfo[giveplayerid][pAGuns][s] != 0)
				{
					RemovePlayerWeapon(giveplayerid, PlayerInfo[giveplayerid][pAGuns][s]);
				}
			}
			format(string,sizeof(string),"%s kiisinin admin tarafndan karlm silahlarn sildin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:deletead(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 3) {
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new
		    iTarget;

		if(sscanf(params, "u", iTarget))
		    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /deletead [Oyuncu ID/sim]");

		if(iTarget == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(!isnull(szAdvert[iTarget])) {
		    strdel(szAdvert[iTarget], 0, strlen(szAdvert[iTarget]));
		    szAdvert[iTarget][0] = 0; // never can remember if it actually sets it to the null terminator

		    new
		        szMessage[64];

			format(szMessage, sizeof(szMessage), "%s kiisinin reklamn reklam sisteminden kaldrdn.", GetPlayerNameEx(iTarget));
			SendClientMessage(playerid, COLOR_WHITE, szMessage);

			format(szMessage, sizeof(szMessage), "%s senin reklamn reklam sisteminden kaldrd.", GetPlayerNameEx(playerid));
			SendClientMessage(iTarget, COLOR_WHITE, szMessage);
		} else return SendClientMessage(playerid, COLOR_GREY, "Bu reklam mevcut deil ya da ncelikli reklam.");
	}
	return 1;
}

CMD:sirenkapat(playerid, params[]) {
	if(IsACop(playerid)) {
	    if(IsValidDynamicObject(GetPVarInt(playerid, "SirenO")) && GetPVarInt(playerid, "SirenO") > 0) {
	        DestroyDynamicObject(GetPVarInt(playerid, "SirenO"));
	        DeletePVar(playerid, "SirenO");
	        SendClientMessage(playerid, COLOR_WHITE, "Siren aracndan kaldrld.");
	    } else SendClientMessage(playerid, COLOR_GREY, "Aracnda siren yok.");
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	return 1;
}

CMD:sirenyoket(playerid, params[]) {
	if(IsACop(playerid) && PlayerInfo[playerid][pRank] > 4) {
		new
			szMessage[128];
		foreach(Player, i) {
			if(IsValidDynamicObject(GetPVarInt(i, "SirenO")) && GetPVarInt(i, "SirenO") > 0) {
				DestroyDynamicObject(GetPVarInt(i, "SirenO"));
				DeletePVar(i, "SirenO");
			}
		}
		format(szMessage, sizeof(szMessage), "HQ: Tm sirenler %s tarafndan kaldrld.", GetPlayerNameEx(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(2, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(3, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(5, TEAM_BLUE_COLOR, szMessage);
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru ya da R4+ deilsin.");
	return 1;
}

CMD:siren(playerid, params[]) {
	if(IsACop(playerid)) {
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
			if(IsABoat(GetPlayerVehicleID(playerid)) || IsAPlane(GetPlayerVehicleID(playerid)) || IsABike(GetPlayerVehicleID(playerid)) || IsAHelicopter(GetPlayerVehicleID(playerid)))
				return SendClientMessage(playerid, COLOR_GREY, "Bu tip arata siren kullanamazsn.");

			switch(GetVehicleModel(GetPlayerVehicleID(playerid))) {
			    case 416, 523, 427, 490, 528, 407, 544, 601: {
                    SendClientMessage(playerid, COLOR_GREY, "Arata zaten siren var.");
				}
				case 596, 597, 598, 599: {
					if(IsValidDynamicObject(GetPVarInt(playerid, "SirenO")) && GetPVarInt(playerid, "SirenO") > 0) {
			            DestroyDynamicObject(GetPVarInt(playerid, "SirenO"));
			        }
					SetPVarInt(playerid, "SirenO", CreateDynamicObject(19419, 10.0, 10.0, 10.0, 0, 0, 0, 0, 0, -1));
			        if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 596) AttachDynamicObjectToVehicle(GetPVarInt(playerid, "SirenO"), GetPlayerVehicleID(playerid), 0.000000, -0.379999, 0.889999, 0.000000, 0.000000, 0.000000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 597) AttachDynamicObjectToVehicle(GetPVarInt(playerid, "SirenO"), GetPlayerVehicleID(playerid), 0.000000, -0.374999, 0.884999, 0.000000, 0.000000, 0.000000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 598) AttachDynamicObjectToVehicle(GetPVarInt(playerid, "SirenO"), GetPlayerVehicleID(playerid), 0.000000, -0.334498, 0.933500, 0.000000, 0.000000, 0.000000);
					else if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 599) AttachDynamicObjectToVehicle(GetPVarInt(playerid, "SirenO"), GetPlayerVehicleID(playerid), 0.000000, 0.039999, 1.153999, 0.000000, 0.000000, 0.000000);
					else return SendClientMessage(playerid, COLOR_GREY, "Bu tip arata siren kullanamazsn.");
			        SendClientMessage(playerid, COLOR_WHITE, "Siren takld.");
				}
			    default: {
			        if(IsValidDynamicObject(GetPVarInt(playerid, "SirenO")) && GetPVarInt(playerid, "SirenO") > 0) {
			            DestroyDynamicObject(GetPVarInt(playerid, "SirenO"));
			        }
					SetPVarInt(playerid, "SirenO", CreateDynamicObject(18646, 10.0, 10.0, 10.0, 0, 0, 0, 0, 0, -1));
			        AttachDynamicObjectToVehicle(GetPVarInt(playerid, "SirenO"), GetPlayerVehicleID(playerid), -0.43, 0.0, 0.785, 0.0, 0.1, 0.0);
			        SendClientMessage(playerid, COLOR_WHITE, "Siren takld.");
			    }
			}
	    } else SendClientMessage(playerid, COLOR_GREY, "Siren takabilmek iin aracn ofr olman gerekir.");
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	return 1;
}

CMD:takeweapons(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /takeadminweapons [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			ResetPlayerWeaponsEx(giveplayerid);
			format(string,sizeof(string),"%s kiisinin silahlarn sildin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:sendtols(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /sendtols [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin] && AdminDuty[giveplayerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Bu komutu sana eit veya daha yksek leveldeki admin  zerinde uygulayamazsn.");
				return 1;
			}
			format(string, sizeof(string), " %s kiisini Los Santos'a gnderdin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
			SendClientMessage(giveplayerid, COLOR_WHITE, "Inlandn!");
			SetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
			SetPlayerVirtualWorld(giveplayerid, 0);
			SetPlayerInterior(giveplayerid, 0);
			PlayerInfo[giveplayerid][pInt] = 0;
			PlayerInfo[giveplayerid][pVW] = 0;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:release(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			giveplayerid,
			reason[64];

		if(sscanf(params, "us[64]", giveplayerid, reason))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /release [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pJailTime] == 0)
				return SendClientMessage(playerid, COLOR_GRAD1, "Setiin oyuncu hapiste deil.");

			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan hapisten brakld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			Log("logs/admin.log", string);
			format(string, sizeof(string), "AdminKomutu: %s, %s tarafndan hapisten brakld, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);

			if(PlayerDraggedBy[giveplayerid] != INVALID_PLAYER_ID) {
				IsCopDragging[PlayerDraggedBy[giveplayerid]] = INVALID_PLAYER_ID;
				PlayerDragged[giveplayerid] = 0;
				PlayerDraggedBy[giveplayerid] = INVALID_PLAYER_ID;
			}
			PlayerInfo[giveplayerid][pJailed] = 0;
			PlayerInfo[giveplayerid][pWantedLevel] = 0;
			SetPlayerToTeamColor(giveplayerid);
			SetPlayerWantedLevel(giveplayerid, 0);
			PlayerInfo[giveplayerid][pJailTime] = 0;
			SetPlayerPos(giveplayerid, 1529.6,-1691.2,13.3);
			SetPlayerInterior(giveplayerid,0);
			PlayerInfo[giveplayerid][pInt] = 0;
			SetPlayerVirtualWorld(giveplayerid, 0);
			PlayerInfo[giveplayerid][pVW] = 0;
			PhoneOnline[giveplayerid] = 0;
			if(IsPlayerAttachedObjectSlotUsed(giveplayerid, 0))
				RemovePlayerAttachedObject(giveplayerid, 0);
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	} else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:forcedeath(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 		{
  			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
   		}

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /forcedeath [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid, "Injured") == 1)
			{
				format(string, sizeof(string), " %s kiisini lmeye zorladn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Bir admin tarafndan lmeye zorlandn.");
				KillEMSQueue(giveplayerid);
				ResetPlayerWeaponsEx(giveplayerid);
				SpawnPlayer(giveplayerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu yaral deil!");
			}
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:forcehospital(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 		{
  			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
   		}

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /forcehospital [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid, "Hospital") > 0)
			{
				format(string, sizeof(string), " %s hastaneden kmaya zorladn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Admin tarafndan hastane dna karldn.");
				DeletePVar(giveplayerid, "HospitalTimer");
				HospitalSpawn(giveplayerid);
				DeletePVar(giveplayerid, "Hospital");
				DeletePVar(giveplayerid, "DoktorMasrafi");
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu hastanede deil!");
			}
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:flipveh(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)
		return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");

    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	if(IsPlayerInAnyVehicle(playerid))
	{
		new Float:zAngle;
		GetVehicleZAngle(GetPlayerVehicleID(playerid), zAngle);
		SetVehicleZAngle(GetPlayerVehicleID(playerid), zAngle);
		SendClientMessageEx(playerid, COLOR_WHITE, "Aracn ters evrildi.");
	}
	else
	{
		SendClientMessageEx(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin arata olman gerekiyor.");
	}
	return 1;
}

CMD:reloadpvehicles(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 3)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");
        return 1;
    }
    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
    {
    	SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   }

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /reloadpvehicles [Oyuncu ID/sim]");

	UnloadPlayerVehicles(giveplayerid);
	LoadPlayerVehicles(giveplayerid);

	format(string, sizeof(string), " %s kiisinin aralarn yeniden kardn.", GetPlayerNameEx(giveplayerid));
	SendClientMessage(playerid, COLOR_GREY, string);

	return 1;
}

CMD:apark(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 3)
	{
    	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
    	{
    		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
   		}
        foreach(Player, ownerid)
        {
			for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
			{
				if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[ownerid][d][pvId]))
				{
				    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Src koltuunda olman lazm.");
					new Float:x, Float:y, Float:z, Float:angle, Float:health;
					if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;
					if(IsARC(GetPlayerVehicleID(playerid))) // RC Vehicles
					{
						new Float:vehPos[3];
						GetVehiclePos(GetPlayerVehicleID(playerid),vehPos[0], vehPos[1], vehPos[2]);
						SetPlayerPos(playerid,vehPos[0], vehPos[1]+0.5, vehPos[2]+0.5);
					}
					GetVehicleHealth(PlayerVehicleInfo[ownerid][d][pvId], health);
					GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
					GetVehicleZAngle(PlayerVehicleInfo[ownerid][d][pvId], angle);
					SurfingCheck(GetPlayerVehicleID(playerid));
					UpdatePlayerVehicleParkPosition(ownerid, d, x, y, z, angle, health);
					PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
				 	SetPlayerArmedWeapon(playerid, 0);

				 	new szMessage[128];

				 	format(szMessage, sizeof(szMessage)," %s kiisinin %s model aracn park ettin.",GetPlayerNameEx(ownerid), VehicleName[PlayerVehicleInfo[ownerid][d][pvModelId] - 400]);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);

					format(szMessage, sizeof(szMessage), "Aracn %s admin tarafndan baka bir yere park edildi. /aracimibul ile bulabilirsin.", VehicleName[PlayerVehicleInfo[ownerid][d][pvModelId] - 400]);
					SendClientMessage(ownerid, COLOR_WHITE, szMessage);
					return 1;
				}
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:aimpound(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
    	{
    		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
   		}

		new
			iVehType,
			iVehIndex,
			iTargetOwner,
			iVehTowed;
        if(sscanf(params, "d", iVehTowed)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aimpound [carid]");

		foreach(Player, i) {
			iVehIndex = GetPlayerVehicle(i, iVehTowed);
			if(iVehIndex != -1) {
				iVehType = 1;
				iTargetOwner = i;
				break;
			}
		}
		if(!iVehType) {
			for(new i; i < MAX_FAMILY; ++i) {
				iVehIndex = GetGangVehicle(i, iVehTowed);
				if(iVehIndex != -1) {
					iVehType = 2;
					iTargetOwner = i;
					break;
				}
			}
		}
		switch(iVehType) {
			case 0, 2: {
				SendClientMessage(playerid, COLOR_GRAD1, "Bu arac balayamazsn, onun yerine yeniden karld.");
				DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
				SetVehicleToRespawn(iVehTowed);
			}
			case 1: {

				PlayerVehicleInfo[iTargetOwner][iVehIndex][pvImpounded] = 1;
				PlayerVehicleInfo[iTargetOwner][iVehIndex][pvSpawned] = 0;
				PlayerVehicleInfo[iTargetOwner][iVehIndex][pvId] = INVALID_PLAYER_VEHICLE_ID;
				DestroyVehicle(iVehTowed);
				VehicleRadioStation[iVehTowed] = 0;

				VehicleSpawned[iTargetOwner]--;
				--PlayerCars;

				new
					szMessage[96];

				format(szMessage, sizeof(szMessage),"%s kiisinin %s model aracn baladn.",GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
				SendClientMessage(playerid, COLOR_WHITE, szMessage);

				format(szMessage, sizeof(szMessage), "Aracn %s admin tarafndan baland. Dillimore'daki DMV'den araban karabilirsin.", VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
				SendClientMessage(iTargetOwner, COLOR_WHITE, szMessage);

			}
		}
		arr_Towing[playerid] = INVALID_VEHICLE_ID;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:respawncar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], carid;
		if(sscanf(params, "d", carid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /respawncar [carid]");

		SetVehicleToRespawn(carid);
		format(string, sizeof(string), "Arac kardn( ID %d ).", carid);
		SendClientMessage(playerid, COLOR_GREY, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:respawncars(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 3) {
	    if(isnull(params))
	        return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /respawncars [menzil]");

 		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], radius = strval(params);

		if(radius < 1 || radius > 40)
			return SendClientMessage(playerid, COLOR_WHITE, "Menzil 0-41 aras olmal!");

		RespawnNearbyVehicles(playerid, radius);
		format(string, sizeof(string), "%d menzildeki tm aralar kardn.", radius);
		SendClientMessage(playerid, COLOR_GREY, string);
	} else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	return 1;
}

CMD:kontraktlar(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4 || (PlayerInfo[playerid][pAdmin] >= 4 && AdminDuty[playerid] == 1))
	{
        SearchingHit(playerid);
    }
    return 1;
}

CMD:gorevver(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		if(PlayerInfo[playerid][pRank] < 5)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Sadece Rank 5 ve st kontrat verebilir!");
			return 1;
		}

		new string[128], giveplayerid, targetid;
		if(sscanf(params, "uu", giveplayerid, targetid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gorevver [Oyuncu ID/sim] [targetid]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GoChase[giveplayerid] < 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu Hitman baka bir kontratla megul!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu hedefle zaten baka bir hitman ilgileniyor!");
				return 1;
			}
			if(IsPlayerConnected(targetid))
			{
				if(PlayerInfo[targetid][pHeadValue] == 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Hedef iin yaplm bir kontrat yok!");
					return 1;
				}

				format(string, sizeof(string), "* %s kiisine %s adl kiiyi ldrmesi iin kontrat nerdin.", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(targetid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Hitman %s, %s adl kiiyi ldrmek iin sana kontrat nerdi (/kabulet kontrakt ile kabul et).", GetPlayerNameEx(playerid), GetPlayerNameEx(targetid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				HitOffer[giveplayerid] = playerid;
				HitToGet[giveplayerid] = targetid;
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Kontratl oyuncu online deil, /kontraktlar kullan!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Hitman online deil!");
			return 1;
		}
	}
	return 1;
}

CMD:goreval(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		new string[128], targetid;
		if(sscanf(params, "u", targetid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /goreval [targetid]");

		if(IsPlayerConnected(targetid))
		{
			if(GoChase[playerid] < 999)
			{
				SendClientMessage(playerid, COLOR_GREY, "    Baka bir kontratla megulsun!");
				return 1;
			}
			if(GotHit[targetid] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Baka bir hitman bu hedefe grevlendirilmi!");
				return 1;
			}
			if(PlayerInfo[targetid][pHeadValue] == 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "    Hedef iin kontrat yaplmam!");
				return 1;
			}
			format(string, sizeof(string), "* %s kiisini ldrmek iin kendine kontrat verdin. ( /kabulet contract)", GetPlayerNameEx(targetid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			HitOffer[playerid] = playerid;
			HitToGet[playerid] = targetid;
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Kontratl oyuncu online deil, /kontraktlar kullan!");
			return 1;
		}
	}
	return 1;
}

CMD:siparis(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
	    if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");
		if(IsPlayerInRangeOfPoint(playerid, 20.0, 1236.112182, -751.863220, 5080.765136))
		{
			if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");
			new Hitman[32], skin = -1;
			if(sscanf(params, "s[32]D", Hitman, skin))
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /siparis [isim]");
				SendClientMessage(playerid, COLOR_GRAD2, " Rtbe 1: Knife ($80), SDPistol ($100), Shotgun ($150), Skin ($250), Deagle ($500), MP5 ($250), Vest ($600)");
				SendClientMessage(playerid, COLOR_GRAD2, " Rtbe 2: Rifle ($300), AK47 ($1,000), M4 ($1,200)");
				SendClientMessage(playerid, COLOR_GRAD2, " Rtbe 3: SPAS12 ($3,500), Sniper ($3,500)");
				SendClientMessage(playerid, COLOR_GRAD2, " Rtbe 4: C4 ($5000)");
				return 1;
			}
			else if(strcmp(Hitman,"skin",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1) {
					SendClientMessage(playerid, COLOR_GREY, "Bunun iin yeterli rtben yok!");
				}
				else if(IsInvalidSkin(skin)) {
					SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /siparis skin [skin ID]");
				}
				else if(GetPlayerCash(playerid) >= 250) {
					SetPlayerSkin(playerid, skin);
					PlayerInfo[playerid][pSkin] = skin;
					GivePlayerCash(playerid, -250);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"Bir skin satn aldn!");
				}
				else SendClientMessage(playerid, COLOR_GREY,"   Bunu deyemezsin!");
			}
			else if(strcmp(Hitman,"Knife",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 80)
				{
					GivePlayerValidWeapon(playerid, 4, 3);
					GivePlayerCash(playerid, -80);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir knife satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"SDPistol",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 100)
				{
					GivePlayerValidWeapon(playerid, 23, 99999);
					GivePlayerCash(playerid, -100);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir silenced pistol satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Shotgun",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 150)
				{
					GivePlayerValidWeapon(playerid, 25, 99999);
					GivePlayerCash(playerid, -150);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir shotgun satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Deagle",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) > 500)
				{
					GivePlayerValidWeapon(playerid, 24, 99999);
					GivePlayerCash(playerid, -500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir Desert Eagle satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"MP5",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 250)
				{
					GivePlayerValidWeapon(playerid, 29, 99999);
					GivePlayerCash(playerid, -250);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir MP5 satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Rifle",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 300)
				{
					GivePlayerValidWeapon(playerid, 33, 99999);
					GivePlayerCash(playerid, -300);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir rifle satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"AK47",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok(2+) !");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 1000)
				{
					GivePlayerValidWeapon(playerid, 30, 99999);
					GivePlayerCash(playerid, -1000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir AK-47 satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"M4",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok(2+) !");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 1200)
				{
					GivePlayerValidWeapon(playerid, 31, 99999);
					GivePlayerCash(playerid, -1200);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir M4 satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Vest",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 600)
				{
					SetPlayerArmourEx(playerid, 100);
					GivePlayerCash(playerid, -600);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir kevlar vest satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Spas12",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok(3+) !");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 3500)
				{
					GivePlayerValidWeapon(playerid, 27, 99999);
					GivePlayerCash(playerid, -3500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir SPAS-12 satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"Sniper",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok (3+)!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 3500)
				{
					GivePlayerValidWeapon(playerid, 34, 99999);
					GivePlayerCash(playerid, -3500);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir sniper rifle satn aldn!");
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
			else if(strcmp(Hitman,"C4",true) == 0)
			{
				if(PlayerInfo[playerid][pRank] < 4)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu silah iin yeterli rtben yok(4+)!");
					return 1;
				}
				if(GetPlayerCash(playerid) >= 5000)
				{
					PlayerInfo[playerid][pC4Get] = 1;
					PlayerInfo[playerid][pBombs]++;
					GivePlayerCash(playerid, -5000);
					SendClientMessage(playerid, COLOR_LIGHTBLUE,"   Bir blok C4 satn aldn!");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY,"   Bu paket iin yeterli paran yok!");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Silah kulbesinde deilsin!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Hitman Ajans yesi deilsin!");
		return 1;
	}
	return 1;
}

CMD:rutbeler(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] != 4 && PlayerInfo[playerid][pLeader] != 4 && PlayerInfo[playerid][pAdmin] != 6 && PlayerInfo[playerid][pAdmin] < 3 || PlayerInfo[playerid][pAdmin] >= 3 && AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] != 6 && PlayerInfo[playerid][pFaction] != 4 && PlayerInfo[playerid][pLeader] != 4)
		return SendClientMessage(playerid, COLOR_GREY, "Hitman Ajans yesi deilsin!");

	SendClientMessage(playerid, COLOR_WHITE, "|__________________ Hitman Rank'lar __________________|");

	new string[128];
	foreach(Player, i)
	{
		if(PlayerInfo[i][pFaction] == 4 || PlayerInfo[i][pLeader] == 4)
		{
			if(GoChase[playerid] == 999)
			{
				format(string, sizeof(string), "* sim: %s | Rank %d | Baarl Kontraktlar: %d | Baarsz Kontraktlar: %d", GetPlayerNameEx(i),PlayerInfo[i][pRank], PlayerInfo[i][pCHits], PlayerInfo[i][pFHits]);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
			else
			{
				format(string, sizeof(string), "* sim: %s | Rank %d | Baarl Kontraktlar: %d | Baarsz Kontraktlar: %d | Takip: %s", GetPlayerNameEx(i),PlayerInfo[i][pRank], PlayerInfo[i][pCHits], PlayerInfo[i][pFHits], GetPlayerNameEx(GoChase[i]));
				SendClientMessage(playerid, COLOR_GREY, string);
			}
		}
	}
	return 1;
}

CMD:profil(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /profil [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			new ftext[24];
			if(PlayerInfo[giveplayerid][pFaction] == 1 || PlayerInfo[giveplayerid][pLeader] == 1)
			{ ftext = "LSPD"; }
			else if(PlayerInfo[giveplayerid][pFaction] == 2 || PlayerInfo[giveplayerid][pLeader] == 2)
			{ ftext = "FBI"; }
			else if(PlayerInfo[giveplayerid][pFaction] == 3 || PlayerInfo[giveplayerid][pLeader] == 3)
			{ ftext = "LSFMD"; }
			else if(PlayerInfo[giveplayerid][pFaction] == 4 || PlayerInfo[giveplayerid][pLeader] == 4)
			{ ftext = "Hitman Ajans"; }
			else if(PlayerInfo[giveplayerid][pFaction] == 6 || PlayerInfo[giveplayerid][pLeader] == 6)
			{ ftext = "LST"; }
			else
			{ ftext = "Yok"; }
			new f2text[64];
			if(PlayerInfo[giveplayerid][pGang] < 255)
			{
				format(f2text, sizeof(f2text), "%s", FamilyInfo[PlayerInfo[giveplayerid][pGang]][FamilyName]);
			}
			else { f2text = "Yok"; }
			SendClientMessage(playerid, COLOR_WHITE, "Profil Bilgilendirmesi:");
			format(string, sizeof(string), "sim: %s", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Ya: %d", PlayerInfo[giveplayerid][pAge]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Organizasyon: %s", ftext);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "Aile: %s", f2text);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			format(string, sizeof(string), "dl: $%d", PlayerInfo[giveplayerid][pHeadValue]);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
	}
	return 1;
}


CMD:hrozet(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4) {
		if(isnull(params)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hrozet [faction]");
			SendClientMessage(playerid, COLOR_GRAD3, "|0 Normal |1 LSPD |2 FBI |3 LSFMD |4 SAN News 5| Los Santos Taksi ");
		}
		else switch(strval(params)) {
			case 0: {
		        SendClientMessage(playerid, COLOR_WHITE, "Rozetini normale dndrdn.");
		        SetPlayerColor(playerid,TEAM_HIT_COLOR);
			}
			case 1: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini LSPD olarak ayarladn.");
			    SetPlayerColor(playerid,TEAM_BLUE_COLOR);
			}
			case 2: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini FBI olarak ayarladn.");
			    SetPlayerColor(playerid,TEAM_FBI_COLOR);
			}
			case 3: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini LSFMD olarak ayarladn.");
			    SetPlayerColor(playerid, TEAM_MED_COLOR);
			}
			case 4: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini SAN News olarak ayarladn.");
			    SetPlayerColor(playerid, TEAM_NEWS_COLOR);
			}
			case 5: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini Los Santos Taksi olarak ayarladn.");
			    SetPlayerColor(playerid, TEAM_TAXI_COLOR);
			}
			default: SendClientMessage(playerid, COLOR_GREY, "Yanl Faction.");
		}
	}
	return 1;
}

CMD:mrozet(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2) {
		if(isnull(params)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /frozet [faction]");
			SendClientMessage(playerid, COLOR_GRAD3, "|0 Normal |1 LSPD |2 FBI |3 LSFMD |4 SAN News 5| Los Santos Taksi ");
		}
		else switch(strval(params)) {
			case 0: {
		        SendClientMessage(playerid, COLOR_WHITE, "Rozetini normale dndrdn.");
		        SetPlayerColor(playerid,TEAM_HIT_COLOR);
			}
			case 1: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini LSPD olarak ayarladn.");
			    SetPlayerColor(playerid,TEAM_BLUE_COLOR);
			}
			case 2: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini FBI olarak ayarladn.");
			    SetPlayerColor(playerid,TEAM_FBI_COLOR);
			}
			case 3: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini LSFMD olarak ayarladn.");
			    SetPlayerColor(playerid, TEAM_MED_COLOR);
			}
			case 4: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini SAN News olarak ayarladn.");
			    SetPlayerColor(playerid, TEAM_NEWS_COLOR);
			}
			case 5: {
			    SendClientMessage(playerid, COLOR_WHITE, "Rozetini Los Santos Taksi olarak ayarladn.");
			    SetPlayerColor(playerid, TEAM_TAXI_COLOR);
			}
			default: SendClientMessage(playerid, COLOR_GREY, "Yanl Faction.");
		}
	}
	return 1;
}

CMD:bombakoy(playerid, params[]) {
	return cmd_bk(playerid, params);
}

CMD:bk(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		if(PlayerInfo[playerid][pC4] == 0)
		{
			if(PlayerInfo[playerid][pBombs] != 0)
			{
				if(IsPlayerInAnyVehicle(playerid))
				{
					SendClientMessage(playerid, COLOR_LIGHTRED,"Ara iindeyken bomba yerletiremezsin!");
					return 1;
				}
				GetPlayerPos(playerid,Positions[0][0], Positions[0][1], Positions[0][2]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_X", Positions[0][0]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_Y", Positions[0][1]);
				SetPVarFloat(playerid, "DYN_C4_FLOAT_Z", Positions[0][2]);
				PlayerInfo[playerid][pC4] = CreateDynamicObject(1654, Positions[0][0], Positions[0][1], Positions[0][2]-0.9, 0, 89.325012207031, 3.9700012207031);
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
				ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
				SendClientMessage(playerid, COLOR_GREEN, "Bir C4 yerletirdin, /bombayial komutuyla deaktif hale getirebilirsin.");
				//PlayerInfo[playerid][pC4] = 1;
				PlayerInfo[playerid][pBombs]--;
				PlayerInfo[playerid][pC4Used] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "C4'n yok!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Ayn anda 1 den fazla C4 yerletiremezsin ! ");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Hitman Deilsin");
	}
	return 1;
}

CMD:aracabombakoy(playerid, params[]) {
	return cmd_abk(playerid, params);
}

CMD:abk(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
	{
		if(PlayerInfo[playerid][pC4] == 0)
		{
			if(PlayerInfo[playerid][pBombs] != 0)
			{
				new carid = GetPlayerVehicleID(playerid);
				new closestcar = GetClosestCar(playerid, carid);
				if(IsPlayerInRangeOfVehicle(playerid, closestcar, 4.0))
				{
					if(VehicleBomb{closestcar} == 1)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Bu aracn motorunda zaten bir bomba var!");
						return 1;
					}
					VehicleBomb{closestcar} = 1;
					PlacedVehicleBomb[playerid] = closestcar;
					ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
					SendClientMessage(playerid, COLOR_GREEN, "Ara motoruna bir bomba yerletirdin, /bombayial komutuyla deaktif hale getirebilirsin.");
					PlayerInfo[playerid][pC4] = 1;
					PlayerInfo[playerid][pBombs]--;
					PlayerInfo[playerid][pC4Used] = 2;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Araca daha fazla yaknlamalsn!");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "C4'n yok!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Ayn anda 1'den fazla C4 koyamazsn. ! ");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Hitman deilsin ! ");
	}
	return 1;
}

CMD:bombayial(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] != 4 && PlayerInfo[playerid][pLeader] != 4)
	{
		SendClientMessage(playerid, COLOR_GREY, "Hitman deilsin!");
		return 1;
	}
	if(PlayerInfo[playerid][pC4] == 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bomba yerletirmedin!");
		return 1;
	}
	new carid = GetPlayerVehicleID(playerid);
	new closestcar = GetClosestCar(playerid, carid);
	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 4.0) && VehicleBomb{closestcar} == 1)
	{
		VehicleBomb{closestcar} = 0;
		PlacedVehicleBomb[playerid] = INVALID_VEHICLE_ID;
		PickUpC4(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "Bomba baaryla alnd.");
		PlayerInfo[playerid][pBombs]++;
		PlayerInfo[playerid][pC4Used] = 0;
		PlayerInfo[playerid][pC4Get] = 1;
		return 1;
	}
	if(IsPlayerInRangeOfPoint(playerid, 3.0, GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z")))
	{
		PickUpC4(playerid);
		SendClientMessage(playerid, COLOR_GREEN, "Bomba baaryla alnd.");
		PlayerInfo[playerid][pBombs]++;
		PlayerInfo[playerid][pC4Used] = 0;
		PlayerInfo[playerid][pC4Get] = 1;
		return 1;
	}
	return 1;
}

CMD:mekanigoster(playerid, params[])
{
    if(CheckPointCheck(playerid)) {
        SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
        return 1;
    }
    if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4) {
        SetPlayerCheckpoint(playerid,1938.545898, 165.629531, 37.281250, 4.0);
        GameTextForPlayer(playerid, "~w~GPS: ~r~HQ", 5000, 1);
        gPlayerCheckpointStatus[playerid] = CHECKPOINT_HITMAN;
    }
    return 1;
}

CMD:deletehit(playerid, params[])
{
	//if((PlayerInfo[playerid][pAdmin] >= 4 && AdminDuty[playerid] == 1) || (PlayerInfo[playerid][pFaction] == 4 && PlayerInfo[playerid][pRank] >= 5) || PlayerInfo[playerid][pLeader] == 4)
    if(PlayerInfo[playerid][pAdmin] >= 4 && AdminDuty[playerid] == 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /deletehit [Oyuncu ID/sim]");

		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}

		if(PlayerInfo[giveplayerid][pHeadValue] >= 1)
		{
			format(string, sizeof(string), "%s adl kii %s adl kii zerindeki kontrakt' sildi. (%d$)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), PlayerInfo[giveplayerid][pHeadValue]);
			Log("logs/kontraktlar.log", string);
			PlayerInfo[giveplayerid][pHeadValue] = 0;
			format(string, sizeof(string), "%s adl kiinin zerindeki kontrakt' sildin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
			GoChase[giveplayerid] = 999;

			foreach(Player, i)
			{
				if(HitToGet[i] == giveplayerid)
				{
					HitToGet[i] = 999;
					HitOffer[i] = 999;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Bu kii zerinde aktif bir kontrakt yok!");
		}
	}
	return 1;
}

CMD:kontrakt(playerid, params[])
{
	if(PlayerCuffed[playerid] != 0) return SendClientMessage(playerid, COLOR_GREY, "Kelepeliyken kontrakt yapamazsn.");
	if(PlayerInfo[playerid][pJailTime] > 0) return SendClientMessage(playerid, COLOR_GREY, "Hapisteyken kontrakt imzalayamazsn.");

	new string[128], giveplayerid, moneys, detail[32];
	if(sscanf(params, "uds[32]", giveplayerid, moneys, detail)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kontrakt [Oyuncu ID/sim] [fiyat] [detaylar]");

	if(moneys < 5000 || moneys > 50000)
	{
		SendClientMessage(playerid, COLOR_GREY, "Fiyat 5,000$ - 50,000$ arasnda olmaldr.");
		return 1;
	}
	else if((moneys < 10000 || moneys > 50000) && IsACop(giveplayerid))
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet Memurlar iin Fiyat 10,000$ - 50,000$ arasnda olmaldr.");
		return 1;
	}
	if(PlayerInfo[playerid][pLevel] < 2)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Kontrakt yapmak iin en az 2 level olman gerekir.");
		return 1;
	}
	if(PlayerInfo[giveplayerid][pConnectTime] < 12)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "12 saatten az oyunda olan birisine kontrakt yapamazsn.");
		return 1;
	}
	if(AdminDuty[giveplayerid] == 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Grev bandaki admine kontrakt imzalayamazsn.");
		return 1;
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu kiiye kontrakt imzalayamazsn.");
		}
		else
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(moneys >= 50001)
				{
					SendClientMessage(playerid, COLOR_GREY, "50,000$ dan fazla fiyat belirleyemezsin!");
					return 1;
				}

				if(PlayerInfo[giveplayerid][pHeadValue] >= 50000)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu kiinin zerinde yeterince kontrakt var.(Max. 50.000$)");
					return 1;
				}
				if(moneys + PlayerInfo[giveplayerid][pHeadValue] >= 50001)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu kiinin zerinde yeterince kontrakt var.(Max. 50.000$)");
					return 1;
				}

				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendin iin kontrakt imzalayamazsn."); return 1; }
				new playermoney = GetPlayerCash(playerid);
				if(moneys > 0 && playermoney >= moneys)
				{
					if(strlen(detail) > 32) return SendClientMessage(playerid, COLOR_GRAD1, "Kontrakt detaylar 32 karakterden fazla olamaz.");
					GivePlayerCash(playerid, (0 - moneys));
					PlayerInfo[giveplayerid][pHeadValue]+=moneys;
					strmid(PlayerInfo[giveplayerid][pContractBy], GetPlayerNameEx(playerid), 0, strlen(GetPlayerNameEx(playerid)), MAX_PLAYER_NAME);
					strmid(PlayerInfo[giveplayerid][pContractDetail], detail, 0, strlen(detail), 32);

					format(string, sizeof(string), "%s adl kii %s adl kii iin kontrakt imzalad. Fiyat: %d$, detaylar: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
					SendFamilyMessage(4, COLOR_YELLOW, string);

					format(string, sizeof(string), "* %s adl kii iin bir kontrakt imzaladn.Fiyat %d$, detaylar: %s.",GetPlayerNameEx(giveplayerid), moneys, detail);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

					format(string, sizeof(string), "%s adli kisi %s for $%d, details: %s",GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid),moneys,detail);
					Log("logs/contracts.log", string);

					format(string, sizeof(string), "%s adl kii %s adl kiiye bir kontrakt t/yap Beni engelleyen herhangi bir durum var m ?. Fiyat: %d$, detaylar: %s.",GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), moneys, detail);
					ABroadCast(COLOR_YELLOW,string,4);

					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD1, "Bunun iin yeterli paran yok.");
				}
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:gbi(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3,310.3679,-1537.5204,-45.1338) || GetPlayerVirtualWorld(playerid) == 444 || IsPlayerInRangeOfPoint(playerid,3.5,267.1261,109.7117,1004.6172))
		{
			ShowPlayerDialogEx(playerid, FDUTYMENU, DIALOG_STYLE_LIST, "FBI Menu","Is Basi\nEkipman\nSWAT Uniforma\nUniforma\nGizli Gorev\nSuc Temizle", "Se", "Iptal");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "FBI dolabna yakn deilsin.");
		}
	}
	return 1;
}

CMD:fbibirim(playerid, params[])
{
	if(IsACop(playerid))
	{
		new string[128], giveplayerid, division;
		if(sscanf(params, "ud", giveplayerid, division))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /fbibirim [Oyuncu ID/sim] [division]");
			SendClientMessage(playerid, COLOR_GRAD2, "Bririmler: 1 (Yok), 2 (B), 3 (ASVN), 4 (CID), 5 (IA)");
			return 1;
		}
		if(PlayerInfo[playerid][pFaction] == 2 && PlayerInfo[playerid][pRank] >= 4)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
				{
					if(division == 3)
					{
						if(PlayerInfo[giveplayerid][pFaction] == 2)
						{
							PlayerInfo[giveplayerid][pDivision] = 3;
							format(string, sizeof(string), "%s adl kii tarafndan ASVN birimine alndn.", GetPlayerNameEx(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s adl kiiyi ASVN birimine davet ettin.", GetPlayerNameEx(giveplayerid));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
					else if(division == 5)
					{
						if(PlayerInfo[giveplayerid][pFaction] == 2)
						{
							PlayerInfo[giveplayerid][pDivision] = 5;
							format(string, sizeof(string), "%s adl kii tarafndan IA birimine alndn.", GetPlayerNameEx(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s adl kiiyi IA birimine davet ettin.", GetPlayerNameEx(giveplayerid));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
					else if(division == 4)
					{
						if(PlayerInfo[giveplayerid][pFaction] == 2)
						{
							PlayerInfo[giveplayerid][pDivision] = 4;
							format(string, sizeof(string), "%s adl kii tarafndan CID birimine alndn.", GetPlayerNameEx(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s adl kiiyi CID birimine davet ettin.", GetPlayerNameEx(giveplayerid));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
					else if(division == 2)
					{
						if(PlayerInfo[giveplayerid][pFaction] == 2)
						{
							PlayerInfo[giveplayerid][pDivision] = 2;
							format(string, sizeof(string), "%s adl kii tarafndan B birimine alndn.", GetPlayerNameEx(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s adl kiiyi B birimine davet ettin.", GetPlayerNameEx(giveplayerid));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
					else if(division == 1)
					{
						if(PlayerInfo[giveplayerid][pFaction] == 2)
						{
							PlayerInfo[giveplayerid][pDivision] = 1;
							format(string, sizeof(string), "%s adl kii tarafndan biriminden kovuldun.", GetPlayerNameEx(playerid));
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "%s adl kiiyi biriminden kovdun.", GetPlayerNameEx(giveplayerid));
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						}
					}
				}

			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin yetkin yok - Sadece R4+ kiiler bu komutu kullanabilir");
		}
	}
	return 1;
}

CMD:bocek(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 2) {

        new
			iTargetID;

        if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /bocek [Oyuncu ID/sim]");
		}
        else if(AdminDuty[iTargetID] == 1) {
			SendClientMessage(playerid, COLOR_GREY, "Adminlerin zerine bcek koyamazsn.");
		}
  		else if(PlayerInfo[iTargetID][pBugged] == 1) {

			new
				szMessage[32 + MAX_PLAYER_NAME];

    		PlayerInfo[iTargetID][pBugged] = 0;
     		format(szMessage,sizeof(szMessage)," %s adl kii zerindeki bcek deaktif edildi.", GetPlayerNameEx(iTargetID));
       		SendClientMessage(playerid, COLOR_GRAD1, szMessage);
		}
		else if(ProxDetectorS(4.0, playerid, iTargetID)) {

			new
				szMessage[28 + MAX_PLAYER_NAME];

   			PlayerInfo[iTargetID][pBugged] = 1;
	    	format(szMessage,sizeof(szMessage),"%s adl kiinin stne bir bcek koydun.",GetPlayerNameEx(iTargetID));
		    SendClientMessage(playerid, COLOR_GRAD1, szMessage);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Bu kiiye daha fazla yaklamalsn.");
	}
	return 1;
}

CMD:bocekkanalikapat(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 2) {
		if(gBug[playerid] == 0)
		{
			gBug[playerid] = 1;
			SendClientMessage(playerid, COLOR_GRAD2, "Bcek kanal aktif edildi.Bceklerden gelen her sesi duyacaksn.");
		}
		else
		{
			gBug[playerid] = 0;
			SendClientMessage(playerid, COLOR_GRAD2, "Bcek kanal kapatld.");
		}
	}
	return 1;
}

CMD:aracibagla(playerid, params[]) {
	switch(PlayerInfo[playerid][pFaction]) {
		case 1, 2: {
			if(!IsAtImpoundingPoint(playerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Arac balayabilecein yerde deilsin!");
				return 1;
			}
			if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
			{

				new
					iVehType,
					iVehIndex,
					iTargetOwner,
					iVehTowed = GetVehicleTrailer(GetPlayerVehicleID(playerid));

				if(!GetVehicleModel(iVehTowed)) {
					return SendClientMessage(playerid, COLOR_GREY, "ekiyor olduun ara ekran buguna dtnden dolay balanamyor.");
				}
				foreach(Player, i) {
					iVehIndex = GetPlayerVehicle(i, iVehTowed);
					if(iVehIndex != -1) {
						iVehType = 1;
						iTargetOwner = i;
						break;
					}
				}
				if(!iVehType) {
					for(new i; i < MAX_FAMILY; ++i) {
						iVehIndex = GetGangVehicle(i, iVehTowed);
						if(iVehIndex != -1) {
							iVehType = 2;
							iTargetOwner = i;
							break;
						}
					}
				}
				switch(iVehType) {
					case 0, 2: {
						SendClientMessage(playerid, COLOR_GRAD1, "Ara herhangi birine ait deil.");
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
						SetVehicleToRespawn(iVehTowed);
					}
					case 1: {

						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvImpounded] = 1;
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvSpawned] = 0;
						PlayerVehicleInfo[iTargetOwner][iVehIndex][pvId] = INVALID_PLAYER_VEHICLE_ID;
						DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
						SetVehiclePos(iVehTowed, 0, 0, 0); // Attempted desync fix
						DestroyVehicle(iVehTowed);
						VehicleRadioStation[iVehTowed] = 0;

						VehicleSpawned[iTargetOwner]--;
						--PlayerCars;

						new
							szMessage[96];

						format(szMessage, sizeof(szMessage),"*  %s adl kiinin %s adl aracn baladn.",GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), " %s adl aracn baland. Dillimore eyaletinde .", VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400]);
						SendClientMessage(iTargetOwner, COLOR_LIGHTBLUE, szMessage);

						format(szMessage, sizeof(szMessage), "MERKEZ: Memur %s %s adl kiinin %s adl aracn balad. (denmemi ceza : %i$).", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetOwner), VehicleName[PlayerVehicleInfo[iTargetOwner][iVehIndex][pvModelId] - 400], PlayerVehicleInfo[iTargetOwner][iVehIndex][pvTicket]);
						SendRadioMessage(PlayerInfo[playerid][pFaction], RADIO, szMessage);
					}
				}
				arr_Towing[playerid] = INVALID_VEHICLE_ID;
			}
		}
		default: SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");
	}
	return 1;
}

CMD:merkezidagitim(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pFaction] == 5) {
		if(PlayerInfo[playerid][pRank] >= 5) {
			if(isnull(params))
				return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /merkezidagitim [mesaj]");
			else {
				new
					szMessage[128];
				format(szMessage, sizeof(szMessage), "Merkezi Datm: %s", params);
				SendRadioMessage(PlayerInfo[playerid][pFaction], RADIO, szMessage);
			}
		} else SendClientMessage( playerid, COLOR_GRAD2, "Rank 3 ve zeri bu komutu kullanabilir." );
	} else SendClientMessage(playerid, COLOR_GRAD2, "Devlet memuru deilsin.");
	return true;
}

CMD:r(playerid, params[]) {
	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/r)adio [yaz]");

	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pFaction] == 9) {
	    new
	        szMessage[128],
	        szRank[64],
	        szEmployer[64],
	        szDivision[64];

        GetPlayerFactionInfo(playerid, szRank, szDivision, szEmployer);

        if(!strlen(szDivision) || !strcmp(szDivision, "Yok", true)) {
			format(szMessage, sizeof(szMessage), "** %s %s: %s **", szRank, GetPlayerNameEx(playerid), params);
		} else {
		    format(szMessage, sizeof(szMessage), "** %s (%s) %s: %s **", szRank, szDivision, GetPlayerNameEx(playerid), params);
		}

		switch(PlayerInfo[playerid][pFaction]) {
			case 1: SendRadioMessage(1, RADIO, szMessage);
			case 2: SendRadioMessage(2, RADIO, szMessage);
			case 3: SendRadioMessage(3, TEAM_CYAN_COLOR, szMessage);
			case 5: SendRadioMessage(5, COLOR_GOV, szMessage);
			case 6: SendRadioMessage(6, TEAM_TAXI_COLOR, szMessage);
			case 9: SendRadioMessage(9, TEAM_NEWS_COLOR, szMessage);
		}

		format(szMessage, sizeof(szMessage), "(radyo) %s", params);
		SetPlayerChatBubble(playerid, szMessage, COLOR_WHITE, 15.0,5000);

		printf("%s ('** %s %s %s: %s **')", szEmployer, szRank, szDivision, GetPlayerNameEx(playerid), params);
	}

	return 1;
}

CMD:d(playerid, params[]) {
	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/d)epartman [yaz]");

	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pFaction] == 5) {
	    new
	        szMessage[128],
	        szRank[64],
	        szEmployer[64],
	        szDivision[64];

        GetPlayerFactionInfo(playerid, szRank, szDivision, szEmployer);

        if(!strlen(szDivision) || !strcmp(szDivision, "Yok", true)) {
			format(szMessage, sizeof(szMessage), "** %s %s %s: %s **", szEmployer, szRank, GetPlayerNameEx(playerid), params);
		} else {
		    format(szMessage, sizeof(szMessage), "** %s %s (%s) %s: %s **", szEmployer, szRank, szDivision, GetPlayerNameEx(playerid), params);
		}

		SendRadioMessage(1, DEPTRADIO, szMessage);
		SendRadioMessage(2, DEPTRADIO, szMessage);
	 	SendRadioMessage(3, DEPTRADIO, szMessage);
		SendRadioMessage(5, DEPTRADIO, szMessage);

		format(szMessage, sizeof(szMessage), "(radyo) %s", params);
		SetPlayerChatBubble(playerid, szMessage, COLOR_WHITE, 15.0, 5000);

		foreach(Player, i)
		{
			if(PlayerInfo[i][pReceiver] > 0)
			{
				if(GetPVarType(i, "pReceiverOn"))
				{
					if(GetPVarInt(i, "pReceiverMLeft") > 0)
					{
						format(szMessage, sizeof(szMessage), "** (alc) %s: %s **", GetPlayerNameEx(playerid), params);
						SendClientMessage(i, DEPTRADIO, szMessage);
						SetPVarInt(i, "pReceiverMLeft", GetPVarInt(i, "pReceiverMLeft") - 1);
					}
					else
					{
						PlayerInfo[i][pReceiver]--;
						SetPVarInt(i, "pReceiverMLeft", 40);
						SendClientMessage(i, DEPTRADIO, "Departman radyosunun bataryas bitti!");
					}
				}
			}
			return 1;
		}
	}
	return 1;
}

CMD:m(playerid, params[]) {
	if(!isnull(params)) {
		if((GetPVarInt(playerid, "EventToken") == 1 || PlayerInfo[playerid][pJailTime] > 0) && AdminDuty[playerid] == 0)
			return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
		switch(PlayerInfo[playerid][pFaction]) {
			case 1, 2, 3, 5, 9: {

				new
					szMessage[128];

				format(szMessage, sizeof(szMessage), "(megafon) %s: %s", GetPlayerNameEx(playerid), params);
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			default: SendClientMessage(playerid, COLOR_GRAD2, "   Megafonu kullanabilmek iin yetkin yok.");
		}
	} else SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/m)egafon [yaz]");
	return 1;
}

CMD:su(playerid, params[]) {
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		if(PlayerInfo[playerid][pJailed] > 0) {
			return SendClientMessage(playerid, COLOR_WHITE, "Hapiste bunu kullanamazsn.");
		}

		new
			iTargetID,
			szCrime[64];

		if(sscanf(params, "us[64]", iTargetID, szCrime)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/su)cekle [Oyuncu ID/sim] [su tanm]");
		}
		else if(!IsPlayerConnected(iTargetID)) {
			SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
		}
		else if(IsACop(iTargetID)) {
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu devlet memuru zerinde kullanamazsn.");
		}
		else if(PlayerInfo[iTargetID][pFaction] == 5) {
			SendClientMessage(playerid, COLOR_GREY, "Bu kii diplomatik dokunulmazla sahip.");
		}
		else if(PlayerInfo[iTargetID][pWantedLevel] >= 6) {
			SendClientMessage(playerid, COLOR_GRAD2, "Kii zaten 6 yldza sahip.");
		}
		else {

			new
				szMessage[128];

			++PlayerInfo[iTargetID][pCrimes];
			SetPlayerWantedLevel(iTargetID, ++PlayerInfo[iTargetID][pWantedLevel]);
			if(PlayerInfo[iTargetID][pWantedLevel] > 5)
 			{
				SetPlayerColor(iTargetID, WANTED_COLOR);
			}

			format(szMessage, sizeof(szMessage), "Bir su ilediin rapor edildi (%s), Memur: %s.", szCrime, GetPlayerNameEx(playerid));
			SendClientMessage(iTargetID, COLOR_LIGHTRED, szMessage);

			format(szMessage, sizeof(szMessage), "uanki yldz seviyesi: %d", PlayerInfo[iTargetID][pWantedLevel]);
			SendClientMessage(iTargetID, COLOR_YELLOW, szMessage);

			if(AdminDuty[iTargetID] == 0) {
				new
					szCleanDescription[64],
					szQuery[270];

				mysql_real_escape_string(szCrime, szCleanDescription, g_MySQLConnections[0]);

				format(szQuery, sizeof(szQuery), "INSERT INTO crimes (crimeIssuer, crimeIssuedTo, crimeDescription, crimeIssuerName, crimeIssuedToName) VALUES(%d, %d, '%s', '%s', '%s')", PlayerInfo[playerid][pID], PlayerInfo[iTargetID][pID], szCleanDescription, GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID));
				mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
			}
			foreach(Player, i) if(IsACop(i) || PlayerInfo[i][pFaction] == 5 && PlayerInfo[i][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
				format(szMessage, sizeof(szMessage), "Merkez: Tm Birimlerin Dikkatine (Memur: %s)",GetPlayerNameEx(playerid));
				SendClientMessage(i, TEAM_BLUE_COLOR, szMessage);
				format(szMessage, sizeof(szMessage), "Merkez: Su: %s, Zanl: %s", szCrime, GetPlayerNameEx(iTargetID));
				SendClientMessage(i, TEAM_BLUE_COLOR, szMessage);
			}
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Devlet memuru deilsin.");
	return 1;
}

CMD:san(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) {
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5, 256.0074,1778.3248,701.0859)) {
			ShowPlayerDialogEx(playerid, SAN_DUTYMENU, DIALOG_STYLE_LIST, "SAN News","lk Yardim antas\nelik Yelek\nKamera\nniformalar", "Se", "Iptal");
		} else SendClientMessage(playerid, COLOR_WHITE, "SAN News dolabna yakn deilsin.");
	}
	return 1;
}
CMD:lst(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pLeader] == 6) {
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,19,1492.7949, 1308.4761, 1093.2922)) {
			ShowPlayerDialogEx(playerid, SAN_DUTYMENU, DIALOG_STYLE_LIST, "LST Dolap","Ilk Yardim Cantasi\nCelik Yelek\nShutgun($150)", "Se", "Iptal");
		} else SendClientMessage(playerid, COLOR_WHITE, "LST dolabna yakn deilsin.");
	}
	return 1;
}
CMD:lspd(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(IsPlayerInRangeOfPoint(playerid,3.5,267.7457, 109.4108, 1003.8408))
		{
			if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2) ShowPlayerDialogEx(playerid, FDUTYMENU, DIALOG_STYLE_LIST, "FBI Menu","Is basi\nEkipman\nSWAT Uniformasi\nUniforma\nGizli Gorev\nSuc Temizle", "Se", "Iptal");
			else ShowPlayerDialogEx(playerid, DUTYMENU, DIALOG_STYLE_LIST, "LSPD DOLAP","Is basi\nEkipman\nTaktiksel\nUniforma\nGizli Gorev\nSuc Temizle", "Se", "Iptal");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "LSPD dolabna yakn deilsin.");
		}
	}
	return 1;
}

CMD:mvb(playerid, params[])
{
    if(IsMDCPermitted(playerid))
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
            ShowPlayerDialogEx(playerid, MDC_MAIN, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld", "*Memur Bul\n*Sivil Bilgisi\n*Devlet Birimleri", "Tamam", "Iptal");
            ConnectedToPC[playerid] = 1337;
        }
        else SendClientMessage(playerid, COLOR_GREY, "Arata deilsin.");
    }
    return 1;
}

CMD:aracaat(playerid, params[])
{
	if(IsACop(playerid) || (PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		new
			string[128],
			giveplayerid,
			seat;

		if(sscanf(params, "ud", giveplayerid, seat))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aracaat [Oyuncu ID/sim] [Koltuk ID 1-3]");

		if(!IsPlayerConnected(giveplayerid))
			return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(IsPlayerInAnyVehicle(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "Aratayken bunu yapamazsn.");

		if(seat < 1 || seat > 3)
			return SendClientMessage(playerid, COLOR_GRAD1, "Koltuk numaras 1-3 arasnda olmaldr.");

		if(IsACop(giveplayerid))
			return SendClientMessage(playerid, COLOR_GREY, "ABD Gvenlik Glerindeki birini araca atamazsn.");

		if(IsPlayerInAnyVehicle(giveplayerid))
			return SendClientMessage(playerid, COLOR_GREY, "Bu kii zaten bir arabada.");

		if(giveplayerid == playerid)
			return SendClientMessage(playerid, COLOR_GREY, "Kendini arabaya atamazsn!");

		if(ProxDetectorS(8.0, playerid, giveplayerid)) {
			if(PlayerCuffed[giveplayerid] == 2) {
				new
					carid = gLastCar[playerid];
				if(IsSeatAvailable(carid, seat)) {
					new Float:pos[6];
					GetPlayerPos(playerid, pos[0], pos[1], pos[2]);
					GetPlayerPos(giveplayerid, pos[3], pos[4], pos[5]);
					GetVehiclePos(carid, pos[0], pos[1], pos[2]);
					if(floatcmp(floatabs(floatsub(pos[0], pos[3])), 10.0) != -1 &&
					floatcmp(floatabs(floatsub(pos[1], pos[4])), 10.0) != -1 &&
					floatcmp(floatabs(floatsub(pos[2], pos[5])), 10.0) != -1) return false;
					format(string, sizeof(string), "* %s adl kii tarafndan arabaya atldn.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s adl kiiyi arabaya attn.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s, %s adl kiiyi arabaya atar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~r~Arabaya Atildi", 2500, 3);
					ClearAnimations(giveplayerid, 1);
					TogglePlayerControllable(giveplayerid, false);
					PutPlayerInVehicle(giveplayerid, carid, seat);
					if(PlayerDraggedBy[giveplayerid] != INVALID_PLAYER_ID) {
						IsCopDragging[PlayerDraggedBy[giveplayerid]] = INVALID_PLAYER_ID;
						PlayerDragged[giveplayerid] = 0;
						PlayerDraggedBy[giveplayerid] = INVALID_PLAYER_ID;
					}
				} else return SendClientMessage(playerid, COLOR_GREY, "Bu koltuk kullanlabilir deil!");
			} else return SendClientMessage(playerid, COLOR_GREY, "Bu kii kelepeli deil.");
		} else return SendClientMessage(playerid, COLOR_GREY, "Aracna veya Kiiye yakn deilsin!");
	} else SendClientMessage(playerid, COLOR_GRAD2, "Polis / FBI deilsin.");
	return 1;
}

CMD:kefalet(playerid, params[])
{
	if(PlayerInfo[playerid][pJailed] == 1 || PlayerInfo[playerid][pJailed] == 2)
	{
		if(JailPrice[playerid] > 0)
		{
			if(GetPlayerCash(playerid) > JailPrice[playerid])
			{
				new string[128];
				format(string, sizeof(string), "%d$ kefalet parasn dedin, Artk zgrsn.", JailPrice[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, -JailPrice[playerid]);
				JailPrice[playerid] = 0;
				WantLawyer[playerid] = 0; CallLawyer[playerid] = 0;
				PlayerInfo[playerid][pJailTime] = 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "Kefalet parasn karlayamyorsun.");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Kefalet mmkn deil.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Hapiste deilsin.");
	}
	return 1;
}

CMD:teslimet(playerid, params[]) {
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		if(!IsPlayerInRangeOfPoint(playerid,6.0,1992.484130, -2312.814208, 13.546875))
			return SendClientMessage(playerid, COLOR_GREY, "Esenboa Havalimanndaki teslim noktasnda deilsin.");

		if(PlayerInfo[playerid][pRank] < 2)
			return SendClientMessage(playerid, COLOR_GREY, "Rank 2 ve st olmalsn.");

        new
			suspect = GetClosestPlayer(playerid);

		if(IsPlayerConnected(suspect)) {
			if(ProxDetectorS(15.0, playerid,suspect)) {
				if(PlayerInfo[suspect][pConnectTime] <= 8)
					return SendClientMessage(playerid, COLOR_GREY, "Sulu en az 8 saat online olmaldr.Normal hapse atnz.");

				if(PlayerInfo[suspect][pWantedLevel] < 6)
					return SendClientMessage(playerid, COLOR_GREY, "Kii demorgan'a gnderilmek iin 6 yldza sahip olmaldr.Daha dk sulular normal hapse atlr.");

				if(PlayerCuffed[suspect] == 0)
					return SendClientMessage(playerid, COLOR_GREY, "Kii arata deil veya kelepeli deil");

				new
					fine,
					allmoney;

				if(PlayerInfo[suspect][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(suspect), HouseInfo[PlayerInfo[suspect][pHouse]][hOwner], true) == 0) {
					allmoney = HouseInfo[PlayerInfo[suspect][pHouse]][hSafeMoney]+GetPlayerCash(suspect)+PlayerInfo[suspect][pBank];
				} else if(PlayerInfo[suspect][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(suspect), HouseInfo[PlayerInfo[suspect][pHouse2]][hOwner], true) == 0) {
					allmoney += HouseInfo[PlayerInfo[suspect][pHouse2]][hSafeMoney];
				} else {
					allmoney = GetPlayerCash(suspect)+PlayerInfo[suspect][pBank];
				}

				if(allmoney < 1) {
					fine = 0;
				} else {
					fine = 3*allmoney/100;
				}

				if(fine > 3000) {
					fine = 3000;
				}

				GivePlayerCash(suspect, -fine);
				SetPlayerArmedWeapon(suspect, 0);
            	ResetPlayerWeaponsEx(suspect);

				new string[128];
				format(string, sizeof(string), "* %s adl suluyu hapishaneye teslim ettin!", GetPlayerNameEx(suspect));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

				format(string, sizeof(string), "45 dakika hapse atldn ve %d$ ceza dedin.   Kefalet: Hayr", fine);
				SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
				if(PlayerDraggedBy[suspect] != INVALID_PLAYER_ID) {
					IsCopDragging[PlayerDraggedBy[suspect]] = INVALID_PLAYER_ID;
					PlayerDragged[suspect] = 0;
					PlayerDraggedBy[suspect] = INVALID_PLAYER_ID;
				}
				PhoneOnline[suspect] = 1;
				DeletePVar(suspect, "IsFrozen");
				PlayerInfo[suspect][pArrested] += 1;
				SetPlayerFree(suspect,playerid, "hapse atld");
				PlayerInfo[suspect][pWantedLevel] = 0;
				SetPlayerToTeamColor(suspect);
				SetPlayerWantedLevel(suspect, 0);
				TogglePlayerControllable(suspect, 1);
				ClearAnimations(suspect, 1);
				SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
				PlayerCuffed[suspect] = 0;
				DeletePVar(suspect, "PlayerCuffed");
				PlayerCuffedTime[suspect] = 0;
				format(PlayerInfo[suspect][pPrisonReason], 128, "Level 6 Wanted [6 stars]");
				format(PlayerInfo[suspect][pPrisonedBy], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(playerid));
				PlayCrimeReportForPlayer(playerid, suspect, 6);

				PlayerInfo[suspect][pJailed] = 4;
				PlayerInfo[suspect][pJailTime] = 2700;


				if(PlayerVehicleInfo[suspect][0][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][0][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][1][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][1][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][2][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][2][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][3][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][3][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][4][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][4][pvTicket] = 0;
				}

				GameTextForPlayer(suspect, "~w~Hapishaneye ~n~~r~ Hosgeldin", 5000, 3);
		    	LoadObjectsForPlayer(suspect);
				SetPlayerInterior(suspect, 69);
				PlayerInfo[suspect][pVW] = 696969;
				PlayerInfo[suspect][pInt] = 69;
				SetPlayerVirtualWorld(suspect, 696969);
				new rand = random(sizeof(AdminPrisonFloat));
				SetPlayerPos(suspect, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);
				SetPlayerSkin(suspect, 50);
				SetPlayerColor(suspect, TEAM_ORANGE_COLOR);

				if(IsPlayerAttachedObjectSlotUsed(suspect, 0))
					RemovePlayerAttachedObject(suspect, 0);
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Pois / FBI deilsin!");
	}
	return 1;
}

CMD:yereyatir(playerid, params[])
{
	if(!(IsACop(playerid)|| PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2))
	{
	    return SendClientMessage(playerid, -1, "Memur deilsin.");
	}
	new
		iTarget;

	if(sscanf(params, "u", iTarget))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /yereyatir [Oyuncu ID/sim]");

	if(!IsPlayerConnected(iTarget) || iTarget==playerid)
	    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu/oyunda deil.");

	if(!ProxDetectorS(5.0, playerid, iTarget))
	    return SendClientMessage(playerid, -1, "Oyuncu yannda deil.");

	new
	    bilgi[144]
	;
	format(bilgi, sizeof(bilgi), "Memur %s sizi yere yatrd.", GetPlayerNameEx(playerid));
	SendClientMessage(iTarget, -1, bilgi);
	format(bilgi, sizeof(bilgi), "Oyuncu %s'i yere yatrdnz.", GetPlayerNameEx(iTarget));
	SendClientMessage(playerid, -1, bilgi);
	PlayerCuffed[iTarget] = 1;
	format(bilgi, sizeof(bilgi), "isimli memur %s adl suluyu zorla yere yatrr.", GetPlayerNameEx(iTarget));
	cmd_me(playerid, bilgi);
	TogglePlayerControllable(iTarget, 0);
	ApplyAnimation(iTarget,"PED","KO_shot_stom",4.1,0,1,1,1,1,1);
	PlayerCuffed[iTarget] = 1;
	SetPVarInt(iTarget, "PlayerCuffed", 1);
	PlayerCuffedTime[iTarget] = 16;
	SetPVarInt(iTarget, "IsFrozen", 1);
	SetTimerEx("fallsonracrack", 1000, false, "ii", iTarget, 0);
	return 1;
}

CMD:tasi(playerid, params[]) return cmd_surukle(playerid, params);
CMD:sucluyutasi(playerid, params[]) return cmd_surukle(playerid, params);
CMD:kolunagir(playerid, params[]) return cmd_surukle(playerid, params);
CMD:surukle(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		new id, string[ 128 ];
		if( sscanf( params, "u", id ) )
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /surukle [Oyuncu ID/sim]");

		if(!IsPlayerConnected(id))
			return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(GetDistanceBetweenPlayers(id, playerid) > 4)
			return SendClientMessage(playerid, COLOR_GREY, "Bu kiiye yeterince yaklamadn!");

		if(PlayerCuffed[id] == 0)
			return SendClientMessage(playerid, COLOR_GREY, "Bu kii kelepeli deil.");

		if(PlayerCuffed[id] == 1)
			return SendClientMessage(playerid, COLOR_GREY, "ok tabancasyla vurulmu birisini srkleyemezsin.");

		if(id == playerid)
			return SendClientMessage(playerid, COLOR_GREY, "Kendini srkleyemezsin!");

		if(GetPlayerState(id) != PLAYER_STATE_ONFOOT)
			return SendClientMessage(playerid, COLOR_GREY, "Bu kii bir ara iinde, nce onu dar karmalsn.");

		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT)
			return SendClientMessage(playerid, COLOR_GREY, "Ara iindeyken bu komutu kullanamazsn.");

		if(GetPVarInt(playerid, "PBM") > 0)
			return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");

		if(GetPVarInt(playerid, "EventToken") != 0)
			return SendClientMessage(playerid, COLOR_GREY, "Tazerini etkinlikteyken kullanamazsn.");

		if(PlayerCuffedTime[playerid] > 0)
			return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

		if(GetPVarInt(playerid, "Injured") == 1)
			return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

		if(PlayerInfo[playerid][pJailed] > 0)
			return SendClientMessage(playerid, COLOR_WHITE, "Hapiste bunu kullanamazsn.");

		if(PlayerCuffed[playerid] >= 1)
			return SendClientMessage(playerid, COLOR_WHITE, "Kelepeli yada tazerliyken bunu kullanamazsn.");

		if(GetPVarInt(id, "Injured") == 1)
			return SendClientMessage(playerid, COLOR_GREY, "Yaral kiileri kelepeleyemezsin.");

		if(PlayerDragged[id] == 1) {
			format(string, sizeof(string), "* %s adl kii %s adl kiiyi srklemeyi brakr.", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			GameTextForPlayer(id, "~r~Released!", 2500, 3);
			IsCopDragging[PlayerDraggedBy[id]] = INVALID_PLAYER_ID;
			PlayerDragged[id] = 0;
			PlayerDraggedBy[id] = INVALID_PLAYER_ID;
			DeletePVar(playerid, "Dragging");
		} else {
			if(IsCopDragging[playerid] != INVALID_PLAYER_ID)
				return SendClientMessage(playerid, COLOR_GREY, "Ayn anda en fazla 1 kii srkleyebilirsin.");

			format(string, sizeof(string), "* %s adl kii %s adl kiiyi kol ve omuzundan tutar.", GetPlayerNameEx(playerid), GetPlayerNameEx(id));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			GameTextForPlayer(id, "~r~Restrained!", 2500, 3);
			ApplyAnimation(id, "CARRY", "crry_prtial", 4.0, 0, 0, 0, 0, 0, 1);
			SetPlayerSpecialAction(id, SPECIAL_ACTION_CUFFED);
			PlayerDragged[id] = 1;
			PlayerDraggedBy[id] = playerid;
			IsCopDragging[playerid] = id;
			SetPVarInt(playerid, "Dragging", id);
		}
	}
	else SendClientMessage(playerid, COLOR_GREY, " Polis / FBI deilsin!");
	return true;
}

CMD:nerdeyim(playerid, params[]) {
	if(!IsBETAServer())
	    return 1;

	new
	    Float: fPos[3],
	    szMessage[128];

	format(szMessage, sizeof(szMessage), "Kaydedilmi Koordinatlarnz: %f %f %f", PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
	SendClientMessage(playerid, COLOR_WHITE, szMessage);

	GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
	format(szMessage, sizeof(szMessage), "Bulunduunuz Koordinatlarnz: %f %f %f", fPos[0], fPos[1], fPos[2]);
	SendClientMessage(playerid, COLOR_WHITE, szMessage);
	return 1;
}

CMD:hapseat(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		if(!IsAtArrestPoint(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "Tutuklama blgesinde deilsin.");

		new
			suspect = GetClosestPlayer(playerid);
		if(IsPlayerConnected(suspect)) {
			if(ProxDetectorS(5.0, playerid, suspect)) {
				new
					allmoney,
					cap,
					string[128],
					moneys,
					time,
					bail,
					bailprice;

				if(PlayerInfo[suspect][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(suspect), HouseInfo[PlayerInfo[suspect][pHouse]][hOwner], true) == 0) {
					allmoney = HouseInfo[PlayerInfo[suspect][pHouse]][hSafeMoney]+GetPlayerCash(suspect)+PlayerInfo[suspect][pBank];
				} else if(PlayerInfo[suspect][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(suspect), HouseInfo[PlayerInfo[suspect][pHouse2]][hOwner], true) == 0) {
					allmoney += HouseInfo[PlayerInfo[suspect][pHouse2]][hSafeMoney];
				} else {
					allmoney = GetPlayerCash(suspect)+PlayerInfo[suspect][pBank];
				}
				cap = 5*allmoney/100;
				if(cap > 1000 || cap < 1) {
					cap = 1000;
				}

				if(PlayerInfo[suspect][pWantedLevel] < 1) {
					return SendClientMessage(playerid, COLOR_GREY, "Kii en az 1 yldz'a sahip olmaldr.");
				} else {
					if(sscanf(params, "dddd", moneys, time, bail, bailprice)) {
						format(string, sizeof(string), "KULLANIM: /hapseat [Ceza (Max: $%d)] [Zaman (dakika)] [Kefalet (0=hayr 1=evet)] [Kefalet Paras]", cap);
						SendClientMessage(playerid, COLOR_WHITE, string);
						return 1;
					}
				}

				if(time < 1 || time > 25)
				return SendClientMessage(playerid, COLOR_GREY, "Hapis sresi 1-25 dakika olmaldr - Daha fazla dakika iin Demorgan'a gtrmelisiniz.");

				if(bail < 0 || bail > 1)
					return SendClientMessage(playerid, COLOR_GREY, "Kefalet seeneini 0 veya 1 olarak ayarlamalsnz.");

				if(bailprice < 0 || bailprice > 1000)
					return SendClientMessage(playerid, COLOR_GREY, "Kefalet 0$ ile 1000$ arasnda olabilir.");

				if(moneys < 1 || moneys > cap) {
					format(string, sizeof(string), "Para ceza 1$ %d$ arasnda olmaldr.", cap);
					SendClientMessage(playerid, COLOR_GREY, string);
					return 1;
				}

				format(string, sizeof(string), "* %s adl kiiyi tutukladn!", GetPlayerNameEx(suspect));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

				GivePlayerCash(suspect, -moneys);
				ResetPlayerWeaponsEx(suspect);
				if(PlayerVehicleInfo[suspect][0][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][0][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][1][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][1][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][2][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][2][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][3][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][3][pvTicket] = 0;
				}
				if(PlayerVehicleInfo[suspect][4][pvTicket] != 0) {
					PlayerVehicleInfo[suspect][4][pvTicket] = 0;
				}
				if(IsPlayerInRangeOfPoint(playerid, 4.0, 1528.082397, -1677.978637, 5.890625) || IsPlayerInRangeOfPoint(playerid, 4.0, 1564.830932, -1652.506469, 28.395606) || PlayerInfo[playerid][pVW] == 20002) {
					SetPlayerInterior(suspect, 6);
					PlayerInfo[suspect][pVW] = 20002;
					PlayerInfo[suspect][pInt] = 6;
					SetPlayerVirtualWorld(suspect, 20002);
					SetPlayerPos(suspect,263.343597, 77.532028, 1001.039062);
					PlayerInfo[suspect][pJailTime] = time * 60;
					PlayerInfo[suspect][pJailed] = 1;
					PhoneOnline[suspect] = 1;
					DeletePVar(suspect, "IsFrozen");
					PlayerInfo[suspect][pArrested] += 1;
					SetPlayerFree(suspect,playerid, "hapse atld");
					PlayerInfo[suspect][pWantedLevel] = 0;
					SetPlayerToTeamColor(suspect);
					SetPlayerWantedLevel(suspect, 0);
					WantLawyer[suspect] = 1;
					TogglePlayerControllable(suspect, 1);
					ClearAnimations(suspect, 1);
					SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
					if(PlayerDraggedBy[suspect] != INVALID_PLAYER_ID) {
						IsCopDragging[PlayerDraggedBy[suspect]] = INVALID_PLAYER_ID;
						PlayerDragged[suspect] = 0;
						PlayerDraggedBy[suspect] = INVALID_PLAYER_ID;
					}
					PlayerCuffed[suspect] = 0;
					DeletePVar(suspect, "PlayerCuffed");
					PlayerCuffedTime[suspect] = 0;
					PlayCrimeReportForPlayer(playerid, suspect, 6);
					if(IsPlayerAttachedObjectSlotUsed(suspect, 0)) RemovePlayerAttachedObject(suspect, 0);
				}
				else if(IsPlayerInRangeOfPoint(playerid, 4.0, 304.796508, -1526.349731, 76.539062) || IsPlayerInRangeOfPoint(playerid, 4.0, 298.313842, -1536.036865, 24.593750) || PlayerInfo[playerid][pVW] == 1324123) {
					LoadObjectsForPlayer(suspect);
					if(PlayerDraggedBy[suspect] != INVALID_PLAYER_ID) {
						IsCopDragging[PlayerDraggedBy[suspect]] = INVALID_PLAYER_ID;
						PlayerDragged[suspect] = 0;
						PlayerDraggedBy[suspect] = INVALID_PLAYER_ID;
					}
					SetPlayerInterior(suspect, 1);
					PlayerInfo[suspect][pVW] = 1324123;
					PlayerInfo[suspect][pInt] = 1;
					SetPlayerVirtualWorld(suspect, 1324123);
					SetPlayerPos(suspect,315.1677,-1451.5564,-33.5292);

					format(PlayerInfo[suspect][pPrisonReason], 128, "FBI Arrest [%d stars]", PlayerInfo[suspect][pWantedLevel]);
					format(PlayerInfo[suspect][pPrisonedBy], MAX_PLAYER_NAME, "%s", GetPlayerNameEx(playerid));

					PlayerInfo[suspect][pJailTime] = time * 60;
					PlayerInfo[suspect][pJailed] = 2;
					PhoneOnline[suspect] = 1;
					DeletePVar(suspect, "IsFrozen");
					PlayerInfo[suspect][pArrested] += 1;
					SetPlayerFree(suspect,playerid, "hapse atld");
					PlayerInfo[suspect][pWantedLevel] = 0;
					SetPlayerToTeamColor(suspect);
					SetPlayerWantedLevel(suspect, 0);
					WantLawyer[suspect] = 1;
					TogglePlayerControllable(suspect, 1);
					ClearAnimations(suspect, 1);
					SetPlayerSpecialAction(suspect, SPECIAL_ACTION_NONE);
					PlayerCuffed[suspect] = 0;
					DeletePVar(suspect, "PlayerCuffed");
					PlayerCuffedTime[suspect] = 0;
					PlayCrimeReportForPlayer(playerid, suspect, 6);
					if(IsPlayerAttachedObjectSlotUsed(suspect, 0)) RemovePlayerAttachedObject(suspect, 0);
				}
				if(bail == 1) {
					JailPrice[suspect] = bailprice;
					format(string, sizeof(string), " %d saniye hapistesin ve %d$ dedin.   Kefalet: %d$", PlayerInfo[suspect][pJailTime], moneys, JailPrice[suspect]);
					SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
				} else {
					JailPrice[suspect] = 0;
					format(string, sizeof(string), " %d saniye hapistesin ve %d$ dedin.   Kefalet: Hayr", PlayerInfo[suspect][pJailTime], moneys);
					SendClientMessage(suspect, COLOR_LIGHTBLUE, string);
				}
			} else SendClientMessage(playerid, COLOR_GREY, "   Tutuklamak iin yeterince yakn deilsin.");
		} else SendClientMessage(playerid, COLOR_GREY, "   Tutuklamak iin yeterince yakn deilsin.");
	} else SendClientMessage(playerid, COLOR_GREY, " Polis / FBI deilsin!");
	return 1;
}

CMD:arananlar(playerid, params[])
{
	if(IsACop(playerid) || IsInLSFMD(playerid) || PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pJob2] == 2 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2)
	{
		new string[128], x;

		SendClientMessage(playerid, COLOR_NEWS, "Arananlar Listesi:");
		foreach(Player, i)
		{
			if(PlayerInfo[i][pWantedLevel] >= 1)
			{
				format(string, sizeof(string), "%s%s: %d", string,GetPlayerNameEx(i),PlayerInfo[i][pWantedLevel]);
				x++;
				if(x > 3) {
					SendClientMessage(playerid, COLOR_YELLOW, string);
					x = 0;
					format(string, sizeof(string), " ");
				} else {
					format(string, sizeof(string), "%s, ", string);
				}
			}
		}
		if(x <= 3 && x > 0)
		{
			string[strlen(string)-2] = '.';
			SendClientMessage(playerid, COLOR_YELLOW, string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Polis / Avukat / FBI Deilsin!");
	}
	return 1;
}

CMD:kelepce(playerid, params[])
{
	if(IsACop(playerid) || (PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		new
			string[128],
			giveplayerid;

		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kelepce [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid)) {
			if(ProxDetectorS(8.0, playerid, giveplayerid)) {
				if(giveplayerid == playerid)
					return SendClientMessage(playerid, COLOR_GREY, "Kendi kendini kelepeleyemezsin!");

				if(GetPVarInt(giveplayerid, "Injured") == 1)
					return SendClientMessage(playerid, COLOR_GREY, "Yaralanm kiileri kelepeleyemezsin.");

				if(GetPVarInt(playerid, "Injured") == 1)
					return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

				if(PlayerCuffed[giveplayerid] == 1 || GetPlayerSpecialAction(giveplayerid) == SPECIAL_ACTION_HANDSUP) {
					format(string, sizeof(string), "* %s adl kii tarafndan kelepelendin.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s adl kiinin ellerini arkasna zorla gtrdn ve kelepeledin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s, %s adl kiinin ellerini arkasna zorla gtrr ve kelepeler.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~r~KELEPCELENDI", 2500, 3);
					TogglePlayerControllable(giveplayerid, 0);
					ClearAnimations(giveplayerid);
					PlayerCuffed[giveplayerid] = 2;
					SetPVarInt(giveplayerid, "PlayerCuffed", 2);
					SetPVarInt(giveplayerid, "IsFrozen", 1);
					PlayerCuffedTime[giveplayerid] = 300;
     				SetPlayerAttachedObject(giveplayerid, 0, 19418, 6, -0.011000, 0.028000, -0.022000, -15.600012, -33.699977, -81.700035, 0.891999, 1.000000, 1.168000);
         			SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_CUFFED);
         			ApplyAnimation(giveplayerid,"ped","cower",1,1,0,0,0,0,1);
				} else return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu etkisiz hale getirilmemi!");
			} else return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		}else return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	return 1;
}

CMD:kelepcecikar(playerid, params[])
{
	if(IsACop(playerid) || (PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kelepcecikar [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(PlayerInfo[giveplayerid][pJailed] >= 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Hapsedilmi bir kiinin kelepesini zemezsin.");
					return 1;
				}
				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendi kelepeni zemezsin."); return 1; }
				if(PlayerCuffed[giveplayerid]>1)
				{
				    PreloadAnims(giveplayerid);
					DeletePVar(giveplayerid, "IsFrozen");
					format(string, sizeof(string), "* %s adl kii tarafndan kelepen karld.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s adl kiinin kelepelerini kardn.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s adl kii %s adl kiinin kelepelerini kard.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					GameTextForPlayer(giveplayerid, "~g~KELEPCE CIKARILDI", 2500, 3);
					TogglePlayerControllable(giveplayerid, 1);
					SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_DANCE1);
					PlayerCuffed[giveplayerid] = 0;
                    PlayerCuffedTime[giveplayerid] = 0;
					DeletePVar(giveplayerid, "PlayerCuffed");
					if(PlayerDraggedBy[giveplayerid] != INVALID_PLAYER_ID) {
						IsCopDragging[PlayerDraggedBy[giveplayerid]] = INVALID_PLAYER_ID;
						PlayerDragged[giveplayerid] = 0;
						PlayerDraggedBy[giveplayerid] = INVALID_PLAYER_ID;
					}
					ClearAnimations(giveplayerid, 1);
					SetPlayerSpecialAction(giveplayerid, SPECIAL_ACTION_NONE);
				 	if(IsPlayerAttachedObjectSlotUsed(giveplayerid, 0))
						RemovePlayerAttachedObject(giveplayerid, 0);
					//ResyncPlayer(giveplayerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu kii kelepeli deil.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

/*CMD:resync(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 2)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkin yok.");

	new
		iTarget;

	if(sscanf(params, "u", iTarget))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /resync [Oyuncu ID/sim]");

	if(iTarget == INVALID_PLAYER_ID)
	    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

	new
	    szMessage[128];

	format(szMessage, sizeof(szMessage), "{AA3333}AdminUyars{FFFF00}: %s has resynced %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTarget));
	ABroadCast(COLOR_YELLOW, szMessage, 2);

    ResyncPlayer(iTarget);
    return 1;
}*/

CMD:tazer(playerid, params[])
{
	if(IsACop(playerid)|| PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2) {
		new
			string[128];
		if(PlayerInfo[playerid][pConnectTime] < 2)
			return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

		if(IsPlayerInAnyVehicle(playerid))
			return SendClientMessage(playerid, COLOR_GREY, "Aratayken bunu yapamazsn.");

		if(GetPVarInt(playerid, "PBM") > 0)
			return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");

		if(GetPVarInt(playerid, "EventToken") != 0)
			return SendClientMessage(playerid, COLOR_GREY, "Tazerini etkinlikteyken kullanamazsn.");

		if(PlayerCuffedTime[playerid] > 0)
		 return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

		if(GetPVarInt(playerid, "Injured") == 1)
			return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

		if(PlayerInfo[playerid][pJailed] > 0)
			return SendClientMessage(playerid, COLOR_WHITE, "Hapiste bunu kullanamazsn.");

		if(PlayerCuffed[playerid] >= 1)
			return SendClientMessage(playerid, COLOR_WHITE, "Kelepeli yada tazerliyken bunu kullanamazsn.");


		if(pTazer[playerid] == 0) {
			pTazerReplace[playerid] = PlayerInfo[playerid][pGuns][2];
			if(PlayerInfo[playerid][pGuns][2] != 0) RemovePlayerWeapon(playerid, PlayerInfo[playerid][pGuns][2]);
			format(string, sizeof(string), "* %s Tazer'n klfndan karr.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 23, 60000);
			pTazer[playerid] = 1;
		} else {
			RemovePlayerWeapon(playerid, 23);
			GivePlayerValidWeapon(playerid, pTazerReplace[playerid], 60000);
			format(string, sizeof(string), "* %s Tazer'n klfna geri koyar.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			pTazer[playerid] = 0;
		}
	} else return SendClientMessage(playerid, COLOR_GREY, " Polis / FBI deilsin!");
	return 1;
}

CMD:ustunuara(playerid, params[]) {
	new string[128], giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ustunuara [Oyuncu ID/sim]");

 	if(giveplayerid == INVALID_PLAYER_ID)
	 	return SendClientMessage(playerid, COLOR_GREY, "Bu kii oyunda deil.");

	if(ProxDetectorS(8.0, playerid, giveplayerid)) {
		if(giveplayerid == playerid)
			return SendClientMessage(playerid, COLOR_GREY, "Kendi kendini aryamazsn!");

		if(giveplayerid == INVALID_PLAYER_ID)
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(IsACop(playerid) || PlayerInfo[playerid][pJob] == 8 || PlayerInfo[playerid][pJob2] == 8 || (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pDivision] == 2) || (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= 5)) {
			SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "*** %s' eyalar...  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);

			if(PlayerInfo[giveplayerid][pWSeeds] == 1)
				SendClientMessage(playerid, COLOR_GREY, "Marijuana Tohumlar");

			if(PlayerInfo[giveplayerid][pPhoneBook] > 0)
				SendClientMessage(playerid, COLOR_GREY, "Telefon Defteri.");

			if(PlayerInfo[giveplayerid][pCDPlayer] > 0)
				SendClientMessage(playerid, COLOR_GREY, "CD player.");

			if(PlayerInfo[giveplayerid][pRadio] > 0) {
				format(string, sizeof(string), "Tanabilir Radyo (frekans #%d kHz)", PlayerInfo[giveplayerid][pRadioFreq]);
				SendClientMessage(playerid, COLOR_GREY, string);
			}

			if(PlayerInfo[giveplayerid][pCarLic] > 0)
				SendClientMessage(playerid, COLOR_GREY, "Src lisans.");

			if(PlayerInfo[giveplayerid][pBoatLic] > 0)
				SendClientMessage(playerid, COLOR_GREY, "Gemici lisans.");

			if(PlayerInfo[giveplayerid][pFlyLic] > 0)
				SendClientMessage(playerid, COLOR_GREY, "Pilot lisans.");

			if(PlayerInfo[giveplayerid][pCrack] > 0) {
				format(string, sizeof(string), "%d gram crack.", PlayerInfo[giveplayerid][pCrack]);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
			if(PlayerInfo[giveplayerid][pPot] > 0) {
				format(string, sizeof(string), "%d gram pot.", PlayerInfo[giveplayerid][pPot]);
				SendClientMessage(playerid, COLOR_GREY, string);
			}
			if(PlayerInfo[giveplayerid][pMats] > 0) {
				format(string, sizeof(string), "%d materyal.", PlayerInfo[giveplayerid][pMats]);
				SendClientMessage(playerid, COLOR_GREY, string);
			}


			new weaponname[50];
			format(string, sizeof(string), "*** %s' Silahlar...  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);

			for(new i = 0; i < 12; i++) {
				if(PlayerInfo[giveplayerid][pGuns][i] > 0) {
					GetWeaponName(PlayerInfo[giveplayerid][pGuns][i], weaponname, sizeof(weaponname));
					format(string, sizeof(string), "Silah: %s.", weaponname);
					SendClientMessage(playerid, COLOR_GRAD1, string);
				}
			}

			SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "* %s adl kii %s adl kiinin stn arad.", GetPlayerNameEx(playerid),GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		} else {
		    SetPVarInt(giveplayerid, "FriskREQ", playerid);

		    format(string, sizeof(string), "* %s(ID: %d) adl kiinin stn aramaya alyorsun.Kii '/kabulet ustunuara' yazmaldr.", GetPlayerNameEx(giveplayerid), giveplayerid);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

		    format(string, sizeof(string), "* %s adl kii stn aramak istiyor, rnek: '/kabulet ustunuara'.", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
		}
	} else return SendClientMessage(playerid, COLOR_GREY, "ok uzaktasn!");
	return 1;
}

CMD:ustundenal(playerid, params[])
{
	if(IsACop(playerid) || (PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2)
	{
		if(PlayerInfo[playerid][pRank] < 1 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin Rank 2 ve st olmalsn!");
			return 1;
		}

		new string[128], choice[32], giveplayerid;
		if(sscanf(params, "s[32]u", choice, giveplayerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ustundenal [sim] [Oyuncu ID]");
			SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Silahlar, Pot, Crack, Tohumlar, Radyo.");
			return 1;
		}
		if(strcmp(choice,"radyo",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* %s adl kiinin radyosuna el koydun.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s radyona el koydu.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s adl kiinin radyosuna el koyar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pRadio] = 0;
					PlayerInfo[giveplayerid][pRadioFreq] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}

			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				return 1;
			}
		}
		else if(strcmp(choice,"silahlar",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* %s adl kiinin silahlarna el koydun.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s silahlarna el koydu.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s adl kiinin silahlarna el koyar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					ResetPlayerWeaponsEx(giveplayerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}

			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				return 1;
			}
		}
		else if(strcmp(choice,"tohumlar",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* %s adl kiinin tohumlarna el koydun.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s senin tohumlarna el koydu.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s adl kiinin tohumlarna el koyar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pWSeeds] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				return 1;
			}
		}
		else if(strcmp(choice,"pot",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "* %s adl kiinin potlarna el koydun.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s senin potlarna el koydu.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s adl kiinin potlarna el koyar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pPot] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				return 1;
			}
		}
		else if(strcmp(choice,"crack",true) == 0)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					format(string, sizeof(string), "*  %s adl kiinin cracklerine el koydun.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s senin cracklerine el koydu.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s adl kiinin cracklerine el koyar.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					PlayerInfo[giveplayerid][pCrack] = 0;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}

			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Yanl item seildi.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   ABD gvenlik glerinde deilsin(LSPD/FBI/GOV).");
		return 1;
	}
	return 1;
}

CMD:cezakes(playerid, params[])
{
	if(IsACop(playerid) || (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pDivision] == 2) || (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= 5))
	{

		new string[128], giveplayerid, moneys, reason[64];
		if(sscanf(params, "uds[64]", giveplayerid, moneys, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /cezakes [Oyuncu ID/sim] [fiyat] [sebep]");

		if(giveplayerid == playerid)
		{
			SendClientMessage(playerid, COLOR_GREY, "Kendi kendine ceza kesemezsin.");
			return 1;
		}

		if(moneys < 1 || moneys > 1500) { SendClientMessage(playerid, COLOR_GREY, "Ceza 1-1500$ arasnda olmaldr."); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(giveplayerid == playerid) return 1;

					format(string, sizeof(string), "* %s adl kiiye %d$ ceza kestin, sebep: %s", GetPlayerNameEx(giveplayerid), moneys, reason);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s sana %d$ ceza kesiyor, sebep: %s", GetPlayerNameEx(playerid), moneys, reason);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s adl kiiye ceza keser, Makbuzu uzatr.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "Kabul etmek iin /kabulet ceza yaz.");
					TicketOffer[giveplayerid] = playerid;
					TicketMoney[giveplayerid] = moneys;
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}
	}
	return 1;
}

CMD:dhaber(playerid, params[])
{
	if(IsInLSFMD(playerid) || IsACop(playerid) || PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pLeader] == 5)
	{
		if(isnull(params))
		{
			SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: (/dhaber) [Yaz]");
			return 1;
		}

		new string[128];

		if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1)
		{
			if(PlayerInfo[playerid][pRank] == 6)
			{
				format(string, sizeof(string), "** LSPD: ef %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________  Devlet Haberleri  ___________|");
				SendClientMessageToAllEx(COLOR_DBLUE, string);
			}
			else if(PlayerInfo[playerid][pRank] == 5)
			{
				format(string, sizeof(string), "** LSPD: Asistan ef %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________  Devlet Haberleri  ___________|");
				SendClientMessageToAllEx(COLOR_DBLUE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin Rank 5 ve st olmalsnz !");
			}
		}
		else if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
		{
			if(PlayerInfo[playerid][pRank] == 6)
			{
				format(string, sizeof(string), "** FBI: Direktr %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________  Devlet Haberleri  ___________|");
				SendClientMessageToAllEx(TEAM_FBI_COLOR, string);
			}
			else if(PlayerInfo[playerid][pRank] == 5)
			{
				format(string, sizeof(string), "** FBI: Asistan Direktr %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________  Devlet Haberleri  ___________|");
				SendClientMessageToAllEx(TEAM_FBI_COLOR, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin Rank 5 ve st olmalsnz !");
			}
		}
		else if(PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pLeader] == 3)
		{
			if(PlayerInfo[playerid][pRank] == 6)
			{
				format(string, sizeof(string), "** LSFMD: ef %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________  Devlet Haberleri  ___________|");
				SendClientMessageToAllEx(TEAM_CYAN_COLOR, string);
			}
			else if(PlayerInfo[playerid][pRank] == 5)
			{
				format(string, sizeof(string), "** LSFMD: Ba Hekim %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________  Devlet Haberleri  ___________|");
				SendClientMessageToAllEx(TEAM_CYAN_COLOR, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin Rank 5 ve st olmalsnz !");
			}
		}
		else if(PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pLeader] == 5) {
			if(PlayerInfo[playerid][pRank] == 6)
			{
				format(string, sizeof(string), "** Devlet: Bakan %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________ Devlet Haberleri ___________|");
				SendClientMessageToAllEx(COLOR_GOV, string);
			}
			else if(PlayerInfo[playerid][pRank] == 5)
			{
				format(string, sizeof(string), "** Devlet: Bakan Yardmcs %s: %s **", GetPlayerNameEx(playerid), params);
				SendClientMessageToAllEx(COLOR_WHITE, "|___________ Devlet Haberleri ___________|");
				SendClientMessageToAllEx(COLOR_GOV, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin Rank 5 ve st olmalsn!");
			}
		}
	}
	return 1;
}

CMD:ccplayer(playerid, params[])
{
	for (new i = 0; i < 100; i ++) {
	    SendClientMessage(playerid, -1, "");
	}
	return 1;
}

CMD:eviturla(playerid, params[])
{
    if(PlayerCuffed[playerid] >= 1 || GetPVarInt(playerid, "Injured") == 1) {
        SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
        return 1;
    }

    new string[128];
    for(new i = 0; i < sizeof(HouseInfo); i++) {
        if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
		{
		    if(HouseInfo[i][hOwned] != 0)
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "Sahibi olan evleri gezemezsin.");
		        return 1;
		    }
			if(GetPVarInt(playerid, "TourHouseConfirm") == 0)
			{
				SetPVarInt(playerid, "TourHouseConfirm", 1);
				SendClientMessage(playerid, COLOR_WHITE, "Ev'in odalarn gezmek iin 30$ demen gerekiyor.");
				SendClientMessage(playerid, COLOR_WHITE, "30 $ demek iin eminsen komutu tekrar yaz.");
				return 1;
			}
			DeletePVar(playerid, "TourHouseConfirm");

   			GivePlayerCash(playerid, -30);
    		GameTextForPlayer(playerid, "~r~-30$", 3000, 1);

            format(string, sizeof(string), "* %s evin iine girdi.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
            if(HouseInfo[i][hCustomInterior] == 1) {
                LoadObjectsForPlayer(playerid);
            }
            SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
            SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorR]);
            SetCameraBehindPlayer(playerid);
            PlayerInfo[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
            PlayerInfo[playerid][pVW] = i+60000;
            SetPlayerVirtualWorld(playerid, i+60000);
        }
    }
    return 1;
}

CMD:kapiyikir(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 4) {
		if(GetPVarInt(playerid, "PBM") > 0)
			return SendClientMessage(playerid, COLOR_WHITE, "Paintball iersinde bunu yapamazsn!");

		if(PlayerCuffed[playerid] >= 1)
			return SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");

		new string[128], found;
		for(new i = 0; i < sizeof(HouseInfo); i++)
		{
			if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
			{
				found++;
				format(string, sizeof(string), "* %s kapy krar ve ieri girer.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
				if(HouseInfo[i][hCustomInterior] == 1)
				{
					LoadObjectsForPlayer(playerid);
				}
				SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
    			SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorR]);
                SetCameraBehindPlayer(playerid);
				GameTextForPlayer(playerid, "~r~KAPI KIRILDI", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
				PlayerInfo[playerid][pVW] = i+60000;
				SetPlayerVirtualWorld(playerid, i+60000);
			}
		}
		if(found == 0)
			return SendClientMessage(playerid, COLOR_GREY, "   Bir evin yaknnda deilsin!");
	}
	else SendClientMessage(playerid, COLOR_GREY, "   Polis deilsin!");
	return 1;
}

CMD:davetet(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] >= 1)
	{
		new string[128], ftext[50], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /davetet [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pLeader] == 0 && PlayerInfo[giveplayerid][pFaction] == 0 && PlayerInfo[giveplayerid][pGang] == 255)
			{
				if(PlayerInfo[playerid][pLeader] == 1)
					ftext = "LSPD";
				else if(PlayerInfo[playerid][pLeader] == 2)
					ftext = "FBI";
				else if(PlayerInfo[playerid][pLeader] == 3)
					ftext = "LSFMD";
				else if(PlayerInfo[playerid][pLeader] == 4)
					ftext = "Hitman Ajans";
                else if(PlayerInfo[playerid][pLeader] == 5)
					ftext = "Devlet";
                else if(PlayerInfo[playerid][pLeader] ==6)
					ftext = "Lst";
				else if(PlayerInfo[playerid][pLeader] == 9)
					ftext = "SAN News";
				else
					return SendClientMessage(playerid, COLOR_GREY, "Bu Faction'a bir oyuncu davet edemezsin");

				InviteOffer[giveplayerid] = playerid;
				InviteFamily[giveplayerid] = 255;
				InviteFaction[giveplayerid] = PlayerInfo[playerid][pLeader];
				format(string, sizeof(string), " %s adl oluuma %s tarafndan davet edildin - kabul etmek iin /kabulet olusum.", ftext, GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "%s adl kiiyi %s adl oluuma davet ettin.", GetPlayerNameEx(giveplayerid),ftext);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten baka bir faction veya ailede.");
				return 1;
			}

		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin yetkiniz yok (Sadece Liderler)");
	}
	return 1;
}

CMD:olusumdanat(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] >= 1)
	{
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /olusumdanat [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if((PlayerInfo[giveplayerid][pFaction] == PlayerInfo[playerid][pLeader]) && (PlayerInfo[giveplayerid][pLeader] == 0 || PlayerInfo[giveplayerid][pRank] < PlayerInfo[playerid][pRank]))
			{
				format(string, sizeof(string), "*  %s adl Lider tarafndan oluumdan atldn.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "* You're now a civilian again.");
				format(string, sizeof(string), "%s adl kii %s adl kiiyi %s adl oluumdan kovdu. Rank %i.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), GetFactionName(PlayerInfo[giveplayerid][pFaction]), PlayerInfo[giveplayerid][pRank]);
				Log("logs/faction.log", string);
				PlayerInfo[giveplayerid][pFaction] = 0;
				PlayerInfo[giveplayerid][pRank] = 0;
				PlayerInfo[giveplayerid][pDuty] = 0;
				PlayerInfo[giveplayerid][pLeader] = 0;
				PlayerInfo[giveplayerid][pDivision] = 0;
				if(!IsValidSkin(GetPlayerSkin(giveplayerid)))
				{
					new rand = random(sizeof(CIV));
					SetPlayerSkin(giveplayerid,CIV[rand]);
					PlayerInfo[giveplayerid][pSkin] = CIV[rand];
				}
				player_remove_vip_toys(giveplayerid);
				SetPlayerToTeamColor(giveplayerid);
				pTazer[giveplayerid] = 0;
				format(string, sizeof(string), " %s adl kiiyi oluumdan kovdun.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				if(TalkingLive[giveplayerid] != INVALID_PLAYER_ID || LiveOffer[giveplayerid] != INVALID_PLAYER_ID ) {
					TalkingLive[TalkingLive[giveplayerid]] = INVALID_PLAYER_ID;
					TalkingLive[LiveOffer[giveplayerid]] = INVALID_PLAYER_ID;
					LiveOffer[LiveOffer[giveplayerid]] = INVALID_PLAYER_ID;
					LiveOffer[TalkingLive[giveplayerid]] = INVALID_PLAYER_ID;
				}
				TalkingLive[giveplayerid] = INVALID_PLAYER_ID;
				LiveOffer[giveplayerid] = INVALID_PLAYER_ID;
				Backup[playerid] = 0;
			}
			else SendClientMessage(playerid, COLOR_WHITE, "Bu kiiyi faction'dan sen atamazsn.");
		}
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin yetkiniz yok (Sadece Liderler)");
	}
	return 1;
}


CMD:offlineolusumdanat(playerid, params[]) {
	if(PlayerInfo[playerid][pLeader] >= 1) {
		if(isnull(params))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /offlineolusumdanat [sim]");

		if(IsPlayerConnected(ReturnUser(params)))
		    return SendClientMessage(playerid, COLOR_GREY, "Bu kii zaten oyunda, Ltfen /olusumdanat komutunu kullannz.");

		new
		    szPlayerName[MAX_PLAYER_NAME],
		    szQuery[128];

		mysql_real_escape_string(params, szPlayerName, g_MySQLConnections[0]);

		SetPVarString(playerid, "uninvite_target", szPlayerName);

		format(szQuery, sizeof(szQuery), "SELECT Faction, AdminLevel FROM players WHERE Username = '%s'", szPlayerName);
		mysql_query(szQuery, THREAD_OFFLINE_UNINVITE, playerid, g_MySQLConnections[0]);
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin yetkiniz yok (Sadece Liderler)");
	return 1;
}

CMD:rutbever(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] >= 1)
	{
		new string[128], giveplayerid, rank;
		if(sscanf(params, "ud", giveplayerid, rank)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rutbever [Oyuncu ID/sim] [Rank (1-6)]");

		if(rank > 12 || rank < 0) { SendClientMessage(playerid, COLOR_GREY, "   0 - 12 arasnda olmaldr!"); return 1; }

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[playerid][pLeader] != PlayerInfo[giveplayerid][pFaction])
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Bu kii senin oluumunda deil!");
				return 1;
			}

			if(rank > PlayerInfo[giveplayerid][pRank])
			{
				format(string, sizeof(string), "    %s adl kii tarafndan rtben ykseltildi.", GetPlayerNameEx(playerid));
			}
			if(rank < PlayerInfo[giveplayerid][pRank])
			{
				format(string, sizeof(string), "   %s adl kii tarafndan rtben drld.", GetPlayerNameEx(playerid));
			}
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

			format(string, sizeof(string), "%s, %s adl kiiye %s adl oluumda rank %d verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), GetFactionName(PlayerInfo[giveplayerid][pFaction]),rank);
			Log("logs/faction.log", string);
			PlayerInfo[giveplayerid][pRank] = rank;
			format(string, sizeof(string), "   %s adl kiiye rank %d verdin.", GetPlayerNameEx(giveplayerid),rank);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanmak iin yetkin yok (Sadece Liderler)");
	}
	return 1;
}

CMD:civiler(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 2)
	{
		if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pRank] >= 3)
		{
  			SendClientMessage(playerid, COLOR_WHITE, "uanda konulmu iviler:");
			for(new i, string[58 + MAX_PLAYER_NAME]; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] != 0) // Checking for next available ID.
				{
					format(string, sizeof(string), "HQ: ivi ID: %d | Konulduu Yer: %s | Koyan Kii: %s", i, SpikeStrips[i][sDeployedAt], SpikeStrips[i][sDeployedBy]);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
 			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Rank 3 ve st olmalsnz");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:civikoy(playerid, params[])
{
    if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pRank] >= 3)
		{
			if(GetPlayerInterior(playerid) != 0)
			{
		    	SendClientMessage(playerid, COLOR_GREY, "nteriorlara ivi koyamazsn.");
		    	return 1;
			}
			for(new i; i < sizeof(SpikeStrips); i++)
			{
				if(SpikeStrips[i][sX] == 0)
				{
					new
						Float: f_TempAngle,
						string[128];

					GetPlayerPos(playerid, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]);
					GetPlayerFacingAngle(playerid, f_TempAngle);
					SpikeStrips[i][sObjectID] = CreateDynamicObject(2899, SpikeStrips[i][sX], SpikeStrips[i][sY], SpikeStrips[i][sZ]-0.8, 0.0, 0.0, f_TempAngle);
					GetPlayer3DZone(playerid, SpikeStrips[i][sDeployedAt], MAX_ZONE_NAME);
					SpikeStrips[i][sDeployedBy] = GetPlayerNameEx(playerid);
					format(string,sizeof(string),"ivi ID: %d baaryla konuldu.", i);
					SendClientMessage(playerid, COLOR_WHITE, string);
					format(string, sizeof(string), "HQ: Bir ivi platformu %s tarafndan %s blgesine koyuldu.", GetPlayerNameEx(playerid), SpikeStrips[i][sDeployedAt]);
					foreach(Player, x)
					{
						if(IsACop(x))
						{
							SendClientMessage(x, TEAM_BLUE_COLOR, string);
							if(PlayerInfo[x][pRank] >= 3)
							{
								SendClientMessage(x, COLOR_YELLOW, "ivi platformu yoketmek iin /civiyoket.");
							}
						}
					}
					return 1;
				}
    		}
			SendClientMessage(playerid, COLOR_WHITE, "Daha fazla ivi koyamazsnz, limit 5.");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Rank 3 ve st olmalsnz");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:civiyoket(playerid, params[])
{
	if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /civiyoket [ivi id]");

    if(IsACop(playerid))
	{
		if(PlayerInfo[playerid][pRank] >= 3)
		{
			new id = strval(params);
			if(!(0 <= id <= sizeof(SpikeStrips)) || SpikeStrips[id][sX] == 0) {
				return SendClientMessage(playerid, COLOR_WHITE, "Yanl ivi ID.");
			}
			else
			{
				new string[43 + MAX_PLAYER_NAME + MAX_ZONE_NAME];
				DestroyDynamicObject(SpikeStrips[id][sObjectID]);
				SpikeStrips[id][sX] = 0; SpikeStrips[id][sY] = 0; SpikeStrips[id][sZ] = 0;
				SpikeStrips[id][sObjectID] = INVALID_OBJECT_ID;
				format(string,sizeof(string),"ivi ID: %d baaryla kaldrld.", id);
				SendClientMessage(playerid, COLOR_WHITE, string);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir ivi %s tarafndan %s eyaletinde kaldrld.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD2, " Rank 3 ve st olmalsn!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:araciara(playerid, params[])
{
    new string[128];
    if(!IsACop(playerid))
	{
        SendClientMessage(playerid, COLOR_GREY, "Polis / FBI deilsin.");
        return 1;
    }
    new carid = GetPlayerVehicleID(playerid);
    new closestcar = GetClosestCar(playerid,carid);
    if(!IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0))
	{
        SendClientMessage(playerid,COLOR_GREY,"Herhangi bir aracn yaknnda deilsin");
        return 1;
    }
    foreach(Player, i)
	{
        new v = GetPlayerVehicle(i, closestcar);
        if(v != -1)
		{
            string[0] = 0;
            for(new x = 0; x < 3; x++)
			{
                if(PlayerVehicleInfo[i][v][pvWeapons][x] != 0)
				{
                    new
                        szWep[20];

                    GetWeaponName(PlayerVehicleInfo[i][v][pvWeapons][x], szWep, sizeof(szWep));
                    if(isnull(string)) format(string, sizeof(string), "* Bagajda bulduklarn: %s", szWep);
                    else format(string, sizeof(string), "%s, %s", string, szWep);
                }
            }
            if(!isnull(string)) SendClientMessage(playerid, COLOR_WHITE, string);
            else SendClientMessage(playerid, COLOR_WHITE, "* Bagajda hibirey yok.");
        }
    }
    return 1;
}

CMD:kukekur(playerid, params[])
{
    if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ara iersinde bu komutu kullanamazsnz");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");
			return 1;
		}
		if(GetPlayerInterior(playerid) != 0)
		{
		    SendClientMessage(playerid, COLOR_GREY, "nterior iersine kuke kuramazsn.");
		    return 1;
		}

		new string[128], Float:Position[4];
		for(new i; i<MAX_KUKE; i++)
		{
			if(Kuke[i] == 0)
			{
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Kuke[i] = CreateDynamicObject(1238, Position[0], Position[1], Position[2]-0.7, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1]+4, Position[2]);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir kuke %s tarafndan %s blgesine konuldu.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
						if(PlayerInfo[x][pRank] >= 3)
						{
							SendClientMessage(x, COLOR_YELLOW, "Kukeleri silmek iin /kukekaldir   -   /kukelerikaldir.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Tm kukeler kullanmda.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:kukekaldir(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ara iersinde bu komutu kullanamazsnz");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");
			return 1;
		}
		new string[128], Float:Position[3];
		for(new i; i<MAX_KUKE; i++)
		{
			GetDynamicObjectPos(Kuke[i], Position[0], Position[1], Position[2]);

			if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2]))
			{
				DestroyDynamicObject(Kuke[i]);
				Kuke[i] = 0;
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir kuke %s tarafndan %s eyaletinde kaldrld.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Herhangi bir kukenin yaknnda deilsin.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:kukelerikaldir(playerid, params[])
{
	if(IsACop(playerid) || AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pAdmin] >= 6) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(IsPlayerInAnyVehicle(playerid) && AdminDuty[playerid] == 0)
			return SendClientMessage(playerid, COLOR_GREY, "Bu komutu ara iersinde kullanamazsn.");

		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2 && AdminDuty[playerid] == 0)
			return	SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");

		new
			szMessage[128];

		for(new i; i < MAX_KUKE; i++) {
			DestroyDynamicObject(Kuke[i]);
			Kuke[i] = 0;
		}
		format(szMessage, sizeof(szMessage), "HQ: Tm kukeler %s tarafndan yokedildi.", GetPlayerNameEx(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(2, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(3, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(5, TEAM_BLUE_COLOR, szMessage);
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	return 1;
}

CMD:bariyerkur(playerid, params[])
{
    if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ara iersinde bu komutu kullanamazsnz");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");
			return 1;
		}
		if(GetPlayerInterior(playerid) != 0)
		{
		    SendClientMessage(playerid, COLOR_GREY, "nterior iersine bariyer kuramazsn.");
		    return 1;
		}

		new string[128], Float:Position[4];
		for(new i; i<MAX_ENGEL; i++)
		{
			if(Engel[i] == 0)
			{
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Engel[i] = CreateDynamicObject(1459, Position[0], Position[1], Position[2]-0.4, 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1]+4, Position[2]);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir bariyer %s tarafndan %s blgesine konuldu.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
						if(PlayerInfo[x][pRank] >= 3)
						{
							SendClientMessage(x, COLOR_YELLOW, "Bariyerleri silmek iin /bariyerkaldir   -    /bariyerlerikaldir.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Tm bariyerler kullanmda.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:bariyerkaldir(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ara iersinde bu komutu kullanamazsnz");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");
			return 1;
		}
		new string[128], Float:Position[3];
		for(new i; i<MAX_ENGEL; i++)
		{
			GetDynamicObjectPos(Engel[i], Position[0], Position[1], Position[2]);

			if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2]))
			{
				DestroyDynamicObject(Engel[i]);
				Engel[i] = 0;
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir Bariyer %s tarafndan %s eyaletinde kaldrld.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Herhangi bir bariyerin yaknnda deilsin.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:bariyerlerikaldir(playerid, params[])
{
	if(IsACop(playerid) || AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pAdmin] >= 6) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(IsPlayerInAnyVehicle(playerid) && AdminDuty[playerid] == 0)
			return SendClientMessage(playerid, COLOR_GREY, "Bu komutu ara iersinde kullanamazsn.");

		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2 && AdminDuty[playerid] == 0)
			return	SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");

		new
			szMessage[128];

		for(new i; i < MAX_ENGEL; i++) {
			DestroyDynamicObject(Engel[i]);
			Engel[i] = 0;
		}
		format(szMessage, sizeof(szMessage), "HQ: Tm bariyerler %s tarafndan yokedildi.", GetPlayerNameEx(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(2, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(3, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(5, TEAM_BLUE_COLOR, szMessage);
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	return 1;
}

CMD:barikatkur(playerid, params[])
{
    if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ara iersinde bu komutu kullanamazsnz");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");
			return 1;
		}
		if(GetPlayerInterior(playerid) != 0)
		{
		    SendClientMessage(playerid, COLOR_GREY, "nterior iersine barikat kuramazsn.");
		    return 1;
		}

		new string[128], Float:Position[4];
		for(new i; i<MAX_BARRICADES; i++)
		{
			if(Barricade[i] == 0)
			{
				GetPlayerPos(playerid, Position[0], Position[1], Position[2]);
				GetPlayerFacingAngle(playerid, Position[3]);
				Barricade[i] = CreateDynamicObject(981, Position[0], Position[1], Position[2], 0.0, 0.0, Position[3]+180.0, -1, -1, -1, 200.0);
				SetPlayerPos(playerid, Position[0], Position[1]+4, Position[2]);
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir barikat %s tarafndan %s blgesine konuldu.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
						if(PlayerInfo[x][pRank] >= 3)
						{
							SendClientMessage(x, COLOR_YELLOW, "Barikatlar silmek iin /barikatkaldir.");
						}
					}
				}
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Tm barikatlar kullanmda.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:barikatkaldir(playerid, params[])
{
	if(IsACop(playerid))
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Ara iersinde bu komutu kullanamazsnz");
			return 1;
		}
		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2)
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");
			return 1;
		}
		new string[128], Float:Position[3];
		for(new i; i<MAX_BARRICADES; i++)
		{
			GetDynamicObjectPos(Barricade[i], Position[0], Position[1], Position[2]);

			if(IsPlayerInRangeOfPoint(playerid, 5.0, Position[0], Position[1], Position[2]))
			{
				DestroyDynamicObject(Barricade[i]);
				Barricade[i] = 0;
				new zone[MAX_ZONE_NAME];
				GetPlayer3DZone(playerid, zone, sizeof(zone));
				format(string, sizeof(string), "HQ: Bir barikat %s tarafndan %s eyaletinde kaldrld.", GetPlayerNameEx(playerid), zone);
				foreach(Player, x)
				{
					if(IsACop(x))
					{
						SendClientMessage(x, TEAM_BLUE_COLOR, string);
					}
				}
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Herhangi bir barikatn yaknnda deilsin.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:barikatlarikaldir(playerid, params[])
{
	if(IsACop(playerid) || AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] >= 3 || PlayerInfo[playerid][pAdmin] >= 6) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(IsPlayerInAnyVehicle(playerid) && AdminDuty[playerid] == 0)
			return SendClientMessage(playerid, COLOR_GREY, "Bu komutu ara iersinde kullanamazsn.");

		if(PlayerInfo[playerid][pRank] < 3 && PlayerInfo[playerid][pFaction] != 2 && AdminDuty[playerid] == 0)
			return	SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanabilmek iin en az Rank 3 olmalsnz.");

		new
			szMessage[128];

		for(new i; i < MAX_BARRICADES; i++) {
			DestroyDynamicObject(Barricade[i]);
			Barricade[i] = 0;
		}
		format(szMessage, sizeof(szMessage), "HQ: Tm barikatlar %s tarafndan yokedildi.", GetPlayerNameEx(playerid));
		SendRadioMessage(1, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(2, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(3, TEAM_BLUE_COLOR, szMessage);
		SendRadioMessage(5, TEAM_BLUE_COLOR, szMessage);
	} else SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	return 1;
}

CMD:aracbilgisi(playerid, params[])
{
    if(IsACop(playerid))
	{
        new carid = GetPlayerVehicleID(playerid);
        new closestcar = GetClosestCar(playerid, carid);
        if(IsTrailerAttachedToVehicle(carid))
		{
            new carbeingtowed = GetVehicleTrailer(carid);
            foreach(Player, i)
			{
                new v = GetPlayerVehicle(i, carbeingtowed);
                if(v != -1)
				{
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Ara Kayd: %d | sim: %s | Sahibi: %s | Ceza: $%d.",carbeingtowed,GetVehicleName(PlayerVehicleInfo[i][v][pvId]),GetPlayerNameEx(i),PlayerVehicleInfo[i][v][pvTicket]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            for(new f = 0; f < MAX_FAMILY; f++)
			{
                new v = GetGangVehicle(f, carbeingtowed);
                if(v != -1)
                {
					new string[72 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Ara kayd: %d | sim: %s | Sahibi: %s.",carbeingtowed,GetVehicleName(FamilyVehicleInfo[f][v][fvId]),FamilyInfo[f][FamilyLeader]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            SendClientMessage(playerid, COLOR_GRAD2, "Bu ara kimse tarafndan satn alnmam!");
        }
        else if(IsPlayerInRangeOfVehicle(playerid, closestcar, 9.0) && !IsTrailerAttachedToVehicle(carid))
		{
            foreach(Player, i)
			{
                new v = GetPlayerVehicle(i, closestcar);
                if(v != -1)
				{
					new string[78 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Ara Kayd: %d | sim: %s | Sahibi: %s | Ceza: $%d.",closestcar,GetVehicleName(PlayerVehicleInfo[i][v][pvId]),GetPlayerNameEx(i),PlayerVehicleInfo[i][v][pvTicket]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            for(new f = 0; f < MAX_FAMILY; f++)
			{
                new v = GetGangVehicle(f, closestcar);
                if(v != -1)
				{
					new string[72 + MAX_PLAYER_NAME];
                    format(string, sizeof(string), "Ara Kayd: %d | sim: %s | Sahibi: %s.",closestcar,GetVehicleName(FamilyVehicleInfo[f][v][fvId]),FamilyInfo[f][FamilyLeader]);
                    SendClientMessage(playerid, COLOR_WHITE, string);
                    return 1;
                }
            }
            SendClientMessage(playerid, COLOR_GRAD2, "Bu ara kimse tarafndan satn alnmam!");
        }
        else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Hata: Herhangi bir arac ekmiyorsun / Baka bir aracn yaknndasn.");
        }
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanmaya yetkin yok.");
    }
    return 1;
}

CMD:amvb(playerid, params[])
{
    if(IsACop(playerid)) {
        new
			string[128],
			giveplayerid;

        if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /amvb [Oyuncu ID/sim]");

   		if(IsPlayerConnected(giveplayerid)) {
	        SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
			format(string, sizeof(string), "*** %s adl kiinin aralar  ***", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_GRAD2, string);
	        for(new i; i < MAX_PLAYERVEHICLES; i++) {
				if(PlayerVehicleInfo[giveplayerid][i][pvModelId] >= 400) {
					if(PlayerVehicleInfo[giveplayerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID) {
						format(string, sizeof(string), "Ara Kayd: %d | Ara smi: %s | Ceza: $%d.",PlayerVehicleInfo[giveplayerid][i][pvId],GetVehicleName(PlayerVehicleInfo[giveplayerid][i][pvId]),PlayerVehicleInfo[giveplayerid][i][pvTicket]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					} else if(PlayerVehicleInfo[giveplayerid][i][pvImpounded]) {
						format(string, sizeof(string), "Ara Kayd: - (El konulmu) | Ara smi: %s | Ticket: $%d.",VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400],PlayerVehicleInfo[giveplayerid][i][pvTicket]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					} else if(PlayerVehicleInfo[giveplayerid][i][pvDisabled]) {
						format(string, sizeof(string), "Ara Kayd: - (Men edilmi) | Ara smi: %s | Ticket: $%d.",VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400],PlayerVehicleInfo[giveplayerid][i][pvTicket]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					} else if(!PlayerVehicleInfo[giveplayerid][i][pvSpawned]) {
						format(string, sizeof(string), "Ara Kayd: - (Garajda) | Ara smi: %s | Ticket: $%d.",VehicleName[PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400],PlayerVehicleInfo[giveplayerid][i][pvTicket]);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
	    	}
	    	SendClientMessage(playerid, COLOR_GREEN, "_______________________________________");
   		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
    }
	return 1;
}

CMD:acezakes(playerid, params[])
{
    if(IsACop(playerid))
    {
        if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /acezakes [Ara ID]");

        if(PlayerInfo[playerid][pTicketTime] != 0)
		{
            SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu tekrar kullanabilmek iin 1 dakika beklemelisin!");
            return 1;
        }

        new Float: x, Float: y, Float: z, vehicleid = strval(params);
        GetVehiclePos(vehicleid, x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 5.0, x, y, z))
		{
            if(vehicleid != INVALID_VEHICLE_ID)
			{
                foreach(Player, i)
				{
                    new v = GetPlayerVehicle(i, vehicleid);
                    if(v != -1)
					{
						new string[62 + MAX_PLAYER_NAME];
                        PlayerVehicleInfo[i][v][pvTicket] += 1000;
                        PlayerInfo[playerid][pTicketTime] = 60;
                        format(string, sizeof(string), "(%s)You have issued a $1000 ticket on %s's %s.",GetPlayerNameEx(playerid),GetPlayerNameEx(i),GetVehicleName(PlayerVehicleInfo[i][v][pvId]));
                        Log("logs/acezakes.log", string);
						SendClientMessage(playerid, COLOR_WHITE, string);
                        return 1;
                    }
                }
                for(new f = 0; f < MAX_FAMILY; f++)
				{
                    new v = GetGangVehicle(f, vehicleid);
                    if(v != -1)
					{
                        SendClientMessage(playerid, COLOR_WHITE, "Aile aralarna ceza kesemezsin!");
                        return 1;
                    }
                }
                SendClientMessage(playerid, COLOR_GRAD2, "Bu aracn herhangi bir kayd yok!");
            }
        }
        else
		{
            SendClientMessage(playerid, COLOR_GRAD2, "Bir aracn yannda olmalsn!");
        }
    }
    return 1;
}

CMD:aracicek(playerid, params[]) {
 	if(IsACop(playerid)) {
   		if(IsPlayerInAnyVehicle(playerid))
     	{
			new
				carid = GetPlayerVehicleID(playerid);

			if(IsATowTruck(carid))
			{
   				new
					closestcar = GetClosestCar(playerid, carid),
					v = GetCarDealershipVehicleId(carid);

				foreach(Player, i) {
					if(arr_Towing[i] == closestcar || (GetPlayerVehicleID(i) == closestcar && GetPlayerState(i) == 2)) return SendClientMessage(playerid, COLOR_GREY, "Ayn anda 2 arac birden ekemezsin.");
				}
				if(v != -1)
					return SetVehicleToRespawn(closestcar);

       			if(GetDistanceToCar(playerid,closestcar) <= 8 && !IsTrailerAttachedToVehicle(carid)) {
					foreach(Player, i) {
						if(GetPlayerVehicle(i, closestcar) != -1) {

							new
								hKey;

							if(((hKey = PlayerInfo[i][pHouse]) != INVALID_HOUSE_ID) && IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[hKey][hExteriorX], HouseInfo[hKey][hExteriorY], HouseInfo[hKey][hExteriorZ])
							||((hKey = PlayerInfo[i][pHouse2]) != INVALID_HOUSE_ID) && IsPlayerInRangeOfPoint(playerid, 50.0, HouseInfo[hKey][hExteriorX], HouseInfo[hKey][hExteriorY], HouseInfo[hKey][hExteriorZ])) {
								return SendClientMessage(playerid, COLOR_GREY, "Bu aracn ekilmeye ihtiyac yok.");
							}


						    if(ProxDetectorS(30.0,playerid,i))
								SendClientMessage(i, COLOR_LIGHTBLUE, "Bir memur senin aracn ekmeye alyor!");

							arr_Towing[playerid] = closestcar;
						    SendClientMessage(playerid, COLOR_GRAD2, "Birisi bu arabann sahibi, ekilmek iin uygun.");
      						return AttachTrailerToVehicle(closestcar,carid);
						}
					}
					SendClientMessage(playerid, COLOR_GRAD2, "Bu ara hakknda hibir kayt yok, ekilmek iin uygun.");
					AttachTrailerToVehicle(closestcar,carid);
					arr_Towing[playerid] = closestcar;
					return 1;
     			}
			}
			else SendClientMessage(playerid, COLOR_GRAD2, "Bu arac ekebilmek iin yetkili deilsin.");
   		}
     	else SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanabilmek iin bir aracn iinde olmalsn");
	}
   	else SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");
	return 1;
}

CMD:aracicekmeyibirak(playerid, params[])
{
 	if(IsACop(playerid))
  	{
   		if(IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)))
     	{
      		SendClientMessage(playerid, COLOR_GRAD1,"Arac ekmeyi braktn.");
			arr_Towing[playerid] = INVALID_VEHICLE_ID;
			DetachTrailerFromVehicle(GetPlayerVehicleID(playerid));
     	}
      	else
       	{
        	SendClientMessage(playerid, COLOR_GRAD1,"uanda herhangi bir arac ekmiyorsun.");
        }
  	}
   	else
	{
 		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmaya yetkin yok.");
	}
	return 1;
}

CMD:forcetime(playerid, params[])
{
	if(!IsBETAServer())
	    return SendClientMessage(playerid, COLOR_GREY, "Bu beta sunucuda deil!");

	if(isnull(params)) {
		new
		string[128],
		tmphour,
		tmpminute,
		tmpsecond;

		gettime(tmphour, tmpminute, tmpsecond);
		format(string, sizeof(string), "gettime(%d, %d, %d);", tmphour, tmpminute, tmpsecond);
		SendClientMessage(playerid, COLOR_WHITE, string);
		FixHour(tmphour);
		tmphour = shifthour;
		format(string, sizeof(string), "%d = %d", tmphour, shifthour);
		SendClientMessage(playerid, COLOR_WHITE, string);
		if((tmphour > ghour) || (tmphour == 0 && ghour == 23))
		{
			format(string, sizeof(string), "if((%d > %d) || (%d == 0 && %d == 23))", tmphour, ghour, tmphour, ghour);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "uanda saat %d:00.",tmphour);
			SendClientMessageToAllEx(COLOR_WHITE,string);
			ghour = tmphour;
			TotalUptime += 1;
			PayDay();

			SaveFamilies();
		}
	} else {
		new minute, hour;
		if(sscanf(params, "ii", hour, minute))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /forcetime [hour] [minute]");

		new
			string[128],
			tmphour,
			tmpminute,
			tmpsecond;

		gettime(tmphour, tmpminute, tmpsecond);
		format(string, sizeof(string), "gettime(%d, %d, %d);", tmphour, tmpminute, tmpsecond);
		SendClientMessage(playerid, COLOR_WHITE, string);
		FixHour(hour);
		hour = shifthour;
		format(string, sizeof(string), "%d = %d", tmphour, shifthour);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "if((%d > %d) || (%d == 0 && %d == 23))", hour, ghour, hour, ghour);
		SendClientMessage(playerid, COLOR_WHITE, string);
		if((hour > ghour) || (hour == 0 && ghour == 23))
		{
			format(string, sizeof(string), "uanda saat %d:00.",hour);
			SendClientMessageToAllEx(COLOR_WHITE,string);
			ghour = hour;
			TotalUptime += 1;
			PayDay();

			SaveFamilies();
		}
	}
	return 1;
}

CMD:testsaving(playerid, params[]) {
	if(!IsBETAServer())
	    return SendClientMessage(playerid, COLOR_GREY, "Bu beta sunucuda deil!");

	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /testsaving [value]");

	new
	    iValue = strval(params);

	PlayerInfo[playerid][pLiveBanned] = iValue;
	PlayerInfo[playerid][pLevel] = iValue;
	PlayerInfo[playerid][pBanAppealer] = iValue;
	PlayerInfo[playerid][pGangMod] = iValue;
	PlayerInfo[playerid][pAge] = iValue;
	PlayerInfo[playerid][pSkin] = iValue;
	PlayerInfo[playerid][pConnectTime] = iValue;
	PlayerInfo[playerid][pRespect] = iValue;
	PlayerInfo[playerid][pNumber] = iValue;
	PlayerInfo[playerid][pGang] = iValue;
	PlayerInfo[playerid][pTriageTime] = iValue;
	PlayerInfo[playerid][pFaction] = iValue;
	PlayerInfo[playerid][pLeader] = iValue;
	PlayerInfo[playerid][pRank] = iValue;
	PlayerInfo[playerid][pJob] = iValue;
	PlayerInfo[playerid][pJob2] = iValue;
	PlayerInfo[playerid][pDonator] = iValue;
	PlayerInfo[playerid][gPupgrade] = iValue;
	PlayerInfo[playerid][pSarmor] = iValue;
	PlayerInfo[playerid][pCash] = iValue;
	PlayerInfo[playerid][pBank] = iValue;
	PlayerInfo[playerid][pInsurance] = iValue;
	PlayerInfo[playerid][pCrimes] = iValue;
	PlayerInfo[playerid][pArrested] = iValue;
	PlayerInfo[playerid][pWantedLevel] = iValue;
	PlayerInfo[playerid][pHealth] = iValue;
	PlayerInfo[playerid][pArmor] = iValue;
	PlayerInfo[playerid][pPot] = iValue;
	PlayerInfo[playerid][pCrack] = iValue;
	PlayerInfo[playerid][pPackages] = iValue;
	PlayerInfo[playerid][pCrates] = iValue;
	PlayerInfo[playerid][pRadio] = iValue;
	PlayerInfo[playerid][pRadioFreq] = iValue;
	PlayerInfo[playerid][pMats] = iValue;
	PlayerInfo[playerid][pRope] = iValue;
	PlayerInfo[playerid][pCigar] = iValue;
	PlayerInfo[playerid][pSprunk] = iValue;
	PlayerInfo[playerid][pSpraycan] = iValue;
	PlayerInfo[playerid][pHouse] = iValue;
	PlayerInfo[playerid][pHouse2] = iValue;
	PlayerInfo[playerid][pRenting] = iValue;
	PlayerInfo[playerid][pInt] = iValue;
	PlayerInfo[playerid][pVW] = iValue;
	PlayerInfo[playerid][pJailed] = iValue;
	PlayerInfo[playerid][pJailTime] = iValue;
	PlayerInfo[playerid][pPayCheck] = iValue;
	PlayerInfo[playerid][pPayReady] = iValue;
	PlayerInfo[playerid][pDetSkill] = iValue;
	PlayerInfo[playerid][pLawSkill] = iValue;
	PlayerInfo[playerid][pSexSkill] = iValue;
	PlayerInfo[playerid][pDrugsSkill] = iValue;
	PlayerInfo[playerid][pSmugSkill] = iValue;
	PlayerInfo[playerid][pArmsSkill] = iValue;
	PlayerInfo[playerid][pMechSkill] = iValue;
	PlayerInfo[playerid][pBoxSkill] = iValue;
	PlayerInfo[playerid][pTruckSkill] = iValue;
	PlayerInfo[playerid][pCarSkill] = iValue;
	PlayerInfo[playerid][pLawyerTime] = iValue;
	PlayerInfo[playerid][pLawyerFreeTime] = iValue;
	PlayerInfo[playerid][pDrugsTime] = iValue;
	PlayerInfo[playerid][pMechTime] = iValue;
	PlayerInfo[playerid][pSexTime] = iValue;
	PlayerInfo[playerid][pCarTime] = iValue;
	PlayerInfo[playerid][pWSeeds] = iValue;
	PlayerInfo[playerid][pFightStyle] = iValue;
	PlayerInfo[playerid][pScrewdriver] = iValue;
	PlayerInfo[playerid][pSmslog] = iValue;
	PlayerInfo[playerid][pTire] = iValue;
	PlayerInfo[playerid][pFirstaid] = iValue;
	PlayerInfo[playerid][pRccam] = iValue;
	PlayerInfo[playerid][pReceiver] = iValue;
	PlayerInfo[playerid][pGPS] = iValue;
	PlayerInfo[playerid][pSweep] = iValue;
	PlayerInfo[playerid][pSweepLeft] = iValue;
	PlayerInfo[playerid][pCarLic] = iValue;
	PlayerInfo[playerid][pFlyLic] = iValue;
	PlayerInfo[playerid][pBoatLic] = iValue;
	PlayerInfo[playerid][pGunLic] = iValue;
	PlayerInfo[playerid][pDivision] = iValue;
	PlayerInfo[playerid][pTicketTime] = iValue;
	PlayerInfo[playerid][pHeadValue] = iValue;
	PlayerInfo[playerid][pC4] = iValue;
	PlayerInfo[playerid][pC4Used] = iValue;
	PlayerInfo[playerid][pBombs] = iValue;
	PlayerInfo[playerid][pCHits] = iValue;
	PlayerInfo[playerid][pFHits] = iValue;
	PlayerInfo[playerid][pAcceptReport] = iValue;
	PlayerInfo[playerid][pTrashReport] = iValue;
	PlayerInfo[playerid][pAccent] = iValue;
	PlayerInfo[playerid][pNMute] = iValue;
	PlayerInfo[playerid][pNMuteTotal] = iValue;
	PlayerInfo[playerid][pADMute] = iValue;
	PlayerInfo[playerid][pADMuteTotal] = iValue;
	PlayerInfo[playerid][pRMuted] = iValue;
	PlayerInfo[playerid][pRMutedTotal] = iValue;
	PlayerInfo[playerid][pRMutedTime] = iValue;
	PlayerInfo[playerid][pSpeedo] = iValue;
	PlayerInfo[playerid][pGCMuted] = iValue;
	PlayerInfo[playerid][pGCMutedTime] = iValue;
	PlayerInfo[playerid][pCallsAccepted] = iValue;
	PlayerInfo[playerid][pPatientsDelivered] = iValue;
	PlayerInfo[playerid][pTriageTime] = iValue;
	PlayerInfo[playerid][pRMutedTime] = iValue;
	PlayerInfo[playerid][pRMutedTotal] = iValue;
	PlayerInfo[playerid][pPatientsDelivered] = iValue;
	PlayerInfo[playerid][pRefTokens] = iValue;
	PlayerInfo[playerid][pRefTokensOffline] = iValue;
	PlayerInfo[playerid][pHelper] = iValue;
	return 1;
}

CMD:lspdbirim(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pLeader] == 1) {
		new
			string[128],
			giveplayerid,
			division;

		if(sscanf(params, "ud", giveplayerid, division)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /lspdbirim [Oyuncu ID/sim] [division]");
			SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir birim isimleri: 1 (Yok), 2 (DET), 3 (PTL), 4 (FTO), 5 (SWAT) and 6 (IA).");
			return 1;
		}

		if(PlayerInfo[playerid][pRank] >= 8) {
			if(IsPlayerConnected(giveplayerid)) {
				if(PlayerInfo[giveplayerid][pFaction] == 1) {
					if(division == 1) {
						PlayerInfo[giveplayerid][pDivision] = 1;
						format(string, sizeof(string), "Bulunduun birimden %s tarafndan kovuldun.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					} else if(division == 2) {
						PlayerInfo[giveplayerid][pDivision] = 2;
						format(string, sizeof(string), "uanda dedektif birimindesin,%s tarafndan davet edildin.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					} else if(division == 3) {
						PlayerInfo[giveplayerid][pDivision] = 3;
						format(string, sizeof(string), "uanda devriye birimindesin,%s tarafndan davet edildin.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[giveplayerid][pDivision] = 4;
						format(string, sizeof(string), "uanda eitim birimindesin,%s tarafndan davet edildin.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					} else if(division == 5) {
						PlayerInfo[giveplayerid][pDivision] = 5;
						format(string, sizeof(string), "uanda SWAT birimindesin,%s tarafndan davet edildin", GetPlayerNameEx(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}  else if(division == 6) {
						PlayerInfo[giveplayerid][pDivision] = 6;
						format(string, sizeof(string), "uanda Internal Affairs birimindesin,%s tarafndan davet edildin.", GetPlayerNameEx(playerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					} else cmd_lspdbirim(playerid, "");
				} else SendClientMessage(playerid, COLOR_GRAD1, "Bu kii senin oluumunda deil");
			} else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
		} else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin yetkin yok - Sadece R8+ kiiler bu komutu kullanabilir");
	} else SendClientMessage(playerid, COLOR_GRAD1, "LSPD Memuru deilsin");
	return 1;
}

CMD:tohumlariyoket(playerid, params[]) {
	if(IsACop(playerid) || (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pDivision] == 2) || (PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pRank] >= 5)) {
		foreach(Player, i) if(IsValidDynamicObject(PlayerInfo[i][pWeedObject]) && IsPlayerInRangeOfPoint(playerid, 4, PlayerInfo[i][pWeedPos][0], PlayerInfo[i][pWeedPos][1], PlayerInfo[i][pWeedPos][2])) {
			if(GetPlayerVirtualWorld(playerid) == PlayerInfo[i][pWeedVW] && GetPlayerInterior(playerid) == PlayerInfo[i][pWeedInt]) {
				new
					szMessage[128];

				ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
				format(szMessage, sizeof(szMessage), "*  %d gram marijuana ele geirdin.", PlayerInfo[i][pWeedGrowth]);
				SendClientMessage(playerid, COLOR_GREY, szMessage);
				format(szMessage, sizeof(szMessage), "* %s bitki ele geirildi.", GetPlayerNameEx(playerid), GetPlayerNameEx(i));
				ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				DestroyDynamicObject(PlayerInfo[i][pWeedObject]);
				PlayerInfo[i][pWeedObject] = 0;
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Ekim alannda deilsin.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Devlet memuru deilsin.");
	}
	return 1;
}

CMD:makeleader(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 7) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 7)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid, faction;
		if(sscanf(params, "ud", giveplayerid, faction)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /makeleader [Oyuncu ID/sim] [factionid]");
			SendClientMessage(playerid, COLOR_GRAD3, "|1 LSPD |2 FBI |3 LSFMD |4 Hitman |5 GOV |6 LST |9 SAN News");
			return 1;
		}

		if(giveplayerid != INVALID_PLAYER_ID) {
		    new
				ftext[30];

			if(faction == 1)
				ftext = "LSPD";
			else if(faction == 2)
				ftext = "FBI";
			else if(faction == 3)
				ftext = "LSFMD";
			else if(faction == 4)
				ftext = "Hitman Ajans";
			else if(faction == 5)
				ftext = "Devlet";
			else if(faction == 6)
				ftext = "LST";
			else if(faction == 9)
				ftext = "SAN News";
			else
				return SendClientMessage(playerid, COLOR_GREY, "Yanl Faction ID.");

			PlayerInfo[giveplayerid][pLeader] = faction;
			PlayerInfo[giveplayerid][pRank] = 6;
			PlayerInfo[giveplayerid][pFaction] = faction;

			format(string, sizeof(string), " %s admin tarafndan %s lideri yapldn.", GetPlayerNameEx(playerid),ftext);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s admin %s adl kiiyi %s oluum lideri yapt.", GetPlayerNameEx(playerid), GetPlayerNameEx(playerid), ftext);
			Log("logs/faction.log", string);
			format(string, sizeof(string), " %s adl kiiyi %s oluum sorumlusu yaptn.", GetPlayerNameEx(giveplayerid),ftext);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			PlayerInfo[giveplayerid][pGang] = 255;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:pgate(playerid, params[])
{
	for(new idx=1; idx<MAX_GATES; idx++)
	{
		if(GateInfo[idx][gModel] && IsPlayerInRangeOfPoint(playerid, 8, GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ]))
		{
			if(strlen(GateInfo[idx][gPassword]))
			{
				if(sscanf(params, "s[256]", params)) return SendClientMessage(playerid, COLOR_WHITE, "{AFAFAF}KULLANIM:{FFFFFF} /pgate [ifre]");
				if(strcmp(params, GateInfo[idx][gPassword])) return SendClientMessage(playerid, COLOR_WHITE, "Hatal kap ifresi.");
				if(strcmp(params,"0") == 0) return SendClientMessage(playerid,COLOR_RED,"(( Gate ifreleri iin yasakl rakam girdiniz. ))");
				if(!GateInfo[idx][gStatus])
				{
					GateInfo[idx][gStatus] = 1;
					MoveDynamicObject(GateInfo[idx][gGate], GateInfo[idx][gOX], GateInfo[idx][gOY], GateInfo[idx][gOZ], GateInfo[idx][gSpeed]);
					SetDynamicObjectRot(GateInfo[idx][gGate], GateInfo[idx][gORX], GateInfo[idx][gORY], GateInfo[idx][gORZ]);
				}
				else
				{
					GateInfo[idx][gStatus] = 0;
					MoveDynamicObject(GateInfo[idx][gGate], GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], GateInfo[idx][gSpeed]);
					SetDynamicObjectRot(GateInfo[idx][gGate], GateInfo[idx][gCRX], GateInfo[idx][gCRY], GateInfo[idx][gCRZ]);
				}
			}
			else
			{
				if(!GateInfo[idx][gStatus])
				{
					GateInfo[idx][gStatus] = 1;
					MoveDynamicObject(GateInfo[idx][gGate], GateInfo[idx][gOX], GateInfo[idx][gOY], GateInfo[idx][gOZ], GateInfo[idx][gSpeed]);
					SetDynamicObjectRot(GateInfo[idx][gGate], GateInfo[idx][gORX], GateInfo[idx][gORY], GateInfo[idx][gORZ]);
				}
				else
				{
					GateInfo[idx][gStatus] = 0;
					MoveDynamicObject(GateInfo[idx][gGate], GateInfo[idx][gCX], GateInfo[idx][gCY], GateInfo[idx][gCZ], GateInfo[idx][gSpeed]);
					SetDynamicObjectRot(GateInfo[idx][gGate], GateInfo[idx][gCRX], GateInfo[idx][gCRY], GateInfo[idx][gCRZ]);
				}
			}
			idx = MAX_GATES;
		}
	}
	return 1;
}

CMD:kapi(playerid, params[])
{
	new string[128];
    if(!IsPlayerConnected(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Komutlar kullanmak iin nce giri yapmanz gerekmektedir.");
	if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pFaction] != 2) return SendClientMessage(playerid, COLOR_GREY, "LSPD - FBI memuru deilsin.");
	if(IsPlayerInRangeOfPoint(playerid, 3, 253.22212219238, 107.54524230957, 1003.5809326172) || IsPlayerInRangeOfPoint(playerid, 3, 253.22547912598, 110.60842132568, 1003.5809326172))
	{
	    if(!LSPDLobbyStatus) // LSPD LOBBY
	    {
	        MoveDynamicObject(LSPDLobby[0], 253.22212219238, 107.54524230957, 1003.5809326172, 2);
	    	MoveDynamicObject(LSPDLobby[1], 253.22547912598, 110.60842132568, 1003.5809326172, 2);
	    	format(string, sizeof(string), "* %s parman taraycya dokundurur ve kap alr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	        LSPDLobbyStatus = 1;
         	SetTimer("LSPDLobbyTimer", 3000, false);
			return 1;
	    }
	    else if(LSPDLobbyStatus)
	    {
	    	MoveDynamicObject(LSPDLobby[0], 253.18507385,108.53353882,1003.58093262, 2);
	    	MoveDynamicObject(LSPDLobby[1], 253.16732788,109.68534088,1003.58093262, 2);
			format(string, sizeof(string), "* %s %s parman taraycya dokundurur ve kap kapanr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			LSPDLobbyStatus = 0;
			return 1;
	    }
	}
	if(IsPlayerInRangeOfPoint(playerid, 3, 239.63652038574, 118.1950302124, 1003.5809326172) || IsPlayerInRangeOfPoint(playerid, 3, 239.63296508789, 117.00688171387, 1003.5809326172))
	{
	    if(!LSPDLobbyStatus2) // LSPD LOBBYTimer2
	    {
	        MoveDynamicObject(LSPDLobby[2], 239.66482543945, 119.06954956055, 1003.5809326172, 2);
	    	MoveDynamicObject(LSPDLobby[3], 239.63677978516, 116.1040802002, 1003.5809326172, 2);
	    	format(string, sizeof(string), "* %s parman taraycya dokundurur ve kap alr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	        LSPDLobbyStatus2 = 1;
         	SetTimer("LSPDLobbyTimer2", 3000, false);
         	return 1;
	    }
	    else if(LSPDLobbyStatus2)
	    {
	    	MoveDynamicObject(LSPDLobby[2], 239.63652038574, 118.1950302124, 1003.5809326172, 2);
	    	MoveDynamicObject(LSPDLobby[3], 239.63296508789, 117.00688171387, 1003.5809326172, 2);
			format(string, sizeof(string), "* %s %s parman taraycya dokundurur ve kap kapanr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			LSPDLobbyStatus2 = 0;
			return 1;
	    }
	}
    if(IsPlayerInRangeOfPoint(playerid, 3, 264.32269287109, 112.54183959961, 1003.6422119141) || IsPlayerInRangeOfPoint(playerid, 3, 267.33877563477, 112.54633331299, 1003.6422119141))
	{
	    if(!LSPDLobbyStatus3) // LSPD LOBBYTimer3
	    {
	        MoveDynamicObject(LSPDLobby[4], 263.51568603516, 112.57638549805, 1003.6422119141, 2);
	    	MoveDynamicObject(LSPDLobby[5], 268.16961669922, 112.59413146973, 1003.6422119141, 2);
	    	format(string, sizeof(string), "* %s parman taraycya dokundurur ve kap alr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	        LSPDLobbyStatus3 = 1;
         	SetTimer("LSPDLobbyTimer3", 3000, false);
         	return 1;
	    }
	    else if(LSPDLobbyStatus3)
	    {
	    	MoveDynamicObject(LSPDLobby[4], 264.32269287109, 112.54183959961, 1003.6422119141, 2);
	    	MoveDynamicObject(LSPDLobby[5], 267.33877563477, 112.54633331299, 1003.6422119141, 2);
			format(string, sizeof(string), "* %s %s parman taraycya dokundurur ve kap kapanr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			LSPDLobbyStatus3 = 0;
			return 1;
	    }
	}

	else if(IsPlayerInRangeOfPoint(playerid, 3, 259.105194,90.812126,1002.584350) || IsPlayerInRangeOfPoint(playerid, 3, 258.843353,90.840599,1002.584350))
	{
	    if(!LSPDCellsStatus) // LSPD CELLS
	    {
	        MoveDynamicObject(LSPDCells[0], 259.105194,91.844230,1002.584350, 1.50);
	    	MoveDynamicObject(LSPDCells[1], 258.843353,89.812141,1002.584350, 1.50);
	    	MoveDynamicObject(LSPDCells[2], 258.949157,92.435539,1002.528625, 1.50);
	    	MoveDynamicObject(LSPDCells[3], 258.949157,89.254486,1002.528625, 1.50);
	    	format(string, sizeof(string), "* %s parman taraycya koyar ve demir parmaklklar aar.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	        LSPDCellsStatus = 1;
         	SetTimer("LSPDCellsTimer", 3000, false);
         	return 1;
	    }
	    else if(LSPDCellsStatus)
	    {
	    	MoveDynamicObject(LSPDCells[0], 259.105194,90.812126,1002.584350, 1.50);
	    	MoveDynamicObject(LSPDCells[1], 258.843353,90.840599,1002.584350, 1.50);
	    	MoveDynamicObject(LSPDCells[2], 258.949157,91.412040,1002.528625, 1.50);
	    	MoveDynamicObject(LSPDCells[3], 258.949157,90.292076,1002.528625, 1.50);
			format(string, sizeof(string), "* %s parman taraycya koyar ve demir parmaklklar kapatr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			LSPDCellsStatus = 0;
			return 1;
	    }
	}
	else if(IsPlayerInRangeOfPoint(playerid, 0.7, 255.494674,85.290985,1002.445312)) // LSPD Cells Office Left
	{
	    if(!LSPDOfficeStatus[0])
	    {
	        LSPDOfficeStatus[0] = 1;
	        MoveDynamicObject(LSPDOffice[0], 255.494674,85.290985,1005.445312, 3, 0, 0, 0);
	    }
	    else if(LSPDOfficeStatus[0])
	    {
	        LSPDOfficeStatus[0] = 0;
	        MoveDynamicObject(LSPDOffice[0], 255.494674,85.290985,1002.445312, 3, 0, 0, 0);
	    }
	}
	else if(IsPlayerInRangeOfPoint(playerid, 0.7, 254.380661,85.286033,1002.445312)) // LSPD Cells Office Right
	{
		if(!LSPDOfficeStatus[1])
	    {
	        LSPDOfficeStatus[1] = 1;
	        MoveDynamicObject(LSPDOffice[1], 254.380661,85.286033,1005.445312, 3, 0, 0, 180);
	    }
	    else if(LSPDOfficeStatus[1])
	    {
	        LSPDOfficeStatus[1] = 0;
	        MoveDynamicObject(LSPDOffice[1], 254.380661,85.286033,1002.445312, 3, 0, 0, 180);
	    }
	}
	else if(IsPlayerInRangeOfPoint(playerid, 5, 230.55876160,119.57346344,1010.58093262))
	{
	    if(PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pLeader] != 2) return SendClientMessage(playerid, COLOR_GREY, "LSPD efi deilsin.");
	    if(!LSPDChiefStatus) // Chief's Office
	    {
	       	MoveDynamicObject(LSPDChief[0], 229.68397522,119.56812286,1010.58093262, 1.50);
	    	MoveDynamicObject(LSPDChief[1], 229.76559448,119.58856201,1010.58093262, 1.50);
	    	format(string, sizeof(string), "* %s parman taraycya koyar ve ofis kapsn aar.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	        LSPDChiefStatus = 1;
	        return 1;
	    }
	    else if(LSPDChiefStatus)
	    {
	    	MoveDynamicObject(LSPDChief[0], 230.55876160,119.57346344,1010.58093262, 1.50);
	    	MoveDynamicObject(LSPDChief[1], 231.60127258,119.61708832,1010.58093262, 1.50);
			format(string, sizeof(string), "* %s parman taraycya koyar ve ofis kapsn kapatr.", GetPlayerNameEx(playerid));
			SendNearbyMessage(playerid, 15, string, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
			LSPDChiefStatus = 0;
			return 1;
	    }
	}
	else
	{
	    return SendClientMessage(playerid, COLOR_GREY, "Aabilecein bir kapnn yaknnda deilsin.");
	}
	return 1;
}

CMD:gate(playerid, params[]) {
	new
		string[128];

    if(PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pFaction] == 5) {
        GetPlayerPos(playerid, Positions[0][0], Positions[0][1], Positions[0][2]);
        GetDynamicObjectPos(LSPDGate, Positions[1][0], Positions[1][1], Positions[1][2]);
        GetDynamicObjectPos(LSPDGate2, Positions[4][0], Positions[4][1], Positions[4][2]);
        GetDynamicObjectPos(FBIGate1, Positions[2][0], Positions[2][1], Positions[2][2]);
        GetDynamicObjectPos(FBIGate2, Positions[3][0], Positions[3][1], Positions[3][2]);
  		GetDynamicObjectPos(SAHGate1, Positions[6][0], Positions[6][1], Positions[6][2]);
        GetDynamicObjectPos(SAHGate2, Positions[5][0], Positions[5][1], Positions[5][2]);
        
        if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[1][0], Positions[1][1], Positions[1][2]) < 15.0) {
            if(LSPDGateStatus == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                SetDynamicObjectRot(LSPDGate, 0.000000, 0, 90);
                LSPDGateStatus = 1;
            }
            else {
                LSPDGateStatus = 0;
                SetDynamicObjectRot(LSPDGate, 0.000000, 90, 90);
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
        }
        else if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[4][0], Positions[4][1], Positions[4][2]) < 15.0) {
            if(LSPDGate2Status == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(LSPDGate2, 1588.6501464844, -1638.0750732422, 6.2343215942383, 3);
                LSPDGate2Status = 1;
            }
            else {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(LSPDGate2, 1588.6428222656, -1638.02734375, 15.240161895752, 3);
                LSPDGate2Status = 0;
            }
        }
        else if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[4][0], Positions[4][1], Positions[4][2]) < 15.0) {
            if(LSPDGate2Status == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(LSPDGate2, 313.49652099609, -1482.9189453125, 26.682577133179, 3);
                LSPDGate2Status = 1;
            }
            else {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(LSPDGate2, 320.40628051758, -1487.9129638672, 26.900407791138, 3);
                LSPDGate2Status = 0;
            }
        }
	}

	if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pFaction] == 5) {
        if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[2][0], Positions[2][1], Positions[2][2]) < 15.0) {
            if(FBIGate1Status == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(FBIGate1, 313.49652099609, -1482.9189453125, 26.682577133179, 3);
                FBIGate1Status = 1;
            }
            else {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(FBIGate1, 320.40628051758, -1487.9129638672, 26.900407791138, 3);
                FBIGate1Status = 0;
            }
        }
        else if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[3][0], Positions[3][1], Positions[3][2]) < 15.0) {
            if(FBIGate2Status == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(FBIGate2, 290.56341552734, -1547.8900146484, 27.16854095459, 3);
                FBIGate2Status = 1;
            }
            else {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(FBIGate2, 283.96463012695, -1543.154296875, 27.167940139771, 3);
                FBIGate2Status = 0;
            }
		}
	}
	//SAH GATE
	if(PlayerInfo[playerid][pLeader] == 2 || PlayerInfo[playerid][pLeader] == 10 || PlayerInfo[playerid][pFaction] == 10 || PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 9) {
        if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[6][0], Positions[6][1], Positions[6][2]) < 9.0) {
            if(SAHGate1Status == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(SAHGate1, 778.0999800,-1330.1999500,8.0000000, 3);
                SAHGate1Status = 1;
            }
            else {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(SAHGate1, 778.0999800,-1330.1999500,13.5000000, 3);
                SAHGate1Status = 0;
            }
        }
        else if(GetDistance(Positions[0][0], Positions[0][1], Positions[0][2], Positions[5][0], Positions[5][1], Positions[5][2]) < 9.0) {
            if(SAHGate2Status == 0) {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy aar", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(SAHGate2, 777.9000200,-1384.8000500,8.0000000, 3);
                SAHGate2Status = 1;
            }
            else {
                format(string, sizeof(string), "* %s uzaktan kumandaya basarak kapy kapatr", GetPlayerNameEx(playerid));
                ProxDetector(5.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                MoveDynamicObject(SAHGate2, 777.9000200,-1384.8000500,13.5000000, 3);
                SAHGate2Status = 0;
            }
		}
	}
    return 1;
}

CMD:tamir(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 7 || PlayerInfo[playerid][pJob2] == 7)
	{
    	new string[32 + MAX_PLAYER_NAME];
        if(IsPlayerInAnyVehicle(playerid))
		{
		    SendClientMessage(playerid, COLOR_GRAD1, "Arabann iindeyken ara tamir edemezsin.");
		    return 1;
		}

  		if(PlayerInfo[playerid][pMechTime] > 0)
		{
  			format(string, sizeof(string), "%d saniye beklemelisin!", PlayerInfo[playerid][pMechTime]);
     		SendClientMessage(playerid, COLOR_GRAD1,string);
     	}
		else if(GetPVarInt(playerid, "EventToken"))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu etkinlikteyken kullanamazsn.");
		}
  		else
		{
			new closestcar = GetClosestCar(playerid);

  			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 10.0))
  			{
				if(!IsABike(closestcar) && !IsAPlane(closestcar)) {
					GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
					if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
					{
						SendClientMessage(playerid, COLOR_GRAD1, "Arac tamir edebilmek iin kaputun ak olmas gerekir.");
						return 1;
					}
				}
  				PlayerInfo[playerid][pMechTime] = 60;
   				SetVehicleHealth(closestcar, 1000.0);
    			format(string, sizeof(string), "* %s arac tamir etti.", GetPlayerNameEx(playerid));
    			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else return SendClientMessage(playerid, COLOR_GRAD1, "Herhangi bir arabaya yeterince yaklamadn.");
  		}
    }
    else return SendClientMessage(playerid, COLOR_WHITE, "Tamirci deilsiniz!");
    return 1;
}

CMD:nos(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 7 || PlayerInfo[playerid][pJob2] == 7) {
        if(IsPlayerInAnyVehicle(playerid)) {
			if(GetPVarInt(playerid, "EventToken")) {
				return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu etkinlikteyken kullanamazsn.");
			}
            if(! IsPlayerInInvalidNosVehicle(playerid))
			{
   				if(GetPlayerCash(playerid) < 25)
		    	{
		        	SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok.");
		    	    return 1;
		    	}
                new string[128];
                new nostogive;
                new level = PlayerInfo[playerid][pMechSkill];
                if(level >= 0 && level < 50) { nostogive = 1009; }
                else if(level >= 50 && level < 100) { nostogive = 1009; }
                else if(level >= 100 && level < 200) { nostogive = 1008; }
                else if(level >= 200 && level < 400) { nostogive = 1008; }
                else if(level >= 400) { nostogive = 1010; }
                AddVehicleComponent(GetPlayerVehicleID(playerid),nostogive);
                                                  //NOS
                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);

                GivePlayerCash(playerid, -25);
                format(string, sizeof(string), "* %s aracna nitro ekledi.", GetPlayerNameEx(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else {
                SendClientMessage(playerid, COLOR_WHITE, "Bu araca nitro eklenemez.");
            }
        }
        else {
            SendClientMessage(playerid, COLOR_WHITE, "Arata deilsin.");
        }
    }
    else {
        SendClientMessage(playerid, COLOR_WHITE, "Tamirci deilsiniz!");
    }
    return 1;
}

CMD:hidrolik(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 7 || PlayerInfo[playerid][pJob2] == 7)
	{
        if(IsPlayerInAnyVehicle(playerid))
		{
		    if(GetPlayerCash(playerid) < 25)
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "Yeterli paran yok.");
		        return 1;
		    }
            if(! IsPlayerInInvalidNosVehicle(playerid)) {
                new string[128];
                PlayerPlaySound(playerid,1133,0.0,0.0,0.0);
                AddVehicleComponent(GetPlayerVehicleID(playerid), 1087);
                GivePlayerCash(playerid, -25);
                format(string, sizeof(string), "* %s aracna hidrolik ekledi.", GetPlayerNameEx(playerid));
                ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            }
            else {
                SendClientMessage(playerid, COLOR_WHITE, "Hidrolik bu araca eklenemez.");
            }
        }
        else {
            SendClientMessage(playerid, COLOR_WHITE, "Arata deilsin.");
        }
    }
    else {
        SendClientMessage(playerid, COLOR_WHITE, "Tamirci deislin!");
    }
    return 1;
}


CMD:tamtamir(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 7 && PlayerInfo[playerid][pJob2] != 7)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Tamirci deilsin!");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Ara iersindeyken arac tamir edemezsin.");

	new string[128];
	if(PlayerInfo[playerid][pMechTime] >= 1)
	{
		format(string, sizeof(string), "%d saniye beklemelisin!", PlayerInfo[playerid][pMechTime]);
		SendClientMessage(playerid, COLOR_GRAD1,string);
		return 1;
	}
	if(GetPVarInt(playerid, "EventToken")) {
		return SendClientMessage(playerid, COLOR_GRAD1, "Etkinlikteyken bu komutu kullanamazsn.");
	}
	new giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /tamtamir [Oyuncu ID/sim] [fiyat]");

	if(PlayerInfo[playerid][pTire] > 0)
	{
		if(money < 1 || money > 1000) { SendClientMessage(playerid, COLOR_GREY, "   cret 1-1000$ arasnda olmaldr!"); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    new closestcar = GetClosestCar(playerid);

	  			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 8.0))
	  			{
					if(ProxDetectorS(8.0, playerid, giveplayerid)&& IsPlayerInAnyVehicle(giveplayerid))
					{
						if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendi kendine tamir teklif edemezsin."); return 1; }
	                    if(!IsABike(closestcar) && !IsAPlane(closestcar))
						{
							GetVehicleParamsEx(closestcar,engine,lights,alarm,doors,bonnet,boot,objective);
							if(bonnet == VEHICLE_PARAMS_OFF || bonnet == VEHICLE_PARAMS_UNSET)
							{
								SendClientMessage(playerid, COLOR_GRAD1, "Aracn kaputu ak olmaldr.");
								return 1;
							}
						}
						format(string, sizeof(string), "* %s adl kiiye %d$ karl tamir teklif ediyorsun .",GetPlayerNameEx(giveplayerid),money);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* Tamirci %s aracn %d$ karl tamir etmek istiyor, (rnek: /kabulet tamir).",GetPlayerNameEx(playerid),money);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						PlayerInfo[playerid][pMechTime] = 60;
						RepairOffer[giveplayerid] = playerid;
						RepairPrice[giveplayerid] = money;
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   Bu kii senin yaknnda deil / Aracn iersinde deil.");
					}
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GREY, "   Herhangi bir aracn yaknnda deilsin.");
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Bu kii oyunda deil.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Lastiin yok, Zanaatkar olup lastik yapabilirsin.");
	}
	return 1;
}

CMD:tisbasi(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] == 7 || PlayerInfo[playerid][pJob2] == 7)
	{
        if(JobDuty[playerid] == 1)
		{
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* uanda i banda deilsin, Artk teklifler gelmeyecek.");
            JobDuty[playerid] = 0;
            Mechanics -= 1;
        }
        else
		{
            if(TransportDuty[playerid] != 0) return SendClientMessage(playerid,COLOR_GREY,"ncelikle tamaclk mesleinden kmalsn.");
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* uanda tamirci olarak i ba yaptnz.Araba tamircisine ihtiyac olan kiiler size teklif sunabilecektir.");
            JobDuty[playerid] = 1;
            ++Mechanics;
        }
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD1, "   Tamirci deilsin!");
    }
    return 1;
}

CMD:aracsaticisiniduzenle(playerid, params[])
{
    for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, CarDealershipInfo[d][cdRadius], CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ])) {
            if(IsPlayerOwnerOfCDEx(playerid, d))
			{
                SetPVarInt(playerid, "editingcd", d);
                SetPVarInt(playerid, "editingcdveh", -1);
                SetPVarInt(playerid, "editingcdvehpos", 0);
                SetPVarInt(playerid, "editingcdvehnew", 0);
                new listitems[] = "1 Yeni ara\n2 Benim Aralarm\n3 Ykselt\n4 Kasa";
                ShowPlayerDialogEx(playerid,DIALOG_CDEDIT,DIALOG_STYLE_LIST,"Devam etmek iin seiniz", listitems,"Se","Iptal");
                return 1;
            }
            else
			{
                SendClientMessage(playerid, COLOR_GREY, "Bu Araba satcs sizin deil");
                return 1;
            }
        }
    }
    SendClientMessage(playerid, COLOR_GREY, "Hata: Araba satcsnn alan iersinde olmalsnz.");
    return 1;
}

CMD:aracduzenle(playerid, params[])
{
    new vehicleid = GetPlayerVehicleID(playerid);
    new v, d;
    v = GetCarDealershipVehicleId(vehicleid);
    d = GetCarDealershipId(vehicleid);
    if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_GREY, "Hata: Herhangi bir aracn iersinde deilsin.");
    if(v != -1 && d != -1)
	{
        if(IsPlayerOwnerOfCDEx(playerid, d))
		{
            SetPVarInt(playerid, "editingcd", d);
            SetPVarInt(playerid, "editingcdveh", v);
            SetPVarInt(playerid, "editingcdvehpos", 0);
            SetPVarInt(playerid, "editingcdvehnew", 0);
            new listitems[] = "1 Model Ayarla\n2 Fiyat Ayarla\n3 Park ayarla\n4 Ara sil";
            ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Araba Satcs:", listitems,"Se","Iptal");
            return 1;
        }
        else
		{
            SendClientMessage(playerid, COLOR_GREY, "Hata: Bu araba satcs senin deil.");
        }
    }
    else
	{
        SendClientMessage(playerid, COLOR_GREY, "Hata: Ara bir Araba satcsnda deil.");
    }
    return 1;
}

CMD:aracsaticisial(playerid, params[])
{
    for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]))
		{
            if(!CarDealershipInfo[d][cdOwned])
			{
                if(PlayerInfo[playerid][pCash] < CarDealershipInfo[d][cdPrice])
				{
                    SendClientMessage(playerid, COLOR_GREY, " Bu araba satcsn satn alabilmek iin yeterli paran yok.");
                    return 1;
                }
                PlayerInfo[playerid][pCash] -= CarDealershipInfo[d][cdPrice];
                SetPlayerOwnerOfCD(playerid, d);
                PlayerPlayMusic(playerid);
                SendClientMessage(playerid, COLOR_WHITE, " Tebrikler.");
                SendClientMessage(playerid, COLOR_WHITE, " Araba satcs hakknda yardm almak iin /yardim.");
                SendClientMessage(playerid, COLOR_GRAD1, " Ltfen satn alnan arabalarn doaca yeri belirle");
                SendClientMessage(playerid, COLOR_GRAD2, " stediin yere git ve bir kere Mouse 1 tuuna bas(yumruk at).");
                SendClientMessage(playerid, COLOR_GRAD2, " Bir kere Mause 1 tuuna basmay unutmayn.");
                SendClientMessage(playerid, COLOR_WHITE, " Not: Eer sen onu gremiyorsan, mterilerin hibir arac satn alamayacaklar.");
                SetPVarInt(playerid, "editingcdvehpos", 2);
                SetPVarInt(playerid, "editingcd", d);
                return 1;
            }
            else
			{
                SendClientMessage(playerid, COLOR_GREY, "Bu Araba satcs zaten satn alnm, Satlk deil.");
            }
        }
    }
    return 1;
}

CMD:aracsaticinisat(playerid, params[])
{
	new string[128];

    for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]))
		{
            if(IsPlayerOwnerOfCDEx(playerid, d))
			{
                SetPVarInt(playerid, "editingcd", d);
                format(string,128,"Bu araba satcsn %d$ karl satamk istediinden eminmisin ?\n.", CarDealershipInfo[d][cdPrice] / 2);
                ShowPlayerDialogEx(playerid,DIALOG_CDSELL,DIALOG_STYLE_MSGBOX,"Uyar:",string,"Sat","Iptal");
                return 1;
            }
            else
			{
                SendClientMessage(playerid, COLOR_GREY, "Bu araba satcsnn sahibi deilsin.");
                return 1;
            }
        }
    }
    SendClientMessage(playerid, COLOR_GREY, "Dealership'e yakn olmalsn.");
    return 1;
}

CMD:createcdveh(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 6)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");
        return 1;
    }
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}


    new string[128], price, dealershipid, modelid;
    if(sscanf(params, "ddd", price, dealershipid, modelid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /createcdveh [fiyat] [dealership] [modelid]");

    new Float:X,Float:Y,Float:Z,Float:A;
    GetPlayerPos(playerid,X,Y,Z);
    GetPlayerFacingAngle(playerid, A);
    new cdvehicleid = CreateCarDealershipVehicle(dealershipid, modelid, X, Y, Z, A, price);
    if(cdvehicleid == -1)
	{
        SendClientMessage(playerid, COLOR_GREY, "Hata: Ara limitine ulald.");
    }
    else
	{
        format(string, sizeof(string), " Ara satcsnda araba yaratld ID %d.", cdvehicleid);
        SendClientMessage(playerid, COLOR_GRAD1, string);
    }
    return 1;
}

CMD:destroycdveh(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 6)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");
        return 1;
    }
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

    new string[128], vehid;
    if(sscanf(params, "d", vehid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /destroycdveh [Ara ID]");

    DestroyCarDealershipVehicle(GetCarDealershipId(vehid), GetCarDealershipVehicleId(vehid));
    SavecDealerships();
    format(string, sizeof(string), " Ara satcsndaki ara yokedildi. ID %d.", vehid);
    SendClientMessage(playerid, COLOR_GRAD1, string);
    return 1;
}

CMD:createdealership(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 8)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");
        return 1;
    }
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

    new string[128], price, radius, message[64];
    if(sscanf(params, "dds[64]", price, radius, message)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /createdealership [fiyat] [menzil] [mesaj]");

    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(playerid,X,Y,Z);
    new dealershipid = CreateCarDealership(X, Y, Z, radius, price, message);
    if(dealershipid == -1)
	{
        SendClientMessage(playerid, COLOR_GREY, "Hata: Ara satcs limiti doldu.");
    }
    else
	{
        format(string, sizeof(string), " Ara satcs yaratld ID %d.", dealershipid);
        SendClientMessage(playerid, COLOR_GRAD1, string);
    }
    return 1;
}

CMD:destroydealership(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 8)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");
        return 1;
    }
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

    new string[128], dealershipid;
    if(sscanf(params, "d", dealershipid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /destroydealership [dealershipid]");

    for(new d = 0 ; d < MAX_CARDEALERSHIPS; d++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 3.0, CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]))
		{
            DestroyCarDealership(d);
            format(string, sizeof(string), " Araba satcs yokedildi. ID %d.", d);
            SendClientMessage(playerid, COLOR_GRAD1, string);
            return 1;
        }
    }
    if(dealershipid > MAX_CARDEALERSHIPS) return 1;
    if(dealershipid < 0) return 1;
    DestroyCarDealership(dealershipid);
    format(string, sizeof(string), " Araba satcs yokedildi. ID %d.", dealershipid);
    SendClientMessage(playerid, COLOR_GRAD1, string);
    return 1;
}

CMD:createpvehicle(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] < 5)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");
        return 1;
    }
    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 5)
    {
    	SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}
    new string[128], giveplayerid, modelid, color1, color2;
    if(sscanf(params, "uddd", giveplayerid, modelid, color1, color2)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /createpvehicle [Oyuncu ID/sim] [Ara ID] [Renk 1] [Renk 2]");

   	if(AdminDuty[giveplayerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak i bandayken bu komutu kullanamazsn");
		return 1;
	}

    if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_GREY, "   Renkler 0-255 arasndadr!"); return 1; }
    if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_GREY, "   Renkler 0-255 arasndadr!"); return 1; }
    if(modelid < 400 || modelid > 611) { SendClientMessage(playerid, COLOR_GREY, "   Ara ID leri 400 - 611 arasndadr!"); return 1; }
    new playervehicleid = GetPlayerFreeVehicleId(giveplayerid),
		totalvehicles = GetPlayerVehicleCountEx(playerid);
	// (TEMPORARY - ZHAO NOTE) TempDonator not added yet
	if(PlayerInfo[giveplayerid][pDonator] == 0 && totalvehicles >= 5) //PlayerInfo[giveplayerid][pTempDonator] > 0) && carsamount >= 5)
	{
        SendClientMessage(playerid, COLOR_GREY, "Bu kii daha fazla ara sahibi olamaz, VIP olmayan kiiler 5 ara alabilir..");
        return 1;
	}
    if(PlayerInfo[giveplayerid][pDonator] == 1 && totalvehicles >= 7)
    {
        SendClientMessage(playerid, COLOR_GREY, "Bu kii daha fazla ara sahibi olamaz, Yakut VIP'ler 7 ara alabilir.");
        return 1;
    }
    if(PlayerInfo[giveplayerid][pDonator] == 2 && totalvehicles >= 8)
    {
        SendClientMessage(playerid, COLOR_GREY, "Bu kii daha fazla ara sahibi olamaz, Master VIP'ler 8 ara alabilir.");
        return 1;
    }
    if(PlayerInfo[giveplayerid][pDonator] == 3 && totalvehicles >= 10)
    {
        SendClientMessage(playerid, COLOR_GREY, "Bu kii daha fazla ara sahibi olamaz, Elmas VIP'ler 10 ara alabilir.");
        return 1;
    }

    if(playervehicleid == -1) return SendClientMessage(playerid, COLOR_GREY, "Hata: Bu kii daha fazla ara sahibi olamaz.");
    if(PlayerInfo[giveplayerid][pDonator] == 0 && VehicleSpawned[giveplayerid] > 0)
    {
		SendClientMessage(playerid, COLOR_GREY, "Bu kii VIP deil ve sadece 1 ara kartabilir.Oyuncu yeni bir ara alabilmek iin bir aracn garaja koymaldr.");
		return 1;
    }
   	if(PlayerInfo[giveplayerid][pDonator] == 1 && VehicleSpawned[giveplayerid] > 1)
   	{
		SendClientMessage(playerid, COLOR_GREY, "Bu kii bir Yakut VIP ve sadece 2 ara kartabilir.Oyuncu yeni bir ara alabilmek iin bir aracn garaja koymaldr..");
		return 1;
    }
   	if(PlayerInfo[giveplayerid][pDonator] == 2 && VehicleSpawned[giveplayerid] > 2)
   	{
		SendClientMessage(playerid, COLOR_GREY, "Bu kii bir Master VIP ve sadece 3 ara kartabilir.Oyuncu yeni bir ara alabilmek iin bir aracn garaja koymaldr.");
		return 1;
    }
   	if(PlayerInfo[giveplayerid][pDonator] == 3 && VehicleSpawned[giveplayerid] > 3)
   	{
		SendClientMessage(playerid, COLOR_GREY, "Bu kii bir Elmas VIP ve sadece 4 ara kartabilir.Oyuncu yeni bir ara alabilmek iin bir aracn garaja koymaldr.");
		return 1;
    }
    if(PlayerInfo[giveplayerid][pDonator] < 0 || PlayerInfo[giveplayerid][pDonator] > 3)
    {
    	SendClientMessage(playerid, COLOR_GREY, "Hata: Bu oyuncunun VIP level'i yanl.");
		return 1;
    }

    new Float:X,Float:Y,Float:Z;
    GetPlayerPos(giveplayerid,X,Y,Z);
    new Float:Angle;
    GetPlayerFacingAngle(giveplayerid,Angle);
    new car = CreatePlayerVehicle(giveplayerid, playervehicleid, modelid, X, Y, Z, Angle, color1, color2, 0);
    if(car == INVALID_PLAYER_VEHICLE_ID)
	{
        SendClientMessage(playerid, COLOR_GREY, "Hata: Something went wrong and the car didn't get created.");
    }
    else
	{
        format(string, sizeof(string), "Ara baarl bir ekilde yaratld ID %d.", car);
        SendClientMessage(playerid, COLOR_GRAD1, string);
    }

    format(string, sizeof(string), "%s has created a %s for %s (Color 1: %d | Color 2: %d).", GetPlayerNameEx(playerid), GetVehicleName(car), GetPlayerNameEx(giveplayerid), color1, color2);
    Log("logs/playervehicle.log", string);
    return 1;
}

CMD:destroypvehicle(playerid, params[])
{
	new giveplayerid;
	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /destroypvehicle [Oyuncu ID/sim]");

	if(!IsPlayerConnected(giveplayerid))
		return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

    if(PlayerInfo[playerid][pAdmin] < 4)
		return SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma iznin yok.");

    if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

	if(AdminDuty[giveplayerid] == 1)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak i bandayken bu komutu kullanamazsn");

	new
		szVehString[1024];

	for(new i, iModelID; i < MAX_PLAYERVEHICLES; i++) {
		if((iModelID = PlayerVehicleInfo[giveplayerid][i][pvModelId] - 400) >= 0) {
			if(PlayerVehicleInfo[giveplayerid][i][pvImpounded]) {
				format(szVehString, sizeof(szVehString), "%s\n%s (baglanmis)", szVehString, VehicleName[iModelID]);
			}
			else if(PlayerVehicleInfo[giveplayerid][i][pvDisabled]) {
				format(szVehString, sizeof(szVehString), "%s\n%s (kullanilamaz halde)", szVehString, VehicleName[iModelID]);
			}
			else if(!PlayerVehicleInfo[giveplayerid][i][pvSpawned]) {
				format(szVehString, sizeof(szVehString), "%s\n%s (sakl)", szVehString, VehicleName[iModelID]);
			}
			else format(szVehString, sizeof(szVehString), "%s\n%s (ID %i)", szVehString, VehicleName[iModelID], PlayerVehicleInfo[giveplayerid][i][pvId]);
		}
		else strcat(szVehString, "\nBos");
	}
	ShowPlayerDialogEx(playerid, DELETEPLAYERCAR, DIALOG_STYLE_LIST, "Ara Silme", szVehString, "Sil", "Iptal");
	SetPVarInt(playerid, "playeraffectedcarTP", giveplayerid);
	return 1;
}

CMD:aracyardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessage(playerid, COLOR_WHITE,"*** ARABA SATICISI YARDIM *** - daha fazla bilgi iin bir komut yazn.");
    SendClientMessage(playerid, COLOR_GRAD3,"*** ARABA SATICISI *** /kilitsatinal /kilit /park /modifiyelerisil /aracsil /aracimisat /aracimibul /saticibul");
    SendClientMessage(playerid, COLOR_GRAD3,"*** ARABA SATICISI *** /dmvmenu /anahtarver /anahtarlar /aracakoy /aractanal /aracbagaji /arac /araclarim /modifiyecibul");
    return 1;
}

CMD:asinyalyardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessage(playerid, COLOR_GRAD3,"*** ARA SNYAL *** Sola sinyal yakmak iin Q tuu saa sinyal yakmak iin E tuu kullanlr.");
    return 1;
}

CMD:kilitsatinal(playerid, params[])
{
    if(IsAt247(playerid))
	{
	    ShowPlayerDialogEx(playerid, DIALOG_CDLOCKBUY, DIALOG_STYLE_LIST, "24/7 MARKET", "Ara Alarm($100)\nAra Kilidi($200)", "Satn Al", "Iptal");
		return 1;
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "   Markette deilsin.");
	}
	return 1;
}

CMD:akilit(playerid, params[]) {
	return cmd_kilit(playerid, params);
}

CMD:kilit(playerid, params[])
{
    new Float: x, Float: y, Float: z;
    if(PlayerInfo[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
        new ownerid = PlayerInfo[playerid][pVehicleKeysFrom];
        if(IsPlayerConnected(ownerid))
		{
            new d = PlayerInfo[playerid][pVehicleKeys];
            if(PlayerVehicleInfo[ownerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
            if(IsPlayerInRangeOfPoint(playerid, 10.0, x, y, z))
			{
                if(PlayerVehicleInfo[ownerid][d][pvLock] > 0)
				{
                    if(PlayerVehicleInfo[ownerid][d][pvLocked] == 0)
					{
                        GameTextForPlayer(playerid,"~r~Arac kilitlendi!",5000,6);
                        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                        PlayerVehicleInfo[ownerid][d][pvLocked] = 1;
                        LockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId], PlayerVehicleInfo[ownerid][d][pvLock]);
                        return 1;
                    }
                    else
					{
                        GameTextForPlayer(playerid,"~g~Aracin kilidi acildi!",5000,6);
                        PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                        PlayerVehicleInfo[ownerid][d][pvLocked] = 0;
                        UnLockPlayerVehicle(ownerid, PlayerVehicleInfo[ownerid][d][pvId], PlayerVehicleInfo[ownerid][d][pvLock]);
                        return 1;
                    }
                }
                else
				{
                    SendClientMessage(playerid, COLOR_GREY, "Aracnda bir kilit sistemin yok");
                    return 1;
                }
            }
        }
    }
    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
    {
        if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
        if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
		{
            if(PlayerVehicleInfo[playerid][d][pvLock] > 0 && PlayerVehicleInfo[playerid][d][pvLocked] == 0)
			{
                GameTextForPlayer(playerid,"~r~Arac kilitlendi!",5000,6);
                PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                PlayerVehicleInfo[playerid][d][pvLocked] = 1;
                LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerVehicleInfo[playerid][d][pvLock]);
                return 1;
            }
            else if(PlayerVehicleInfo[playerid][d][pvLock] > 0 && PlayerVehicleInfo[playerid][d][pvLocked] == 1)
			{
                GameTextForPlayer(playerid,"~g~Arac kilidi acildi!",5000,6);
                PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
                PlayerVehicleInfo[playerid][d][pvLocked] = 0;
                UnLockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerVehicleInfo[playerid][d][pvLock]);
                return 1;

            }
            SendClientMessage(playerid, COLOR_GREY, " Aracnda herhangi bir kilit sistemi yok.");
            return 1;
        }
    }
    SendClientMessage(playerid, COLOR_GREY, "Sahip olduun bir aracn yaknnda deilsin");
    return 1;
}

CMD:park(playerid, params[])
{
	if(PlayerInfo[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	{
		new ownerid = PlayerInfo[playerid][pVehicleKeysFrom];
		if(IsPlayerConnected(ownerid))
		{
			new d = PlayerInfo[playerid][pVehicleKeys];
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[ownerid][d][pvId]))
			{
			    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Src koltuunda olman lazm.");
				new Float:x, Float:y, Float:z, Float:angle, Float:health;
				GetVehicleHealth(PlayerVehicleInfo[ownerid][d][pvId], health);
				if(health < 800) return SendClientMessage(playerid, COLOR_GREY, " Aracnz park etmek iin ok hasarl.");
				if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;
				if(IsARC(GetPlayerVehicleID(playerid))) // RC Vehicles
				{
					new Float:vehPos[3];
					GetVehiclePos(GetPlayerVehicleID(playerid),vehPos[0], vehPos[1], vehPos[2]);
					SetPlayerPos(playerid,vehPos[0], vehPos[1]+0.5, vehPos[2]+0.5);
				}
				GetVehiclePos(PlayerVehicleInfo[ownerid][d][pvId], x, y, z);
				GetVehicleZAngle(PlayerVehicleInfo[ownerid][d][pvId], angle);
				SurfingCheck(GetPlayerVehicleID(playerid));
				UpdatePlayerVehicleParkPosition(ownerid, d, x, y, z, angle, health);
				PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
			 	SetPlayerArmedWeapon(playerid, 0);
				SetPVarInt(playerid, "fuelonoff", 0);
				HideProgressBarForPlayer(playerid, FuelBar[playerid]);
				DestroyProgressBar(FuelBar[playerid]);
				FuelBar[playerid] = INVALID_BAR_ID;

				new string[29 + (MAX_PLAYER_NAME * 2)];
				format(string, sizeof(string), "* %s adl kii %s adl kiinin aracn parketti.", GetPlayerNameEx(playerid), GetPlayerNameEx(ownerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				return 1;
			}
		}
	}
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
			new Float:x, Float:y, Float:z, Float:angle, Float:health;
			GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
            if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Src koltuunda olman lazm.");
			if(health < 800) return SendClientMessage(playerid, COLOR_GREY, " Aracnz park etmek iin ok hasarl.");
			if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
			GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], angle);
			SurfingCheck(GetPlayerVehicleID(playerid));
			UpdatePlayerVehicleParkPosition(playerid, d, x, y, z, angle, health);
			PutPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId], 0);
			SetPlayerArmedWeapon(playerid, 0);
			SetPVarInt(playerid, "fuelonoff", 0);
			HideProgressBarForPlayer(playerid, FuelBar[playerid]);
			DestroyProgressBar(FuelBar[playerid]);
			FuelBar[playerid] = INVALID_BAR_ID;

			new string[30 + (MAX_PLAYER_NAME * 2)];
			format(string, sizeof(string), "* %s aracn parketti.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Sahip olduun aracn iersinde olmalsn");
	return 1;
}

CMD:modifiyelerisil(playerid, params[])
{
	new modList[512], string[128];
	new count = 0;
	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
		{
			for(new f = 0 ; f < MAX_MODS; f++)
			{
				if(GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f) != 0)
				{
					if(f != 9 && f != 7 && f != 8)
					{
						format(modList, sizeof(modList), "%s\n%s - %s", modList, partType(f), partName(GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f)));
					}
					else
					{
					    format(modList, sizeof(modList), "%s\n%s", modList, partType(f));
					}
     				format(string, sizeof(string), "partList%d", count);
					SetPVarInt(playerid, string, GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
					count++;
				}
			}
			if(count == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, " Bu aracn modifikasyonu yok.");
			    return 1;
			}
		    format(modList, sizeof(modList), "%s\nAll", modList);
		    format(string, sizeof(string), "partList%d", count);
		    SetPVarInt(playerid, string, 999);
		    count++;
		    SetPVarInt(playerid, "modCount", count);
		    ShowPlayerDialogEx(playerid, UNMODCARMENU, DIALOG_STYLE_LIST, "Modifiye Edilmemi Ksmlar", modList, "Se", "Iptal");
		    return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Sahip olduun aracn ierisinde olmalsn.");
 	return 1;
}

CMD:aracsil(playerid, params[])
{
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "dcConfirm") == 0)
	{
		SetPVarInt(playerid, "dcConfirm", 1);
		SendClientMessage(playerid, COLOR_WHITE, "Bu komut aracnz tamamiyle silecektir ve geri dn yoktur.");
		SendClientMessage(playerid, COLOR_WHITE, "Eer aracn silmek istediinden eminsen, komutu tekrar yaz. (/aracsil).");
	}
	else
	{
		DeletePVar(playerid, "dcConfirm");
		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId])) {
				new
					playervehicleid = GetPlayerVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]),
					string[128];

				format(string, sizeof(string), "%s adl kii %s adl aracn sildi.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]));
				Log("logs/playervehicle.log", string);
				DestroyPlayerVehicle(playerid, playervehicleid);
				SendClientMessage(playerid, COLOR_WHITE, "Aracnz silinmitir");

				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Sahip olduun aracn ierisinde olmalsn.");
	}

	return 1;
}
/*
CMD:refundcar(playerid, params[])
{
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "dcConfirm") == 0)
	{
		SetPVarInt(playerid, "dcConfirm", 1);
		SendClientMessage(playerid, COLOR_WHITE, "Use of this command will fully delete and refund you 20 percent of the vehicle's price.");
		SendClientMessage(playerid, COLOR_WHITE, "If you're sure you want to remove your vehicle, please re-type the command (/refundcar).");
	}
	else {
		DeletePVar(playerid, "dcConfirm");

		for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
		{
			if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId])) {
			    if(PlayerVehicleInfo[playerid][d][pvPrice] == 0)
			        return SendClientMessage(playerid, COLOR_GREY, "Your player vehicle is not worth anything - an admin gave it to you or the price was $0.");

				PlayerInfo[playerid][pCash] += IntToPercentage(PlayerVehicleInfo[playerid][d][pvPrice], 20);
				format(string, sizeof(string), "%s has refunded their %s for $%d.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[id][listitem][pvId]), IntToPercentage(PlayerVehicleInfo[playerid][d][pvPrice], 20));
				Log("logs/playervehicle.log", string);

    			new
					playervehicleid = GetPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId]);
				DestroyPlayerVehicle(playerid, playervehicleid);
				SendClientMessage(playerid, COLOR_WHITE, "Aracnz silinmitir");
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_GREY, "Sahip olduun aracn ierisinde olmalsn.");
	}

	return 1;
}*/

CMD:aracimisat(playerid, params[]) {
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
    for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
        if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId]))
 		{
            new Float:health;
            GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], health);
            if(PlayerInfo[playerid][pLevel] == 1)
			{
                SendClientMessage(playerid, COLOR_GREY, "Ara satabilmek iin 2 veya st level olmalsnz.");
                return 1;
            }
            if(health < 500) return SendClientMessage(playerid, COLOR_GREY, " Aracn satmak iin ok fazla hasar alm.");

            new string[128], giveplayerid, price;
			if(sscanf(params, "ud", giveplayerid, price)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aracimisat [Oyuncu ID/sim] [fiyat]");

            if(price < 1) return SendClientMessage(playerid, COLOR_GREY, "Fiyat 0 dan yksek olmaldr.");
            if(PlayerInfo[giveplayerid][pLevel] == 1)
			{
                SendClientMessage(playerid, COLOR_GREY, "Arac satcanz kii 2 veya st bir level olmaldr.");
                return 1;
            }
            if(playerid == giveplayerid)
			{
                SendClientMessage(playerid, COLOR_GREY, "Kendi kendine bu komutu kullanamazsn");
                return 1;
            }
            if(!IsPlayerConnected(giveplayerid)) return SendClientMessage(playerid, COLOR_GREY, "Oyuncu oyunda deil");
            if(ProxDetectorS(8.0, playerid, giveplayerid))
		 	{
		 	    if((PlayerInfo[giveplayerid][pDonator] < 2) && (GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 559  || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 562 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 415 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 402))
				{
				    SendClientMessage(playerid, COLOR_GREY, "Master VIP aralarn Master VIP olmayanlara satamazsnz..");
				    return 1;
				}
    			if((PlayerInfo[giveplayerid][pDonator] < 3) && (GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 429 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 541 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 451))
				{
				    SendClientMessage(playerid, COLOR_GREY, "Elmas VIP aralarn Elmas VIP olmayanlara satamazsnz.");
				    return 1;
				}
				if(GetPVarInt(playerid, "SellMyTimer") > 0)
				{
					format(string, sizeof(string), "Yeniden sat yapmak iin %d saniye beklemeniz gerek.", GetPVarInt(playerid, "SellMyTimer"));
					SendClientMessage(playerid,COLOR_GREY,string);
					return 1;
				}
                VehicleOffer[giveplayerid] = playerid;
                VehicleId[giveplayerid] = d;
                VehiclePrice[giveplayerid] = price;
                format(string, sizeof(string), "* %s adl kiiye %s adl aracn %d$ karl satmay nerdin.", GetPlayerNameEx(giveplayerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), price);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
                format(string, sizeof(string), "* %s adl kii sana %s adl aracn %d$ karl satmak istiyor, (/kabulet arac)", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]), price);
                SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

                SetPVarInt(giveplayerid, "carsaleid", PlayerVehicleInfo[playerid][d][pvRealID]);

                SetPVarInt(playerid, "SellMyTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_SELLMYTIMER);
                return 1;
            }
            else
			{
                SendClientMessage(playerid, COLOR_GREY, "Bu kii senin yannda deil");
                return 1;
            }
        }
    }
    SendClientMessage(playerid, COLOR_GREY, "Sahip olduun aracn ierisinde olmalsn.");
    return 1;
}

CMD:aracimibul(playerid, params[])
{
	new vstring[1024];
	for(new i, iModelID; i < MAX_PLAYERVEHICLES; i++) {
		if((iModelID = PlayerVehicleInfo[playerid][i][pvModelId] - 400) >= 0) {
			if(PlayerVehicleInfo[playerid][i][pvImpounded]) {
				format(vstring, sizeof(vstring), "%s\n%s (baglanmis)", vstring, VehicleName[iModelID]);
			}
			else if(PlayerVehicleInfo[playerid][i][pvDisabled]) {
				format(vstring, sizeof(vstring), "%s\n%s (kullanilamaz halde)", vstring, VehicleName[iModelID]);
			}
			else if(!PlayerVehicleInfo[playerid][i][pvSpawned]) {
				format(vstring, sizeof(vstring), "%s\n%s (sakl)", vstring, VehicleName[iModelID]);
			}
			else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[iModelID]);
		}
		else strcat(vstring, "\nBos");
	}
	ShowPlayerDialogEx(playerid, TRACKCAR, DIALOG_STYLE_LIST, "Ara GPS Takibi", vstring, "Takipet", "Iptal");
	return 1;
}

CMD:radarsilahi(playerid, params[])
{
	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 4 && PlayerInfo[playerid][pDivision] == 2 || PlayerInfo[playerid][pFaction] == 4 && PlayerInfo[playerid][pRank] >= 5)
	{
		new string[128];
		if(IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "Aratayken bunu yapamazsn.");
			return 1;
		}

		if(GetPVarInt(playerid, "PBM") > 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");
			return 1;
		}
		if(GetPVarInt(playerid, "EventToken") != 0)
		{
			SendClientMessage(playerid, COLOR_GREY, "Tazerini etkinlikteyken kullanamazsn.");
			return 1;
		}

		if(GetPVarInt(playerid, "Injured") == 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");
			return 1;
		}

		if(PlayerInfo[playerid][pJailed] > 0)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Hapiste bunu kullanamazsn.");
			return 1;
		}
		if(PlayerCuffed[playerid] >= 1) {
			SendClientMessage(playerid, COLOR_WHITE, "Kelepeli yada tazerliyken bunu kullanamazsn.");
			return 1;
		}

		new SpeedRadar = GetPVarInt(playerid, "Hiz Radari");
		if(SpeedRadar == 0)
		{
			SetPVarInt(playerid, "RadarReplacement", PlayerInfo[playerid][pGuns][9]);
			if(PlayerInfo[playerid][pGuns][9] != 0) RemovePlayerWeapon(playerid, PlayerInfo[playerid][pGuns][9]);
			format(string, sizeof(string), "%s adl kii hz tespiti yapan kamerasn karr.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GivePlayerValidWeapon(playerid, 43, 60000);
			SetPVarInt(playerid, "Hiz Radari", 1);
		}
		else
		{
			RemovePlayerWeapon(playerid, 43);
			GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"), 60000);
			format(string, sizeof(string), "%s adl kii hiz tespiti yapan kamerasn yerine koyar.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "Hiz Radari");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Polis / FBI deilsin.");
		return 1;
	}
	return 1;
}

CMD:dmvbirak(playerid, params[]) {
	switch(PlayerInfo[playerid][pFaction]) {
		case 1, 2: {}
		default: return 1;
	}
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 833.60, 3.23, 1004.17)) {

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /dmvbirak [Oyuncu ID/sim]");
		}
		else if(IsPlayerConnected(iTargetID)) {

			new
				vstring[1024],
				iCount;

			for(new i; i < MAX_PLAYERVEHICLES; i++) {
		    	if(PlayerVehicleInfo[iTargetID][i][pvPrice] < 1) PlayerVehicleInfo[iTargetID][i][pvPrice] = 5000;

		    	new iCost = (PlayerVehicleInfo[iTargetID][i][pvPrice] / 10) + PlayerVehicleInfo[iTargetID][i][pvTicket];

		    	if(iCost > 100)
		        	iCost = 100;

				if(PlayerVehicleInfo[iTargetID][i][pvId] > INVALID_PLAYER_VEHICLE_ID) {
					if(PlayerVehicleInfo[iTargetID][i][pvTicket]) {
						format(vstring, sizeof(vstring), "%s\n%s (ceza - $%i)", vstring, VehicleName[PlayerVehicleInfo[iTargetID][i][pvModelId] - 400], PlayerVehicleInfo[iTargetID][i][pvTicket]);
						++iCount;
					}
					else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[iTargetID][i][pvModelId] - 400]);
				}
				else if(PlayerVehicleInfo[iTargetID][i][pvImpounded]) {
					format(vstring, sizeof(vstring), "%s\n%s (baglanmis - geri almak iin $%i )", vstring, VehicleName[PlayerVehicleInfo[iTargetID][i][pvModelId] - 400], iCost);
					++iCount;
				}
				else format(vstring, sizeof(vstring), "%s\nYok", vstring);
			}
			if(iCount) ShowPlayerDialogEx(playerid, MPSPAYTICKETSCOP, DIALOG_STYLE_LIST, "Aralar", vstring, "Birak", "Iptal"), SetPVarInt(playerid, "vRel", iTargetID);
			else SendClientMessage(playerid, COLOR_GRAD2, "Bu kiinin brakmas gereken bir arac yada demesi gereken bir cezas yok.");
		}
		else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "DMV ierisindeki ara brakma noktasnda deilsin. (DMV binas ii).");
	return 1;
}

CMD:dmvmenu(playerid, params[])
{
    if(IsPlayerInRangeOfPoint(playerid, 3.0, 833.60, 3.23, 1004.17))
	{
	    if(PlayerInfo[playerid][pCarLic] == 0)
	    {
	        SendClientMessage(playerid, COLOR_GRAD2, "Aracnz karmak yada cezasn demek iin geerli src lisansna ihtiyacnz var.");
	        return 1;
	    }

		new
			vstring[1024],
			iCount;

		for(new i; i < MAX_PLAYERVEHICLES; i++) {
		    if(PlayerVehicleInfo[playerid][i][pvPrice] < 1) PlayerVehicleInfo[playerid][i][pvPrice] = 5000;

		    new iCost = (PlayerVehicleInfo[playerid][i][pvPrice] / 10) + PlayerVehicleInfo[playerid][i][pvTicket] + (PlayerInfo[playerid][pLevel] * 10);

		    if(iCost > 10000)
		    {
		        iCost = 1000;
		    }

			if(PlayerVehicleInfo[playerid][i][pvId] > INVALID_PLAYER_VEHICLE_ID) {
				if(PlayerVehicleInfo[playerid][i][pvTicket]) {
					format(vstring, sizeof(vstring), "%s\n%s (Ceza - $%i)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], PlayerVehicleInfo[playerid][i][pvTicket]);
					++iCount;
				}
				else format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
			}
			else if(PlayerVehicleInfo[playerid][i][pvImpounded]) {
				format(vstring, sizeof(vstring), "%s\n%s (Baglanmis - $%i Birak)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], iCost);
				++iCount;
			}
			else format(vstring, sizeof(vstring), "%s\nYok", vstring);
		}
		if(iCount)
		{
			ShowPlayerDialogEx(playerid, MPSPAYTICKETS, DIALOG_STYLE_LIST, "Araclar", vstring, "Birak", "Iptal");
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Brakmanz yada cezasn demeniz gereken bir aracnz yok.");
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "DMV ierisindeki ara brakma noktasnda deilsin. (DMV binas ii).");
	return 1;
}

CMD:anahtarver(playerid, params[])
{
	new
		giveplayerid;

    if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /anahtarver [Oyuncu ID/sim]");
    if(IsPlayerConnected(giveplayerid))
	{
        if(playerid == giveplayerid) return 1;
        if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
            new
				iValidVehicles,
				vstring[512];

			for(new i; i < MAX_PLAYERVEHICLES; i++)
			{
				if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]), ++iValidVehicles;

				else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1)
					format(vstring, sizeof(vstring), "%s\n%s (El Konulmu)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else if(PlayerVehicleInfo[playerid][i][pvDisabled] == 1 && PlayerVehicleInfo[playerid][i][pvModelId] >= 400)
				format(vstring, sizeof(vstring), "%s\n%s (Men Edilmi)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else if(PlayerVehicleInfo[playerid][i][pvSpawned] == 0 && PlayerVehicleInfo[playerid][i][pvModelId] >= 400)
				format(vstring, sizeof(vstring), "%s\n%s (Garajda)", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);

				else
					format(vstring, sizeof(vstring), "%s\nYok", vstring);
			}
            if(iValidVehicles != 0)
			{
                GiveKeysTo[playerid] = giveplayerid;
                ShowPlayerDialogEx(playerid, GIVEKEYS, DIALOG_STYLE_LIST, "Ltfen bir ara sein.", vstring, "Anahtarlar ver", "Iptal");
            }
            else
			{
                SendClientMessage(playerid, COLOR_GRAD2, "Aracn yok.");
            }
        }
        else
		{
            SendClientMessage(playerid, COLOR_GRAD1, "Bu kiiye yeteri kadar yaklamadn.");
        }
    }
    return 1;
}

CMD:anahtarlar(playerid, params[])
{
    new vstring[768], iValidVehicles;
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++) {
	    if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID) {
	        if(PlayerVehicleInfo[playerid][i][pvAllowedplayerid] != INVALID_PLAYER_ID) {
				format(vstring, sizeof(vstring), "%s\n%s | Anahtarlar: %s", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400], GetPlayerNameEx(PlayerVehicleInfo[playerid][i][pvAllowedplayerid]));
				iValidVehicles ++;
			} else if(PlayerVehicleInfo[playerid][i][pvImpounded] == 1 || PlayerVehicleInfo[playerid][i][pvSpawned] == 0) {
				format(vstring, sizeof(vstring), "%s\n%s | Anahtarlar: Kullanlabilir deil", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
			} else {
                format(vstring, sizeof(vstring), "%s\n%s | Anahtarlar: Kimsede deil", vstring, VehicleName[PlayerVehicleInfo[playerid][i][pvModelId] - 400]);
			}
		} else {
			format(vstring, sizeof(vstring), "%s\nYok", vstring);
		}
	}
	if(iValidVehicles != 0) {
		ShowPlayerDialogEx(playerid, REMOVEKEYS, DIALOG_STYLE_LIST, "Ltfen bir ara se.", vstring, "Anahtarlar al", "Iptal");
	} else SendClientMessage(playerid, COLOR_GRAD2, "Hi kimseye anahtar vermedin.");
	return 1;
}

CMD:evanahtariver(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID && PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID)
		return SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");

	new
		giveplayerid,
		houseid,
		HasSomeoneBeeenGivenTheKey;

	if(PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID) {
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evanahtariver [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid)) {
			if(playerid == giveplayerid)
				return SendClientMessage(playerid, COLOR_GRAD2, "Kendi kendine ev anahtarn veremezsin.");

			if(ProxDetectorS(8.0, playerid, giveplayerid)) {
				new
					szMessage[128];

				if(HouseKey[giveplayerid] != INVALID_HOUSE_ID)
					return SendClientMessage(playerid, COLOR_GRAD1, "Kii zaten bakasnn ev anahtarn tayor.");

				foreach(Player, i) {
					if(PlayerInfo[playerid][pHouse] == HouseKey[i]) HasSomeoneBeeenGivenTheKey++;
				}

				if(HasSomeoneBeeenGivenTheKey > 0)
					return SendClientMessage(playerid, COLOR_GRAD1, "Ev anahtarlarn zaten bakasna vermitin.");

				HouseKey[giveplayerid] = PlayerInfo[playerid][pHouse];
				format(szMessage, sizeof(szMessage), "%s sana evinin anahtarlarn verdi.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), "%s adl kiiye ev anahtarlarn verdin.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);
			} else return SendClientMessage(playerid, COLOR_GRAD1, "Bu kiiye yeteri kadar yaklamadn.");
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	} else {
		if(sscanf(params, "ui", giveplayerid, houseid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evanahtariver [Oyuncu ID/sim] [Ev 1/2]");

		if(IsPlayerConnected(giveplayerid)) {
			if(playerid == giveplayerid)
				return SendClientMessage(playerid, COLOR_GRAD2, "Ev anahtarlarn kendine veremezsin.");

			if(ProxDetectorS(8.0, playerid, giveplayerid)) {
				new
					szMessage[128],
					firstorsecond[30];

				if(HouseKey[giveplayerid] != INVALID_HOUSE_ID)
					return SendClientMessage(playerid, COLOR_GRAD1, "Kii zaten bakasnn ev anahtarn tayor.");

				foreach(Player, i) {
					if(PlayerInfo[playerid][pHouse] == HouseKey[i]) HasSomeoneBeeenGivenTheKey = 1;
					else if(PlayerInfo[playerid][pHouse2] == HouseKey[i]) HasSomeoneBeeenGivenTheKey = 2;
					else { }
				}

				if(HasSomeoneBeeenGivenTheKey == 1 && houseid == 1)
					return SendClientMessage(playerid, COLOR_GRAD1, "Anahtar zaten bakasna verdin.");
				if(HasSomeoneBeeenGivenTheKey == 2 && houseid == 2)
					return SendClientMessage(playerid, COLOR_GRAD1, "Anahtar zaten bakasna verdin.");

				if(houseid == 1) {
					HouseKey[giveplayerid] = PlayerInfo[playerid][pHouse];
					firstorsecond = "birinci";
				} else if(houseid == 2) {
					HouseKey[giveplayerid] = PlayerInfo[playerid][pHouse2];
					firstorsecond = "ikinci";
				}
				else return SendClientMessage(playerid, COLOR_GRAD1, "Yanl Ev ID.");

				format(szMessage, sizeof(szMessage), "%s sana %s evinin anahtarlarn verdi.", GetPlayerNameEx(playerid), firstorsecond);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), "%s adl kiiye %s evinin anahtarlarn verdin.", GetPlayerNameEx(giveplayerid), firstorsecond);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);
			} else return SendClientMessage(playerid, COLOR_GRAD1, "Bu oyuncuya yeteri kadar yaklamadn.");
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
    return 1;
}

CMD:evanahtarlarinial(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID && PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID)
		return SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");

	new
		giveplayerid,
		houseid;

	if(PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID) {
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evanahtarlarinial [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid)) {
			if(playerid == giveplayerid)
				return SendClientMessage(playerid, COLOR_GRAD2, "Kendinden ev anahtarn alamazsn.");
			new
				szMessage[128];

			if(HouseKey[giveplayerid] != INVALID_HOUSE_ID && PlayerInfo[playerid][pHouse] == HouseKey[giveplayerid]) {
				HouseKey[giveplayerid] = INVALID_HOUSE_ID;
				format(szMessage, sizeof(szMessage), "%s evinin anahtarlarn ald.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), "%s adl kiiden evinin anahtarlarn aldn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);
			} else return SendClientMessage(playerid, COLOR_GRAD1, "Bu kii senin evinin anahtarlarna sahip deil.");
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	} else {
		if(sscanf(params, "ui", giveplayerid, houseid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evanahtarlarinial [Oyuncu ID/sim] [Ev 1/2]");

		if(IsPlayerConnected(giveplayerid)) {
			if(playerid == giveplayerid)
				return SendClientMessage(playerid, COLOR_GRAD2, "Kendi kendinden anahtar alamazsn.");

			new
				szMessage[128],
				firstorsecond[30];

			if(HouseKey[giveplayerid] == PlayerInfo[playerid][pHouse] || HouseKey[giveplayerid] == PlayerInfo[playerid][pHouse2]) {
				if(houseid == 1 && HouseKey[giveplayerid] == PlayerInfo[playerid][pHouse]) {
					HouseKey[giveplayerid] = INVALID_HOUSE_ID;
					firstorsecond = "first";
				}
				else if(houseid == 2 && HouseKey[giveplayerid] == PlayerInfo[playerid][pHouse2]) {
					HouseKey[giveplayerid] = INVALID_HOUSE_ID;
					firstorsecond = "second";
				}
				else return SendClientMessage(playerid, COLOR_GRAD1, "Yanl Ev ID.");

				format(szMessage, sizeof(szMessage), "%s ev anahtarlarn geri ald: Ev: %s.", GetPlayerNameEx(playerid), firstorsecond);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, szMessage);
				format(szMessage, sizeof(szMessage), " %s evinin anahtarlarn %s adl kiiden geri aldn.", firstorsecond, GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);
			} else return SendClientMessage(playerid, COLOR_GRAD1, "Bu kii senin ev anahtarlarna sahip deil.");
		} else return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
    return 1;
}

CMD:evanahtarlari(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID && PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID)
		return SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");

	new
		szMessage[128],
		count;
	SendClientMessage(playerid, COLOR_GREEN, "--------------------- [ Ev Anahtarlar ] ---------------------");
	foreach(Player, i) {
		if(PlayerInfo[playerid][pHouse] == HouseKey[i] && PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID) {
			format(szMessage, sizeof(szMessage), "Ev 1 | %s (%i)", GetPlayerNameEx(i), i);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
			count++;
		}else if(PlayerInfo[playerid][pHouse2] == HouseKey[i] && PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID) {
			format(szMessage, sizeof(szMessage), "Ev 2 | %s (%i)", GetPlayerNameEx(i), i);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
			count++;
		}
	}
	if(count == 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Ev anahtarlarn kimseye vermedin.");
    return 1;
}

CMD:bilgilendirme(playerid, params[]) {
	new string[128];
	format(string, sizeof string, "Teamspeak: 185.136.204.22 {EFEFEF}-{FFFFFF} | Websitesi: %s{EFEFEF}" WEBSITE);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:aracakoy(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(GetPVarInt(playerid, "PBM") > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "EventToken") != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid)) { SendClientMessage(playerid, COLOR_WHITE, "Ara iersindeyken bunu yapamazsn!"); return 1; }
	if(GetPVarInt(playerid, "EMSAttempt") != 0) return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanamazsn!");

	if(PlayerInfo[playerid][pFaction] != 0 && PlayerInfo[playerid][pFaction] != 4)
		return SendClientMessage(playerid, COLOR_GRAD2, "Faction'dayken bunu yapamazsn.");

	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aracakoy [silah] [slot]");

	new pvid = -1, Float: x, Float: y, Float: z;

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++)
	{
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], x, y, z);
		if(IsPlayerInRangeOfPoint(playerid, 4.5, x, y, z))
		{
			pvid = d;
			break;
		}
	}
	if(pvid == -1) return SendClientMessage(playerid,COLOR_GREY,"Sahip olduun bir aracn yannda deilsin.");
	GetVehicleParamsEx(PlayerVehicleInfo[playerid][pvid][pvId],engine,lights,alarm,doors,bonnet,boot,objective);
	if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) return SendClientMessage(playerid, COLOR_GRAD3, "Bagaj Kapal");
	if(GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][pvid][pvId]) == 510)  return SendClientMessage(playerid,COLOR_GREY,"Bu aracn bagaj yok.");

	new Float: Health;
	GetPlayerHealth(playerid, Health);
	if(Health < 80.0) return SendClientMessage(playerid,COLOR_GREY,"Cann 80'in stnde deilse bagaja silah koyamazsn.");
	if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "   Baka bir silah depolamak iin %d saniye beklemen gerekiyor.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}

	new maxslots = PlayerVehicleInfo[playerid][pvid][pvWepUpgrade]+1;
	if(slot > maxslots)
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz slot.");
		return 1;
	}

	if(PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu slotta zaten bir silahn var.");
		return 1;
	}

	new weapon;
	if(strcmp(weaponchoice, "9mm", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 22 && PlayerInfo[playerid][pAGuns][2] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet 9mm Pistol koydun.");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet 9mm Pistol koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet SD Pistol koydun.");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet SD Pistol koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet Deagle koydun..");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet Deagle koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet Shotgun koydun.");
			weapon = PlayerInfo[playerid][pGuns][3];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet Shotgun koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet SPAS12 koydun.");
			weapon = PlayerInfo[playerid][pGuns][3];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet SPAS-12 koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet MP5 koydun.");
			weapon = PlayerInfo[playerid][pGuns][4];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet MP5 koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}

	else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet AK-47 koydun.");
			weapon = PlayerInfo[playerid][pGuns][5];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet AK-47 koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet M4 koydun.");
			weapon = PlayerInfo[playerid][pGuns][5];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet M4 koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet Tfek koydun.");
			weapon = PlayerInfo[playerid][pGuns][6];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet tfek koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aracn bagajna bir adet Sniper koydun.");
			weapon = PlayerInfo[playerid][pGuns][6];
			format(string,sizeof(string), "* %s adl kii aracnn bagajna bir adet Sniper koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	if(weapon == 0) return SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin.");
	if(PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] == 0)
	{
		PlayerVehicleInfo[playerid][pvid][pvWeapons][slot-1] = weapon;
		RemovePlayerWeapon(playerid, weapon);
		return 1;
	}
	else { SendClientMessage(playerid,COLOR_GREY,"Yanl silah ad!"); return 1; }
}

CMD:aractanal(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(IsPlayerInAnyVehicle(playerid)) {
		return SendClientMessage(playerid, COLOR_WHITE, "Aracn iersindeyken bunu yapamazsn.");
	}
	else if(GetPVarInt(playerid, "PBM") > 0) {
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");
	}
	else if(GetPVarInt(playerid, "EventToken") != 0) {
		return SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");
	}
	else if(PlayerInfo[playerid][pConnectTime] < 2) {
		return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");
	}
	else if(GetPVarInt(playerid, "GiveWeaponTimer") >= 1) {

		new
			szMessage[59];

		format(szMessage, sizeof(szMessage), "   Baka bir silah alabilmek iin %d saniye beklemen gerekiyor.", GetPVarInt(playerid, "GiveWeaponTimer"));
		return SendClientMessage(playerid, COLOR_GREY, szMessage);
	}

	new
		Float: fVehPos[3],
		iWeaponSlot = strval(params);

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) {
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) {
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], fVehPos[0], fVehPos[1], fVehPos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 4.5, fVehPos[0], fVehPos[1], fVehPos[2])) {
				if(isnull(params)) {

					new
						szMessage[64];

					format(szMessage, sizeof(szMessage), "*** %s adl kiinin arac: %s Bagaj ***", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]));
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
					for(new s = 0; s < 3; s++) if(PlayerVehicleInfo[playerid][d][pvWeapons][s] != 0) {

						new
							szWeapon[16];

						GetWeaponName(PlayerVehicleInfo[playerid][d][pvWeapons][s], szWeapon, sizeof(szWeapon));
						format(szMessage, sizeof(szMessage), "Slot %d: %s", s+1, szWeapon);
						SendClientMessage(playerid, COLOR_WHITE, szMessage);
					}
					return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aractanal [slot]");
				}
				else if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509) {
					return SendClientMessage(playerid,COLOR_GREY,"Bu aracn bagaj yok.");
				}

				GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);

				if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET) {
					return SendClientMessage(playerid, COLOR_GRAD3, "Bagaj kapal.");
				}
				else if(iWeaponSlot > PlayerVehicleInfo[playerid][d][pvWepUpgrade] + 1) {
					return SendClientMessage(playerid, COLOR_GREY, "Yanl Slot.");
				}
				else if(PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1] != 0) {
					new
						szWeapon[16],
						szMessage[128];

					GetWeaponName(PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1], szWeapon, sizeof(szWeapon));
					GivePlayerValidWeapon(playerid, PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1], 60000);
					PlayerVehicleInfo[playerid][d][pvWeapons][iWeaponSlot - 1] = 0;

					format(szMessage, sizeof(szMessage), "Aracnn bagajndan bir %s kardn.", szWeapon);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);

					format(szMessage, sizeof(szMessage), "* %s aracnn bagajndan bir %s karr.", GetPlayerNameEx(playerid), szWeapon);
					return ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else return SendClientMessage(playerid, COLOR_WHITE, "Bu slotta silahn yok.");
			}
		}
	}
	return SendClientMessage(playerid,COLOR_GREY,"Sahip olduun bir aracn iinde deilsin.");
}

CMD:aracbagaji(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

	if(IsPlayerInAnyVehicle(playerid))
		return SendClientMessage(playerid, COLOR_WHITE, "Aracn iersindeyken bagaj kontrol edemezsin.");

	if(GetPVarInt(playerid, "PBM") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");

	if(GetPVarInt(playerid, "EventToken") != 0)
		return SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");

	if(PlayerInfo[playerid][pConnectTime] < 2)
		return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

	new
		Float: fVehPos[3],
		iCount;

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) {
		if(PlayerVehicleInfo[playerid][d][pvId] != INVALID_PLAYER_VEHICLE_ID) {
			GetVehiclePos(PlayerVehicleInfo[playerid][d][pvId], fVehPos[0], fVehPos[1], fVehPos[2]);
			if(IsPlayerInRangeOfPoint(playerid, 4.5, fVehPos[0], fVehPos[1], fVehPos[2])) {
				if(GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 481 || GetVehicleModel(PlayerVehicleInfo[playerid][d][pvId]) == 509)
					return SendClientMessage(playerid,COLOR_GREY,"Bu aracn bagaj yok.");

				GetVehicleParamsEx(PlayerVehicleInfo[playerid][d][pvId], engine, lights, alarm, doors, bonnet, boot, objective);
				if(boot == VEHICLE_PARAMS_OFF || boot == VEHICLE_PARAMS_UNSET)
					return SendClientMessage(playerid, COLOR_GRAD3, "Bagaj kapal.");

				new
					szMessage[64];

				format(szMessage, sizeof(szMessage), "*** %s adl kiinin arac :%s Bagaj ***", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][d][pvId]));
				SendClientMessage(playerid, COLOR_WHITE, szMessage);
				for(new s = 0; s < 3; s++) if(PlayerVehicleInfo[playerid][d][pvWeapons][s] != 0) {
					new
						szWeapon[16];

					GetWeaponName(PlayerVehicleInfo[playerid][d][pvWeapons][s], szWeapon, sizeof(szWeapon));
					format(szMessage, sizeof(szMessage), "Slot %d: %s", s+1, szWeapon);
					SendClientMessage(playerid, COLOR_WHITE, szMessage);
				}
				iCount ++;
			}
		}
	}
	if(iCount == 0)
		return SendClientMessage(playerid,COLOR_GREY,"Sahip olduun bir aracn iersinde deilsin.");
	return 1;
}

CMD:araclarim(playerid, params[])
{
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	new vstring[1024];
	for(new i, iModelID; i < MAX_PLAYERVEHICLES; i++) {
		if((iModelID = PlayerVehicleInfo[playerid][i][pvModelId] - 400) >= 0) {
			if(PlayerVehicleInfo[playerid][i][pvImpounded]) {
			format(vstring, sizeof(vstring), "%s\n%s (El konuldu)", vstring, VehicleName[iModelID]);
			}
			else if(PlayerVehicleInfo[playerid][i][pvDisabled]) {
				format(vstring, sizeof(vstring), "%s\n%s (Men edilmi)", vstring, VehicleName[iModelID]);
			}
			else if(PlayerVehicleInfo[playerid][i][pvSpawned] != 1) {
				format(vstring, sizeof(vstring), "%s\n%s (Depoda)", vstring, VehicleName[iModelID]);
			}
			else format(vstring, sizeof(vstring), "%s\n%s (Aktif)", vstring, VehicleName[iModelID]);
		}
		else strcat(vstring, "\nBo");
	}
	ShowPlayerDialogEx(playerid, VEHICLESTORAGE, DIALOG_STYLE_LIST, "Ara Garaj", vstring, "kart", "Iptal");
 	return 1;
}

CMD:aracidlerim(playerid, params[])
{
	new string[128];
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
	{
	    new pvid = PlayerVehicleInfo[playerid][i][pvId];
	    new pvmodel = PlayerVehicleInfo[playerid][i][pvModelId];
	    if(pvid != 0)
	    {
	        format(string, sizeof(string), "Car ID: %s | Car Name: %s", pvid, VehicleName[pvmodel]);
	        SendClientMessage(playerid, COLOR_WHITE, string);
	    }
    	else
		{
		    SendClientMessage(playerid, COLOR_WHITE, "ERROR: You do not own any vehicles.");
		    return 1;
		}
	}
	return 1;
}

CMD:zanaat(playerid, params[])
{
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	if(PlayerInfo[playerid][pJob] != 18 && PlayerInfo[playerid][pJob2] != 18)
	{
		SendClientMessage(playerid,COLOR_GREY,"   Zanaatkar deilsin!");
		return 1;
	}
	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		SendClientMessage(playerid,COLOR_GREY,"   Hapishanedeyken zanaat yapamazsn!");
		return 1;
	}
	new string[128];
	if(GetPVarInt(playerid, "ArmsTimer") > 0)
	{
		format(string, sizeof(string), "   %d saniye beklemen gerekiyor.", GetPVarInt(playerid, "ArmsTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
	if(GetPVarInt(playerid, "Hospital") == 1 || GetPVarInt(playerid, "Hospital") == 2 || GetPVarInt(playerid, "Hospital") == 3 || GetPVarInt(playerid, "Hospital") == 4 || GetPVarInt(playerid, "Hospital") == 5)
	{
		SendClientMessage(playerid, COLOR_GREY, "Hastanedeyken zanaat yapamazsn.");
		return 1;
	}

	new giveplayerid, choice[32], weapon, price;
	if(sscanf(params, "us[32]", giveplayerid, choice))
	{
		SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessage(playerid, COLOR_YELLOW, "<< Kullanilabilir Zanaatler >>");
		SendClientMessage(playerid, COLOR_GRAD1, "tornavida(1000)");
		SendClientMessage(playerid, COLOR_GRAD1, "tekerlek(250)");
		SendClientMessage(playerid, COLOR_GRAD1, "ilkyardim(1000)	 kamera(250)");
		SendClientMessage(playerid, COLOR_GRAD1, "yerlestirilebilirkamera(8000)	     alici(5000)");
		SendClientMessage(playerid, COLOR_GRAD1, "gps(1000)          bocektemizleyici(10000)");
		SendClientMessage(playerid, COLOR_GRAD1, "parasut(50)");
		SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /zanaat [Oyuncu ID/sim] [craftname]");
		return 1;
	}
	if(IsPlayerConnected(giveplayerid))
	{
		if(isnull(choice))
		{
			SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
			SendClientMessage(playerid, COLOR_YELLOW, "<< Kullanilabilir Zanaatler >>");
			SendClientMessage(playerid, COLOR_GRAD1, "tornavida(1000)");
			SendClientMessage(playerid, COLOR_GRAD1, "tekerlek(250)");
			SendClientMessage(playerid, COLOR_GRAD1, "ilkyardim(1000)	 kamera(250)");
			SendClientMessage(playerid, COLOR_GRAD1, "yerlestirilebilirkamera(8000)	     alici(5000)");
			SendClientMessage(playerid, COLOR_GRAD1, "gps(1000)          bocektemizleyici(10000)");
			SendClientMessage(playerid, COLOR_GRAD1, "parasut(50)");
			SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /zanaat [Oyuncu ID/sim] [craftname]");
			return 1;
		}
		if(strcmp(choice,"tornavida",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 1000)
			{
				price = 1000;
				weapon = 1;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}
		else if(strcmp(choice,"tekerlek",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 250)
			{
				price = 250;
				weapon = 5;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}
		else if(strcmp(choice,"ilkyardim",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 1000)
			{
				price = 1000;
				weapon = 7;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}
		else if(strcmp(choice,"kamera",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 250)
			{
				price = 250;
				weapon = 8;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}
		else if(strcmp(choice,"yerlestirilebilirkamera",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 8000)
			{
				price = 8000;
				weapon = 9;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}
		else if(strcmp(choice,"alici",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 5000)
			{
				price = 5000;
				weapon = 10;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}
		else if(strcmp(choice,"gps",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 1000)
			{
				price = 1000;
				weapon = 11;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}

		else if(strcmp(choice,"bocektemizleyici",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 10000)
			{
				price = 10000;
				weapon = 12;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}

		else if(strcmp(choice,"parasut",true) == 0)
		{
			if(PlayerInfo[playerid][pMats] >= 50)
			{
				price = 50;
				weapon = 13;
			}
			else
			{
				SendClientMessage(playerid,COLOR_GREY,"   Yeterli materyal yok!");
				return 1;
			}
		}

		else { SendClientMessage(playerid,COLOR_GREY,"   Byle bir zanaat yok!"); return 1; }
		if(ProxDetectorS(5.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				format(string, sizeof(string), "   Kendine bir adet %s verdin.", choice);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD1, string);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				switch(PlayerInfo[playerid][pSex])
				{
					case 1: format(string, sizeof(string), "* %s materyali kullanarak birey yapt.", GetPlayerNameEx(playerid));
					case 2: format(string, sizeof(string), "* %s materyali kullanarak birey yapt.", GetPlayerNameEx(playerid));
				}
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

				PlayerInfo[playerid][pMats] -= price;
				//PlayerInfo[playerid][pCraftSkill]++;

				SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
				switch(weapon) {
					case 1: {
						PlayerInfo[playerid][pScrewdriver]++;
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/silahsat");
					}
					case 5: {
						PlayerInfo[playerid][pTire]++;
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/tamtamir");
					}
					case 7: {
						PlayerInfo[playerid][pFirstaid]++;
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/ilkyardim");
					}
					case 8: {
						GivePlayerValidWeapon(playerid, 43, 50);
					}
					case 9: {
						PlayerInfo[playerid][pRccam]++;
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/kamerayerlestir");
					}
					case 10: {
						PlayerInfo[playerid][pReceiver]++;
						SetPVarInt(playerid, "pReceiverMLeft", 40);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "You will receive the next four department radio messages.");
					}
					case 11: {
						PlayerInfo[playerid][pGPS]++;
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/gps");
					}
					case 12: {
						PlayerInfo[playerid][pSweep]++;
						PlayerInfo[playerid][pSweepLeft] = 3;
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, "/bocektemizle");
					}
					case 13: {
						GivePlayerValidWeapon(playerid, 46, 99999);
					}
				}
				return 1;
			}

			format(string, sizeof(string), "* %s adl kiiye %s satmak istiyorsunuz.", GetPlayerNameEx(giveplayerid), choice);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Zanaatkar %s sana %s satmaya alyor, (rnek: /kabulet zanaat).", GetPlayerNameEx(playerid), choice);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			CraftOffer[giveplayerid] = playerid;
			CraftId[giveplayerid] = weapon;
			CraftMats[giveplayerid] = price;
			format(CraftName[giveplayerid], 50, "%s", choice);
			SetPVarInt(playerid, "ArmsTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
		return 1;
	}
}

CMD:esyalarim(playerid, params[])
{
    new str[32];
    SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
	SendClientMessage(playerid, COLOR_YELLOW, "<< Zanaat Esyalari >>");
	format(str, sizeof(str), "Tornavida: %d", PlayerInfo[playerid][pScrewdriver]);
	SendClientMessage(playerid, COLOR_GRAD1, str);
	format(str, sizeof(str), "Lastik: %d", PlayerInfo[playerid][pTire]);
	SendClientMessage(playerid, COLOR_GRAD1, str);
	format(str, sizeof(str), "Ilkyardim: %d   Rccam: %d", PlayerInfo[playerid][pFirstaid], PlayerInfo[playerid][pRccam]);
	SendClientMessage(playerid, COLOR_GRAD1, str);
	format(str, sizeof(str), "Alici: %d   GPS: %d", PlayerInfo[playerid][pReceiver], PlayerInfo[playerid][pGPS]);
	SendClientMessage(playerid, COLOR_GRAD1, str);
	format(str, sizeof(str), "Bocek Temizleyici: %d", PlayerInfo[playerid][pSweep]);
	SendClientMessage(playerid, COLOR_GRAD1, str);
	return 1;
}



CMD:ilkyardim(playerid, params[])
{
	if(GetPVarInt(playerid, "PBM") > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Paintball oynarken bunu yapamazsn!");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") == 1)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Yaralyken bunu yapamazsn.");
		return 1;
	}
 	if(PlayerBoxing[playerid] == 1)
  	{
   		SendClientMessage(playerid, COLOR_GREY, "Box Msabakasnda bunu yapamazsn.");
     	return 1;
   	}
	if(PlayerInfo[playerid][pFirstaid] > 0)
	{
		if(GetPVarInt(playerid, "usingfirstaid") == 0)
		{
			new string[128];
			PlayerInfo[playerid][pFirstaid]--;
			SetPVarInt(playerid, "firstaid5", SetTimerEx("firstaid5", 5000, 1, "d", playerid));
			SetPVarInt(playerid, "firstaidexpire", SetTimerEx("firstaidexpire",10*60000, 0, "d", playerid));
			SetPVarInt(playerid, "usingfirstaid", 1);
			format(string, sizeof(string), "* %s adl kii ilk yardm antasndan antibiyotik karr ve kullanr.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Zaten Antibiyotik kullanyorsun!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "lk yardm antan yok!");
	}
	return 1;
}

CMD:kamerayerlestir(playerid, params[])
{
	if(PlayerInfo[playerid][pRccam] > 0)
	{
		new string[128];
		if(GetPVarInt(playerid, "rccam") == 0)
		{
			if(IsPlayerInAnyVehicle(playerid))
				return SendClientMessage(playerid, COLOR_GRAD1, "Ara iersindeyken kamera yerletiremezsin!");

			if(GetPlayerInterior(playerid) != 0 || GetPlayerVirtualWorld(playerid) != 0)
				return SendClientMessage(playerid, COLOR_GRAD1, "Bina iersine kamera yerletiremezsin!");

			PlayerInfo[playerid][pRccam]--;
			SetPVarInt(playerid, "rccam", 1);
			new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPVarFloat(playerid, "rcX", X);
			SetPVarFloat(playerid, "rcY", Y);
			SetPVarFloat(playerid, "rcZ", Z);
			if(GetPVarInt(playerid, "rcveh") != 0)
			{
				DestroyVehicle(GetPVarInt(playerid, "rcveh"));
				VehicleRadioStation[GetPVarInt(playerid, "rcveh")] = 0;
			}
			SetPVarInt(playerid, "rcveh", AddStaticVehicle(594, X, Y, Z, 0, 0, 0));
			PutPlayerInVehicle(playerid, GetPVarInt(playerid, "rcveh"), 0);
			SetPVarInt(playerid, "rccamtimer", SetTimerEx("rccam", 60000, 0, "d", playerid));
			format(string, sizeof(string), "* %s zemine birey yerletirir.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			DestroyVehicle(GetPVarInt(playerid, "rcveh"));
			VehicleRadioStation[GetPVarInt(playerid, "rcveh")] = 0;
			SetPlayerPos(playerid, GetPVarFloat(playerid, "rcX"), GetPVarFloat(playerid, "rcY"), GetPVarFloat(playerid, "rcZ"));
			DeletePVar(playerid, "rccam");
			KillTimer(GetPVarInt(playerid, "rccamtimer"));
		}
	}
	else
	{
		if(GetPVarInt(playerid, "rccam") == 1)
		{
			DestroyVehicle(GetPVarInt(playerid, "rcveh"));
			VehicleRadioStation[GetPVarInt(playerid, "rcveh")] = 0;
			SetPlayerPos(playerid, GetPVarFloat(playerid, "rcX"), GetPVarFloat(playerid, "rcY"), GetPVarFloat(playerid, "rcZ"));
			DeletePVar(playerid, "rccam");
			KillTimer(GetPVarInt(playerid, "rccamtimer"));
			return 1;
		}
		SendClientMessage(playerid, COLOR_GRAD1, "Kameran yok!");
	}
	return 1;
}

/* CMD:gps(playerid, params[]) //DEAKTF
{
	if(PlayerInfo[playerid][pGPS] > 0)
	{
		new string[128];
		if(GetPVarInt(playerid, "gpsonoff") == 0)
		{
			format(string, sizeof(string), "* %s GPS cihazn aar.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "gpsonoff", 1);
			GPS[playerid] = TextDrawCreate(85.000000, 322.000000, "Yukleniyor..");
			TextDrawAlignment(GPS[playerid], 2);
			TextDrawBackgroundColor(GPS[playerid], 255);
			TextDrawFont(GPS[playerid], 0);
			TextDrawLetterSize(GPS[playerid], 0.809998, 1.500000);
			TextDrawColor(GPS[playerid], -1);
			TextDrawSetOutline(GPS[playerid], 1);
			TextDrawSetProportional(GPS[playerid], 1);
			TextDrawShowForPlayer(playerid, GPS[playerid]);
		}
		else
		{
			format(string, sizeof(string), "* %s GPS cihazn kapatr.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			DeletePVar(playerid, "gpsonoff");
			TextDrawDestroy(GPS[playerid]);
		}
	}

	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "GPS cihazn yok!");
	}
	return 1;
} */

CMD:bocektemizle(playerid, params[])
{
	if(PlayerInfo[playerid][pSweep] > 0)
	{
		if(PlayerInfo[playerid][pSweepLeft] > 0)
		{
			new string[128], giveplayerid;
			if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /bocektemizle [Oyuncu ID/sim]");

			if(!ProxDetectorS(4.0, playerid, giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "Hedefe daha fazla yaklaman gerekiyor.");
			PlayerInfo[playerid][pSweepLeft]--;
			format(string, sizeof(string), "* %s eliyle  %s adl kiinin kyafetine dokunur, tozlar silkeler...", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			if(PlayerInfo[giveplayerid][pBugged] > 0)
			{
				PlayerInfo[giveplayerid][pBugged] = 0;
				format(string, sizeof(string), "* ok ksa bir sre %s adl kiinin stnde ufak bir k yanar.", GetPlayerNameEx(giveplayerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "(bug) %s: *statik*", GetPlayerNameEx(giveplayerid));
				SendBugMessage(2, COLOR_LIGHTGREEN, string);
			}
			else
			{
				ProxDetector(30.0, playerid, "Hibirey olmad.", COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bceinin bataryas bitti!");
			PlayerInfo[playerid][pSweep]--;
			PlayerInfo[playerid][pSweepLeft] = 3;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "zerinde herhangi bir bcek yok!");
	}
	return 1;
}

CMD:alici(playerid, params[])
{
	if(PlayerInfo[playerid][pReceiver] > 0)
	{
		if(!GetPVarType(playerid, "pReceiverOn"))
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Alc'n aktif ettin.");
			SetPVarInt(playerid, "pReceiverOn", 1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_YELLOW, "Alc'n deaktif ettin.");
			DeletePVar(playerid, "pReceiverOn");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Alcn bulunmuyor.");
	}
	return 1;
}

CMD:lideryardim(playerid, params[])
{
    if(PlayerInfo[playerid][pLeader] >= 1) {
        SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
        SendClientMessage(playerid, COLOR_WHITE,"*** LDER YARDIM *** - Daha fazla bilgi iin bir komut yazn.");
        SendClientMessage(playerid, COLOR_GRAD3,"*** LDERLER *** /davetet /olusumdanat /rutbever /offlineolusumdanat");
    }
    else {
        SendClientMessage(playerid, COLOR_GREY, "Lider deilsin.");
    }
    return 1;
}

CMD:arac(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /arac [sim]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Isiklar, Bagaj, Kaput, Cam, Benzin");
		return 1;
	}
	else if(strcmp(params, "isiklar", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		new vehicleid = GetPlayerVehicleID(playerid);
		if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return SendClientMessage(playerid,COLOR_WHITE,"Bu komut bu ara iersinde kullanlamaz");
		SetVehicleLights(vehicleid, playerid);
	}
	else if(strcmp(params, "bagaj", true) == 0)
  	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510)
			{
				return SendClientMessage(playerid,COLOR_WHITE,"Bu komut bu ara iersinde kullanlamaz.");
			}
			SetVehicleTrunk(vehicleid, playerid);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
		{
			new closestcar = GetClosestCar(playerid);
			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
			{
				if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510)
				{
					return SendClientMessage(playerid,COLOR_WHITE,"Bu komut bu ara iersinde kullanlamaz.");
				}
				SetVehicleTrunk(closestcar, playerid);
			}
		}
	}
	else if(strcmp(params, "kaput", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || IsAPlane(vehicleid) || IsABike(vehicleid))
			{
				return SendClientMessage(playerid,COLOR_WHITE,"Bu komut bu ara iersinde kullanlamaz.");
			}
			SetVehicleHood(vehicleid, playerid);
		}
		else if(!IsPlayerInAnyVehicle(playerid))
		{
			new closestcar = GetClosestCar(playerid);
			if(IsPlayerInRangeOfVehicle(playerid, closestcar, 5.0))
			{
				if(GetVehicleModel(closestcar) == 481 || GetVehicleModel(closestcar) == 509 || GetVehicleModel(closestcar) == 510 || IsAPlane(closestcar) || IsABike(closestcar))
				{
					return SendClientMessage(playerid,COLOR_WHITE,"Bu komut bu ara iersinde kullanlamaz.");
				}
				SetVehicleHood(closestcar, playerid);
			}
		}
	}
	else if(strcmp(params, "cam", true) == 0 && IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(IsABoat(GetPlayerVehicleID(playerid)) || IsAPlane(GetPlayerVehicleID(playerid)) || IsABike(GetPlayerVehicleID(playerid)) || IsAHelicopter(GetPlayerVehicleID(playerid)))
				return SendClientMessage(playerid, COLOR_GREY, "Bu arata cam aamazsn.");

			new vehicleid = GetPlayerVehicleID(playerid);
			if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510 || IsAPlane(vehicleid) || IsABike(vehicleid))
				return SendClientMessage(playerid,COLOR_WHITE,"Bu komut bu ara iersinde kullanlamaz");

			new
				string[128];
			if(IsVehicleWindowsDown[vehicleid] == 0) { // Window Open
				IsVehicleWindowsDown[vehicleid] = 1;
				format(string, sizeof(string), "* %s aracn penceresini kapatr.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			} else {
				IsVehicleWindowsDown[vehicleid] = 0;
				format(string, sizeof(string), "* %s aracn peneresini aar.", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
		}
		else SendClientMessage(playerid,COLOR_WHITE,"Bir ara iersinde deilsin veya src deilsin.");
	}
	else if(strcmp(params, "benzin", true) == 0 && IsPlayerInAnyVehicle(playerid))
	{
		if(GetVehicleModel(GetPlayerVehicleID(playerid)) == 481 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 509 || GetVehicleModel(GetPlayerVehicleID(playerid)) == 510) return 1;
		if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		{
			if(GetPVarInt(playerid, "fuelonoff") == 0)
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Benzin gstergesini atn.");
				SetPVarInt(playerid, "fuelonoff", 1);
				FuelBar[playerid] = CreateProgressBar(548.00, 26.00, 57.50, 3.20, 866792447, 100.0);
				SetProgressBarValue(FuelBar[playerid], Fuel[GetPlayerVehicleID(playerid)]);
				ShowProgressBarForPlayer(playerid, FuelBar[playerid]);
			}
			else
			{
				SendClientMessageEx(playerid, COLOR_WHITE, "Benzin gstergesini kapattn.");
				HideProgressBarForPlayer(playerid, FuelBar[playerid]);
				SetPVarInt(playerid, "fuelonoff", 0);
				DestroyProgressBar(FuelBar[playerid]);
				FuelBar[playerid] = INVALID_BAR_ID;
			}
		}
		else SendClientMessage(playerid,COLOR_WHITE,"Bir ara iersinde deilsin veya src deilsin!");
	}
	return 1;
}

CMD:animdurdur(playerid, params[])
{
	if(StopaniFloats[playerid][0] != 0)
	{
	    SendClientMessage (playerid, COLOR_GREY, "Zaten animasyonlarn durdurmay deniyorsun!");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0)
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");
	}
	else
	{
	    GetPlayerPos(playerid, StopaniFloats[playerid][0], StopaniFloats[playerid][1], StopaniFloats[playerid][2]);
		SetTimerEx("StopaniTimer", 5000, 0, "d", playerid);
		SendClientMessage (playerid, COLOR_YELLOW, "5 saniye kprdama, Animasyonlarn silinecek!");
	}
	return 1;
}

forward StopaniTimer(playerid);
public StopaniTimer(playerid)
{
	new Float:posX, Float:posY, Float:posZ;
    GetPlayerPos(playerid, posX, posY, posZ);

    if(StopaniFloats[playerid][0] != posX || StopaniFloats[playerid][1] != posY || StopaniFloats[playerid][2] != posZ)
	{
	    SendClientMessage (playerid, COLOR_YELLOW, "Animasyon sfrlamas baarsz oldu, Kprdadn!");
    	for(new i = 0; i < 3; i++)
		{
			StopaniFloats[playerid][i] = 0;
		}
	    return 1;
	}
	SendClientMessage (playerid, COLOR_YELLOW, "Animasyonlarn baaryla temizlendi!");
	ClearAnimations(playerid, 1);
	SetPlayerSkin(playerid, GetPlayerSkin(playerid));
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

	for(new i = 0; i < 3; i++)
	{
		StopaniFloats[playerid][i] = 0;
	}
	return 1;
}

CMD:kiyafetal(playerid, params[]) {
	if(IsAtClothShop(playerid)) {
		if(PlayerInfo[playerid][pFaction] == 0 && PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pDonator] == 0)
			ShowModelSelectionMenu(playerid, SkinList, "Skin Menu");
		else
		    ShowModelSelectionMenu(playerid, SkinList, "Skin Menu");
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "   Kyafet maazasnda deilsin !");
	}
	return 1;
}

CMD:ode(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	
    if(PlayerInfo[playerid][pLevel] < 2)
	    return SendClientMessage(playerid, COLOR_WHITE, "2 Level olmadan para veremezsin.");


	new
		iTargetID, iCashAmount;

	if(sscanf(params, "ui", iTargetID, iCashAmount)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ode [Oyuncu ID/sim] [amount]");

	if(iTargetID == playerid)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Kendi kendine para veremezsin!");
		return 1;
	}
	if(iCashAmount > 100 && PlayerInfo[playerid][pLevel] < 2)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "100$'dan fazla para verebilmek iin en az 2 level olmalsn.");
		return 1;
	}
	if(iCashAmount < 1 || iCashAmount > 10000)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "10.000 $'dan fazla paray bir seferde veremezsin.");
		return 1;
	}
	if(IsPlayerConnected(iTargetID))
	{
		if(ProxDetectorS(5.0, playerid, iTargetID))
		{
			new
				szMessage[128], giveplayer[MAX_PLAYER_NAME], sendername[MAX_PLAYER_NAME], playermoney = GetPlayerCash(playerid);

			giveplayer = GetPlayerNameEx(iTargetID);
			sendername = GetPlayerNameEx(playerid);
			if(iCashAmount > 0 && playermoney >= iCashAmount)
			{
				GivePlayerCash(playerid, (0 - iCashAmount));
				GivePlayerCash(iTargetID, iCashAmount);
				format(szMessage, sizeof(szMessage), "    %s(ID: %d) adl kiiye %d$ gnderdin.", GetPlayerNameEx(iTargetID),iTargetID, iCashAmount);
				PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
				SendClientMessage(playerid, COLOR_GRAD1, szMessage);
				format(szMessage, sizeof(szMessage), "   %s(ID: %d) adl kiiden %d$ para aldn.", GetPlayerNameEx(playerid), playerid, iCashAmount);
				SendClientMessage(iTargetID, COLOR_GRAD1, szMessage);

				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(iTargetID, ipex, sizeof(ipex));
				format(szMessage, sizeof(szMessage), "%s (IP:%s) has paid $%d to %s (IP:%s)", GetPlayerNameEx(playerid), ip, iCashAmount, GetPlayerNameEx(iTargetID), ipex);
				Log("logs/pay.log", szMessage);

				PayWarn[playerid][iTargetID] += iCashAmount;
				if(PayWarn[playerid][iTargetID] >= 10000 && PlayerInfo[playerid][pLevel] <= 3)
				{
					format(szMessage, sizeof(szMessage), "%s (IP:%s) has paid %s (IP:%s) $%d in this session.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(iTargetID), ipex, PayWarn[playerid][iTargetID]);
					ABroadCast(COLOR_YELLOW, szMessage, 1);
				}

				if(iCashAmount >= 100000)
				{
					ABroadCast(COLOR_YELLOW,szMessage,1);
				}

				PlayerPlaySound(iTargetID, 1052, 0.0, 0.0, 0.0);
				format(szMessage, sizeof(szMessage), "* %s adl kii bir miktar para karr ve %s adl kiiye verir.", GetPlayerNameEx(playerid) ,GetPlayerNameEx(iTargetID));
				ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD1, "   Geersiz tutar !");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu !");
	return 1;
}

CMD:egitim(playerid, params[])
{
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 756.229125, 5.614504, 1000.698608) || IsPlayerInRangeOfPoint(playerid, 3.0, 758.43,-78.0,1000.65))
	{
		ShowPlayerDialogEx(playerid, FIGHTMENU, DIALOG_STYLE_LIST, "Dv Stilleri", "Boxing		$5000\nElbow		$5000\nKneehead	$5000\nKung-Fu	$5000\nGrabKick	$5000\nNormal", "Learn", "Iptal");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Dv stili renebilecein bir yerde deilsin !(GYM'in iersinde)");
	}
	return 1;
}

CMD:iceceksat(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 19 || PlayerInfo[playerid][pJob2] == 19)
	{
		if(IsAtBar(playerid))
		{
			new string[128], giveplayerid;
			if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /iceceksat [Oyuncu ID/smi]");

			if(IsPlayerConnected(giveplayerid))
			{
				if(playerid == giveplayerid)
				{
					return SendClientMessage(playerid, COLOR_GREY, " Kendine iecek satamazsn.");
				}
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					DrinkOffer[giveplayerid] = playerid;
					format(string, sizeof(string), "* Barmen %s size bir iecek satmak istiyor. Kendinize bir iecek semek iin /kabulet icecek.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s adl kiiye bir iecek satmaya alyorsun.",GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				else
				{
					return SendClientMessage(playerid, COLOR_GREY, " Bu kii yannda deil!");
				}
			}
			else
			{
				return SendClientMessage(playerid, COLOR_GREY, " Bu kii oyunda deil!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Herhangi bir Barn iersinde deilsin!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Barmen Deilsin!");
		return 1;
	}
	return 1;
}

CMD:potkullan(playerid, params[]) {
	if(GetPVarInt(playerid, "EventToken") == 1 && EventInfo[EventToggleHeal] == 1)
		return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlikteyken pot kullanamazsn!");

	if(GetPVarInt(playerid, "PBM") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oynarken pot kullanamazsn.");

	if(PlayerBoxing[playerid] > 0)
		return SendClientMessage(playerid, COLOR_GREY, "Box msabakasnda pot kullanamazsn.");

	if(PlayerCuffed[playerid] >= 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Kelepeliyken/okluyken pot kullanamazsn.");

	if(UsedWeed[playerid] == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Daha fazla uyuturucu kullanmak iin 5 saniye beklemelisin.");

	if(GetPVarInt(playerid, "Injured") == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Yaralyken uyuturucu kullanamazsn.");

	new string[128], Float:health, healthint;
	GetPlayerHealth(playerid, health);
	healthint = floatround(health, floatround_round);
	if(healthint >= 100)
	{
		SendClientMessage(playerid, COLOR_GREY, "Cann zaten maksimum seviyede.");
		return 1;
	}
	if(PlayerInfo[playerid][pPot] > 1)
	{
		if(PlayerStoned[playerid] > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Pot kullandn iink kafan iyi oldu.");
		PlayerStoned[playerid] += 1;
		if(PlayerStoned[playerid] == 3)
		{
			GameTextForPlayer(playerid, "~w~Sahro ~b~Oldun !", 5000, 3);
		}
		if(healthint > 80)
		{
			SetPlayerHealth(playerid, 100);
		}
		else
		{
			SetPlayerHealth(playerid, health + 20.0);
		}
		SendClientMessage(playerid, COLOR_GREY, " 2 gram pot kullandnz!");
		format(string, sizeof(string), "* %s adl kii biraz pot kulland.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pPot] -= 2;
		UsedWeed[playerid] = 1;
		SetTimerEx("ClearDrugs", 5000, false, "d", playerid);
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
		switch(GetPVarInt(playerid, "STD")) {
			case 1:
			{
				DeletePVar(playerid, "STD");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu kullandn iin AIDS hastalndan kurtuldun!");
			}
			case 2:
			{
				SetPVarInt(playerid, "STD", 1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Hastalndan kurtulmak iin aama kaydettin!");
			}
			case 3:
			{
				SetPVarInt(playerid, "STD", 2);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You reduced the STD to gonorrhea because of the drugs!");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY,"zerinde pot yok!");
	}
	return 1;
}

CMD:crackkullan(playerid, params[])
{
	if(GetPVarInt(playerid, "EventToken") == 1 && EventInfo[EventToggleHeal] == 1)
		return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlikteyken iyiletiremezsin!");

	new Float:armour;
	GetPlayerArmour(playerid, armour);

	if(GetPVarInt(playerid, "PBM") > 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Paintball oynarken Crack kullanamazsn.");

	if(PlayerBoxing[playerid] > 0)
		return SendClientMessage(playerid, COLOR_GREY, "Box msabakasnda Crack kullanamzsn.");

	if(PlayerCuffed[playerid] >= 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Kelepeliyken/okluyken crack kullanamazsn.");

	if(UsedWeed[playerid] == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Daha fazla crack kullanmak iin 5 saniye beklemelisin.");

	if(armour >= 100)
		return SendClientMessage(playerid, COLOR_GREY, "Zrhn zaten maksimum seviyede.");

	if(GetPVarInt(playerid, "Injured") == 1)
		return SendClientMessage(playerid, COLOR_WHITE, "Yaralyken Crack kullanamazsn.");

	if(PlayerInfo[playerid][pCrack] > 1)
	{
		if(PlayerStoned[playerid] > 3) return SendClientMessage(playerid, COLOR_GRAD1, "Crack kullandn iin kafan iyi oldu.");
		PlayerStoned[playerid] += 1;
		if(PlayerStoned[playerid] == 3)
		{
			GameTextForPlayer(playerid, "~w~Sarho ~b~Oldun", 5000, 3);
		}
		new string[128], Float:PlayersArmour;
		GetPlayerArmour(playerid, PlayersArmour);
		SendClientMessage(playerid, COLOR_GREY, " 2 gram crack kullandn!");
		format(string, sizeof(string), "* %s adl kii bir miktar crack kulland.", GetPlayerNameEx(playerid));
		ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		PlayerInfo[playerid][pCrack] -= 2;
		UsedCrack[playerid] = 1;
		SetTimerEx("ClearDrugs", 5000, false, "d", playerid);
		if(PlayersArmour > 90)
		{
			SetPlayerArmourEx(playerid, 100);
		}
		else
		{
			SetPlayerArmourEx(playerid, PlayersArmour + 10.0);
		}
		if(!IsPlayerInAnyVehicle(playerid)) ApplyAnimation(playerid,"SMOKING","M_smkstnd_loop",2.1,0,0,0,0,0);
		switch(GetPVarInt(playerid, "STD")) {
			case 1:
			{
				DeletePVar(playerid, "STD");
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu kullandn iin AIDS hastalndan kurtuldun!!");
			}
			case 2:
			{
				SetPVarInt(playerid, "STD", 1);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You reduced the STD to chlamydia because of the drugs!");
			}
			case 3:
			{
				SetPVarInt(playerid, "STD", 2);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You reduced the STD to gonorrhea because of the drugs!");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "zerinde crack yok!");
	}
	return 1;
}

CMD:taksimetre(playerid, params[])
{
 	if(PlayerInfo[playerid][pLeader] == 6 || PlayerInfo[playerid][pFaction] == 6)
	{
		new string[128], fare;
		if(sscanf(params, "d", fare)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /taksimetre [fiyat]");

		if(TransportDuty[playerid] > 0)
		{
			if(TransportDuty[playerid] == 1)
			{
				TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
				BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			format(string, sizeof(string), "* uanda i banda deilsin, Kazancn: %d$.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			SetPlayerToTeamColor(playerid);
			return 1;
		}
		if(JobDuty[playerid] != 0) return SendClientMessage(playerid,COLOR_GREY,"Avukat yada Tamirci Meslekleinden kmanz gerekiyor.");
		new newcar = GetPlayerVehicleID(playerid);
		if(IsAnTaxi(newcar))
		{
			if(GetPlayerState(playerid) == 2)
			{
				if(fare < 1 || fare > 50)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Taksimetre 1$ ile 50$ arasnda alabilir!");
					return 1;
				}
				TaxiDrivers += 1; TransportDuty[playerid] = 1; TransportValue[playerid] = fare;
				format(string, sizeof(string), "* Taksi fr olarak i ba yaptn, Taksimetre: $%d.", TransportValue[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPlayerToTeamColor(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Src deilsiniz!");
				return 1;
			}
		}
		else if(IsAnBus(newcar))
		{
			if(GetPlayerState(playerid) == 2)
			{
				if(fare < 1 || fare > 50)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Taksimetre 1$ ile 50$ arasnda olabilir!");
					return 1;
				}
				BusDrivers += 1; TransportDuty[playerid] = 2; TransportValue[playerid]=fare;
				format(string, sizeof(string), "* Otobs fr olarak i ba yaptn, Taksimetre: $%d.", TransportValue[playerid]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				SetPlayerToTeamColor(playerid);
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Src deilsin!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Taksi veya Otobste deilsin!");
		}
	}
	else
	{
		SendClientMessage(playerid,COLOR_GREY,"Taksi/Otobs src belgesine sahip deilsin!");
		return 1;
	}
	return 1;
}

CMD:dovus(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 12 && PlayerInfo[playerid][pJob2] != 12)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Boxr deilsin!");
		return 1;
	}
	if(InRing > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Zaten bir Box msabakas sryor, bitmesini beklemelisin!");
		return 1;
	}
	if(PlayerBoxing[playerid] > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Zaten Box msabakasndasn!");
		return 1;
	}

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /dovus [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(IsPlayerInRangeOfPoint(playerid,20.0,765.952270, 4.167977, 1000.719238))
			{
				if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendi kendine box yapamazsn!"); return 1; }
				format(string, sizeof(string), "* %s adl kiiye bir box msabakas teklif ettin.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Boxr %s sizinle bir box msabakas yapmak istiyor (rnek: /kabulet dovus).", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				BoxOffer[giveplayerid] = playerid;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2,"GYM'de deilsin!");
				return 1;
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			return 1;
		}

	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		return 1;
	}
	return 1;
}

CMD:boxistatistik(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 12 && PlayerInfo[playerid][pJob2] != 12)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Boxr deilsin!");
		return 1;
	}

	new string[128], ttext[20];//Title
	new clevel = PlayerInfo[playerid][pBoxSkill];
	if(clevel >= 0 && clevel <= 50) { ttext = "Acemi"; }
	else if(clevel >= 51 && clevel <= 200) { ttext = "Amatr"; }
	else if(clevel >= 201 && clevel <= 400) { ttext = "Profesyonel"; }
	new ntext[20];//NickName
	new level = PlayerInfo[playerid][pWins];
	if(level > 0 && PlayerInfo[playerid][pLoses] == 0)
	{
		ntext = "Yenilmez";
	}
	else
	{
		if(level >= 0 && level <= 10) { ntext = "Yeni Gelen"; }
		else if(level >= 11 && level <= 20) { ntext = "Sert Herif"; }
		else if(level >= 21 && level <= 30) { ntext = "Ceviz Kraca"; }
		else if(level >= 31 && level <= 40) { ntext = "Demir Yumruk"; }
		else if(level >= 41 && level <= 50) { ntext = "Kafatas Avcs"; }
		else if(level >= 51 && level <= 60) { ntext = "Hafif ve Hzl"; }
		else if(level >= 61 && level <= 70) { ntext = "Savac"; }
		else if(level >= 71) { ntext = "Rambo"; }
	}
	SendClientMessage(playerid, COLOR_WHITE, "|__________________ Box Kaytlar __________________|");
	format(string, sizeof(string), "| Balk: %s.", ttext);
	SendClientMessage(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Takma sim: %s.", ntext);
	SendClientMessage(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Toplam Galibiyet: %d.", PlayerInfo[playerid][pWins]);
	SendClientMessage(playerid, COLOR_GREY, string);
	format(string, sizeof(string), "| Toplam Malubiyet: %d.", PlayerInfo[playerid][pLoses]);
	SendClientMessage(playerid, COLOR_GREY, string);
	SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________________|");
	return 1;
}

CMD:ver(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new string[128], giveplayerid, choice[32], amount;
	if(sscanf(params, "us[32]d", giveplayerid, choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ver [Oyuncu ID/sim] [name] [amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Pot, Crack, Materials");
		return 1;
	}

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(amount < 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "zerinde bu kadar yok!");
				return 1;
			}

			if(!ProxDetectorS(5.0, playerid, giveplayerid))
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
				return 1;
			}

			if(giveplayerid == playerid)
			{
			    SendClientMessage(playerid, COLOR_GREY, "Bu komutu kendi zerinde kullanamazsn!");
			    return 1;
			}

			if(strcmp(choice, "materials", true) == 0)
			{
				if(PlayerInfo[playerid][pMats] >= amount)
				{
					format(string, sizeof(string), "%s adl kiiden %d mataryel aldn.", GetPlayerNameEx(playerid), amount);
					SendClientMessage(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pMats] += amount;
					PlayerInfo[playerid][pMats] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s(IP:%s) has given %s(IP:%s) %d materials.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(giveplayerid), ipex, amount);
					Log("logs/pay.log", string);
					format(string, sizeof(string), "%s adl kiiye %d materyal verdin.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s adl kii %s adl kiiye bir miktar materyal verir.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu kadar materyalin yok!");
					return 1;
				}
			}
			if(strcmp(choice, "pot", true) == 0)
			{
				if(PlayerInfo[playerid][pPot] >= amount)
				{
					if(amount + PlayerInfo[giveplayerid][pPot] >= 51)
					{
						SendClientMessage(playerid, COLOR_GREY, "Bu kii 50 den fazla pot tayamaz!");
						return 1;
					}
					new level = PlayerInfo[playerid][pDrugsSkill];
					if(level >= 0 && level < 50)
					{ if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 10'dan fazla tayamazsn!"); return 1; } }
					else if(level >= 50 && level < 100)
					{ if(amount < 1 || amount > 20) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 20'den fazla tayamazsn!"); return 1; } }
					else if(level >= 100 && level < 200)
					{ if(amount < 1 || amount > 30) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 30'dan fazla tayamazsn!"); return 1; } }
					else if(level >= 200 && level < 400)
					{ if(amount < 1 || amount > 40) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 40'dan fazla tayamazsn."); return 1; } }
					else if(level >= 400)
					{ if(amount < 1 || amount > 50) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 50'den fazla tayamazsn."); return 1; } }
					format(string, sizeof(string), "%s adl kiiden %d Pot aldn.", GetPlayerNameEx(playerid), amount);
					SendClientMessage(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pPot] += amount;
					PlayerInfo[playerid][pPot] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), " %s adl kiiye %d Pot verdin.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s adl kii %s adl kiiye bir miktar pot verir.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "zerinde bu kadar Pot yok!");
					return 1;
				}
			}
			if(strcmp(choice, "crack", true) == 0)
			{
				if(PlayerInfo[playerid][pCrack] >= amount)
				{
					if(amount + PlayerInfo[giveplayerid][pCrack] >= 26)
					{
						SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu 25 Crack'ten fazlasn tayamaz!");
						return 1;
					}
					new level = PlayerInfo[playerid][pDrugsSkill];
					if(level >= 0 && level < 50)
					{ if(amount < 1 || amount > 5) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 5'den fazla tayamazsn!"); return 1; } }
					else if(level >= 50 && level < 100)
					{ if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 10'dan fazla tayamazsn!"); return 1; } }
					else if(level >= 100 && level < 200)
					{ if(amount < 1 || amount > 15) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 15'den fazla tayamazsn!"); return 1; } }
					else if(level >= 200 && level < 400)
					{ if(amount < 1 || amount > 20) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 20'den fazla tayamazsn!"); return 1; } }
					else if(level >= 400)
					{ if(amount < 1 || amount > 25) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 25'ten fazla tayamazsn!"); return 1; } }
					format(string, sizeof(string), " %s adl kiiden %d crack aldn.", GetPlayerNameEx(playerid), amount);
					SendClientMessage(giveplayerid, COLOR_GRAD2, string);
					PlayerInfo[giveplayerid][pCrack] += amount;
					PlayerInfo[playerid][pCrack] -= amount;
					new ip[32], ipex[32];
					GetPlayerIp(playerid, ip, sizeof(ip));
					GetPlayerIp(giveplayerid, ipex, sizeof(ipex));
					format(string, sizeof(string), "%s adl kiiye %d crack verdin.", GetPlayerNameEx(giveplayerid), amount);
					SendClientMessage(playerid, COLOR_GRAD2, string);
					format(string, sizeof(string), "* %s adl kii %s adl kiiye bir miktar crack verir.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					return 1;
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "zerinde bu kadar crack yok!");
					return 1;
				}
			}
		}
	}
	return 1;
}

CMD:paketal(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob2] != 9 && PlayerInfo[playerid][pJob] != 18 && PlayerInfo[playerid][pJob2] != 18)
	{
		SendClientMessage(playerid,COLOR_GREY,"   Zanaatkar veya Silah satcs deilsin!");
		return 1;
	}
	if(CheckPointCheck(playerid))
	{
		SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
		return 1;
	}

	new mypoint = -1;
	new mypointex = -1;
	new mydeliver = 0;

	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for (new i=0; i<MAX_POINTS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 1)
		{
			mypoint = i;
			mypointex = i;
			mydeliver = Points[i][MatPoint];
		}
	}
	if(mypoint == -1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Paket alabilecein herhangi bir yer yok!");
		return 1;
	}
	mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if(Points[i][MatPoint] == mydeliver && Points[i][Type] == 2)
		{
			mypoint = i;
		}
	}
	if(mypoint == -1)
	{
		SendClientMessage(playerid, COLOR_GREY, " Ulatn noktada bir Materyal fabrikas yok!");
		return 1;
	}
    if(GetPVarInt(playerid, "Packages") > 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Daha fazla Materyal paketi tayamazsn!");
		return 1;
	}
	if(GetPlayerCash(playerid) < 50)
	{
		SendClientMessage(playerid, COLOR_GREY," zerinde yeterli para yok!");
		return 1;
	}
	GivePlayerCash(playerid, -50);
	SetPVarInt(playerid, "Packages", 10);
	SendClientMessage(playerid, COLOR_LIGHTBLUE,"*  50$ karlnda 10 adet materyal paketi aldn.");

	SetPVarInt(playerid, "MatDeliver", mydeliver);
	SetPVarInt(playerid, "tpMatRunTimer", 10);
	SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);

	for(new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if(strcmp(Points[mypointex][Owner], FamilyInfo[i][FamilyName], true) == 0)
		{
			FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+25;
		}
	}
	SetPlayerCheckpoint(playerid, Points[mypoint][Pointx], Points[mypoint][Pointy], Points[mypoint][Pointz], 5);
	return 1;
}



CMD:materyalsat(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(PlayerInfo[playerid][pJob] != 9 && PlayerInfo[playerid][pJob2] != 9 && PlayerInfo[playerid][pJob] != 18 && PlayerInfo[playerid][pJob2] != 18)
	{
		SendClientMessage(playerid, COLOR_GREY, "Zanaatkar veya Silah satcs deilsin");
		return 1;
	}
	new string[128];
	if(GetPVarInt(playerid, "SellMatsTimer") > 0)
	{
		format(string, sizeof(string), "Materyal satabilmek iin %d saniye beklemelisiniz..", GetPVarInt(playerid, "SellMatsTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}

	new giveplayerid, amount, price;
	if(sscanf(params, "udd", giveplayerid, amount, price)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /materyalsat [Oyuncu ID/sim] [miktar] [fiyat]");

	if(amount < 1) { SendClientMessage(playerid, COLOR_GREY, "Materyal miktar 1 den dk olamaz!"); return 1; }
    if(price < 5000) { SendClientMessage(playerid, COLOR_GREY, "Fiyat 5000$'dan dk olamaz, Daha az satlar iin /ode komutunu kullanabilirsin."); return 1; }
	if(amount > PlayerInfo[playerid][pMats]) { SendClientMessage(playerid, COLOR_GREY, "zerinde bu kadar mataryel yok!"); return 1; }

	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessage(playerid, COLOR_GREY, "Kendi kendine materyal satamazsn!");
					return 1;
				}
				format(string, sizeof(string), "* %s adl kiiye %d adet mataryeli %d$ fiyatna satyorsun.", GetPlayerNameEx(giveplayerid), amount, price);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* %s adl kii sana %d materyali %d$ fiyatna satmak istiyor, (type /kabulet materyal).", GetPlayerNameEx(playerid), amount, price);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

				SetPVarInt(playerid, "SellMatsTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_SELLMATSTIMER);

				MatsOffer[giveplayerid] = playerid;
				MatsPrice[giveplayerid] = price;
				MatsAmount[giveplayerid] = amount;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:zirhsat(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 8 && PlayerInfo[playerid][pJob2] != 8)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bodyguard degilsin.");
		return 1;
	}

	if(GetPVarInt(playerid, "EventToken") == 1 && EventInfo[EventToggleHeal] == 1)
		return SendClientMessage(playerid, COLOR_GRAD2, "Etkinlikteyken bu komutu kullanamazsn!");

	if(PlayerBoxing[playerid] > 0)
  	{
   		SendClientMessage(playerid, COLOR_GREY, "Box msabakasnda zrh satamazsn.");
     	return 1;
   	}

	new string[128], giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /zirhsat [Oyuncu ID/sim] [fiyat]");
	if(GetPVarInt(playerid, "GuardTimer") > 0)
	{
		format(string, sizeof(string), "   Baka bir zrh satmak iin %d saniye beklemelisiniz.", GetPVarInt(playerid, "GuardTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}
	if(money < 200 || money > 1000) { SendClientMessage(playerid, COLOR_GREY, "cret 200$ ile 1000$ arasnda olabilir."); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{

		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GREY, "Kendi kendine zrh satamazsn.");
				return 1;
			}

			SetPVarInt(playerid, "GuardTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
			format(string, sizeof(string), "* %s adl kiiye %d$ karl zrh satmaya alyorsun.", GetPlayerNameEx(giveplayerid), money);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Bodyguard %s size %d$ karlnda zrh satmaya alyor, rnek: /kabulet zirh.", GetPlayerNameEx(playerid), money);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			GuardOffer[giveplayerid] = playerid;
			GuardPrice[giveplayerid] = money;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		}

	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	return 1;
}

/* CMD:arackirala(playerid, params[]) //DEAKTF
{
    GameTextForPlayer(playerid, " ", 500, 4);
	new
		vID = GetPlayerVehicleID(playerid);
	if (!vID)
	{
 		SendClientMessage(playerid, COLOR_WHITE, "Kiralanabilir bir arata deilsin (lk Baladn Yerin Karsndaki Aralar Kiralktr).");
		return 1;
	}
	if (!IsRentableCar(vID))
	{
 		SendClientMessage(playerid, COLOR_WHITE, "Bu ara kiralk deil.");
		return 1;
	}
	if (IsRentedCar(vID))
	{
		SendClientMessage(playerid, COLOR_WHITE, "Bu ara zaten baka birisi tarafndan kiralanm.");
		return 1;
	}
	if (GetPVarInt(playerid, "Renting") == 1)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Zaten kiralam olduun bir ara var.");
		return 1;
	}
	if (!CanAffordRental(playerid))
	{
 		new String[128];
   		format(String, 128, "Bu arac kiralamak iin yeterli paran yok. {3399CC}(Fiyat: 200 $)");
		SendClientMessage(playerid, COLOR_WHITE, String);
		return 1;
	}
	IsRented[vID] = 1;
	TogglePlayerControllable(playerid, 1);
	SetPVarInt(playerid, "CarRentID", vID);
 	SetPVarInt(playerid, "Renting", 1);
	new String[256];
	format(String, 256, "~w~bu araci kiraladin~n~Odedigin tutar: ~g~200 $~n~oyundan cikana kadar bu araci kiralamis olacaksin.");
	GameTextForPlayer(playerid, String, 4000, 4);
	GivePlayerCash(playerid, -200);
	SendClientMessage(playerid, COLOR_WHITE, "{3399CC}Ara kiraland.{FFFFFF} Artk motoru altrabilirsin. N tuu ya da [/motor].");
	SendClientMessage(playerid, COLOR_WHITE, "Aracn kirasn sonlandrmak istiyorsan [/arackirabitir] kullan.");
	return 1;
}

CMD:arackirabitir(playerid, params[])
{
	GameTextForPlayer(playerid, " ", 500, 4);
	if (GetPVarInt(playerid, "Renting") == 0)
	{
 		SendClientMessage(playerid, -1, "u an hi bir arac kiralamyorsun.");
		return 1;
	}
	new
		vID = GetPVarInt(playerid, "CarRentID");
	IsRented[vID] = 0;
	SetPVarInt(playerid, "CarRentID", 0);
	SetPVarInt(playerid, "Renting", 0);
	new
		Float:X,
		Float:Y,
		Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	SetPlayerPos(playerid, X, Y, Z+1);
	TogglePlayerControllable(playerid, 1);
	SetVehicleToRespawn(vID);
	RentedBy[vID] = "No-one";
	return 1;
}

CMD:arackirayardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"____ARA KRALAMA____");
    SendClientMessage(playerid, COLOR_GRAD3,"****** /arackirala /arackirabitir ******");
    return 1;
}
 */
CMD:aileduyuru(playerid, params[]) {
	if(PlayerInfo[playerid][pGang] < 255) {
	    new
	        string[128];

		format(string, sizeof(string), "Aile Duyurusu: %s.", FamilyInfo[PlayerInfo[playerid][pGang]][FamilyMOTD]);
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	return 1;
}

CMD:aracikinciel(playerid, params[])
{
	return cmd_aracieldencikar(playerid, params);
}

CMD:aracieldencikar(playerid, params[])
{
   	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	if(PlayerInfo[playerid][pCarTime] == 0)
	{
		if(CheckPointCheck(playerid))
		{
			SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
			return 1;
 		}
 		if(PlayerInfo[playerid][pConnectTime] < 2)
 		{
 		    SendClientMessage(playerid, COLOR_GREY, "You need at least 2 playing hours before you can drop off a car.");
 		    return 1;
 		}

		GameTextForPlayer(playerid, "~w~Arac Satisi ~n~~r~Araci limana birak", 5000, 1);
		CP[playerid] = 1;
		SetPlayerCheckpoint(playerid, 2695.8699,-2225.3853,13.5501,8.0);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Zaten bir arac sattn, Tekrar satabilmek iin beklemelisin!");
	}
	return 1;
}

CMD:avukatisbasi(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 2 || PlayerInfo[playerid][pJob2] == 2)
	{
        if(JobDuty[playerid] == 1)
		{
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* uanda Avukat olarak ibanda deislin.Artk teklifler gelmeyecek.");
            JobDuty[playerid] = 0;
            Lawyers -= 1;
        }
        else
		{
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* uanda Avukat olarak ibandasn.Teklifler ekrannda gzkecektir.");
            JobDuty[playerid] = 1;
            Lawyers += 1;
        }
    }
    else
	{
        SendClientMessage(playerid, COLOR_GRAD1, "   Avukat deilsin!");
    }
    return 1;
}

CMD:koru(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2 && PlayerInfo[playerid][pJob2] != 2)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Avukat deilsin!");
		return 1;
	}

	new string[128];
	if(PlayerInfo[playerid][pLawyerTime] >= 1)
	{
		format(string, sizeof(string), " Mvekkilini tekrar savunmak iin %d beklemelisiniz!", PlayerInfo[playerid][pLawyerTime]);
		SendClientMessage(playerid, COLOR_GRAD1,string);
		return 1;
	}

	new giveplayerid, money;
	if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /koru [Oyuncu ID/sim] [fiyat]");
	if(money < 200 || money > 1000) { SendClientMessage(playerid, COLOR_GREY, "   200$ - 1000$ arasnda bir fiyat seiniz!"); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{
		if(ProxDetectorS(8.0, playerid, giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				SendClientMessage(playerid, COLOR_GREY, "   Kendi kendini koruyamazsn!");
				return 1;
			}
			if(PlayerInfo[giveplayerid][pWantedLevel] > 0)
			{
				format(string, sizeof(string), "* %s adl kiiye %d$ karl hukuki savunma teklif ediyorsun.", GetPlayerNameEx(giveplayerid), money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Avukat %s seni %d$ karl savunmak istiyor, (kabul etmek iin /kabulet koru)", GetPlayerNameEx(playerid), money);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pLawyerTime] = 60;
				DefendOffer[giveplayerid] = playerid;
				DefendPrice[giveplayerid] = money;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "   Bu kii arananlar listesinde deil!");
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:serbestbirak(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 2 && PlayerInfo[playerid][pJob2] != 2)
		return SendClientMessage(playerid, COLOR_GREY, "   Avukat Deilsin!");

	new
		string[128],
		giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /serbestbirak [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid)) {
		if(giveplayerid == playerid)
			return SendClientMessage(playerid, COLOR_GREY, "Kendi kendini serbest brakamazsn!");

		if(GetDistanceBetweenPlayers(giveplayerid, playerid) > 5)
			return SendClientMessage(playerid, COLOR_GREY, "ok uzaktasn.");

		if(PlayerInfo[playerid][pLawyerFreeTime] >= 1) {
			format(string, sizeof(string), "%d saniye beklemeniz gerekiyor!", PlayerInfo[playerid][pLawyerFreeTime]);
			SendClientMessage(playerid, COLOR_GRAD1,string);
			return 1;
		}

		if(PlayerInfo[giveplayerid][pJailed] == 1 || PlayerInfo[giveplayerid][pJailed] == 2) {
			//ApprovedLawyer[playerid] = 0;
			WantLawyer[giveplayerid] = 0;
			CallLawyer[giveplayerid] = 0;
			JailPrice[giveplayerid] = 0;

			new level = PlayerInfo[playerid][pLawSkill];
			if(level >= 0 && level < 50) {
				PlayerInfo[giveplayerid][pJailTime] -= 60;
				PlayerInfo[playerid][pLawyerFreeTime] = 160;

				format(string, sizeof(string), "* %s adl kiinin hapis sresini 1 dakika azalttn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Avukat %s, hapis sreni 1 dakika azaltt.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			} else if(level >= 50 && level < 100) {
				PlayerInfo[giveplayerid][pJailTime] -= 120;
				PlayerInfo[playerid][pLawyerFreeTime] = 120;

				format(string, sizeof(string), "* %s adl kiinin hapis sresini 2 dakika azalttn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Avukat %s, hapis sreni 2 dakika azaltt.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			} else if(level >= 100 && level < 200) {
				PlayerInfo[giveplayerid][pJailTime] -= 180;
				PlayerInfo[playerid][pLawyerFreeTime] = 90;

				format(string, sizeof(string), "* %s adl kiinin hapis sresini 3 dakika azalttn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Avukat %s, hapis sreni 3 dakika azaltt.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			} else if(level >= 200 && level < 400) {
				PlayerInfo[giveplayerid][pJailTime] -= 240;
				PlayerInfo[playerid][pLawyerFreeTime] = 60;

				format(string, sizeof(string), "* %s adl kiinin hapis sresini 4 dakika azalttn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Avukat %s, hapis sreni 4 dakika azaltt.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			} else if(level >= 400) {
				PlayerInfo[giveplayerid][pJailTime] -= 300;
				PlayerInfo[playerid][pLawyerFreeTime] = 30;

				format(string, sizeof(string), "* %s adl kiinin hapis sresini 5 dakika azalttn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Avukat %s, hapis sreni 5 dakika azaltt.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			}

			#if defined DOUBLE_EXP_ENABLED
				new hour,minuite,second;
				gettime(hour,minuite,second);
				if(DoubleEXPcheck(hour))
				{
				    PlayerInfo[playerid][pLawSkill] += 2;
				    SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
					PlayerInfo[playerid][pLawSkill]++;
				}
			#else
				PlayerInfo[playerid][pLawSkill]++;
			#endif

			if(PlayerInfo[playerid][pLawSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Avukat yetenek levelin 2 oldu, Artk daha hzl ve daha iyi bir avukatsn."); }
			else if(PlayerInfo[playerid][pLawSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Avukat yetenek levelin 3 oldu, Artk daha hzl ve daha iyi bir avukatsn."); }
			else if(PlayerInfo[playerid][pLawSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Avukat yetenek levelin 4 oldu, Artk daha hzl ve daha iyi bir avukatsn."); }
			else if(PlayerInfo[playerid][pLawSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Avukat yetenek levelin 5 oldu, Artk daha hzl ve daha iyi bir avukatsn."); }
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "   Oyuncunun Avukata ihtiyac yok / Oyuncu hapiste deil!");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:kasaal(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] != 14 && PlayerInfo[playerid][pJob2] != 14)
	{
		SendClientMessage(playerid,COLOR_GREY,"   Uyuturucu Kaaks deilsin!");
		return 1;
	}
	new mypoint = -1;

	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for (new i=0; i<MAX_POINTS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Drug Factory", true) == 0)
		{
			mypoint = i;
		}
	}
	if(mypoint == -1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Uyuturucu fabrikasnda deilsin!");
		return 1;
	}
	if(PlayerInfo[playerid][pCrates])
	{
		SendClientMessage(playerid, COLOR_GREY, "   Daha fazla uyuturucu kasas tayamazsn!");
		return 1;
	}
 	if(CheckPointCheck(playerid))
 	{
  		SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
    	return 1;
  	}
	if(GetPlayerCash(playerid) >= 100)
	{
		SendClientMessage(playerid, COLOR_LIGHTRED,"Ne eit bir uyuturucu tamak istiyorsun? (rnek: crack veya pot)");
		SetPVarInt(playerid, "ChoosingDrugs", 1);
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY," $100' karlayamyorsun.");
		return 1;
	}
}

CMD:potal(playerid, params[])
{
	new string[128], amount;
	if(sscanf(params, "d", amount)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /potal [amount]");

	new tel;
	new price;
	new level = PlayerInfo[playerid][pDrugsSkill];
	if(level >= 0 && level < 50)
	{ tel = 10; if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 10'dan fazla tayamazsn!"); return 1; } }
	else if(level >= 50 && level < 100)
	{ tel = 10; if(amount < 1 || amount > 20) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 20'den fazla tayamazsn!"); return 1; } }
	else if(level >= 100 && level < 200)
	{ tel = 10; if(amount < 1 || amount > 30) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 30'dan fazla tayamazsn!"); return 1; } }
	else if(level >= 200 && level < 400)
	{ tel = 10; if(amount < 1 || amount > 40) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 40'dan fazla tayamazsn."); return 1; } }
	else if(level >= 400)
	{ tel = 10; if(amount < 1 || amount > 50) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 50'den fazla tayamazsn."); return 1; } }
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
		{
			mypoint = i;
		}
	}
	if(mypoint == -1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Uyuturucu evinde deilsin!");
		return 1;
	}
	if(PlayerInfo[playerid][pPot] >= 25)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "25'ten fazla pot alamazsn.");
		return 1;
	}
	if(PlayerInfo[playerid][pGang] == 255)
	{
		price = amount * tel;
		if(Points[mypoint][Stock] < amount) return SendClientMessage(playerid, COLOR_GREY, "   Bu uyuturucu evinde bu kadar pot yok.");
		if(GetPlayerCash(playerid) > price)
		{
			format(string, sizeof(string), "* %d gram potu %d$ karl satn aldn.", amount, price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, -price);
			PlayerInfo[playerid][pPot] += amount;

			Points[mypoint][Stock] -= amount;
			format(string, sizeof(string), " ALINABILIR POT: %d gram.", Points[mypoint][Stock]);
			UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);

			for(new i = 0; i < sizeof(FamilyInfo); i++)
			{
				if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
				{
					FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+price/2;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Uyuturucu tayamazsnz!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Uyuturucu Satcs deilsin.");
		return 1;
	}
	return 1;
}

CMD:crackal(playerid, params[])
{
	new string[128], amount;
	if(sscanf(params, "d", amount)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /crackal [miktar]");

	new tel;
	new price;
	new level = PlayerInfo[playerid][pDrugsSkill];
	if(level >= 0 && level < 50)
	{
		tel = 50;
		if(amount < 1 || amount > 5)
		{
			SendClientMessage(playerid, COLOR_GREY, "   uanki yetenek level'inde 5'ten fazla alamazsn!");
			return 1;
		}
	}
	else if(level >= 50 && level < 100)
	{ tel = 50; if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   uanki yetenek level'inde 10'ten fazla alamazsn!"); return 1; } }
	else if(level >= 100 && level < 200)
	{ tel = 50; if(amount < 1 || amount > 15) { SendClientMessage(playerid, COLOR_GREY, "   uanki yetenek level'inde 15'ten fazla alamazsn!"); return 1; } }
	else if(level >= 200 && level < 400)
	{ tel = 50; if(amount < 1 || amount > 20) { SendClientMessage(playerid, COLOR_GREY, "   uanki yetenek level'inde 20'ten fazla alamazsn!"); return 1; } }
	else if(level >= 400)
	{ tel = 50; if(amount < 1 || amount > 25) { SendClientMessage(playerid, COLOR_GREY, "   uanki yetenek level'inde 25'ten fazla alamazsn!"); return 1; } }
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 4)
		{
			mypoint = i;
		}
	}
	if(mypoint == -1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Crack laboratuvarnda deilsin!");
		return 1;
	}
	if(PlayerInfo[playerid][pCrack] >= 25)
	{
		SendClientMessage(playerid, COLOR_GRAD2, " 25'ten fazla crack tayamazsn.");
		return 1;
	}
	if(PlayerInfo[playerid][pGang] == 255)
	{
		price = amount * tel;
		if(Points[mypoint][Stock] < amount) return SendClientMessage(playerid, COLOR_GREY, "   Bu crack laboratuvarnda bu kadar crack yok!");
		if(GetPlayerCash(playerid) > price)
		{
			format(string, sizeof(string), "* %d gram crack'i %d$ karlnda satn aldn.", amount, price);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, -price);
			PlayerInfo[playerid][pCrack] += amount;

			//if(PlayerInfo[playerid][pDonator] < 1) Points[mypoint][Stock] = Points[mypoint][Stock]-amount;
			Points[mypoint][Stock] = Points[mypoint][Stock]-amount;

			format(string, sizeof(string), " ALINABILIR CRACK: %d gram.", Points[mypoint][Stock]);
			UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);
			for(new i = 0; i < sizeof(FamilyInfo); i++)
			{
				if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
				{
					FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+price/2;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "   Uyuturucunun fiyatn karlayamazsn / tayamazsn!");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Uyuturucu Satcs deilsin.");
		return 1;
	}
	return 1;
}

CMD:tohumal(playerid, params[])
{
    if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Uyuturucu satcs deilsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pWSeeds] > 0)
	{
	    SendClientMessage(playerid, COLOR_GREY, "Zaten tohum paketiniz var, ncelikle onu kullann.");
	    return 1;
	}
	if(GetPlayerCash(playerid) < 1000)
	{
	    SendClientMessage(playerid, COLOR_GREY, "1000$'n yok.");
	    return 1;
	}
	new mypoint = -1;
	for (new i=0; i<MAX_POINTS; i++)
  	{
	   	if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && Points[i][Type] == 3)
	   	{
			mypoint = i;
		}
   	}
   	if(mypoint == -1)
   	{
		SendClientMessage(playerid, COLOR_GREY, "Uyuturucu Evinde deilsin!");
		return 1;
   	}
	if(Points[mypoint][Stock] < 1) return SendClientMessage(playerid, COLOR_GREY, "   Bu uyuturu evinde tohum paketi yok.");

	new string[32];
	Points[mypoint][Stock] -= 1;
	format(string, sizeof(string), " ALINABILIR POT: %d gram.", Points[mypoint][Stock]);
	UpdateDynamic3DTextLabelText(Points[mypoint][TextLabel], COLOR_YELLOW, string);

	PlayerInfo[playerid][pWSeeds] += 3;
	SendClientMessage(playerid, COLOR_LIGHTBLUE, " Uyuturucu evinden tohum paketi satn aldn. ");
	GivePlayerCash(playerid, -1000);
	GameTextForPlayer(playerid, "~r~-1000$", 3000, 1);
	for(new i = 0; i < sizeof(FamilyInfo); i++)
	{
		if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
		{
			FamilyInfo[i][FamilyBank] += 500;
		}
	}
	return 1;
}

CMD:tohumdik(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4) {
		SendClientMessage(playerid, COLOR_GREY, "   Uyuturucu Satcs deilsin.");
	}
 	else if(PlayerInfo[playerid][pWSeeds] > 10) {
		if(IsValidDynamicObject(PlayerInfo[playerid][pWeedObject]))
		    return SendClientMessage(playerid, COLOR_GRAD2, "Ayn anda 10 taneden fazla tohum dikemezsin.");

		if(IsPlayerInAnyVehicle(playerid))
		    return SendClientMessage(playerid, COLOR_GREY, "Ara iersindeyken tohum dikemezsin.");

		new
			szMessage[48];

		GetPlayerPos(playerid, PlayerInfo[playerid][pWeedPos][0], PlayerInfo[playerid][pWeedPos][1], PlayerInfo[playerid][pWeedPos][2]);
		PlayerInfo[playerid][pWeedPos][2] -= 1.5;

        ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_In", 4.0, 0, 0, 0, 0, 0, 1);
		SendClientMessage(playerid, COLOR_GREEN, "Biraz tohum diktin. 20-45 dakika sonra mahsl toplayabilirsin.");

		PlayerInfo[playerid][pWeedInt] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pWeedVW] = GetPlayerVirtualWorld(playerid);
		PlayerInfo[playerid][pWeedGrowth] = 0;
		PlayerInfo[playerid][pWSeeds]--;
		PlayerInfo[playerid][pWeedObject] = CreateDynamicObject(3409, PlayerInfo[playerid][pWeedPos][0], PlayerInfo[playerid][pWeedPos][1], PlayerInfo[playerid][pWeedPos][2], 0.0, 0.0, 0.0, PlayerInfo[playerid][pWeedVW], PlayerInfo[playerid][pWeedInt]);
		format(szMessage, sizeof(szMessage), "* %s biraz tohum diker.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	else SendClientMessage(playerid, COLOR_GREY, "Dikebilmek iin yeterince tohumun yok.");
	return 1;
}

CMD:tohumkontrol(playerid, params[]) {
	if(IsValidDynamicObject(PlayerInfo[playerid][pWeedObject]) && GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pWeedVW] && GetPlayerInterior(playerid) == PlayerInfo[playerid][pWeedInt]) {
	    if(IsPlayerInRangeOfPoint(playerid, 4, PlayerInfo[playerid][pWeedPos][0], PlayerInfo[playerid][pWeedPos][1], PlayerInfo[playerid][pWeedPos][2])) {
			if(PlayerInfo[playerid][pWeedGrowth] > 10) {

				new
					szMessage[66 + MAX_PLAYER_NAME];

				format(szMessage, sizeof(szMessage), " Tohumlarn byd ve u anda %i gram oldular - toplamak iin /tohumtopla yaz", PlayerInfo[playerid][pWeedGrowth]);
				SendClientMessage(playerid, COLOR_WHITE, szMessage);
			}
			else SendClientMessage(playerid, COLOR_YELLOW, "Tohumlarn henz yetimedi.Tohumlar toplayabilmek iin beklemelisin.");
			return 1;
		}
	}
	foreach(Player, i) if(IsValidDynamicObject(PlayerInfo[i][pWeedObject]) && GetPlayerVirtualWorld(playerid) == PlayerInfo[i][pWeedVW] && GetPlayerInterior(playerid) == PlayerInfo[i][pWeedInt]) {
	    if(IsPlayerInRangeOfPoint(playerid, 4, PlayerInfo[i][pWeedPos][0], PlayerInfo[i][pWeedPos][1], PlayerInfo[i][pWeedPos][2])) {
			if(PlayerInfo[i][pWeedGrowth] > 10) {

				new
					szMessage[66 + MAX_PLAYER_NAME];

				format(szMessage, sizeof(szMessage), "Tohumlarn byd ve u anda %i gram oldular - toplamak iin /tohumtopla yaz.", PlayerInfo[i][pWeedGrowth]);
				SendClientMessage(playerid, COLOR_WHITE, szMessage);
			}
			else SendClientMessage(playerid, COLOR_YELLOW, "Tohumlarn henz yetimedi.Tohumlar toplayabilmek iin beklemelisin.");
			return 1;
		}
	}
	return SendClientMessage(playerid, COLOR_GREY, "Tohumlarn ektiin yerde deilsin.");
}

CMD:tohumtopla(playerid, params[]) {
	foreach(Player, i) if(IsValidDynamicObject(PlayerInfo[i][pWeedObject]) && IsPlayerInRangeOfPoint(playerid, 4, PlayerInfo[i][pWeedPos][0], PlayerInfo[i][pWeedPos][1], PlayerInfo[i][pWeedPos][2])) {
	    if(GetPlayerVirtualWorld(playerid) == PlayerInfo[i][pWeedVW] && GetPlayerInterior(playerid) == PlayerInfo[i][pWeedInt]) {
			if(PlayerInfo[i][pWeedGrowth] > 10) {
				if(PlayerInfo[i][pWeedGrowth] + PlayerInfo[playerid][pPot] < 2000) {

					new
						szMessage[52];

					ApplyAnimation(playerid,"BOMBER","BOM_Plant_Crouch_Out", 4.0, 0, 0, 0, 0, 0, 1);
					PlayerInfo[playerid][pPot] += PlayerInfo[i][pWeedGrowth];
					format(szMessage, sizeof(szMessage), "Byyen tohumlar alarak %d gram pot topladn..", PlayerInfo[i][pWeedGrowth]);
					SendClientMessage(playerid, COLOR_GREY, szMessage);
					format(szMessage, sizeof(szMessage), "* %s diktii tohumlar toplar.", GetPlayerNameEx(playerid));
					ProxDetector(25.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					DestroyDynamicObject(PlayerInfo[i][pWeedObject]);
					PlayerInfo[i][pWeedObject] = 0;
					return 1;
				}
				else SendClientMessage(playerid, COLOR_GREY, "2000 gram pot'tan fazlasn tayamazsn.");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Bu tohum henz toplanmak iin hazr deil.");
			return 1;
		}
	}
	return SendClientMessage(playerid, COLOR_GREY, "Tohum dikim yerinde deilsin.");
}

CMD:potsat(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Uyuturucu satcs deilsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pDrugsTime] != 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Daha fazla uyuturucu satabilmek iin 1 dakika beklemelisin.");
		return 1;
	}

	new string[128], giveplayerid, needed, money;
	if(sscanf(params, "udd", giveplayerid, needed, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /potsat [Oyuncu ID/sim] [miktar] [fiyat]");

	if(needed < 1 || needed > 249) { SendClientMessage(playerid, COLOR_GREY, "   Gram miktar 1-250 arasnda olmaldr!"); return 1; }
	if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Fiyat 1 - 100000 arasnda olmaldr!"); return 1; }
	if(needed > PlayerInfo[playerid][pPot]) { SendClientMessage(playerid, COLOR_GREY, "   zerinde bu kadar pot yok!"); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Kendi kendine satamazsn!");
					return 1;
				}
				format(string, sizeof(string), "* %s adl kiiye %d gram potu %d$ karl satmay nerdin.", GetPlayerNameEx(giveplayerid), needed, money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Uyuturucu Satcs %s sana %d gram potu %d$ karl satmak istiyor, (rnek: /kabulet pot).", GetPlayerNameEx(playerid), needed, money);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pDrugsTime] = 60;
				PotOffer[giveplayerid] = playerid;
				PotPrice[giveplayerid] = money;
				PotGram[giveplayerid] = needed;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu oyunda deil.");
	}
	return 1;
}

CMD:cracksat(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(PlayerInfo[playerid][pJob] != 4 && PlayerInfo[playerid][pJob2] != 4)
	{
		SendClientMessage(playerid, COLOR_GREY, "   Uyuturucu satcs deilsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pDrugsTime] != 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Daha fazla uyuturucu satabilmek iin 1 dakika beklemelisin.");
		return 1;
	}

	new string[128], giveplayerid, needed, money;
	if(sscanf(params, "udd", giveplayerid, needed, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /cracksat [Oyuncu ID/sim] [miktar] [fiyat]");

	if(needed < 1 || needed > 99) { SendClientMessage(playerid, COLOR_GREY, "   Gram miktar 1-99 arasnda olmaldr!"); return 1; }
	if(money < 1 || money > 99999) { SendClientMessage(playerid, COLOR_GREY, "   Fiyat 1 - 99999 arasnda olmaldr!"); return 1; }
	if(needed > PlayerInfo[playerid][pCrack]) { SendClientMessage(playerid, COLOR_GREY, "   zerinde bu kadar crack yok!"); return 1; }
	if(IsPlayerConnected(giveplayerid))
	{
		if(giveplayerid != INVALID_PLAYER_ID)
		{
			if(ProxDetectorS(8.0, playerid, giveplayerid))
			{
				if(giveplayerid == playerid)
				{
					SendClientMessage(playerid, COLOR_GREY, "   Kendi kendine sat yapamazsn!");
					return 1;
				}
				format(string, sizeof(string), "* %s adl kiiye %d gram Crack'i %d$'dan satmay nerdin.", GetPlayerNameEx(giveplayerid), needed, money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Uyuturucu satcs %s sana %d gram crack'i %d$ karlnda satmay neriyor, (rnek: /kabulet crack).", GetPlayerNameEx(playerid), needed, money);
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pDrugsTime] = 60;
				CrackOffer[giveplayerid] = playerid;
				CrackPrice[giveplayerid] = money;
				CrackGram[giveplayerid] = needed;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu oyunda deil.");
	}
	return 1;
}

CMD:dedit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /dedit [name] [amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Pot, Crack");
		return 1;
	}

	if(strcmp(choice,"pot",true) == 0)
	{
		for(new h = 0; h < sizeof(Points); h++)
		{
			if(Points[h][Type] == 3)
			{
				Points[h][Stock] = amount;
				format(string, sizeof(string), " ALINABILIR POT: %d gram.", Points[h][Stock]);
				UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
				SendClientMessage(playerid, COLOR_WHITE, " You have successfully changed the Drug House available pot!");
			}
		}
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		for(new h = 0; h < sizeof(Points); h++)
		{
			if(Points[h][Type] == 4)
			{
				Points[h][Stock] = amount;
				format(string, sizeof(string), " ALINABILIR CRACK: %d gram.", Points[h][Stock]);
				UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
				SendClientMessage(playerid, COLOR_WHITE, " You have successfully changed the Crack Lab available crack!");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "	Not a valid name.");
		return 1;
	}
	return 1;
}

CMD:adestroyplant(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 		{
  			SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
   		}

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /adestroyplant [Oyuncu ID/sim]");
		}
		else if(IsPlayerConnected(iTargetID)) {

			new
				szMessage[47 + MAX_PLAYER_NAME];

			format(szMessage, sizeof(szMessage), "You have destroyed %s's weed plant (%i grams).", GetPlayerNameEx(iTargetID), PlayerInfo[iTargetID][pWeedGrowth]);
			SendClientMessage(playerid, COLOR_GREY, szMessage);

			format(szMessage, sizeof(szMessage), "Admin %s has destroyed your weed plant (%i grams).", GetPlayerNameEx(playerid), PlayerInfo[iTargetID][pWeedGrowth]);
			SendClientMessage(iTargetID, COLOR_GREY, szMessage);

			if(IsValidDynamicObject(PlayerInfo[playerid][pWeedObject])) {
				DestroyDynamicObject(PlayerInfo[playerid][pWeedObject]);
				PlayerInfo[playerid][pWeedObject] = 0;
			}
		}
		else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanmaya yetkin yok.");
	return 1;
}
CMD:elegecir(playerid, params[])
{
	new string[128];

	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new mypoint = -1;
	if(GetPVarInt(playerid,"Injured") == 1)
		return SendClientMessage(playerid, COLOR_GRAD1, " Yaralyken point'i ele geiremezsin!");

	if(PlayerInfo[playerid][pGang] == 255)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bir aileden deilsin.");

	if(PlayerInfo[playerid][pRank] < 5)
		return SendClientMessage(playerid, COLOR_GRAD1, "Ele geirmek iin en az Rank 5 olmalsn!");

	for (new i=0; i<MAX_POINTS; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz])) mypoint = i;
	}

	if(mypoint == -1)
		return SendClientMessage(playerid, COLOR_GRAD1, "Ele geirilebilecek bir yerde deilsin!");

	if(Points[mypoint][Vulnerable] > 0 || Points[mypoint][Vulnerable] == -1)
		return SendClientMessage(playerid, COLOR_GRAD1, " Bu point ele geirmek iin msait deil.");

	if(Points[mypoint][TimeToClaim])
		return SendClientMessage(playerid, COLOR_GRAD1, " Bu point zaten ele geiriliyor!");

	Points[mypoint][PointBarID] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
	SetProgressBarValue(Points[mypoint][PointBarID], 100.0);
	ShowProgressBarForPlayer(playerid, Points[mypoint][PointBarID]);
	format(string,sizeof(string), " %s adl kii point'i ele geirmeye alyor.", GetPlayerNameEx(playerid));
	ProxDetector(70.0, playerid, string, COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED,COLOR_RED);
	GetPlayerPos(playerid, Points[mypoint][Capturex], Points[mypoint][Capturey], Points[mypoint][Capturez]);

	Points[mypoint][ClaimerId] = playerid;
	Points[mypoint][TimeToClaim] = 1;
	Points[mypoint][TimeLeft] = 10;
	SetTimerEx("ProgressTimer", 1000, 0, "d", mypoint);
	return 1;
}

CMD:pointsinirlari(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /pointlerinirlari [point]");
		SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Point alann iaretleyecek.");
		SendClientMessage(playerid, COLOR_GRAD3, "Points: FBS (Fosil Benzincilik irketi) | MA1 (Materyal alm 1) | UF (Uyuturucu Fabrikas)");
		SendClientMessage(playerid, COLOR_GRAD3, "Points: MF1 (Materyal Fabrikas 1) | UE (Uyuturucu Evi) | MP2 (Materyal Alm 2)");
		SendClientMessage(playerid, COLOR_GRAD3, "Points: CL (Crack Laboratuvar) | MF2 (Materyal Fabrikas 2) | TS (Tamaclk irketi)");
		return 1;
	}

	if(strcmp(params,"fbs",true) == 0)
	{
	    if(IsBoundsShowingFFC[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[0], 0xFF00008C); // FFC
			IsBoundsShowingFFC[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Fossil Fuel Company are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[0]); // FFC
			IsBoundsShowingFFC[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Fossil Fuel Company are now removed from your radar and map.");
		}
	}
	else if(strcmp(params,"ma1",true) == 0)
	{
	    if(IsBoundsShowingMP1[playerid] == 0)
		{
			GangZoneShowForPlayer(playerid, pointboundaries[1], 0xFF00008C); // MP1
			IsBoundsShowingMP1[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Pickup 1 are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[1]); // MP1
			IsBoundsShowingMP1[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Pickup 1 are now removed from your radar and map.");
		}
	}
	else if(strcmp(params,"uf",true) == 0)
	{
	    if(IsBoundsShowingDF[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[8], 0xFF00008C); // DF
			IsBoundsShowingDF[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Drug Factory are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[8]); // DF
			IsBoundsShowingDF[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Drug Factory are now removed from your radar and map.");
		}
	}
	else if(strcmp(params,"mf1",true) == 0)
	{
	    if(IsBoundsShowingMF1[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[2], 0xFF00008C); // MF1
			IsBoundsShowingMF1[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Factory 1 are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[2]); // MF1
			IsBoundsShowingMF1[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Factory 1 are now removed from your radar and map.");
		}
	}
	else if(strcmp(params,"ue",true) == 0)
	{
	    if(IsBoundsShowingDH[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[6], 0xFF00008C); // DH
			IsBoundsShowingDH[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Drug House are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[6]); // DH
			IsBoundsShowingDH[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Drug House are now removed from your radar and map.");
		}
	}
	else if(strcmp(params,"ma2",true) == 0)
	{
	    if(IsBoundsShowingMP2[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[3], 0xFF00008C); // MP2
			IsBoundsShowingMP2[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Pickup 2 are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[3]); // MP2
			IsBoundsShowingMP2[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Pickup 2 are now from your radar and map.");
		}
	}
	else if(strcmp(params,"cl",true) == 0)
	{
	    if(IsBoundsShowingCL[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[7], 0xFF00008C); // CL
			IsBoundsShowingCL[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Crack Lab are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[7]); // CL
			IsBoundsShowingCL[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Crack Lab are now removed from your radar and map.");
		}
	}
	else if(strcmp(params,"mf2",true) == 0)
	{
	    if(IsBoundsShowingMF2[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[4], 0xFF00008C); // MF2
			IsBoundsShowingMF2[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Factory 2 are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[4]); // MF2
			IsBoundsShowingMF2[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Materials Factory 2 are now indicated on your radar and map in red.");
		}
	}
	else if(strcmp(params,"ts",true) == 0)
	{
	    if(IsBoundsShowingAEC[playerid] == 0)
	    {
			GangZoneShowForPlayer(playerid, pointboundaries[5], 0xFF00008C); // AEC
			IsBoundsShowingAEC[playerid] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Auto Export Company are now indicated on your radar and map in red.");
		}
		else
		{
			GangZoneHideForPlayer(playerid, pointboundaries[5]); // AEC
			IsBoundsShowingAEC[playerid] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "The point boundaries for Auto Export Company are now removed from your radar and map");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Yanl point ismi.");
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /pointlerinirlari [point]");
		SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Point alann iaretleyecek.");
		SendClientMessage(playerid, COLOR_GRAD3, "Points: FBS (Fosil Benzincilik irketi) | MA1 (Materyal alm 1) | UF (Uyuturucu Fabrikas)");
		SendClientMessage(playerid, COLOR_GRAD3, "Points: MF1 (Materyal Fabrikas 1) | UE (Uyuturucu Evi) | MP2 (Materyal Alm 2)");
		SendClientMessage(playerid, COLOR_GRAD3, "Points: CL (Crack Laboratuvar) | MF2 (Materyal Fabrikas 2) | TS (Tamaclk irketi)");
	}
	return 1;
}

CMD:pointsinirlarikapat(playerid, params[])
{
	GangZoneHideForPlayer(playerid, pointboundaries[0]); // FFC
	GangZoneHideForPlayer(playerid, pointboundaries[1]); // MP1
	GangZoneHideForPlayer(playerid, pointboundaries[2]); // MF1
	GangZoneHideForPlayer(playerid, pointboundaries[3]); // MP2
	GangZoneHideForPlayer(playerid, pointboundaries[4]); // MF2
	GangZoneHideForPlayer(playerid, pointboundaries[5]); // AEC
	GangZoneHideForPlayer(playerid, pointboundaries[6]); // DH
	GangZoneHideForPlayer(playerid, pointboundaries[7]); // CL
	GangZoneHideForPlayer(playerid, pointboundaries[8]); // DF
	IsBoundsShowingFFC[playerid] = 0;
	IsBoundsShowingMP1[playerid] = 0;
	IsBoundsShowingMF1[playerid] = 0;
	IsBoundsShowingMP2[playerid] = 0;
	IsBoundsShowingMF2[playerid] = 0;
	IsBoundsShowingAEC[playerid] = 0;
	IsBoundsShowingDH[playerid] = 0;
	IsBoundsShowingCL[playerid] = 0;
	IsBoundsShowingDF[playerid] = 0;
 	SendClientMessage(playerid, COLOR_WHITE, "Harita ve radarndaki point snrlar kaldrld");
	return 1;
}

CMD:pointler(playerid, params[])
{
	new string[128];

	for(new i; i < MAX_POINTS; i++)
	{
		if(Points[i][Type] >= 0)
		{
		    if(Points[i][Vulnerable] == -1)
		    {
		        format(string, sizeof(string), "sim: %s | Sahibi: %s | Ele Geiren: %s | Saat: Geici olarak pasif", Points[i][Name],Points[i][Owner],Points[i][CapperName]);
		    }
		    else
		    {
				format(string, sizeof(string), "sim: %s | Sahibi: %s | Ele Geiren: %s | Saat: %d", Points[i][Name],Points[i][Owner],Points[i][CapperName],Points[i][Vulnerable]);
			}
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	return 1;
}

CMD:fedit(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pGangMod] > 0 || PlayerInfo[playerid][pAdmin] >= 5) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new family, x_job[64], x_hq[64], ammount, string[128];
		if(sscanf(params, "is[64]s[64]", family, x_job, x_hq))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /fedit [family] [name] [amount]");
			SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Leader, MaxSkins, Skin1, Skin2, Skin3, Skin4, Skin5, Skin6, Skin7, Skin8");
			return 1;
		}
        ammount = strval(x_hq);
		if(family < 1 || family > MAX_FAMILY) { SendClientMessage(playerid, COLOR_GREY, "   Aile numaras yalnzca 1 ile 14 arasnda olabilir!"); return 1; }
		family -= 1;

		if(strcmp(x_job,"leader",true) == 0)
		{
			if(strlen(x_hq) >= 20)
			{
				SendClientMessage(playerid, COLOR_GRAD1, "That leader name is too long, please refrain from using more than 20 characters.");
				return 1;
			}
			strcpy(FamilyInfo[family][FamilyLeader], x_hq, MAX_PLAYER_NAME);
			format(string, sizeof(string), "You have changed '%s' leader name to %s.", FamilyInfo[family][FamilyName], x_hq);
			SendClientMessage(playerid, COLOR_WHITE, string);
			SaveFamilies();
			return 1;
		}
		else if(strcmp(x_job,"maxskins",true) == 0)
		{
			if(ammount > 8) return SendClientMessage(playerid, COLOR_WHITE, "You can't set the maxskins more than 8.");
			if(ammount == 7)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
			}
			if(ammount == 6)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
			}
			if(ammount == 5)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
				FamilyInfo[family][FamilySkins][5] = 0;
			}
			if(ammount == 4)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
				FamilyInfo[family][FamilySkins][5] = 0;
				FamilyInfo[family][FamilySkins][4] = 0;
			}
			if(ammount == 3)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
				FamilyInfo[family][FamilySkins][5] = 0;
				FamilyInfo[family][FamilySkins][4] = 0;
				FamilyInfo[family][FamilySkins][3] = 0;
			}
			if(ammount == 2)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
				FamilyInfo[family][FamilySkins][5] = 0;
				FamilyInfo[family][FamilySkins][4] = 0;
				FamilyInfo[family][FamilySkins][3] = 0;
				FamilyInfo[family][FamilySkins][2] = 0;
			}

			if(ammount == 1)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
				FamilyInfo[family][FamilySkins][5] = 0;
				FamilyInfo[family][FamilySkins][4] = 0;
				FamilyInfo[family][FamilySkins][3] = 0;
				FamilyInfo[family][FamilySkins][2] = 0;
				FamilyInfo[family][FamilySkins][1] = 0;
			}
			if(ammount == 0)
			{
				FamilyInfo[family][FamilySkins][7] = 0;
				FamilyInfo[family][FamilySkins][6] = 0;
				FamilyInfo[family][FamilySkins][5] = 0;
				FamilyInfo[family][FamilySkins][4] = 0;
				FamilyInfo[family][FamilySkins][3] = 0;
				FamilyInfo[family][FamilySkins][2] = 0;
				FamilyInfo[family][FamilySkins][1] = 0;
				FamilyInfo[family][FamilySkins][0] = 0;
			}

			FamilyInfo[family][FamilyMaxSkins] = ammount;
			format(string, sizeof(string), "You have changed '%s' max skins amount to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin1",true) == 0)
		{
			FamilyInfo[family][FamilySkins][0] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #1 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin2",true) == 0)
		{
			FamilyInfo[family][FamilySkins][1] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #2 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin3",true) == 0)
		{
			FamilyInfo[family][FamilySkins][2] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #3 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin4",true) == 0)
		{
			FamilyInfo[family][FamilySkins][3] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #4 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin5",true) == 0)
		{
			FamilyInfo[family][FamilySkins][4] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #5 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin6",true) == 0)
		{
			FamilyInfo[family][FamilySkins][5] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #6 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin7",true) == 0)
		{
			FamilyInfo[family][FamilySkins][6] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #7 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else if(strcmp(x_job,"skin8",true) == 0)
		{
			FamilyInfo[family][FamilySkins][7] = ammount;
			format(string, sizeof(string), "You have changed '%s' skin #8 to %d.", FamilyInfo[family][FamilyName], ammount);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "	Not a valid name.");
			return 1;
		}
		SaveFamilies();
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   You're not an Admin!");
		return 1;
	}
	return 1;
}

CMD:fcreate(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pGangMod] > 0 || PlayerInfo[playerid][pAdmin] >= 5) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], family, giveplayerid;
		if(sscanf(params, "du", family, giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /fcreate [FamilyNr] [Oyuncu ID/sim]");
		if(family < 1 || family > 14) { SendClientMessage(playerid, COLOR_GREY, "   Aile slotu 1'den dk, 14'den yksek olamaz."); return 1; }

		if(IsPlayerConnected(giveplayerid))
		{
			if(FamilyInfo[family-1][FamilyTaken] == 1)
			{
				SendClientMessage(playerid, COLOR_GREY, "   That Family Slot is already taken!");
				return 1;
			}

			format(string, sizeof(string), "* You've made %s the Leader of Family Slot %d.",GetPlayerNameEx(giveplayerid),family);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "* Admin %s has made you a Family Leader.", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

			new sendername[MAX_PLAYER_NAME];
			GetPlayerName(giveplayerid, sendername, sizeof(sendername));
			format(string, sizeof(string), "%s",sendername);
			strmid(FamilyInfo[family-1][FamilyLeader], string, 0, strlen(string), 24);
			FamilyInfo[family-1][FamilyMembers] ++;
			FamilyInfo[family-1][FamilyTaken] = 1;
			PlayerInfo[giveplayerid][pGang] = family-1;
			PlayerInfo[giveplayerid][pRank] = 6;
			SaveFamilies();

		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}
	}
	return 1;
}

CMD:fdelete(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pGangMod] > 0 || PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new family;
		if(sscanf(params, "d", family))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /fdelete [familyid]");

		if(family < 1 || family > 14) { SendClientMessage(playerid, COLOR_GREY, "   Aile slotu 1'den dk, 14'den yksek olamaz."); return 1; }
		if(FamilyInfo[family-1][FamilyTaken] != 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "    Bu aile slotu alnm deil.");
			return 1;
		}
		ClearFamily(family-1);
		SaveFamilies();
	}
	return 1;
}

CMD:pedit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkin yok.");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

	new string[128], hours;
	if(sscanf(params, "d", hours))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /pedit [hours]");
		SendClientMessage(playerid, COLOR_GREY,"IPUCU: Point sresini ayarlamak iin pointin yaknnda dur.");
		return 1;
	}

	for(new h = 0; h < sizeof(Points); h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
		{
			if(hours < 1|| hours > 24)
			{
				SendClientMessage(playerid, COLOR_GREY, "Point sresini 1 den az, 24 den fazla olarak ayarlayamazsn.");
			}
			else if(hours >= 1|| hours <= 24)
			{
				format(string, sizeof(string), "Pointin sresini %d saate ayarladn!", hours);
				Points[h][Vulnerable] = hours;
				SendClientMessage(playerid, COLOR_WHITE, string);
				UpdatePoints();
			}
		}
	}
	return 1;
}

CMD:disablepoint(playerid, params[])
{ // TEMPORARY COMMAND - REMOVE LATER
	if(PlayerInfo[playerid][pAdmin] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkin yok.");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}
	for(new h = 0; h < sizeof(Points); h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
		{
			strmid(Points[h][Owner], "Nobody", 0, 32, 32);
			strmid(Points[h][CapperName], "Nobody", 0, 32, 32);
			Points[h][Vulnerable] = -1;
			SendClientMessage(playerid, COLOR_WHITE, "Pointi pasif hale getirdin.");
			UpdatePoints();
		}
	}
	return 1;
}

CMD:pointfix(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkin yok.");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}

	for(new h = 0; h < sizeof(Points); h++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
		{
			Points[h][TimeToClaim] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Pointi fixledin, oyuncular artk ele geirmeye alabilir!.");
			UpdatePoints();
			return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Hata: Fixlemek iin ele geirme noktasnda olmalsn.");
	return 1;
}

CMD:creategvehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pGangMod] > 0 || PlayerInfo[playerid][pAdmin] >= 5) {
		new
			string[128],
			family,
			modelid,
			color1,
			color2;

		if(sscanf(params, "dddd", family, modelid, color1, color2))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /creategvehicle [aileid] [modelid] [color 1] [color 2]");

	   	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	   	if(family < 1 || family > MAX_FAMILY) { SendClientMessage(playerid, COLOR_GREY, "   Aile numaras yalnzca 1 ile 14 arasnda olabilir!"); return 1; }
		family -= 1;
		if(FamilyInfo[family][FamilyTaken] != 1)
		{
			SendClientMessage(playerid, COLOR_GREY, "   That FamilyNr hasn't been Taken yet!");
			return 1;
		}
		if(color1 < 0 || color1 > 255) { SendClientMessage(playerid, COLOR_GREY, "   Renk numaras 0'dan dk, 255'ten fazla olamaz."); return 1; }
		if(color2 < 0 || color2 > 255) { SendClientMessage(playerid, COLOR_GREY, "   Renk numaras 0'dan dk, 255'ten fazla olamaz."); return 1; }
		if(modelid < 400 || modelid > 611) { SendClientMessage(playerid, COLOR_GREY, "Ara numaras 400'n altnda yada 611'in zerinde olamaz!"); return 1; }
		new gangvehicleid = GetGangFreeVehicleId(family);
		if(gangvehicleid == -1) return SendClientMessage(playerid, COLOR_GREY, "Hata: Bu aile daha fazla ara alamaz.");
		new Float:X,Float:Y,Float:Z;
	 	GetPlayerPos(playerid,X,Y,Z);
	  	new Float:Angle;
	   	GetPlayerFacingAngle(playerid,Angle);
	   	new car = CreateGangVehicle(family, gangvehicleid, modelid, X, Y, Z, Angle, color1, color2, 0);
	   	if(car == INVALID_VEHICLE_ID) {
	 		SendClientMessage(playerid, COLOR_GREY, "Hata: Bireyler yaln gitti ve ara yaratlmad.");
		}
	 	else
	  	{
	   		format(string, sizeof(string), "Ara baarl bir ekilde yaratld ID %d.", car);
	    	SendClientMessage(playerid, COLOR_GRAD1, string);
		    SaveFamiliesHQ();
		}
	}
	return 1;
}

CMD:destroygvehicle(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1 && PlayerInfo[playerid][pGangMod] > 0 || PlayerInfo[playerid][pAdmin] >= 5) {
		new
			family,
			vehicleid;
		if(sscanf(params, "dd", family, vehicleid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /destroygvehicle [aile id] [Ara ID]");

	   	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	 	{
	  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	   	}

	    if(family < 1 || family > MAX_FAMILY) { SendClientMessage(playerid, COLOR_GREY, "   Aile numaras yalnzca 1 ile 14 arasnda olabilir!"); return 1; }
		family -= 1;
		new gangvehicleid = GetGangVehicle(family, vehicleid);
		if(gangvehicleid == -1) return SendClientMessage(playerid, COLOR_GREY, "Bu ailenin bir arac yok.");
		DestroyGangVehicle(family, gangvehicleid);
		SaveFamiliesHQ();
	}
	return 1;
}

#if defined TREASURE_HUNT_ENABLED
CMD:gotohuntpos(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
		SetPlayerPos(playerid, fTreasureHuntLS[iHuntLocation][0], fTreasureHuntLS[iHuntLocation][1], fTreasureHuntLS[iHuntLocation][2]);

		SendClientMessage(playerid, COLOR_WHITE, "Treasure hunt yerine teleport oldun.");
	}
	return 1;
}

CMD:resethuntpos(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5) {
		SetRandomHuntPos();

		SendClientMessage(playerid, COLOR_WHITE, "Treasure hunt etkinliinin yerini deitirdin.");
	}
	return 1;
}
#endif

CMD:ailearacibul(playerid, params[])
{
	if(PlayerInfo[playerid][pGang] == 255) return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmen iin bir ailede olman gerek.");
	new vstring[1024];
	for(new i = 0; i < MAX_GANG_VEHICLES; i++)
	{
		if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvId] != INVALID_VEHICLE_ID)
		{
		    if(PlayerInfo[playerid][pAdmin] >= 2)
		    {
		        format(vstring, sizeof(vstring), "%s\n%s (ID: %d)", vstring, VehicleName[FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvModelId] - 400], FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvId]);
		    }
		    else
		    {
				format(vstring, sizeof(vstring), "%s\n%s", vstring, VehicleName[FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvModelId] - 400]);
			}
		}
		else if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvImpounded] == 1) {
			format(vstring, sizeof(vstring), "%s\n%s (baglanmis)", vstring, VehicleName[FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvModelId] - 400]);
		}
		else
		{
			format(vstring, sizeof(vstring), "%s\nYok", vstring);
		}
	}
	return ShowPlayerDialogEx(playerid, GTRACKCAR, DIALOG_STYLE_LIST, "Ara GPS Takibi", vstring, "Takipet", "Iptal");
}

CMD:ailechatkapat(playerid, params[])
{
	return cmd_fkapat(playerid, params);
}

CMD:yeniliklerkapat(playerid, params[])
{
	if(!gNews[playerid])
	{
		gNews[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "Haberler kanaln pasif hale getirdin.");
	}
	else
	{
		gNews[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "Haberler kanaln aktif hale getirdin.");
	}
	return 1;
}
/*
CMD:newbiekapat(playerid, params[])
{
	if(!gNewbie[playerid])
	{
		gNewbie[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "Newbie kanaln pasif hale getirdin.");
	}
	else
	{
		gNewbie[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "Newbie kanaln aktif hale getirdin.");
	}
	return 1;
}*/

CMD:fkapat(playerid, params[])
{
	if(!gFam[playerid])
	{
		gFam[playerid] = 1;
		SendClientMessage(playerid, COLOR_GRAD2, "Aile kanaln pasif hale getirdin.");
	}
	else
	{
		gFam[playerid] = 0;
		SendClientMessage(playerid, COLOR_GRAD2, "Aile kanaln aktif hale getirdin.");
	}
	return 1;
}

CMD:f(playerid, params[]) {
	if(gFam[playerid] == 1)
		return SendClientMessage(playerid, TEAM_CYAN_COLOR, "Aile kanaln /fkapat yazarak kapattn.");

	new string[128];

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: (/f)[aile chati]");

	if(PlayerCuffed[playerid] > 0 || GetPVarInt(playerid, "Injured") == 1)
		return SendClientMessage(playerid, COLOR_GREY, "Kelepeli,tazerlenmi yada hastanede yatarken /f'den konuamazsn.");

	if((PlayerInfo[playerid][pFaction] == 4) || PlayerInfo[playerid][pGang] < 255) {
		new member = PlayerInfo[playerid][pFaction];
		new fam = PlayerInfo[playerid][pGang];
		if(member==4) {
			if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (6) Director %s: %s **", GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (5) Vice Director %s: %s **", GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (4) Special Agent %s: %s **", GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (3) Agent %s: %s **", GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (2) Marksman %s: %s **", GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (1) Freelancer %s: %s **", GetPlayerNameEx(playerid), params); }
			else { format(string, sizeof(string), "** (1) Freelancer %s: %s **", GetPlayerNameEx(playerid), params); }
			SendFamilyMessage(PlayerInfo[playerid][pFaction], TEAM_AZTECAS_COLOR, string);
		}
		else if(PlayerInfo[playerid][pGang] < 255) {
			if(PlayerInfo[playerid][pRank] == 6) { format(string, sizeof(string), "** (6) %s %s: %s **", FamilyInfo[fam][FamilyRank6], GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 5) { format(string, sizeof(string), "** (5) %s %s: %s **", FamilyInfo[fam][FamilyRank5], GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 4) { format(string, sizeof(string), "** (4) %s %s: %s  **", FamilyInfo[fam][FamilyRank4], GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 3) { format(string, sizeof(string), "** (3) %s %s: %s  **", FamilyInfo[fam][FamilyRank3], GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 2) { format(string, sizeof(string), "** (2) %s %s: %s  **", FamilyInfo[fam][FamilyRank2], GetPlayerNameEx(playerid), params); }
			else if(PlayerInfo[playerid][pRank] == 1) { format(string, sizeof(string), "** (1) %s %s: %s  **", FamilyInfo[fam][FamilyRank1], GetPlayerNameEx(playerid), params); }
			else { format(string, sizeof(string), "** (0) %s %s: %s **", FamilyInfo[fam][FamilyRank1], GetPlayerNameEx(playerid), params); }
			SendNewFamilyMessage(PlayerInfo[playerid][pGang], TEAM_AZTECAS_COLOR, string);
		}
		return 1;
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Bir aileden deilsin.");

	return 1;
}

CMD:olusumdancik(playerid, params[])
{
    if(PlayerInfo[playerid][pFaction] >= 1 || PlayerInfo[playerid][pLeader] >= 1) {
		SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Oluumdan ktn, artk bir sivilsin.");
		new string[128];
		format(string, sizeof(string), "%s, %s oluumundan rtbe %i'ken kt.", GetPlayerNameEx(playerid), GetFactionName(PlayerInfo[playerid][pFaction]), PlayerInfo[playerid][pRank]);
		Log("logs/faction.log", string);
		PlayerInfo[playerid][pFaction] = 0;
		PlayerInfo[playerid][pRank] = 0;
		PlayerInfo[playerid][pDuty] = 0;
		PlayerInfo[playerid][pLeader] = 0;
		PlayerInfo[playerid][pDivision] = 0;
		if(!IsValidSkin(GetPlayerSkin(playerid))) {
  			new rand = random(sizeof(CIV));
			SetPlayerSkin(playerid,CIV[rand]);
			PlayerInfo[playerid][pSkin] = CIV[rand];
		}
		SetPlayerToTeamColor(playerid);
		player_remove_vip_toys(playerid);
   		pTazer[playerid] = 0;
		if(TalkingLive[playerid] != INVALID_PLAYER_ID || LiveOffer[playerid] != INVALID_PLAYER_ID ) {
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[LiveOffer[playerid]] = INVALID_PLAYER_ID;
			LiveOffer[LiveOffer[playerid]] = INVALID_PLAYER_ID;
			LiveOffer[TalkingLive[playerid]] = INVALID_PLAYER_ID;
		}
		TalkingLive[playerid] = INVALID_PLAYER_ID;
		LiveOffer[playerid] = INVALID_PLAYER_ID;
		Backup[playerid] = 0;
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bir oluumda deilsin.");
	return 1;
}

CMD:ailedencik(playerid, params[]) {
	return cmd_ailedenayril(playerid, params);
}

CMD:ailedenayril(playerid, params[])
{
    if(PlayerInfo[playerid][pGang] != 255)
	{
		for (new x = 0; x < MAX_POINTS; x++)
		{
			if(Points[x][ClaimerId] == playerid)
			{
			    SendClientMessage(playerid, COLOR_GRAD1, "Point esnasnda aileden kamazsn.");
				return 1;
			}
		}
		SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Aileden ktn, artk bir sivilsin.");
		new string[128];
		format(string, sizeof(string), "%s, %d ailesinden rtbe %i olarak kt.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pGang]+1, PlayerInfo[playerid][pRank]);
		Log("logs/family.log", string);
		PlayerInfo[playerid][pGang] = 255;
		PlayerInfo[playerid][pRank] = 0;
		if(!IsValidSkin(GetPlayerSkin(playerid)))
		{
		    new rand = random(sizeof(CIV));
			SetPlayerSkin(playerid,CIV[rand]);
			PlayerInfo[playerid][pSkin] = CIV[rand];
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
	}
	return 1;
}

CMD:ailekasayardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN, "_______________________________________________");
	SendClientMessage(playerid, COLOR_WHITE, "KASA YARDIM: Daha fazla bilgi iin bir komut yaz.");
	SendClientMessage(playerid, COLOR_WHITE, "KASA: /ailekasadurumu /akasayakoy /akasadanal /asilahsakla /asilahal.");
	return 1;
}

CMD:ailekasadurumu(playerid, params[]) {
	if(PlayerInfo[playerid][pGang] < 255) {
		if(FamilyInfo[PlayerInfo[playerid][pGang]][FamilyUSafe] < 1) {
			SendClientMessage(playerid, COLOR_GRAD1, "Ailenin bir kasas yok.");
		}
		else
		{
			new string[128];

			new weaponsinlocker;
			for(new s = 0; s < 10; s++)
			{
				if(FamilyInfo[PlayerInfo[playerid][pGang]][FamilyGuns][s] != 0)
				{
					weaponsinlocker++;
				}
			}

			format(string, sizeof(string), " Kasa: %s | Silah dolaplar: %d/10 | Nakit: $%d | Pot: %d | Crack: %d | Materyal: %d", FamilyInfo[PlayerInfo[playerid][pGang]][FamilyName], weaponsinlocker, FamilyInfo[PlayerInfo[playerid][pGang]][FamilyCash], FamilyInfo[PlayerInfo[playerid][pGang]][FamilyPot], FamilyInfo[PlayerInfo[playerid][pGang]][FamilyCrack], FamilyInfo[PlayerInfo[playerid][pGang]][FamilyMats]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
	return 1;
}

CMD:aileler(playerid, params[])
{
	new string[128], familyid;

	if(sscanf(params, "d", familyid))
	{
		new number = 0;
		for(new i = 0; i < sizeof(FamilyInfo); i++)
		{
			number ++;
			format(string, sizeof(string), "Aile %d | sim: %s | Lider: %s | yeler: %d",number,FamilyInfo[i][FamilyName],FamilyInfo[i][FamilyLeader],FamilyInfo[i][FamilyMembers]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		return 1;
	}

	if(familyid < 1 || familyid > MAX_FAMILY) { SendClientMessage(playerid, COLOR_GREY, "Aile slotu 1 ile 14 aras olmaldr."); return 1; }
	familyid -= 1;
	if(FamilyInfo[familyid][FamilyTaken] != 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu aile slotu bo.");
		return 1;
	}
	foreach(Player, i)
	{
		if(PlayerInfo[i][pGang] == familyid && (AdminDuty[i] != 1))
		{
			if(PlayerInfo[i][pRank] == 1)
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s (1).",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank1]);
			}
			else if(PlayerInfo[i][pRank] == 2)
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s (2).",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank2]);
			}
			else if(PlayerInfo[i][pRank] == 3)
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s (3).",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank3]);
			}
			else if(PlayerInfo[i][pRank] == 4)
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s (4).",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank4]);
			}
			else if(PlayerInfo[i][pRank] == 5)
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s (5).",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank5]);
			}
			else if(PlayerInfo[i][pRank] == 6)
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s (6).",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank6]);
			}
			else
			{
				format(string, sizeof(string), "* %s: %s | Rtbe: %s.",FamilyInfo[familyid][FamilyName],GetPlayerNameEx(i),FamilyInfo[familyid][FamilyRank1]);
			}
			SendClientMessage(playerid, COLOR_GREY, string);
		}
	}
	return 1;
}

CMD:akasadurum(playerid, params[])
{
	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}

	new family, string[128];
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}

	format(string, sizeof(string), "Ailenin banka hesabnda $%d para var.", FamilyInfo[family][FamilyBank]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	return 1;
}

CMD:aileyeparayatir(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}

	new family;
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}

	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aileyeparayatir [amount]");
		format(string, sizeof(string), "Ailenin banka hesabnda $%d para var.", FamilyInfo[family][FamilyBank]);
		SendClientMessage(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if(amount > GetPlayerCash(playerid) || amount < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "O kadar crackin yok.");
		return 1;
	}
	GivePlayerCash(playerid,-amount);
	new curfunds = FamilyInfo[family][FamilyBank];
	FamilyInfo[family][FamilyBank]=amount+FamilyInfo[family][FamilyBank];
	SendClientMessage(playerid, COLOR_WHITE, "|___ AILENIN BANKA DURUMU ___|");
	format(string, sizeof(string), "  Eski bakiye: $%d", curfunds);
	SendClientMessage(playerid, COLOR_GRAD2, string);
	format(string, sizeof(string), "  Yatirilan: $%d",amount);
	SendClientMessage(playerid, COLOR_GRAD4, string);
	SendClientMessage(playerid, COLOR_GRAD6, "|-----------------------------------------|");
	format(string, sizeof(string), " Yeni bakiye: $%d", FamilyInfo[family][FamilyBank]);
	SendClientMessage(playerid, COLOR_WHITE, string);
	new ip[32];
	GetPlayerIp(playerid, ip, sizeof(ip));
	format(string,sizeof(string),"%s (IP: %s) has deposited $%d into family %d's bank account.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]+1);
	Log("logs/family.log", string);
	return 1;
}

CMD:aparacek(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(!IsPlayerInRangeOfPoint(playerid, 15.0, 2308.7346, -11.0134, 26.7422))
	{
		SendClientMessage(playerid, COLOR_GREY, "Bankada deilsin!");
		return 1;
	}
	new family;
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Aile bankasn yalnzca R5 ve st kullanabilir.");
		return 1;
	}

	new string[128], amount;
	if(sscanf(params, "d", amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /aparacek [miktar]");
		format(string, sizeof(string), "Ailenin banka hesabnda $%d para var.", FamilyInfo[family][FamilyBank]);
		SendClientMessage(playerid, COLOR_GRAD3, string);
		return 1;
	}

	if(amount > FamilyInfo[family][FamilyBank] || amount < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Ailende bu kadar yok.");
		return 1;
	}

	GivePlayerCash(playerid,amount);
	FamilyInfo[family][FamilyBank]=FamilyInfo[family][FamilyBank]-amount;
	format(string, sizeof(string), "  Ailenin banka hesabndan $%d para aldn. Toplam: $%d", amount,FamilyInfo[family][FamilyBank]);
	SendClientMessage(playerid, COLOR_YELLOW, string);
	new ip[32];
	GetPlayerIp(playerid, ip, sizeof(ip));
	format(string,sizeof(string),"%s (IP: %s) $%d paray %d. ailenin banka hesabndan ald.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]+1);
	Log("logs/family.log", string);
	return 1;
}

CMD:asilahsakla(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(GetPVarInt(playerid, "PBM") > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "EventToken") != 0)
 	{
		SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");
		return 1;
	}
	/*if(PlayerInfo[playerid][pDonator] > 2)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "You can't give away weapons if you're Master+ VIP!");
		return 1;
	}*/
	if(IsPlayerInAnyVehicle(playerid))
 {
		SendClientMessage (playerid, COLOR_GRAD2, "Aratayken silah koyamazsn.");
		return 1;
	}
	new Float:health;
	GetPlayerHealth(playerid, health);
	if(health < 80)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Cann 80'in altndayken silah koyamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "Injured") != 0||PlayerCuffed[playerid]!=0||GetPVarInt(playerid, "Hospital")!=0||GetPlayerState(playerid) == 7)
	{
		SendClientMessage (playerid, COLOR_GRAD2, "Bunu u an yapamazsn.");
		return 1;
	}
	if(PlayerInfo[playerid][pFaction] > 0)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir oluumdayken silahlarn aile kasasna koyamazsn.");
		return 1;
	}

	new family;
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}

	if(!IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Aile kasasna yakn deilsin.");
		return 1;
	}

	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /asilahsakla [silah] [slot]");


	if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "   Baka bir silah koymadan nce %d saniye beklemelisin.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}

	if(slot < 1 || slot > 10)
	{
		SendClientMessage(playerid, COLOR_GREY, "Yanl slot.");
		return 1;
	}

	if(FamilyInfo[family][FamilyGuns][slot-1] != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Ailenin bu slotta zaten baka bir silah var.");
		return 1;
	}

	new weapon;
	if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Susturuculu tabancan silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s Susturuculu tabancasn kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Desert Eagle'ni silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][2];
			format(string,sizeof(string), "* %s Desert Eagle'n kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shotgun'unu silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][3];
			format(string,sizeof(string), "* %s Shotgun'unu kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "SPAS-12'ni silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][3];
			format(string,sizeof(string), "* %s SPAS-12'sini kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "MP5'ini silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][4];
			format(string,sizeof(string), "* %s MP5'ini kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "AK47'ni silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][5];
			format(string,sizeof(string), "* %s AK-47'sini kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "M4'n silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][5];
			format(string,sizeof(string), "* %s M4'n kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Rifle'ni silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][6];
			format(string,sizeof(string), "* %s Rifle'sini kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
	{
		if(PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sniper Rifle'ni silah dolabna koydun.");
			weapon = PlayerInfo[playerid][pGuns][6];
			format(string,sizeof(string), "* %s Sniper Rifle'sini kasaya koydu.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else { SendClientMessage(playerid,COLOR_GREY,"Yanl silah ad!"); return 1; }
	if(weapon == 0) return SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin.");
	if(FamilyInfo[family][FamilyGuns][slot-1] == 0)
	{
		FamilyInfo[family][FamilyGuns][slot-1] = weapon;
		RemovePlayerWeapon(playerid, weapon);
		SaveFamilies();
		return 1;
	}
	return 1;
}

CMD:asilahal(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}
	new string[128], slot;

	if(PlayerInfo[playerid][pConnectTime] < 2)
		return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

	new family;
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Aile kasasna yakn deilsin.");
		return 1;
	}
	if(IsPlayerInAnyVehicle(playerid))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Aratan silahlar alamazsn.");
		return 1;
	}

	if(sscanf(params, "d", slot))
	{
		new weaponname[50];
		SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
		format(string, sizeof(string), "*** %s Kasa ***", FamilyInfo[family][FamilyName]);
		SendClientMessage(playerid, COLOR_WHITE, string);
		for(new s = 0; s < 10; s++)
		{
			if(FamilyInfo[family][FamilyGuns][s] != 0)
			{
				GetWeaponName(FamilyInfo[family][FamilyGuns][s], weaponname, sizeof(weaponname));
				format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
		}
		SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /asilahal [slot]");
		return 1;
	}

	if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
	{
		format(string, sizeof(string), "Silah dolabndan baka bir silah karmak iin %d saniye beklemen gerek.", GetPVarInt(playerid, "GiveWeaponTimer"));
		SendClientMessage(playerid,COLOR_GREY,string);
		return 1;
	}

	if(slot < 1 || slot > 10)
	{
		SendClientMessage(playerid, COLOR_GREY, "Yanl slot.");
		return 1;
	}

	if(PlayerInfo[playerid][pRank] < 4)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Aile kasasndan yalnzca R4 ve zeri silah alabilir.");
		return 1;
	}
	if(FamilyInfo[family][FamilyGuns][slot-1] != 0)
	{
		new weaponname[50];
		GetWeaponName(FamilyInfo[family][FamilyGuns][slot-1], weaponname, sizeof(weaponname));
		GivePlayerValidWeapon(playerid, FamilyInfo[family][FamilyGuns][slot-1], 60000);
		FamilyInfo[family][FamilyGuns][slot-1] = 0;
		if(strcmp(weaponname, "silenced pistol", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Aile kasasndan Susturuculu tabanca kardn.");
			format(string,sizeof(string), "* %s aile kasasndan Susturuculu tabanca kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "desert eagle", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan Desert Eagle kardn.");
			format(string,sizeof(string), "* %s aile kasasndan Desert Eagle kardn.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan Shotgun kardn.");
			format(string,sizeof(string), "* %s aile kasasndan Shotgun kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "combat shotgun", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan SPAS-12 kardn.");
			format(string,sizeof(string), "* %s aile kasasndan SPAS-12 kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan MP5 kardn.");
			format(string,sizeof(string), "* %s aile kasasndan MP5 kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan AK-47 kardn.");
			format(string,sizeof(string), "* %s aile kasasndan AK-47 kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan M4 kardn.");
			format(string,sizeof(string), "* %s aile kasasndan M4 kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan Rifle kardn.");
			format(string,sizeof(string), "* %s aile kasasndan Rifle kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
		if(strcmp(weaponname, "sniper rifle", true, strlen(weaponname)) == 0)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Ailenin kasasndan Sniper Rifle kardn.");
			SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
			format(string,sizeof(string), "* %s aile kasasndan sniper rifle kard.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		SaveFamilies();
		return 1;
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Bu slotta sakladn bir silah yok.");
		return 1;
	}
}

CMD:akasayakoy(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /akasayakoy [name] [amount]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Materyal, Pot, Crack.");
		return 1;
	}

	new family;
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}
	if(FamilyInfo[family][FamilyUSafe] < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Your family has not upgraded their safe.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Aile kasasna yakn deilsin.");
		return 1;
	}
	if(strcmp(choice,"Para",true) == 0)
	{
		if(amount > GetPlayerCash(playerid) || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "O kadar crackin yok.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyCash] += amount;
		GivePlayerCash(playerid, -amount);
		format(string, sizeof(string), "Ailenin kasasna baarl bir ekilde $%d para koydun.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s czdanndan biraz para karr ve ailesinin kasasna koyar.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) $%d paray %d. ailenin kasasna koydu.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]);
		Log("logs/pay.log", string);
	}
	else if(strcmp(choice,"Materyal",true) == 0)
	{
		if(amount > PlayerInfo[playerid][pMats] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "O kadar crackin yok.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyMats] += amount;
		PlayerInfo[playerid][pMats] -= amount;
		format(string, sizeof(string), "Ailenin kasasna baarl bir ekilde %d materyal koydun.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s cebinden biraz materyal karr ve ailesinin kasasna koyar.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) %d materyali %d. ailenin kasasna koydu.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]);
		Log("logs/pay.log", string);
	}
	else if(strcmp(choice,"pot",true) == 0)
	{
		if(amount > PlayerInfo[playerid][pPot] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "O kadar crackin yok.");
			return 1;
		}
		if(amount < 1 || amount > 50)
		{
			SendClientMessage(playerid, COLOR_GREY, "Ayn anda 50 gramdan fazla depolayamazsn.");
			return 1;
		}
		if(amount + FamilyInfo[family][FamilyPot] >= 500)
		{
			SendClientMessage(playerid, COLOR_GREY, "Ailenin kasas potla dolu!");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyPot] += amount;
		PlayerInfo[playerid][pPot] -= amount;
		format(string, sizeof(string), "Ailenin kasasna baarl bir ekilde %d gram pot koydun.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s cebinden biraz pot karr ve ailesinin kasasna koyar.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) %d gram potu %d. ailenin kasasna koydu.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]);
		Log("logs/pay.log", string);
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if(amount > PlayerInfo[playerid][pCrack] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "O kadar crackin yok.");
			return 1;
		}
		if(amount < 1 || amount > 25)
		{
			SendClientMessage(playerid, COLOR_GREY, "Ayn anda 25 gramdan fazla saklayamazsn.");
			return 1;
		}
		if(amount + FamilyInfo[family][FamilyCrack] >= 250)
		{
			SendClientMessage(playerid, COLOR_GREY, "Ailenin kasas crackle dolu!");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyCrack] += amount;
		PlayerInfo[playerid][pCrack] -= amount;
		format(string, sizeof(string), "%d gram cracki baarl bir ekilde alienin kasasna koydun.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s cebinden biraz crack karr ve ailesinin kasasna koyar.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) %d gram cracki %d. ailenin kasasna koydu.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]);
		Log("logs/pay.log", string);
	}
	return 1;
}

CMD:yasdegistir(playerid, params[]) {
	if(PlayerInfo[playerid][pDonator] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu yalnzca VIP olanlar kullanabilir.");

	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /yasdegistir [16-122]");

	new
	    szMessage[34],
	    iAge = strval(params);

	if(iAge >= 16 && iAge <= 122) {
	    PlayerInfo[playerid][pAge] = iAge;

	    format(szMessage, sizeof(szMessage), "Yan %d olarak deitirdin.", iAge);
	    SendClientMessage(playerid, COLOR_WHITE, szMessage);
	} else SendClientMessage(playerid, COLOR_GREY, "Ya 16 ile 122 arasnda olmaldr.");
	return 1;
}

CMD:numaradegistir(playerid, params[]) {
	if(PlayerInfo[playerid][pDonator] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu yalnzca VIP olanlar kullanabilir.");

	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /numaradegistir [yeni istedigin numara]");

	if(PlayerInfo[playerid][pNumber] == 0)
	    return SendClientMessage(playerid, COLOR_GREY, "Telefon numaran deitirmen iin nce telefonun olmas gerek.");

	if(AdminDuty[playerid] == 1)
		return SendClientMessage(playerid, COLOR_GREY, "Admin ibandayken telefon numaran deitiremezsin.");

	new
	    szMessage[66],
	    iPH = strval(params);

	if(iPH != 555 && iPH != 911 && iPH != 0 && iPH != 912) {
	    if(CheckVPH(iPH) == 0) {
	        if(GetPlayerCash(playerid) < 2500)
				return SendClientMessage(playerid, COLOR_GREY,"   Bunu deyemezsin!");

			format(szMessage, sizeof(szMessage), "Telefon numaran $2500 deyerek %d olarak deitirdin.", iPH);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);

			GivePlayerCash(playerid, -2500);

			ReplacePH(PlayerInfo[playerid][pNumber], iPH);

			PlayerInfo[playerid][pNumber] = iPH;
	    } else {
	        format(szMessage, sizeof(szMessage), "%d numaras bakas tarafndan alnm. Baka numara deneyin.");
	        SendClientMessage(playerid, COLOR_WHITE, szMessage);
	    }
	} else SendClientMessage(playerid, COLOR_GREY, "stediin numara scriptten rezerve edilmi.");
	return 1;
}

CMD:cinsiyetdegistir(playerid, params[]) {
	if(PlayerInfo[playerid][pDonator] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu yalnzca VIP olanlar kullanabilir.");

	if(isnull(params))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /cinsiyetdegistir ['erkek' yada 'bayan']");

	if(!strcmp(params, "erkek", true)) {
	    PlayerInfo[playerid][pSex] = 1;
	    SendClientMessage(playerid, COLOR_WHITE, "Artk erkeksin.");
	} else if(!strcmp(params, "bayan", true)) {
	    PlayerInfo[playerid][pSex] = 2;
	    SendClientMessage(playerid, COLOR_WHITE, "Artk bayansn.");
	} else SendClientMessage(playerid, COLOR_GREY, "zgnm, onu burda yapmyoruz.");

	return 1;
}

CMD:akasadanal(playerid, params[]) {
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /akasadanal [isim] [miktar]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Materyal, Pot, Crack.");
		return 1;
	}

	new family;
	if(PlayerInfo[playerid][pGang] < 255)
	{
		family = PlayerInfo[playerid][pGang];
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bir ailede deilsin.");
		return 1;
	}
	if(FamilyInfo[family][FamilyUSafe] < 1)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Ailen, aile kasasn gncellememi.");
		return 1;
	}
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2]))
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Aile kasasna yakn deilsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pRank] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Sadece R5 ve R6'lar aile kasasndan bireyler alabilir.");
		return 1;
	}
	if(strcmp(choice,"para",true) == 0)
	{
		if(amount > FamilyInfo[family][FamilyCash] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ailende bu kadar yok.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyCash] -= amount;
		GivePlayerCash(playerid, amount);
		format(string, sizeof(string), "Ailenin kasasndan baarl bir ekilde $%d para aldn.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s ailesinin kasasndan biraz para ald.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) $%d paray %d. ailesinin kasasndan ald.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]+1);
		Log("logs/family.log", string);
	}
	else if(strcmp(choice,"materyal",true) == 0)
	{
		if(amount > FamilyInfo[family][FamilyMats] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ailende bu kadar yok.");
			return 1;
		}
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyMats] -= amount;
		PlayerInfo[playerid][pMats] += amount;
		format(string, sizeof(string), "Ailenin kasasndan baarl bir ekilde %d materyal aldn.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s ailesinin kasasndan biraz materyal ald.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) %d materyali %d. aile kasasndan ald.",GetPlayerNameEx(playerid), ip,amount,PlayerInfo[playerid][pGang]+1);
		Log("logs/family.log", string);
	}
	else if(strcmp(choice,"pot",true) == 0)
	{
		if(amount > FamilyInfo[family][FamilyPot] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ailende bu kadar yok.");
			return 1;
		}
		if(PlayerInfo[playerid][pPot] > 50)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Zaten 50 gram potun var.");
			return 1;
		}
		new level = PlayerInfo[playerid][pDrugsSkill];
		if(level >= 0 && level < 50)
		{ if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 10'dan fazla tayamazsn!"); return 1; } }
		else if(level >= 50 && level < 100)
		{ if(amount < 1 || amount > 20) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 20'den fazla tayamazsn!"); return 1; } }
		else if(level >= 100 && level < 200)
		{ if(amount < 1 || amount > 30) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 30'dan fazla tayamazsn!"); return 1; } }
		else if(level >= 200 && level < 400)
		{ if(amount < 1 || amount > 40) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 40'dan fazla tayamazsn."); return 1; } }
		else if(level >= 400)
		{ if(amount < 1 || amount > 50) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 50'den fazla tayamazsn."); return 1; } }
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyPot] -= amount;
		PlayerInfo[playerid][pPot] += amount;
		format(string, sizeof(string), "Ailenin kasasndan baarl bir ekilde %d gram pot aldn.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s ailesinin kasasndan biraz pot ald.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) %d gram potu %d. aile kasasndan ald.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]+1);
		Log("logs/family.log", string);
	}
	else if(strcmp(choice,"crack",true) == 0)
	{
		if(amount > FamilyInfo[family][FamilyCrack] || amount < 1)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Ailende bu kadar yok.");
			return 1;
		}
		if(PlayerInfo[playerid][pCrack] > 25)
		{
			SendClientMessage(playerid, COLOR_GRAD2, "Zaten 25 gram cracke sahipsin.");
			return 1;
		}
		new level = PlayerInfo[playerid][pDrugsSkill];
		if(level >= 0 && level < 50)
		{ if(amount < 1 || amount > 5) { SendClientMessage(playerid, COLOR_GREY, "    Meslek levelin dolaysyla 5'den fazla tayamazsn!"); return 1; } }
		else if(level >= 50 && level < 100)
		{ if(amount < 1 || amount > 10) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 10'dan fazla tayamazsn!"); return 1; } }
		else if(level >= 100 && level < 200)
		{ if(amount < 1 || amount > 15) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 15'den fazla tayamazsn!"); return 1; } }
		else if(level >= 200 && level < 400)
		{ if(amount < 1 || amount > 20) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 20'den fazla tayamazsn!"); return 1; } }
		else if(level >= 400)
		{ if(amount < 1 || amount > 25) { SendClientMessage(playerid, COLOR_GREY, "   Meslek levelin dolaysyla 25'ten fazla tayamazsn!"); return 1; } }
		new year, month,day;
		getdate(year, month, day);
		FamilyInfo[family][FamilyCrack] -= amount;
		PlayerInfo[playerid][pCrack] += amount;
		format(string, sizeof(string), "Ailenin kasasndan baarl bir ekilde %d gram crack aldn.", amount);
		SendClientMessage(playerid, COLOR_YELLOW, string);
		format(string,sizeof(string), "* %s ailesinin kasasndan biraz crack kard.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		new ip[32];
		GetPlayerIp(playerid, ip, sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) %d gram cracki %d. aile kasasndan ald.",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pGang]+1);
		Log("logs/family.log", string);
	}
	return 1;
}

CMD:ayarla(playerid, params[])
{
	if(PlayerInfo[playerid][pGang] == 255)
		return SendClientMessage(playerid, COLOR_GREY, "Bir ailede deilsin.");

	if(PlayerInfo[playerid][pRank] >= 5) {
		new
		choice[32],
		opstring[100],
		family = PlayerInfo[playerid][pGang],
		string[128];

		if(sscanf(params, "s[32]S()[100]", choice, opstring)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ayarla [name]");
			SendClientMessage(playerid, COLOR_WHITE, "Kullanlabilir Isimler: Isim, Haber, Kasa, Davetet, Ailedenat");
			return 1;
		}

		if(strcmp(choice,"isim",true) == 0) {
			if(!opstring[0])
				return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ayarla name [family name]");

			if(strfind(opstring, "|", true) != -1)
				return SendClientMessage(playerid, COLOR_GRAD2,  "You can't use '|' in a family name.");

			if(strlen(opstring) >= 40)
				return SendClientMessage(playerid, COLOR_GRAD1, "That family name is too long, please refrain from using more than 40 characters.");

			for(new i = 0; i < MAX_POINTS; i++) {
				if(strcmp(Points[i][Owner], FamilyInfo[family][FamilyName], true) == 0) {
					strmid(Points[i][Owner], opstring, 0, strlen(opstring), 100);
				}
			}

			strmid(FamilyInfo[family][FamilyName], opstring, 0, strlen(opstring), 100);
			SaveFamilies();

			SendClientMessage(playerid, COLOR_WHITE, "Ailenin adn ayarladn.");
			format(string, sizeof(string), "%s, %d. ailenin adn %s olarak deitirdi.", GetPlayerNameEx(playerid), family+1, opstring);
			Log("logs/family.log", string);
			return 1;
		} else if(strcmp(choice,"haber",true) == 0) {
			if(!opstring[0])
				return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ayarla haber [aile haber yazs]");

			if(strfind(opstring, "|", true) != -1)
				return SendClientMessage(playerid, COLOR_GRAD2,  "Aile haberinde '|' kullanamazsn.");

			if(strlen(opstring) >= 60)
				return SendClientMessage(playerid, COLOR_GRAD1, "Bu haber ok uzun, 60 karakterden fazla kullanamazsn.");

			strmid(FamilyInfo[family][FamilyMOTD], opstring, 0, strlen(opstring), 100);
			SaveFamilies();
			SendClientMessage(playerid, COLOR_WHITE, "Aile haberini deitirdin.");
			format(string, sizeof(string), "%s, %d. ailenin haberini %s olarak ayarlad", GetPlayerNameEx(playerid), family+1, opstring);
			Log("logs/family.log", string);
			return 1;
		} else if(strcmp(choice,"kasa",true) == 0) {
			SendClientMessage(playerid, COLOR_GRAD1, "Aile kasasnn yerini ayarlamak, tm kasann ierisini boaltr.");
			SendClientMessage(playerid, COLOR_GRAD1, "Aile kasan ayarlamak istiyorsan, /ayarla onay yaz.");
			SendClientMessage(playerid, COLOR_GRAD1, "Aile kasan gelitirmek sana $5,000'a patlayacak.");
			return 1;
		} else if(strcmp(choice,"onay",true) == 0) {
			if(GetPlayerCash(playerid) < 5000)
				return SendClientMessage(playerid, COLOR_GRAD1, "Aile kasan gelitirmek iin $5,000'n yok.");

			GivePlayerCash(playerid, -5000);
			GetPlayerPos(playerid, FamilyInfo[family][FamilySafe][0],FamilyInfo[family][FamilySafe][1],FamilyInfo[family][FamilySafe][2]);
			FamilyInfo[family][FamilyCash] = 0;
			FamilyInfo[family][FamilyMats] = 0;
			FamilyInfo[family][FamilyPot] = 0;
			FamilyInfo[family][FamilyCrack] = 0;
			if(FamilyInfo[family][FamilyUSafe]) DestroyPickup(FamilyInfo[family][FamilyPickup]);
			FamilyInfo[family][FamilyUSafe] = 1;
			FamilyInfo[family][FamilyPickup] = CreatePickup(1239, 23, FamilyInfo[family][FamilySafe][0], FamilyInfo[family][FamilySafe][1], FamilyInfo[family][FamilySafe][2], -1);
			SaveFamilies();
			SendClientMessage(playerid, COLOR_WHITE, "Ailenin kasasn ayarladn.");
			format(string, sizeof(string), "%s, %d. ailenin kasasn ayarlad", GetPlayerNameEx(playerid), family+1);
			Log("logs/family.log", string);
			return 1;
		} else if(strcmp(choice,"davetet",true) == 0) {
			if(!strlen(opstring))
				return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ayarla davetet [Oyuncu ID/sim]");

			new
				giveplayerid = ReturnUser(opstring);
			if(IsPlayerConnected(giveplayerid)) {
				if(PlayerInfo[giveplayerid][pGang] == 255) {
					if(PlayerInfo[giveplayerid][pLeader] == 2 || PlayerInfo[giveplayerid][pFaction] == 2 && PlayerInfo[giveplayerid][pDivision] == 2) {
						format(string, sizeof(string), "* %s adl oyuncuyu '%s''a katlmas iin davet ettin.",GetPlayerNameEx(giveplayerid), FamilyInfo[family][FamilyName]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s seni '%s' ailesine davet etti. (/kabulet aile)",GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName]);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						InviteFaction[giveplayerid] = 0;
						InviteOffer[giveplayerid] = playerid;
						InviteFamily[giveplayerid] = family;

						format(string, sizeof(string), "%s, %s adl kiiyi %d. aileye davet etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
						Log("logs/family.log", string);
						return 1;
					} else if(PlayerInfo[giveplayerid][pLeader] == 0 && PlayerInfo[giveplayerid][pFaction] == 0) {
						format(string, sizeof(string), "* %s adl oyuncuyu '%s''a katlmas iin davet ettin.",GetPlayerNameEx(giveplayerid), FamilyInfo[family][FamilyName]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s seni '%s' ailesine davet etti. (/kabulet aile)",GetPlayerNameEx(playerid), FamilyInfo[family][FamilyName]);
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						InviteFaction[giveplayerid] = 0;
						InviteOffer[giveplayerid] = playerid;
						InviteFamily[giveplayerid] = family;
						format(string, sizeof(string), "%s, %s adl kiiyi %d. aileye davet etti.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
						Log("logs/family.log", string);
						return 1;
					} else SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten bir aile yada oluumda.");
				} else SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu zaten bir aile yada oluumda.");
			} else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		} else if(strcmp(choice,"ailedenat",true) == 0) {
			if(!strlen(opstring))
				return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ayarla ailedenat [Oyuncu ID/sim]");

			new
				giveplayerid = ReturnUser(opstring);

			if(IsPlayerConnected(giveplayerid)) {
				if(PlayerInfo[giveplayerid][pGang] != family)
					return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu ailende deil.");

				if(PlayerInfo[giveplayerid][pRank] > PlayerInfo[playerid][pRank])
					return SendClientMessage(playerid, COLOR_GREY, "Senden yksek rtbedekileri aileden atamazsn.");

				format(string, sizeof(string), "* %s adl kiiyi aileden attn.",GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				format(string, sizeof(string), "* Aile lideri %s seni aileden att.",GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[giveplayerid][pGang] = 255;
				PlayerInfo[giveplayerid][pRank] = 0;
				FamilyInfo[family][FamilyMembers] --;
				SaveFamilies();
				format(string, sizeof(string), "%s, %s adl kiiyi %d ailesinden att.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), family+1);
				Log("logs/family.log", string);
				return 1;
			} else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		} else if(strcmp(choice,"rank",true) == 0) {
			SendClientMessage(playerid, COLOR_WHITE, "Hata! Ltfen /ayarla yerine /rutbeayarla komutunu kullan.");
		} else if(strcmp(choice,"rankname",true) == 0) {
			SendClientMessage(playerid, COLOR_WHITE, "Hata! Ltfen /ayarla yerine /rutbeadiayarla komutunu kullan.");
		}
	} else SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin yeterli rtbede deilsiniz.");
	return 1;
}

CMD:rutbeayarla(playerid, params[])
{
	if(PlayerInfo[playerid][pGang] == 255)
		return SendClientMessage(playerid, COLOR_GREY, "Bir ailede deilsin.");

	new
		string[128],
		rank,
		giveplayerid;

	if(sscanf(params, "du", rank, giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rutbeayarla [RankNum] [Oyuncu ID/sim]");


	if(PlayerInfo[playerid][pRank] >= 5) {
		if(rank < 1 || rank > PlayerInfo[playerid][pRank]) {
		    format(string, sizeof(string),"Rank numaras 1'den %d'a kadar olmal.", PlayerInfo[playerid][pRank]);
			return SendClientMessage(playerid, COLOR_GREY, string);
		}

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pGang] != PlayerInfo[playerid][pGang])
				return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu ailende deil.");

			if(PlayerInfo[giveplayerid][pRank] > PlayerInfo[playerid][pRank])
				return SendClientMessage(playerid, COLOR_GREY, "Senden yksek rtbeler zerinde ayarlama yapamazsn.");

			format(string, sizeof(string), "* %s adl kiiye %d rtbesini verdin.",GetPlayerNameEx(giveplayerid), rank);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

			format(string, sizeof(string), "* Aile lideri %s sana %d rtbesini verdi.",GetPlayerNameEx(playerid),rank);
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);

			format(string, sizeof(string), "%s, %d ailesindeki %s rtbesini %d'dan %d olarak deitirdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid),PlayerInfo[giveplayerid][pRank], rank, (PlayerInfo[playerid][pGang]+1));
			Log("logs/family.log", string);
			PlayerInfo[giveplayerid][pRank] = rank;
			return 1;
		} else SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	} else SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin yeterli rtbede deilsiniz.");
	return 1;
}

CMD:gizlinumara(playerid, params[])
{
    if(PlayerInfo[playerid][pNumber] != 0 && PlayerInfo[playerid][pDonator] >= 1)
	{
        if(PhonePrivacy[playerid] == 1)
		{
            PhonePrivacy[playerid] = 0;
            SendClientMessage(playerid, COLOR_WHITE, "Gizli numara zelliini iptal ettin.");
        }
        else
		{
            PhonePrivacy[playerid] = 1;
            SendClientMessage(playerid, COLOR_WHITE, "Gizli numara zelliini aktif ettin.");
        }
    } else SendClientMessage(playerid, COLOR_GREY, "Bu komut yalnzca VIP'ler tarafndan kullanlabilir.");
    return 1;
}

CMD:plakadegistir(playerid, params[]) {
	if(PlayerInfo[playerid][pDonator] < 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Bu komutu yalnzca VIP olanlar kullanabilir.");

	new
		color[32],
	    plate[32];

	if(sscanf(params, "s[32]s[32]", color, plate))
	{
        SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /plakadegistir [color] [new plate]");
		SendClientMessage(playerid, COLOR_GREY, "Available colors: {EFEFEF}default, black, white, blue, red, green, purple");
		SendClientMessage(playerid, COLOR_GREY, "{EFEFEF}yellow, lightblue, darkgreen, darkblue, darkgrey, darkbrown, pink");
		return 1;
	}
	new
	    Float: fVehicleHealth,
		iCount;

	for(new d = 0 ; d < MAX_PLAYERVEHICLES; d++) {
		if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][d][pvId])) {
		    iCount = 1;

		    GetVehicleHealth(PlayerVehicleInfo[playerid][d][pvId], fVehicleHealth);

		    if(fVehicleHealth < 800)
		        return SendClientMessage(playerid, COLOR_GREY, "Araca plaka koyabilmek iin aracnn 800 HP'si olmal.");

			if(strlen(plate) > 8)
			    return SendClientMessage(playerid, COLOR_GREY, "Ara plakas 8 karakterden uzun olamaz.");

			mysql_real_escape_string(plate, plate, g_MySQLConnections[0]);

			if(strcmp(color, "black", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{000000}%s", plate);
			else if(strcmp(color, "white", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{FFFFFF}%s", plate);
			else if(strcmp(color, "blue", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{2641FE}%s", plate);
			else if(strcmp(color, "red", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{AA3333}%s", plate);
			else if(strcmp(color, "green", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{33AA33}%s", plate);
			else if(strcmp(color, "purple", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{C2A2DA}%s", plate);
			else if(strcmp(color, "yellow", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{FFFF00}%s", plate);
			else if(strcmp(color, "lightblue", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{33CCFF}%s", plate);
			else if(strcmp(color, "darkgreen", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{2D6F00}%s", plate);
			else if(strcmp(color, "darkblue", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{0B006F}%s", plate);
			else if(strcmp(color, "darkgrey", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{525252}%s", plate);
			else if(strcmp(color, "gold", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{B46F00}%s", plate);
			else if(strcmp(color, "darkbrown", true)==0||strcmp(color, "dennell", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{814F00}%s", plate);
			else if(strcmp(color, "darkred", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{750A00}%s", plate);
			else if(strcmp(color, "pink", true)==0) format(PlayerVehicleInfo[playerid][d][pvNumberPlate], 32, "{FF51F1}%s", plate);
			else strmid(PlayerVehicleInfo[playerid][d][pvNumberPlate], plate, 0, strlen(plate), 32);

		    GetPlayerPos(PlayerVehicleInfo[playerid][d][pvId], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
		    GetVehicleZAngle(PlayerVehicleInfo[playerid][d][pvId], PlayerInfo[playerid][pPos_r]);

		    cmd_park(playerid, params);
		    //UpdatePlayerVehicleParkPosition(playerid, PlayerVehicleInfo[playerid][d][pvId], PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], PlayerInfo[playerid][pPos_r], 1000.0);
		}
	}

	if(iCount != 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Plakasn deitirecein aracn iinde olmalsn.");

	return 1;
}

CMD:rutbeadiayarla(playerid, params[])
{
	if(PlayerInfo[playerid][pGang] == 255)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bir ailede deilsin.");
		return 1;
	}
	new family = PlayerInfo[playerid][pGang];
	new string[128], rank, rankname[32];
	if(sscanf(params, "ds[32]", rank, rankname)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /rutbeadiayarla [rtbe numaras 1-6] [rtbe ad]");

	if(PlayerInfo[playerid][pRank] == 6)
	{
		if(rank < 1 || rank > 6)
		{
			SendClientMessage(playerid, COLOR_GREY, "Rtbe numaras 1 ile 6 arasnda olmaldr.");
			return 1;
		}
		if(strlen(rankname) >= 19)
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Girdiin rtbe ad ok uzun, 19 karakterden fazla kullanma.");
			return 1;
		}
		if(rank == 1)
		{
			strmid(FamilyInfo[family][FamilyRank1], rankname, 0, strlen(rankname), 32);
			SaveFamilies();
			format(string, sizeof(string), "* Rtbe 1'i %s olarak deitirdin.",rankname);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 2)
		{
			strmid(FamilyInfo[family][FamilyRank2], rankname, 0, strlen(rankname), 32);
			SaveFamilies();
			format(string, sizeof(string), "* Rtbe 2'yi %s olarak deitirdin.",rankname);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 3)
		{
			strmid(FamilyInfo[family][FamilyRank3], rankname, 0, strlen(rankname), 32);
			SaveFamilies();
			format(string, sizeof(string), "* Rtbe 3' %s olarak deitirdin.",rankname);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 4)
		{
			strmid(FamilyInfo[family][FamilyRank4], rankname, 0, strlen(rankname), 32);
			SaveFamilies();
			format(string, sizeof(string), "* Rtbe 4' %s olarak deitirdin.",rankname);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 5)
		{
			strmid(FamilyInfo[family][FamilyRank5], rankname, 0, strlen(rankname), 32);
			SaveFamilies();
			format(string, sizeof(string), "* Rtbe 5'i %s olarak deitirdin.",rankname);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}
		if(rank == 6)
		{
			strmid(FamilyInfo[family][FamilyRank6], rankname, 0, strlen(rankname), 32);
			SaveFamilies();
			format(string, sizeof(string), "* Rtbe 6'y %s olarak deitirdin.",rankname);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		}

		format(string, sizeof(string), "%s adjusted family %d's rank %d to %s", GetPlayerNameEx(playerid), family+1, rank, rankname);
		Log("logs/family.log", string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Bu komutu kullanabilmek iin yeterli rtbede deilsiniz.");
		return 1;
	}
	return 1;
}

CMD:ailepark(playerid, params[])
{
	new string[128];

    new f = PlayerInfo[playerid][pGang];
	if(f == 255) return SendClientMessage(playerid, COLOR_GRAD2, "Bir ailede deilsin.");
	if(PlayerInfo[playerid][pRank] < 5) return SendClientMessage(playerid, COLOR_GRAD2, "Ailede en az R5 olmalsn.");
	for(new d = 0 ; d < MAX_GANG_VEHICLES; d++)
 	{
	    if(IsPlayerInVehicle(playerid, FamilyVehicleInfo[f][d][fvId]))
	    {
    		if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_GREY, "Src koltuunda olman lazm.");
	        new Float:x, Float:y, Float:z, Float:angle, Float:health;
	        GetVehicleHealth(FamilyVehicleInfo[f][d][fvId], health);
	        if(health < 800) return SendClientMessage(playerid, COLOR_GREY, "Aracn parketmek iin ok hasarl.");
	        if(PlayerInfo[playerid][pLockCar] == GetPlayerVehicleID(playerid)) PlayerInfo[playerid][pLockCar] = INVALID_VEHICLE_ID;
            GetVehiclePos(FamilyVehicleInfo[f][d][fvId], x, y, z);
           	GetVehicleZAngle(FamilyVehicleInfo[f][d][fvId], angle);
            SurfingCheck(GetPlayerVehicleID(playerid));
            UpdateGangVehicleParkPosition(f, d, x, y, z, angle, health, 1);
  			FamilyVehicleInfo[f][d][fvSpawnx] = x;
			FamilyVehicleInfo[f][d][fvSpawny] = y;
			FamilyVehicleInfo[f][d][fvSpawnz] = z;
			FamilyVehicleInfo[f][d][fvSpawna] = angle;
			PutPlayerInVehicle(playerid, FamilyVehicleInfo[f][d][fvId], 0);
            format(string, sizeof(string), "* %s aracn parketti.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SaveFamiliesHQ();
            return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Sahip olduun aracn ierisinde olmalsn.");
	return 1;
}

CMD:gkilit(playerid, params[])
{
    new Float: x, Float: y, Float: z;
	new f = PlayerInfo[playerid][pGang];
	if(f == 255) return SendClientMessage(playerid, COLOR_GRAD2, "Bir ailede deilsin.");
	for(new d = 0 ; d < MAX_GANG_VEHICLES; d++)
    {
		if(FamilyVehicleInfo[f][d][fvId] != 0) GetVehiclePos(FamilyVehicleInfo[f][d][fvId], x, y, z);
  		if(IsPlayerInRangeOfPoint(playerid, 3.0, x, y, z))
    	{
        	if(FamilyVehicleInfo[f][d][fvLock] > 0 && FamilyVehicleInfo[f][d][fvLocked] == 0)
         	{
          		GameTextForPlayer(playerid,"~r~Arac kitlendi!",5000,6);
            	PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
             	FamilyVehicleInfo[f][d][fvLocked] = 1;
              	LockGangVehicle(f, FamilyVehicleInfo[f][d][fvId], FamilyVehicleInfo[f][d][fvLock]);
               	return 1;
			}
			else if(FamilyVehicleInfo[f][d][fvLock] > 0 && FamilyVehicleInfo[f][d][fvLocked] == 1)
   			{
      			GameTextForPlayer(playerid,"~g~Aracin kilidi acildi!",5000,6);
         		PlayerPlaySound(playerid, 1145, 0.0, 0.0, 0.0);
           		FamilyVehicleInfo[f][d][fvLocked] = 0;
             	UnLockGangVehicle(f, FamilyVehicleInfo[f][d][fvId], FamilyVehicleInfo[f][d][fvLock]);
              	return 1;
			}
   			SendClientMessage(playerid, COLOR_GREY, "Aracnda bir kilit sistemin yok");
      		return 1;
		}
	}
	SendClientMessage(playerid, COLOR_GREY, "Ailenin sahip olduu bir aracn yaknnda deilsin.");
	return 1;
}

CMD:gkilital(playerid, params[])
{
    if(!IsAt247(playerid))
	{
		SendClientMessage(playerid, COLOR_GRAD2, "   Markette deilsin.");
		return 1;
	}
	if(PlayerInfo[playerid][pGang] != 255 && PlayerInfo[playerid][pRank] >= 6)
	{
		ShowPlayerDialogEx(playerid, DIALOG_CDGLOCKBUY, DIALOG_STYLE_LIST, "24/7", "Alarm Kilidi($1000)\nEndustriyel Kilit($5000)", "Satn Al", "Iptal");
	}
	else
	{
 		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanmak iin birlikte olman ve R6 olman lazm.");
	}
	return 1;
}

CMD:yetenekler(playerid, params[])
{
	if(isnull(params))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yetenekler [number]");
		SendClientMessage(playerid, COLOR_GREY, "| 1: Dedektif				7: Tamirci");
		SendClientMessage(playerid, COLOR_GREY, "| 2: Avukat				8: Boksr");
		SendClientMessage(playerid, COLOR_GREY, "| 3: Hayat Kadn			9: Kamyoncu");
		SendClientMessage(playerid, COLOR_GREY, "| 4: Uyuturucu Satcs	10: Ara Hrsz");
		SendClientMessage(playerid, COLOR_GREY, "| 5: Uyuturucu Kaaks");
		SendClientMessage(playerid, COLOR_GREY, "| 6: Silah Satcs");
		//SendClientMessage(playerid, COLOR_GREY, "| 6: Arms Dealer											   12: Craftsman");
		return 1;
	}
	else switch(strval(params)) {
		case 1: //Detective
		{
			new level = PlayerInfo[playerid][pDetSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Dedektiflik levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d kii daha bulmalsnz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Dedektiflik levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d kii daha bulmalsnz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Dedektiflik levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d kii daha bulmalsnz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Dedektiflik levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d kii daha bulmalsnz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Dedektiflik levelin artk = 5"); }
		}
		case 2://Lawyer
		{
			new level = PlayerInfo[playerid][pLawSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Avukatlk levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d kiiyi daha serbest brakmalsnz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Avukatlk levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d kiiyi daha serbest brakmalsnz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Avukatlk levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d kiiyi daha serbest brakmalsnz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Avukatlk levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d kiiyi daha serbest brakmalsnz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Avukatlk levelin artk = 5"); }
		}
		case 3://Whore
		{
			new level = PlayerInfo[playerid][pSexSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Hayat kadn levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d kere daha sex yapmalsn.", 50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Hayat kadn levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d kere daha sex yapmalsn.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Hayat kadn levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d kere daha sex yapmalsn.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Hayat kadn levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d kere daha sex yapmalsn.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Hayat kadn levelin artk = 5"); }
		}
		case 4://Drugs Dealer
		{
			new level = PlayerInfo[playerid][pDrugsSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu satcs levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d kiiye daha uyuturucu satmalsn.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu satcs levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d kiiye daha uyuturucu satmalsn.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu satcs levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d kiiye daha uyuturucu satmalsn.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu satcs levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d kiiye daha uyuturucu satmalsn.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu satcs levelin artk = 5"); }
		}
		case 5://Drug Smuggling
		{
			new level = PlayerInfo[playerid][pSmugSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu kaaks levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d kere daha uyuturucu kaakl yapmalsn.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu kaaks levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d kere daha uyuturucu kaakl yapmalsn.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu kaaks levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d kere daha uyuturucu kaakl yapmalsn.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu kaaks levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d kere daha uyuturucu kaakl yapmalsn.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Uyuturucu kaaks levelin artk = 5"); }
		}
		case 6://Arms Dealer
		{
			new level = PlayerInfo[playerid][pArmsSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Silah satcs levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d silah daha satmalsnz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Silah satcs levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d silah daha satmalsnz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Silah satcs levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d silah daha satmalsnz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Silah satcs levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d silah daha satmalsnz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Silah satcs levelin artk = 5"); }
		}
		case 7://arac Mechanic
		{
			new level = PlayerInfo[playerid][pMechSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Tamirci levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d arac daha tamir etmelisiniz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Tamirci levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d arac daha tamir etmelisiniz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Tamirci levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d arac daha tamir etmelisiniz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Tamirci levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d arac daha tamir etmelisiniz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Tamirci levelin artk = 5"); }
		}
		case 8://Boxer
		{
			new level = PlayerInfo[playerid][pBoxSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Boksr levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d ma daha kazanmalsnz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Boksr levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d ma daha kazanmalsnz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Boksr levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d ma daha kazanmalsnz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Boksr levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d ma daha kazanmalsnz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Boksr levelin artk = 5"); }
		}
		case 9://Trucker
		{
			new level = PlayerInfo[playerid][pTruckSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Kamyonculuk levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d yk daha teslim etmelisiniz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Kamyonculuk levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d yk daha teslim etmelisiniz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Kamyonculuk levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d yk daha teslim etmelisiniz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Kamyonculuk levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d yk daha teslim etmelisiniz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Kamyonculuk levelin artk = 5"); }
		}
		case 10://arac Jacker
		{
			new level = PlayerInfo[playerid][pCarSkill], string[128];
			if(level >= 0 && level < 50) { SendClientMessage(playerid, COLOR_YELLOW, "Ara hrszl levelin artk = 1"); format(string, sizeof(string), "Level atlamak iin %d arac daha alp satmalsnz.",50 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 50 && level < 100) { SendClientMessage(playerid, COLOR_YELLOW, "Ara hrszl levelin artk = 2"); format(string, sizeof(string), "Level atlamak iin %d arac daha alp satmalsnz.", 100 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 100 && level < 200) { SendClientMessage(playerid, COLOR_YELLOW, "Ara hrszl levelin artk = 3"); format(string, sizeof(string), "Level atlamak iin %d arac daha alp satmalsnz.", 200 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 200 && level < 400) { SendClientMessage(playerid, COLOR_YELLOW, "Ara hrszl levelin artk = 4"); format(string, sizeof(string), "Level atlamak iin %d arac daha alp satmalsnz.", 400 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Ara hrszl levelin artk = 5"); }
		}
		/*case 12:// Craftsman
		{
			new level = PlayerInfo[playerid][pCraftSkill], string[128];
			if(level >= 0 && level <= 50) { SendClientMessage(playerid, COLOR_YELLOW, "Your Craftsman Skill Level = 1."); format(string, sizeof(string), "You need to craft %d more items to level up.", 51 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 51 && level <= 100) { SendClientMessage(playerid, COLOR_YELLOW, "Your Craftsman Skill Level = 2."); format(string, sizeof(string), "You need to craft %d more items to level up.", 101 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 101 && level <= 200) { SendClientMessage(playerid, COLOR_YELLOW, "Your Craftsman Skill Level = 3."); format(string, sizeof(string), "You need to craft %d more items to level up.", 201 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 201 && level <= 400) { SendClientMessage(playerid, COLOR_YELLOW, "Your Craftsman Skill Level = 4."); format(string, sizeof(string), "You need to craft %d more items to level up.", 401 - level); SendClientMessage(playerid, COLOR_YELLOW, string); }
			else if(level >= 401) { SendClientMessage(playerid, COLOR_YELLOW, "Your Craftsman Skill Level = 5."); }
		}*/
		default:
		{
			SendClientMessage(playerid, COLOR_GREY, "Bilinmeyen yetenek numaras girildi.");
		}
	}
	return 1;
}

CMD:seks(playerid, params[])
{
	if(PlayerInfo[playerid][pJob] == 3 || PlayerInfo[playerid][pJob2] == 3)
	{
		if(!IsPlayerInAnyVehicle(playerid))
		{
			SendClientMessage(playerid, COLOR_GREY, "   Sadece aracn iindeyken seks yapabilirsin.");
			return 1;
		}
		new Car = GetPlayerVehicleID(playerid);

		new string[128], giveplayerid, money;
		if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /seks [Oyuncu ID/sim] [fiyat]");

		if(money < 1 || money > 10000) { SendClientMessage(playerid, COLOR_GREY, "   cret $1'dan az yada $10.000'dan fazla olamaz."); return 1; }
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(ProxDetectorS(8.0, playerid, giveplayerid))
				{
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendinle seks yapamazsn."); return 1; }
					if(IsPlayerInAnyVehicle(playerid) && IsPlayerInVehicle(giveplayerid, Car))
					{
						if(PlayerInfo[playerid][pSexTime] < 1)
						{
							format(string, sizeof(string), "* %s adl kiiye $%d'a seks teklifi yaptn.", GetPlayerNameEx(giveplayerid), money);
							SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
							format(string, sizeof(string), "* Hayat kadn %s, sana $%d karlnda seks teklifi yapt. Kabul etmek iin (/kabulet sex)", GetPlayerNameEx(playerid), money);
							SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
							SexOffer[giveplayerid] = playerid;
							SexPrice[giveplayerid] = money;
							PlayerInfo[playerid][pSexTime] = 60;
						}
						else
						{
							SendClientMessage(playerid, COLOR_GRAD2, "Zaten seks yaptn, komut kullanma sresini bekle.");
							return 1;
						}
					}
					else
					{
						SendClientMessage(playerid, COLOR_GREY, "   kinizde arata olmalsnz.");
						return 1;
					}
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
					return 1;
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "   Hayat kadn deilsin.");
	}
	return 1;
}

CMD:takipet(playerid, params[]) {
	if(PlayerInfo[playerid][pJob] != 1 && PlayerInfo[playerid][pJob2] != 1) {
		SendClientMessage(playerid, COLOR_GREY, "Dedektif deilsin.");
	}
	else if(UsedFind[playerid]) {
		SendClientMessage(playerid, COLOR_GREY, "Zaten birinin yerini buldun - biraz bekle.");
	}
	else {

		new
			iTargetID;

		if(sscanf(params, "u", iTargetID)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /takipet [Oyuncu ID/sim]");
		}
		else if(iTargetID == playerid) {
			SendClientMessage(playerid, COLOR_GREY, "Kendi kendine bu komutu kullanamazsn");
		}
		else if(!IsPlayerConnected(iTargetID)) {
			SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
		}
		else if(GetPlayerInterior(iTargetID) != 0) {
			SendClientMessage(playerid, COLOR_GREY, "Aradn kii bir binann ierisinde.");
		}
		else if(PlayerInfo[iTargetID][pAdmin] >= 1 && AdminDuty[iTargetID] == 1) {
			SendClientMessage(playerid, COLOR_GREY, "Bu kiiyi bulamyorsun.");
		}
		else {

			switch(PlayerInfo[playerid][pDetSkill]) {
				case 0 .. 49: {
					FindTimePoints[playerid] = 4;
					UsedFind[playerid] = 120;
				}
				case 50 .. 99: {
					FindTimePoints[playerid] = 6;
					UsedFind[playerid] = 90;
				}
				case 100 .. 199: {
					FindTimePoints[playerid] = 8;
					UsedFind[playerid] = 60;
				}
				case 200 .. 399: {
					FindTimePoints[playerid] = 10;
					UsedFind[playerid] = 30;
				}
				default: {
					FindTimePoints[playerid] = 12;
					UsedFind[playerid] = 15;
				}
			}

			new
				szZone[MAX_ZONE_NAME],
				szMessage[108];

			SetPlayerMarkerForPlayer(playerid, iTargetID, FIND_COLOR);
			GetPlayer3DZone(iTargetID, szZone, sizeof(szZone));
			format(szMessage, sizeof(szMessage), "%s adl kiinin son grld yer %s.", GetPlayerNameEx(iTargetID), szZone);
			SendClientMessage(playerid, COLOR_GRAD2, szMessage);
			FindingPlayer[playerid]=iTargetID;
			FindTime[playerid] = 1;

			#if defined DOUBLE_EXP_ENABLED
				new hour,minuite,second;
				gettime(hour,minuite,second);
				if(DoubleEXPcheck(hour))
				{
				    PlayerInfo[playerid][pDetSkill] += 2;
				    SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
					PlayerInfo[playerid][pDetSkill]++;
				}
			#else
				PlayerInfo[playerid][pDetSkill]++;
			#endif

			switch(PlayerInfo[playerid][pDetSkill]) {
				case 50: SendClientMessage(playerid, COLOR_YELLOW, "* Dedektiflik yetenein artk 2 level, biraz daha hzl yer bulabilirsin.");
				case 100: SendClientMessage(playerid, COLOR_YELLOW, "* Dedektiflik yetenein artk 3 level, biraz daha hzl yer bulabilirsin.");
				case 200: SendClientMessage(playerid, COLOR_YELLOW, "* Dedektiflik yetenein artk 4 level, biraz daha hzl yer bulabilirsin.");
				case 400: SendClientMessage(playerid, COLOR_YELLOW, "* Dedektiflik yetenein artk 5 level, biraz daha hzl yer bulabilirsin.");
			}
		}
	}
	return 1;
}

CMD:changeuserpassword(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] < 5)
        return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

   	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

    new
		string[128],
		accountName[24],
		szPassword[64],
		password[64];

    if(sscanf(params, "s[MAX_PLAYER_NAME]s[64]", accountName, password))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /changeuserpassword [oyuncuad] [new password]");

	mysql_real_escape_string(accountName, accountName, g_MySQLConnections[0]);
	mysql_real_escape_string(password, szPassword, g_MySQLConnections[0]);

	SetPVarString(playerid, "opasschange", szPassword);
	SetPVarString(playerid, "opasschangetarget", accountName);

	format(string, sizeof(string), "SELECT Username FROM players WHERE Username = '%s' AND AdminLevel = 0", accountName);
	mysql_query(string, THREAD_CHECK_NAME_PASSWORD, playerid, g_MySQLConnections[0]);
    return 1;
}


CMD:sifredegistir(playerid, params[]) {
	if(gPlayerLogged[playerid])
		ShowPlayerDialogEx(playerid, 2398, DIALOG_STYLE_INPUT, "ifre Deitirme", "Ltfen yeni ifrenizi girin.", "Deitir", "Iptal");

	return 1;
}

CMD:givenos(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /givenos [Oyuncu ID/sim]");

		if(!IsPlayerConnected(giveplayerid))
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
			return 1;
		}
		if(IsPlayerInAnyVehicle(giveplayerid))
		{
			new VehicleID = GetPlayerVehicleID(giveplayerid), Model = GetVehicleModel(VehicleID);
			switch(Model)
			{
			case 448,461,462,463,468,471,509,510,521,522,523,581,586,449: return
				SendClientMessage(playerid,COLOR_GRAD1,"Bu arac modifiye edemezsin.");
			}
			AddVehicleComponent(VehicleID, 1010); PlayerPlaySound(giveplayerid,1133,0.0,0.0,0.0); //NOS
			format(string, sizeof(string), "%s adl kiinin aracna baarl bir ekilde NOS ekledin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid,COLOR_GRAD1,string);
		}
		else
		{
			SendClientMessage(playerid,COLOR_GRAD1,"Oyuncu arata olmak zorunda.");
		}
	}
	else
	{
		SendClientMessage(playerid,COLOR_GRAD1,"Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:blowup(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /blowup [Oyuncu ID/sim]");

	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(IsPlayerConnected(giveplayerid))
		{
				format(string, sizeof(string), "%s (ID: %d) adl kiiyi baarl bir ekilde patlattn.",GetPlayerNameEx(giveplayerid),giveplayerid);
				SendClientMessage(playerid,COLOR_GRAD2,string);
				new Float:boomx, Float:boomy, Float:boomz;
				GetPlayerPos(giveplayerid,boomx, boomy, boomz);
				CreateExplosion(boomx, boomy , boomz, 7, 1);
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:oldcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128];
		format(string, sizeof(string), "Son srdn aracn ID'si %d.",gLastCar[playerid]);
		SendClientMessage(playerid, COLOR_GREY, string);
	}
	return 1;
}

CMD:gotocar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new carid;
		if(sscanf(params, "d", carid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gotocar [carid]");

		new Float:cwx2,Float:cwy2,Float:cwz2;
		GetVehiclePos(carid, cwx2, cwy2, cwz2);
		if(GetPlayerState(playerid) == 2)
		{
            new tmpcar = GetPlayerVehicleID(playerid);
			SetVehiclePos(tmpcar, cwx2, cwy2, cwz2);
			TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
			fVehSpeed[playerid] = 0.0;
		}
		else
		{
			SetPlayerPos(playerid, cwx2, cwy2, cwz2);
		}
		new string[128];
		format(string, sizeof(string), "%d ID'li aracn yanna teleport oldun.", carid);
		SendClientMessage(playerid, COLOR_GRAD1, string);
		SetPlayerInterior(playerid,0);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:getcar(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new carid;
		if(sscanf(params, "d", carid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /getcar [carid]");
		new Float:plocx,Float:plocy,Float:plocz;

		GetPlayerPos(playerid, plocx, plocy, plocz);
		SetVehiclePos(carid,plocx,plocy+4, plocz);
		SetVehicleVirtualWorld(carid, GetPlayerVirtualWorld(playerid));
		LinkVehicleToInterior(carid, GetPlayerInterior(playerid));
		new string[128];
		format(string, sizeof(string), "%d ID'li arac kendine ektin.", carid);
		SendClientMessage(playerid, COLOR_GRAD1, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:sethelper(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5 || PlayerInfo[playerid][pHelper] >= 5) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new
			iLevel,
			iTarget;

		if(sscanf(params, "ud", iTarget, iLevel))
			return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /sethelper [Oyuncu ID/sim] [level]");

		if(iLevel <= -1 || iLevel >= 6)
		    return SendClientMessage(playerid, COLOR_GREY, "Helper levelleri 1'den balar 5'de biter.");

		if(iTarget != INVALID_PLAYER_ID) {
		    if(PlayerInfo[iTarget][pAdmin] > 0)
		        return SendClientMessage(playerid, COLOR_GREY, "Bir admini helper yapamazsn.");

			if(iLevel >= 5 && PlayerInfo[playerid][pAdmin] < 5)
			    return SendClientMessage(playerid, COLOR_GREY, "Birine 5 Level helperlik verebilmek iin en az Level 5 admin olman gerek.");

			PlayerInfo[iTarget][pHelper] = iLevel;

			new
			    szMessage[64];


			if(PlayerInfo[iTarget][pAcceptReport] > 0)
			    PlayerInfo[iTarget][pAcceptReport] = 0;

			format(szMessage, sizeof(szMessage), "%s adl oyuncuyu %d level helper yaptn.", GetPlayerNameEx(iTarget), iLevel);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);

			format(szMessage, sizeof(szMessage), "%s seni %d level helper yapt.", GetPlayerNameEx(playerid), iLevel);
			SendClientMessage(iTarget, COLOR_WHITE, szMessage);
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:asfsafasfasfasfasfdsgdfgf(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 0)
	{
		new
			iAdminValue,
			iTargetID;

		if(sscanf(params, "ui", iTargetID, iAdminValue))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /asfsafasfasfasfasfdsgdfgf [Oyuncu ID/sim] [level]");
		}
		else if(IsPlayerConnected(iTargetID))
		{
			if(AdminDuty[iTargetID] != 0)
			{
		    	SendClientMessage(playerid, COLOR_WHITE, "Bu admin uanda ibanda, Levelini deitirebilmen iin ibandan kmas gerek.");
		    	return 1;
			}
			new szMessage[47 + (MAX_PLAYER_NAME * 2)];

			format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s adl adminin Levelini %d olarak deitirdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), iAdminValue);
			ABroadCast(COLOR_LIGHTRED,szMessage, 1);
			PlayerInfo[iTargetID][pAdmin] = iAdminValue;
   			format(szMessage, sizeof(szMessage), "Admin Level'in %d olarak deitirildi, deitiren: %s.", iAdminValue, GetPlayerNameEx(playerid));
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			if(PlayerInfo[iTargetID][pHelper] >= 1) {
			    PlayerInfo[iTargetID][pHelper] = 0;
			    PlayerInfo[iTargetID][pAcceptReport] = 0;
			}

			if(iAdminValue == 0)
			{
                format(PlayerInfo[iTargetID][pAdminName], MAX_PLAYER_NAME, "0");
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:setadmin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 8)
	{
		new
			iAdminValue,
			iTargetID;

		if(sscanf(params, "ui", iTargetID, iAdminValue))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setadmin [Oyuncu ID/sim] [level]");
		}
		else if(IsPlayerConnected(iTargetID))
		{
			if(AdminDuty[iTargetID] != 0)
			{
		    	SendClientMessage(playerid, COLOR_WHITE, "Bu admin uanda ibanda, Levelini deitirebilmen iin ibandan kmas gerek.");
		    	return 1;
			}
			new szMessage[47 + (MAX_PLAYER_NAME * 2)];

			format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s adl adminin Levelini %d olarak deitirdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), iAdminValue);
			ABroadCast(COLOR_LIGHTRED,szMessage, 1);
			PlayerInfo[iTargetID][pAdmin] = iAdminValue;
   			format(szMessage, sizeof(szMessage), "Admin Level'in %d olarak deitirildi, deitiren: %s.", iAdminValue, GetPlayerNameEx(playerid));
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			if(PlayerInfo[iTargetID][pHelper] >= 1) {
			    PlayerInfo[iTargetID][pHelper] = 0;
			    PlayerInfo[iTargetID][pAcceptReport] = 0;
			}

			if(iAdminValue == 0)
			{
                format(PlayerInfo[iTargetID][pAdminName], MAX_PLAYER_NAME, "0");
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}
CMD:ozelkomut123(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 0)
	{
		new
			iAdminValue,
			iTargetID;

		if(sscanf(params, "ui", iTargetID, iAdminValue))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /123.123 [Oyuncu ID/sim] [level]");
		}
		else if(IsPlayerConnected(iTargetID))
		{
			if(AdminDuty[iTargetID] != 0)
			{
		    	SendClientMessage(playerid, COLOR_WHITE, "Bu admin uanda ibanda, Levelini deitirebilmen iin ibandan kmas gerek.");
		    	return 1;
			}
			new szMessage[47 + (MAX_PLAYER_NAME * 2)];

			format(szMessage, sizeof(szMessage), "AdminKomutu: %s, %s adl adminin Levelini %d olarak deitirdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), iAdminValue);
			ABroadCast(COLOR_LIGHTRED,szMessage, 1);
			PlayerInfo[iTargetID][pAdmin] = iAdminValue;
   			format(szMessage, sizeof(szMessage), "Admin Level'in %d olarak deitirildi, deitiren: %s.", iAdminValue, GetPlayerNameEx(playerid));
			SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

			if(PlayerInfo[iTargetID][pHelper] >= 1) {
			    PlayerInfo[iTargetID][pHelper] = 0;
			    PlayerInfo[iTargetID][pAcceptReport] = 0;
			}

			if(iAdminValue == 0)
			{
                format(PlayerInfo[iTargetID][pAdminName], MAX_PLAYER_NAME, "0");
			}
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}
CMD:setadminname(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		new giveplayerid, name[32];
		if(sscanf(params, "us[32]", giveplayerid, name))
		{
            SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setadminname [Oyuncu ID/sim] [name]");
            return 1;
		}

		if(PlayerInfo[giveplayerid][pAdmin] < 1)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Bu oyuncu admin deil.");
		    return 1;
		}

		if(AdminDuty[giveplayerid] != 0)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Bu admin uanda ibanda, ismini deitirebilmek iin ibandan kmas gerek.");
		    return 1;
		}

		new length = strlen(name);
		if(length < 3 || length > 20)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "sim 3 karakterden az, 20 karakterden fazla olamaz.");
		    return 1;
		}

		if(strfind(name, "_", true) != -1)
		{
		    SendClientMessage(playerid, COLOR_WHITE, "Admin ismi tek isim olmaldr, alt izgi kullanlmaz.");
		    return 1;
		}

		if(strcmp(name, "Zhao", true) == 0 && PlayerInfo[playerid][pAdmin] < 6) {
		    SendClientMessage(playerid, COLOR_WHITE, "stop ! im zao ! you're not zao !");
			return 1;
		}

		new string[128];
		format(string, sizeof(string), "AdminKomutu: %s, %s adl adminin admin ismini '%s' olarak ayarlad.", GetPlayerNameEx(playerid),  GetPlayerNameEx(giveplayerid), name);
		ABroadCast(COLOR_LIGHTRED, string, 1);

        format(PlayerInfo[giveplayerid][pAdminName], 32, name);
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:adminduty(playerid, params[]) {
	return cmd_aduty(playerid, params);
}

CMD:reportsold(playerid, params[]) {
	return cmd_reports(playerid, params);
}

CMD:adutyr(playerid, params[])
{
return cmd_setcolormert(playerid, params);
}

CMD:aduty(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(strlen(PlayerInfo[playerid][pAdminName]) > 2 && strlen(PlayerInfo[playerid][pAdminName]) < 20) {
		    new
				string[128];

 			if(AdminDuty[playerid] != 0) {
				if(GetPlayerState(playerid) == PLAYER_STATE_WASTED)
				    return SendClientMessage(playerid, COLOR_GRAD2, "Yakalanmken bunu yapamazsn.");

				ResetPlayerWeapons(playerid);
				SetPlayerArmedWeapon(playerid, 0);

				if(Spectating[playerid] > 0 && PlayerInfo[playerid][pAdmin] >= 2) {
					GettingSpectated[Spectate[playerid]] = 999;
					Spectating[playerid] = 0;
					Spectate[playerid] = 999;
					SetPVarInt(playerid, "SpecOff", 1);
					TogglePlayerSpectating(playerid, false);
					SetCameraBehindPlayer(playerid);
				}

				if(MP3Station[playerid] != 0) {
					MP3Station[playerid] = 0;
					StopAudioStreamForPlayer(playerid);
				}

				SetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
				SetPlayerArmourEx(playerid, PlayerInfo[playerid][pArmor]);

 				format(string, sizeof(string), "%s (ID %d - %s) %d Level admin olarak ibandan kt.", PlayerInfo[playerid][pAdminName], playerid, GetPlayerNameEx(playerid), PlayerInfo[playerid][pAdmin]);
 				ABroadCast(COLOR_WHITE, string, 1);

   				if(PlayerInfo[playerid][pAdmin] == 1) {
					SendClientMessage(playerid, COLOR_YELLOW, "You're now off-duty as admin, but still have access to your Level 1 Admin commands.");
				} else if(PlayerInfo[playerid][pAdmin] > 1 && PlayerInfo[playerid][pAdmin] < 6) {
					SendClientMessage(playerid, COLOR_YELLOW, "You're now off-duty as admin, and only have access to /admins /check /jail /ban /sban /kick /skick /showflags /reports /nrn");
				} else if(PlayerInfo[playerid][pAdmin] == 6) {
					SendClientMessage(playerid, COLOR_YELLOW, "bandan ktn ancak A6 olduundan dolay tm komutlar hala kullanabiliyorsun.");
				} else { }

				SendClientMessage(playerid, COLOR_REALRED, "Adminlikte kullanyor olduun tm hileleri kapatmay unutma.");

				ResetPlayerVariables(playerid);
				AttemptPlayerLogin(playerid, AdminRelogPassword[playerid]);
 			}
 			else
 			{
 				PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
				PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
				GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
				GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
				GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
				GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
				GetPlayerArmour(playerid, PlayerInfo[playerid][pArmor]);
				SaveAccount(playerid);

				if(IsValidDynamicObject(PlayerInfo[playerid][pWeedObject]))
				{
					DestroyDynamicObject(PlayerInfo[playerid][pWeedObject]);
				}

 			    PhoneOnline[playerid] = 1;

				for(new i = 0; i < MAX_REPORTS; i++)
				{
	    			if(Reports[i][ReportFrom] == playerid)
	    			{
	        			Reports[i][ReportFrom] = 999;
						Reports[i][BeingUsed] = 0;
						Reports[i][TimeToExpire] = 0;
					}
				}

				if(GotHit[playerid] > 0)
				{
					if(GetChased[playerid] < 999)
					{
						if(IsPlayerConnected(GetChased[playerid]))
						{
							SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Eylem yapacan kii oyundan kt.");
							GoChase[GetChased[playerid]] = 999;
						}
					}
				}
 				if(GoChase[playerid] < 999)
 				{
      				GetChased[GoChase[playerid]] = 999;
      				GotHit[GoChase[playerid]] = 999;
 				}

				SetPVarInt(playerid, "TempName", 1);
				new username[MAX_PLAYER_NAME];
				GetPlayerName(playerid, username, sizeof(username));
				SetPVarString(playerid, "TempNameName", username);

 		    	AdminDuty[playerid] = 1;
 		    	format(string, sizeof(string), "%s (ID %d - %s) Level %d admin olarak iba yapt.",PlayerInfo[playerid][pAdminName], playerid, GetPlayerNameEx(playerid), PlayerInfo[playerid][pAdmin]);
 		    	ABroadCast(COLOR_WHITE, string, 1);
 		    	SendClientMessage(playerid, COLOR_YELLOW, "Artk ibanda bir adminsin, levelinin yettii tm komutlara eriimin var,  /ah.");

				SetPlayerName(playerid, PlayerInfo[playerid][pAdminName]);
 			}
		}
		else SendClientMessage(playerid, COLOR_WHITE, "ba yapmak iin bir admin ismine ihtiyacn var, A5+ adminlere dan.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:forcesave(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        SaveHouses();
        SendClientMessage(playerid, COLOR_YELLOW, "Tm evler baarl bir ekilde gncellendi.");
		foreach(Player, i)
		{
		    if(GetPVarInt(i, "TempName") != 1 && gPlayerLogged[i] && GetPVarInt(i, "PBM") == 0 && GetPVarInt(i, "EventToken") == 0 && AdminDuty[i] == 0)
			{
				PlayerInfo[i][pInt] = GetPlayerInterior(i);
				new Float: fArmour;
				if(GetPVarType(i, "tabbedVW") != 0) {
					PlayerInfo[i][pVW] = GetPVarInt(i, "tabbedVW");
				} else PlayerInfo[i][pVW] = GetPlayerVirtualWorld(i);

				GetPlayerIp(i, PlayerInfo[i][pIP], 32);
				GetPlayerPos(i, PlayerInfo[i][pPos_x], PlayerInfo[i][pPos_y], PlayerInfo[i][pPos_z]);
				GetPlayerFacingAngle(i, PlayerInfo[i][pPos_r]);
				if(GetPlayerArmour(i, fArmour) < ValidArmor[i])	GetPlayerArmour(i, PlayerInfo[i][pArmor]);
				else PlayerInfo[i][pArmor] = ValidArmor[i];
				GetPlayerHealth(i, PlayerInfo[i][pHealth]);
				SaveAccount(i);
			}
		}
        SendClientMessage(playerid, COLOR_YELLOW, "Tm karakterler baarl bir ekilde gncellendi.");
        SaveFamilies();
        SaveFamiliesHQ();
        SendClientMessage(playerid, COLOR_YELLOW, "Tm aileler baarl bir ekilde gncellendi.");
        UpdatePoints();
        SendClientMessage(playerid, COLOR_YELLOW, "Tm pointler baarl bir ekilde gncellendi.");

    }
    else {
        SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:givemoney(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, money;
		if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /givemoney [Oyuncu ID/sim] [money]");

		if(IsPlayerConnected(giveplayerid))
		{
			GivePlayerCash(giveplayerid, money);
			format(string, sizeof(string), "%s adl oyuncuya $%d verdin.",GetPlayerNameEx(giveplayerid),money);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s, %s adl kiiye $%d verdi(/givemoney).", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid),money);
			Log("logs/adminmoney.log", string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:paintballistatistikleri(playerid, params[]) {
	if(!IsBETAServer())
	    return SendClientMessage(playerid, COLOR_GREY, "Bu beta sunucuda deil!");

	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /paintballistatistikleri [playerid]");

	if(giveplayerid == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");

	format(string, sizeof(string), "PaintballTakim: %d",PaintballTeam[playerid]);
	SendClientMessage(playerid, COLOR_WHITE, string);

	format(string, sizeof(string), "PBM: %d",GetPVarType(giveplayerid, "PBM"));
	SendClientMessage(playerid, COLOR_WHITE, string);
	new
		Team1Total,
		Team2Total;

	foreach(Player, i) {
		if(GetPVarInt(i, "PBM") == GetPVarInt(giveplayerid, "PBM")) {
			if(PaintballTeam[i] == 1) Team1Total ++;
			else if(PaintballTeam[i] == 2) Team2Total ++;
		}
	}
	format(string, sizeof(string), "Takm1Toplam: %d",Team1Total);
	SendClientMessage(playerid, COLOR_WHITE, string);
	format(string, sizeof(string), "Takm2Toplam: %d",Team2Total);
	SendClientMessage(playerid, COLOR_WHITE, string);
	return 1;
}

CMD:setplayerteam(playerid, params[]) {
	if(!IsBETAServer())
	    return SendClientMessage(playerid, COLOR_GREY, "Bu beta sunucuda deil!");

	new string[128], giveplayerid, team;
	if(sscanf(params, "ui", giveplayerid, team))
	    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /setplayerteam [playerid] [team]");

	if(giveplayerid == INVALID_PLAYER_ID)
		return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");

	format(string, sizeof(string), "%s adl kiinin takmn %d olarak ayarladn.",GetPlayerNameEx(giveplayerid),team);
	SendClientMessage(playerid, COLOR_WHITE, string);

	format(string, sizeof(string), "%s senin takmn %d olarak ayarlad.",GetPlayerNameEx(playerid),team);
	SendClientMessage(giveplayerid, COLOR_WHITE, string);

	SetPlayerTeam(giveplayerid, team);
	return 1;
}

CMD:setmoney(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, money;
		if(sscanf(params, "ud", giveplayerid, money)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setmoney [Oyuncu ID/sim] [money]");

		if(IsPlayerConnected(giveplayerid))
		{
			ResetPlayerCash(giveplayerid);
			GivePlayerCash(giveplayerid, money);
			format(string, sizeof(string), "%s adl oyuncunun parasn $%d olarak deitirdin.",GetPlayerNameEx(giveplayerid),money);
			SendClientMessage(playerid, COLOR_WHITE, string);
			format(string, sizeof(string), "%s, %s adl oyuncunun parasn $%d olarak deitirdi. (/setmoney)", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid), money);
			Log("logs/adminmoney.log", string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:revive(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /revive [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(GetPVarInt(giveplayerid, "Injured") == 1)
			{
				format(string, sizeof(string), " %s adl oyuncuyu canlandrdn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);
				SendClientMessage(giveplayerid, COLOR_WHITE, "Bir admin tarafndan canlandrldn.");

				KillEMSQueue(giveplayerid);
   				ClearAnimations(giveplayerid, 1);
   				SetPlayerHealth(giveplayerid, 100);

   				foreach(Player, i) {
   					if(EMSAccepted[i] == giveplayerid) {
   					    format(string, sizeof(string), "%s adl oyuncu bir admin tarafndan canlandrld, checkpointin silindi.", GetPlayerNameEx(giveplayerid));
   					    cmd_hedefsifirla(i, "");
					}
   				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu yaral deil!");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:hkick(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 5)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hkick [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			new playerip[32];
			GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
			format(string, sizeof(string), "HelperKomutu: %s (IP:%s) %s tarafndan kicklendi, sebep: %s", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason);
			Log("logs/kick.log", string);
			format(string, sizeof(string), "HelperKomutu: %s adl oyuncu %s tarafndan kicklendi, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
			SendClientMessageToAllEx(COLOR_LIGHTRED, string);
			Kick(giveplayerid);
			return 1;
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:kick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kick [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] < PlayerInfo[playerid][pAdmin]) {
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdminKomutu: %s (IP:%s) %s tarafndan kicklendi, sebep: %s", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason);
				Log("logs/kick.log", string);
				format(string, sizeof(string), "AdminKomutu: %s adl oyuncu %s tarafndan kicklendi, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				Kick(giveplayerid);
			}
			return 1;
		} else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:skick(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /skick [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] < PlayerInfo[playerid][pAdmin]) {
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdminKomutu: %s(IP:%s) adl oyuncu %s tarafndan sessiz olarak kicklendi, sebep: %s", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason);
				Log("logs/kick.log", string);
				format(string, sizeof(string), "AdminKomutu: %s adl oyuncu bir admin tarafndan sessiz olarak kicklendi, sebep: %s", GetPlayerNameEx(giveplayerid), reason);
				ABroadCast(COLOR_LIGHTRED,string,1);
				Kick(giveplayerid);
			}
			return 1;

		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:parmakizi(playerid, params[]) {
	new
	    iTarget,
	    szSex[7],
		szJob[64],
		szJob2[64],
	    szMessage[128];

	if(IsACop(playerid) || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pFaction] == 5 && PlayerInfo[playerid][pDivision] == 2)  {
		if(sscanf(params, "u", iTarget))
		    return SendClientMessage(playerid, COLOR_GREY, "KULLANIM: /parmakizi [Oyuncu ID/sim]");

		if(!IsPlayerConnected(iTarget))
		    return SendClientMessage(playerid, COLOR_GREY, "Girilen oyuncu oyunda deil.");

		if(GetDistanceBetweenPlayers(iTarget, playerid) > 5)
		    return SendClientMessage(playerid, COLOR_GREY, "ok uzaktasn.");

		if(PlayerCuffed[iTarget] == 0)
			return SendClientMessage(playerid, COLOR_GREY, "Kiinin parmak izini alabilmek iin kelepeli olmas gerekiyor.");

		if(PlayerInfo[iTarget][pCrimes] == 0)
		    return SendClientMessage(playerid, COLOR_GREY, "PIV tarad parmak izine uygun eleme bulamad.");

		SendClientMessage(playerid, COLOR_GREY, "-----------------------------------------");

		if(PlayerInfo[iTarget][pSex] == 1)
			szSex = "Erkek";
		else
			szSex = "Bayan";

		format(szMessage, sizeof(szMessage), "sim: %s (ya: %d, cinsiyet: %s)", GetPlayerNameEx(iTarget), PlayerInfo[iTarget][pAge], szSex);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);

		if(PlayerInfo[iTarget][pHouse] != INVALID_HOUSE_ID) {
			new
				szZone[MAX_ZONE_NAME];

			Get2DPosZone(HouseInfo[PlayerInfo[iTarget][pHouse]][hExteriorX], HouseInfo[PlayerInfo[iTarget][pHouse]][hExteriorY], szZone, MAX_ZONE_NAME);
			format(szMessage, sizeof(szMessage), "Ev: %d %s", PlayerInfo[iTarget][pHouse], szZone);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
		} else if(PlayerInfo[iTarget][pHouse2] != INVALID_HOUSE_ID) {
			new
				szZone[MAX_ZONE_NAME];

			Get2DPosZone(HouseInfo[PlayerInfo[iTarget][pHouse2]][hExteriorX], HouseInfo[PlayerInfo[iTarget][pHouse2]][hExteriorY], szZone, MAX_ZONE_NAME);
			format(szMessage, sizeof(szMessage), "Ev (2): %d %s", PlayerInfo[iTarget][pHouse2], szZone);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
		}

		format(szMessage, sizeof(szMessage), "Gemi hkmler: %s", PlayerInfo[iTarget][pCrimes]);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);

		format(szMessage, sizeof(szMessage), "Gemi tutuklanmalar: %d", PlayerInfo[iTarget][pArrested]);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);

		switch(PlayerInfo[iTarget][pJob])
		{
			case 1: szJob = "Dedektif";
			case 2: szJob = "Avukat";
			case 7: szJob = "Tamirci";
			case 8: szJob = "Bodyguard";
			case 12: szJob = "Boksr";
			//case 17: szJob = "Taksici";
			case 19: szJob = "Barmen";
			case 20: szJob = "Kamyon ofr";
			case 21: szJob = "Pizzac";
			default: szJob = "Yok";
		}
		switch(PlayerInfo[iTarget][pJob2])
		{
			case 1: szJob2 = "Dedektif";
			case 2: szJob2 = "Avukat";
			case 7: szJob2 = "Tamirci";
			case 8: szJob2 = "Bodyguard";
			case 12: szJob2 = "Boksr";
			//case 17: szJob2 = "Taksici";
			case 19: szJob2 = "Barmen";
			case 20: szJob2 = "Kamyon ofr";
			case 21: szJob2 = "Pizzac";
			default: szJob2 = "Yok";
		}

		format(szMessage, sizeof(szMessage), "Meslek 1: %s - Meslek 2: %s", szJob, szJob2);
		SendClientMessage(playerid, COLOR_WHITE, szMessage);

		SendClientMessage(playerid, COLOR_GREY, "-----------------------------------------");
 	}
	return 1;
}

CMD:ban(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ban [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin]) {
				if(AdminDuty[playerid] == 1) {
					new username[MAX_PLAYER_NAME];
					GetPVarString(playerid, "TempNameName", username, sizeof(username));
					SetPVarInt(playerid, "TempName", 0);
					SetPlayerName(playerid, username);
				}

				format(string, sizeof(string), "AdminKomutu: %s otomatik olarak banland, sebep: Kendinden yksek level admini banlamaya almak", PlayerInfo[playerid][pAdminName]);
				ABroadCast(COLOR_YELLOW,string,1);
				punishmentLog(giveplayerid, playerid, 4, string, reason);
				PlayerInfo[playerid][pBanned] = 1;
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				return 1;
			} else {
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));

				if(AdminDuty[giveplayerid] == 1) {
					new username[MAX_PLAYER_NAME];
					GetPVarString(giveplayerid, "TempNameName", username, sizeof(username));
					SetPVarInt(giveplayerid, "TempName", 0);
					SetPlayerName(giveplayerid, username);

					format(string, sizeof(string), "AdminKomutu: %s(IP:%s), %s tarafndan banland, sebep: %s", PlayerInfo[giveplayerid][pAdminName], playerip, GetPlayerNameEx(playerid), reason);
					Log("logs/ban.log", string);
					punishmentLog(giveplayerid, playerid, 4, string, reason);

					format(string, sizeof(string), "AdminKomutu: %s adl oyuncu % tarafndan banland, sebep: %s", PlayerInfo[giveplayerid][pAdminName], GetPlayerNameEx(playerid), reason);
				} else {
					format(string, sizeof(string), "AdminKomutu: %s(IP:%s), %s tarafndan banland, sebep: %s", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason);
					Log("logs/ban.log", string);
					punishmentLog(giveplayerid, playerid, 4, string, reason);

					format(string, sizeof(string), "AdminKomutu: %s adl oyuncu %s tarafndan banland, sebep: %s", GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid), reason);
				}

				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				PlayerInfo[giveplayerid][pBanned] = 1;
				new ip[32];
				GetPlayerIp(giveplayerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(giveplayerid);
				return 1;
			}

		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:air(playerid, params[]) {
	return cmd_haber(playerid, params);
}

CMD:haberbaslat(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) {
		if(PlayerInfo[playerid][pRank] >= 4) {
		    if(shutdown == 1) {
				shutdown = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Haber sunumu istasyonu balad.");
			} else SendClientMessage(playerid, COLOR_GREY, "Haber sunumu istasyonu zaten balad.");
		}
	}
	return 1;
}

CMD:haberbitir(playerid, params[]) {
    if(PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) {
		if(PlayerInfo[playerid][pRank] >= 4) {
		    if(shutdown == 0) {
				shutdown = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Haber sunumu istasyonunu kapattn.");
			}  else SendClientMessage(playerid, COLOR_GREY, "Haber sunumu isyasyonu zaten kapal.");
		}
	}
	return 1;
}

CMD:haber(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) {
		new string[128];

		if(shutdown == 1)
			return SendClientMessage(playerid, COLOR_WHITE, "Haber sistemi uanda kapal.");

		if(AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] < 4)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

		if(isnull(params))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /haber [text]");

		new newcar = GetPlayerVehicleID(playerid);
		if(IsANewsVeh(newcar))
		{
			if(PlayerInfo[playerid][pRank] < 1)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "En az rtbe 1 olmalsn.");
			}
			else
			{
				format(string, sizeof(string), "Haberler %s: %s", GetPlayerNameEx(playerid), params);
				ICNews(COLOR_LIGHTGREEN,string);
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "AN arac yada helikopteri ierisinde deilsin.");
			return 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GREY, "Haber spikeri deilsin!");
	}
	return 1;
}

CMD:yayindanat(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 9 && PlayerInfo[playerid][pRank] >= 4 || PlayerInfo[playerid][pLeader] == 9) {

		new
			giveplayerid,
			newsreporter,
	        string[128];

	    if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yayindanat [player]");

		if(!IsPlayerConnected(giveplayerid))
			return SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");

		foreach(Player, i) {
			if(TalkingLive[i] == giveplayerid) newsreporter = i;
		}

		if(TalkingLive[newsreporter] != INVALID_PLAYER_ID) {
			SendClientMessage(newsreporter, COLOR_LIGHTBLUE, "* Canl yayn sona erdi.");
			SendClientMessage(TalkingLive[newsreporter], COLOR_LIGHTBLUE, "* Canl yayn sona erdi.");
			TogglePlayerControllable(newsreporter, 1);
			TogglePlayerControllable(TalkingLive[newsreporter], 1);
			TalkingLive[TalkingLive[newsreporter]] = INVALID_PLAYER_ID;
			TalkingLive[newsreporter] = INVALID_PLAYER_ID;
		}

	    if(PlayerInfo[giveplayerid][pLiveBanned] == 0) {
	        PlayerInfo[giveplayerid][pLiveBanned] = 1;
	        format(string, sizeof(string), "%s, %s adl oyuncuyu canl yayndan banlad.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	        SendRadioMessage(9, RADIO, string);
			format(string, sizeof(string), "%s adl oyuncuyu canl yayndan banladn.", GetPlayerNameEx(playerid));
	        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	        return 1;
	    }  else  {
	        PlayerInfo[giveplayerid][pLiveBanned] = 0;
	        format(string, sizeof(string), "%s, %s adl oyuncunun canl yayn bann kaldrd.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
	        SendRadioMessage(9, RADIO, string);
			format(string, sizeof(string), "Canl yayn bann %s tarafndan kaldrld.", GetPlayerNameEx(playerid));
	        SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
	        return 1;
	    }
	}
	return 1;
}

CMD:yayinaal(playerid, params[])
{
	if(AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAdmin] < 4)
		return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

	if(PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) {
	    if(shutdown == 1) return SendClientMessage(playerid, COLOR_WHITE, "Haber sistemi uanda kapal." );
		if(TalkingLive[playerid] != INVALID_PLAYER_ID) {
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Canl yayn sona erdi.");
			SendClientMessage(TalkingLive[playerid], COLOR_LIGHTBLUE, "* Canl yayn sona erdi.");
			TogglePlayerControllable(playerid, 1);
			TogglePlayerControllable(TalkingLive[playerid], 1);
			TalkingLive[TalkingLive[playerid]] = INVALID_PLAYER_ID;
			TalkingLive[playerid] = INVALID_PLAYER_ID;
			return 1;
		}

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /yayinaal [player]");

		if (IsPlayerConnected(giveplayerid)) {
			if (ProxDetectorS(5.0, playerid, giveplayerid)) {
			    if(PlayerInfo[giveplayerid][pLiveBanned] == 1) return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu canl yayndan banl.");
				if(PlayerCuffed[giveplayerid] >= 1 || PlayerCuffed[playerid] >= 1) {
					SendClientMessage(playerid, COLOR_GRAD2, "uanda bunu yapamazsn.");
				} else {
					if(giveplayerid == playerid) { SendClientMessage(playerid, COLOR_GREY, "Kendini canl yayna karamazsn."); return 1; }
					format(string, sizeof(string), "* %s adl kiiye canl yayn teklifi yaptn.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s sana canl yayn teklifi yapt, /kabulet canli yazarak kabul edebilirsin.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					LiveOffer[giveplayerid] = playerid;
				}
			} else return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu yannda deil.");
		} else return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
	} else SendClientMessage(playerid, COLOR_GREY, "   Haber spikeri deilsin!");
	return 1;
}

CMD:sanbirim(playerid, params[])
{
	if(PlayerInfo[playerid][pLeader] == 9 || PlayerInfo[playerid][pFaction] == 9)
	{
		new string[128], giveplayerid, division;
		if(sscanf(params, "ud", giveplayerid, division))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /sanbirim [player] [division]");
			SendClientMessage(playerid, COLOR_GRAD2, "Birimler: 0 (Yok), 1 (Gvenlik)");
			return 1;
		}
		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pFaction] != 9) return 1;
			switch(division)
			{
				case 0:
				{
					PlayerInfo[giveplayerid][pDivision] = 0;
					format(string, sizeof(string), "uanki biriminden %s tarafndan atldn.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi biriminden attn.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
				case 1:
				{
					PlayerInfo[giveplayerid][pDivision] = 1;
					format(string, sizeof(string), "% tarafndan Gvenlik birimine alndn.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "%s adl kiiyi Gvenlik birimine davet ettin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				}
			}
		}
		else return SendClientMessage(playerid, COLOR_GREY, " Bu oyuncu oyuna bal deil." );
	}
	else return SendClientMessage(playerid, COLOR_GREY, " Bu komutu kullanamazsn." );
	return 1;
}

CMD:govbirim(playerid, params[])
{
	if(PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pLeader] == 5)
	{
		new string[128], giveplayerid, division;
		if(sscanf(params, "ud", giveplayerid, division))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /govbirim [Oyuncu ID/sim] [division]");
			SendClientMessage(playerid, COLOR_GRAD2, "Birimler: 1 (None), 2 (Executive), 3 (Judicial), 4 (Legislative), 5 (SS)");
			return 1;
		}

		if(PlayerInfo[playerid][pRank] >= 4)
		{
			if(IsPlayerConnected(giveplayerid))
			{
				if(PlayerInfo[playerid][pFaction] == 5)
				{
					if(division == 2)
					{
						PlayerInfo[giveplayerid][pDivision] = 2;
						format(string, sizeof(string), "%s tarafndan Executive birimine alndn.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s adl kiiyi Executive birimine daveet ettin.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else if(division == 3)
					{
						PlayerInfo[giveplayerid][pDivision] = 3;
						format(string, sizeof(string), "%s tarafndan Judicial birimine alndn.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s adl kiiyi Judicial birimine davet ettin.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else if(division == 4)
					{
						PlayerInfo[giveplayerid][pDivision] = 4;
						format(string, sizeof(string), "%s tarafndan Legislative birimine alndn.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s adl kiiyi Legislative birimine davet ettin.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else if(division == 5)
					{
						PlayerInfo[giveplayerid][pDivision] = 5;
						format(string, sizeof(string), "%s tarafndan Secret Service birimine alndn.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s adl kiiyi Secret Service birimine davet ettin.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
					else if(division == 1)
					{
						PlayerInfo[giveplayerid][pDivision] = 1;
						format(string, sizeof(string), "Bulunduun birimden %s tarafndan atldn.", GetPlayerNameEx(playerid));
						SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "%s adl kiiyi bulunduu birimden attn.", GetPlayerNameEx(giveplayerid));
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					}
				}

			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanabilmek iin yetkin yok - Sadece R4+ kiiler bu komutu kullanabilir");
		}
	}
	return 1;
}
CMD:gov(playerid, params[]) {
	if(PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pLeader] == 5)
	{
		if(AdminDuty[playerid] == 1)
			return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");

 		if(IsPlayerInRangeOfPoint(playerid,5.0,394.94, 103.08, 1014.23))
		{
			ShowPlayerDialogEx(playerid, GOVLOCKERMENU, DIALOG_STYLE_LIST, "Devlet Dolaplar", "niforma\nEkipman\nGizli", "Tamam", "Iptal");
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Devlet dolaplarnn yaknnda deilsin.");
		}
	}
	return 1;
}

CMD:sban(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		new string[128], giveplayerid, reason[64];
		if(sscanf(params, "us[64]", giveplayerid, reason)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /sban [Oyuncu ID/sim] [sebep]");

		if(IsPlayerConnected(giveplayerid))
		{
			if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
			{
				if(AdminDuty[playerid] == 1)
				{
					new username[MAX_PLAYER_NAME];
					GetPVarString(playerid, "TempNameName", username, sizeof(username));
					SetPVarInt(playerid, "TempName", 0);
					SetPlayerName(playerid, username);
				}
				format(string, sizeof(string), "AdminKomutu: %s otomatik olarak banland, sebep: Kendinden yuksek admini sessiz banlamaya almak.", PlayerInfo[playerid][pAdminName]);
				ABroadCast(COLOR_YELLOW,string,1);
				PlayerInfo[playerid][pBanned] = 1;
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				return 1;
			}
			else
			{
				new playerip[32];
				GetPlayerIp(giveplayerid, playerip, sizeof(playerip));

				if(AdminDuty[giveplayerid] == 1)
				{
					new username[MAX_PLAYER_NAME];
					GetPVarString(giveplayerid, "TempNameName", username, sizeof(username));
					SetPVarInt(giveplayerid, "TempName", 0);
					SetPlayerName(giveplayerid, username);

					format(string, sizeof(string), "AdminKomutu: %s(IP:%s) adl oyuncu %s tarafndan sessiz olarak banland, sebep: %s", PlayerInfo[giveplayerid][pAdminName], playerip, GetPlayerNameEx(playerid), reason);
					Log("logs/ban.log", string);
					format(string, sizeof(string), "AdminKomutu:: %s adl oyuncu %s tarafndan sessiz olarak banland, sebep: %s", GetPlayerNameEx(playerid), PlayerInfo[giveplayerid][pAdminName], reason);
				}
				else
				{
					format(string, sizeof(string), "AdminKomutu: %s(IP:%s) adl oyuncu %s tarafndan sessiz olarak banland, sebep: %s", GetPlayerNameEx(giveplayerid), playerip, GetPlayerNameEx(playerid), reason);
					Log("logs/ban.log", string);
					format(string, sizeof(string), "AdminKomutu:: %s adl oyuncu bir admin tarafndan tarafndan sessiz olarak banland, sebep: %s", GetPlayerNameEx(giveplayerid), reason);
				}

				ABroadCast(COLOR_LIGHTRED,string,1);
				PlayerInfo[giveplayerid][pBanned] = 1;
            	new ip[32];
				GetPlayerIp(giveplayerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(giveplayerid);
				return 1;
			}

		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:goto(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(isnull(params))
		{
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /goto [location]");
			SendClientMessage(playerid, COLOR_GRAD1, "Locations 1: LS, SF, LV, stadium1, stadium2, stadium3, stadium4");
			SendClientMessage(playerid, COLOR_GRAD2, "Locations 2: int1, mall, bank, allsaints, countygen, gym, fbi, rc");
			SendClientMessage(playerid, COLOR_GRAD3, "Locations 3: prison, mark, trucker, custom");
			return 1;
		}
		if(strcmp(params,"ls",true) == 0)
		{
			if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1529.6,-1691.2,13.3);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0; TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1529.6,-1691.2,13.3);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Los Santos'a teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}

		else if(strcmp(params,"sf",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1417.0,-295.8,14.1);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, -1417.0,-295.8,14.1);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Demetevler'e teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"custom",true) == 0) {
		    new
		        iInterior,
		        Float: fPos[3];

			strdel(params, 0, 6); // remove 'custom' and space after
			sscanf(params, "fffi", fPos[0], fPos[1], fPos[2], iInterior);
			SetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
			SetPlayerInterior(playerid, iInterior);
		}
		else if(strcmp(params,"Kamyon ofr",true) == 0) {
		 	if(GetPlayerState(playerid) == 2) {
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 2271.3115, -2662.9541, 13.6690);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else {
				SetPlayerPos(playerid, 2182.3650, -2662.9866, 17.8828);
			}

			SendClientMessage(playerid, COLOR_WHITE, "Kamyoncu mesleine teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"lv",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1699.2, 1435.1, 10.7);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1699.2,1435.1, 10.7);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Ulus'a teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"bank",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1487.91, -1030.60, 23.66);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1487.91, -1030.60, 23.66);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Bankaya teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"allsaints",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1192.78, -1292.68, 13.38);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1192.78, -1292.68, 13.38);
			}
			SendClientMessage(playerid, COLOR_WHITE, "All Saints Hastanesi'ne teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"countygen",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 2000.05, -1409.36, 16.99);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 2000.05, -1409.36, 16.99);
			}
			SendClientMessage(playerid, COLOR_WHITE, "County General Hastanesi'ne teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"gym",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 2227.60, -1674.89, 14.62);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 2227.60, -1674.89, 14.62);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Ganton GYM'e teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
   		}
		else if(strcmp(params,"fbi",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 344.77,-1526.08,33.28);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 344.77,-1526.08,33.28);
			}
			SendClientMessage(playerid, COLOR_WHITE, "FBI'a teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
  		else if(strcmp(params,"rc",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1253.70, 343.73, 19.41);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1253.70, 343.73, 19.41);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Red County'e teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
   		}
		else if(strcmp(params,"prison",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 112.67, 1917.55, 18.72);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 112.67, 1917.55, 18.72);
			}
			SendClientMessage(playerid, COLOR_WHITE, "DeMorgan hapishanesine teleport oldun.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"stadium1",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1424.93, -664.59, 1059.86);
				LinkVehicleToInterior(tmpcar, 4);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, -1424.93, -664.59, 1059.86);
			}
			SendClientMessage(playerid, COLOR_WHITE, "Stadium 1'e teleport oldun.");
			SetPlayerInterior(playerid,4);
			PlayerInfo[playerid][pInt] = 4;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"stadium2",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1395.96, -208.20, 1051.28);
				LinkVehicleToInterior(tmpcar, 7);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, -1395.96, -208.20, 1051.28);
			}
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to Stadium 2.");
			SetPlayerInterior(playerid,7);
			PlayerInfo[playerid][pInt] = 7;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"stadium3",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1410.72, 1591.16, 1052.53);
				LinkVehicleToInterior(tmpcar, 14);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, -1410.72, 1591.16, 1052.53);
			}
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to Stadium 3.");
			SetPlayerInterior(playerid,14);
			PlayerInfo[playerid][pInt] = 14;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"stadium4",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, -1394.20, 987.62, 1023.96);
				LinkVehicleToInterior(tmpcar, 15);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
    		}
			else
			{
				SetPlayerPos(playerid, -1394.20, 987.62, 1023.96);
			}
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to Stadium 4.");
			SetPlayerInterior(playerid,15);
			PlayerInfo[playerid][pInt] = 15;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"int1",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1416.107000,0.268620,1000.926000);
				LinkVehicleToInterior(tmpcar, 1);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1416.107000,0.268620,1000.926000);
			}
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to Interior 1.");
			SetPlayerInterior(playerid,1);
			PlayerInfo[playerid][pInt] = 1;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
		else if(strcmp(params,"mark",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
				LinkVehicleToInterior(tmpcar, TeleportDestInt[playerid]);
			}
			else
			{
				SetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
			}
			SetPlayerInterior(playerid,TeleportDestInt[playerid]);
			PlayerInfo[playerid][pInt] = TeleportDestInt[playerid];
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to your marker.");
		}
		else if(strcmp(params,"mark2",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
				LinkVehicleToInterior(tmpcar, TeleportDestInt2[playerid]);
			}
			else
			{
				SetPlayerPos(playerid, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
			}
			SetPlayerInterior(playerid,TeleportDestInt2[playerid]);
			PlayerInfo[playerid][pInt] = TeleportDestInt2[playerid];
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to your second marker.");
		}
		else if(strcmp(params,"mall",true) == 0)
		{
		 	if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, 1133.71,-1464.52,15.77);
				LinkVehicleToInterior(tmpcar, 0);
				SetVehicleVirtualWorld(tmpcar, 0);
				TelePos[playerid][0] = 0.0;TelePos[playerid][0] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid, 1133.71,-1464.52,15.77);
			}
			SendClientMessage(playerid, COLOR_WHITE, "You have teleported to the Mall.");
			SetPlayerInterior(playerid,0);
			PlayerInfo[playerid][pInt] = 0;
			SetPlayerVirtualWorld(playerid, 0);
			PlayerInfo[playerid][pVW] = 0;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:mark(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        GetPlayerPos(playerid, TeleportDest[playerid][0],TeleportDest[playerid][1],TeleportDest[playerid][2]);
        TeleportDestInt[playerid] = GetPlayerInterior(playerid);
        SendClientMessage(playerid, COLOR_GRAD1, "Teleporter destination set!");
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:mark2(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
        GetPlayerPos(playerid, TeleportDest2[playerid][0],TeleportDest2[playerid][1],TeleportDest2[playerid][2]);
        TeleportDestInt2[playerid] = GetPlayerInterior(playerid);
        SendClientMessage(playerid, COLOR_GRAD1, "Teleporter destination set!");
    }
    else {
        SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
    }
    return 1;
}

CMD:pbcik(playerid, params[]) {
    if(GetPVarInt(playerid, "PBM") > 0) {
        if(GetPVarInt(playerid, "OPD") == 1)
            return SendClientMessage(playerid, COLOR_GREY, "lsn, birka saniye bekle ve tekrar kmay dene.");

	  	SetPlayerPos(playerid, 1782.8229, -1565.8177, 13.3472);
	    SetPlayerInterior(playerid, 0);
	    SetPlayerVirtualWorld(playerid, 0);

		LoadObjectsForPlayer(playerid);

		new
		    szMessage[64];

		format(szMessage, sizeof(szMessage), "%s paintball oyunundan ayrld.", GetPlayerNameEx(playerid));
		foreach(Player, i) {
			if(GetPVarInt(i, "PBM") > 0 && GetPVarInt(i, "PBM") == GetPVarInt(playerid, "PBM") && i != playerid)
			    SendClientMessage(i, COLOR_RED, szMessage);
		}
		DeletePVar(playerid, "PBM");
		DeletePVar(playerid, "PBMK");
		DeletePVar(playerid, "PBMD");
		DeletePVar(playerid, "PBMS");
		DeletePVar(playerid, "IsFrozen");
		if(PaintballTeam[playerid] != 0) {
		    SetPlayerToTeamColor(playerid);
		    PaintballTeam[playerid] = 0;
		}

		SetPlayerHealth(playerid, GetPVarFloat(playerid, "pbhealth"));
		SetPlayerArmourEx(playerid, GetPVarFloat(playerid, "pbarmour"));

		ResetPlayerWeapons(playerid);
		SetPlayerTeam(playerid, -1);
		PlayerInfo[playerid][pAGuns][0] = 0;
		PlayerInfo[playerid][pAGuns][1] = 0;
		PlayerInfo[playerid][pAGuns][2] = 0;
		PlayerInfo[playerid][pAGuns][3] = 0;
		PlayerInfo[playerid][pAGuns][4] = 0;
		PlayerInfo[playerid][pAGuns][5] = 0;
		PlayerInfo[playerid][pAGuns][6] = 0;
		PlayerInfo[playerid][pAGuns][7] = 0;
		PlayerInfo[playerid][pAGuns][8] = 0;
		PlayerInfo[playerid][pAGuns][9] = 0;
		PlayerInfo[playerid][pAGuns][10] = 0;
		PlayerInfo[playerid][pAGuns][11] = 0;
		SetPlayerWeapons(playerid);

		DeletePVar(playerid, "pbhealth");
		DeletePVar(playerid, "pbarmour");

		SendClientMessage(playerid, COLOR_WHITE, "Paintball'dan ktn.");
    }
	return 1;
}

CMD:paintball(playerid, params[]) {
    if(PlayerInfo[playerid][pConnectTime] < 2)
        return SendClientMessage(playerid, COLOR_GREY, "2 saatlik oynama sreni doldurmadndan dolay paintball oynayamazsn.");

	if(AdminDuty[playerid] != 0)
	    return SendClientMessage(playerid, COLOR_GREY, "Adminlik yaparken paintball oynayamazsn.");

	if(PlayerInfo[playerid][pWantedLevel] >= 1)
	    return SendClientMessage(playerid, COLOR_GREY, "Arananlar listesindeyken paintball oynayamazsn.");

	if(PlayerCuffed[playerid] > 0 || GetPVarInt(playerid, "Injured") == 1)
		return SendClientMessage(playerid, COLOR_GREY, "u an bunu yapamazsn.");

	if(IsPlayerInRangeOfPoint(playerid, 5, 1782.8229, -1565.8177, 13.3472)) {
 		new
			iPlayer = INVALID_PLAYER_ID;

	    foreach(Player, i) {
			if(GetPVarInt(i, "PBM") > 0) {
			    iPlayer = i; // always going to get the highest ID because Y_Less never added a 'break;' for foreach ~_~ ...or didn't document it
			}
	    }

	    new
	        Float: fFloat,
	        Float: aFloat;

	    GetPlayerHealth(playerid, fFloat);
	    GetPlayerArmour(playerid, aFloat);
	    SetPVarFloat(playerid, "pbhealth", fFloat);
	    SetPVarFloat(playerid, "pbarmour", aFloat);

		if(iPlayer == INVALID_PLAYER_ID)
            ShowPlayerDialogEx(playerid, 3652, DIALOG_STYLE_LIST, "Paintball - Game type", "DM\nTDM", "Go", "Iptal");
		else
		    ShowPlayerDialogEx(playerid, 3652, DIALOG_STYLE_LIST, "Paintball - Game type", "DM\nTDM\nRandom (has players in)", "Go", "Iptal");
	} else
	    SendClientMessage(playerid, COLOR_GREY, "You're not in range of the paintball venue.");

	return 1;
}

CMD:listguns(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /listguns [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			new weapons[13][2], weaponname[50];
			if(GetPVarInt(giveplayerid, "EventToken") != 0 || GetPVarInt(giveplayerid, "PBM") > 0)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "That player is at an event/paintball so the weapons may appear as non-server sided.");
			}
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
			format(string, sizeof(string), "%s'n zerindeki silahlar:", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_WHITE, string);
			for (new i = 0; i < 13; i++)
			{
				GetPlayerWeaponData(giveplayerid, i, weapons[i][0], weapons[i][1]);
				if(weapons[i][0] > 0)
				{
					if(PlayerInfo[giveplayerid][pGuns][i] == weapons[i][0])
					{
						GetWeaponName(weapons[i][0], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "%s (%d).", weaponname, weapons[i][0]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
					else
					{
						GetWeaponName(weapons[i][0], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "%s (%d) (non server-side).", weaponname, weapons[i][0]);
						SendClientMessage(playerid, COLOR_GRAD1, string);
					}
				}
			}
			SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
		}
		else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:hhc(playerid, params[])
{
	return cmd_hhcheck(playerid, params);
}

CMD:hhcheck(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hhcheck [Oyuncu ID/sim]");

	if(IsPlayerConnected(giveplayerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 2)
		{
			if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    	{
	        	SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
				return 1;
	    	}
		    if(HHcheckFloats[giveplayerid][0] != 0)
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "That player is currently being checked for health hacks!");
		        return 1;
		    }
			if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin] && AdminDuty[giveplayerid] == 1)
			{
				SendClientMessage(playerid, COLOR_WHITE, "Bu komutu sana eit veya daha yksek leveldeki admin  zerinde uygulayamazsn.");
				return 1;
			}
   			if(playerTabbed[giveplayerid] != 0)
   			{
      			SendClientMessage(playerid, COLOR_WHITE, "That player is currently alt-tabbed!");
		        return 1;
   			}
			if(HHcheckUsed != 0)
		    {
		        SendClientMessage(playerid, COLOR_WHITE, "The health hack check is being used by another admin, please try again in a moment!");
		        return 1;
		    }

   			HHcheckUsed = 1;

        	format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s has initiated a health hack check on %s.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
        	ABroadCast(COLOR_YELLOW, string, 1);

  			format(string, sizeof(string), "Checking %s for health hacks, please wait....", GetPlayerNameEx(giveplayerid));
		    SendClientMessage(playerid, COLOR_YELLOW, string);

			GetPlayerHealth(giveplayerid, HHcheckFloats[giveplayerid][0]);
			GetPlayerArmour(giveplayerid, HHcheckFloats[giveplayerid][1]);
			GetPlayerPos(giveplayerid, HHcheckFloats[giveplayerid][2], HHcheckFloats[giveplayerid][3], HHcheckFloats[giveplayerid][4]);
			GetPlayerFacingAngle(giveplayerid, HHcheckFloats[giveplayerid][5]);
			HHcheckVW[giveplayerid] = GetPlayerVirtualWorld(giveplayerid);
			HHcheckInt[giveplayerid] = GetPlayerInterior(giveplayerid);

			DeletePVar(giveplayerid, "IsFrozen");
			TogglePlayerControllable(giveplayerid, 1);

            SetPlayerCameraPos(giveplayerid, 785.1896,1692.6887,5.2813);
			SetPlayerCameraLookAt(giveplayerid, 785.1896,1692.6887,0);
            SetPlayerVirtualWorld(giveplayerid, 0);
		    SetPlayerInterior(giveplayerid, 1);
		    SetPlayerHealth(giveplayerid, 100);
		    SetPlayerArmourEx(giveplayerid, 0);
			SetPlayerPos(giveplayerid, -1400.994873, 106.899650, 1032.273437);
			SetPlayerFacingAngle(giveplayerid, 90.66);
			CreateExplosion(-1400.994873, 106.899650 , 1032.273437, 8, 20);

			SetTimerEx("HealthHackCheck", 1250, 0, "dd", playerid, giveplayerid);
		}
		else SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

forward HealthHackCheck(playerid, giveplayerid);
public HealthHackCheck(playerid, giveplayerid)
{
	new string[128];
 	if(giveplayerid == INVALID_PLAYER_ID)
    {
        SendClientMessage(playerid, COLOR_YELLOW, "The health hack check result could not be made, the player logged off.");
        HHcheckUsed = 0;
        return 1;
    }
	if(playerTabbed[giveplayerid] != 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "The health hack check result could not be made, the player alt-tabbed.");

		SetPlayerHealth(giveplayerid, HHcheckFloats[giveplayerid][0]);
		SetPlayerArmourEx(giveplayerid, HHcheckFloats[giveplayerid][1]);
		SetPlayerPos(giveplayerid, HHcheckFloats[giveplayerid][2], HHcheckFloats[giveplayerid][3], HHcheckFloats[giveplayerid][4]);
		SetPlayerFacingAngle(giveplayerid, HHcheckFloats[giveplayerid][5]);
		SetCameraBehindPlayer(giveplayerid);
		SetPlayerVirtualWorld(giveplayerid, HHcheckVW[giveplayerid]);
 		SetPlayerInterior(giveplayerid, HHcheckInt[giveplayerid]);

  		for(new i = 0; i < 6; i++)
		{
			HHcheckFloats[giveplayerid][i] = 0;
		}
		HHcheckVW[giveplayerid] = 0;
		HHcheckInt[giveplayerid] = 0;

		HHcheckUsed = 0;
  		return 1;
	}
    if(!IsPlayerInRangeOfPoint(giveplayerid,20,-1400.994873, 106.899650, 1032.273437))
    {
        SendClientMessage(playerid, COLOR_WHITE, "The health hack check result could not be made, the player was probably desynced/lagging.");

		SetPlayerHealth(giveplayerid, HHcheckFloats[giveplayerid][0]);
		SetPlayerArmourEx(giveplayerid, HHcheckFloats[giveplayerid][1]);
		SetPlayerPos(giveplayerid, HHcheckFloats[giveplayerid][2], HHcheckFloats[giveplayerid][3], HHcheckFloats[giveplayerid][4]);
		SetPlayerFacingAngle(giveplayerid, HHcheckFloats[giveplayerid][5]);
		SetCameraBehindPlayer(giveplayerid);
		SetPlayerVirtualWorld(giveplayerid, HHcheckVW[giveplayerid]);
 		SetPlayerInterior(giveplayerid, HHcheckInt[giveplayerid]);

  		for(new i = 0; i < 6; i++)
		{
			HHcheckFloats[giveplayerid][i] = 0;
		}
		HHcheckVW[giveplayerid] = 0;
		HHcheckInt[giveplayerid] = 0;

        HHcheckUsed = 0;
		return 1;
    }

    new Float:health;
    GetPlayerHealth(giveplayerid, health);
    if(health == 100)
	{
        SendClientMessage(playerid, COLOR_GREEN, "____________________ CAN HILESI SONUCLARI _______________");
        format(string, sizeof(string), "The health hack check on %s was {00F70C}positive{FFFFFF}. The player may be health hacking.", GetPlayerNameEx(giveplayerid));
        SendClientMessage(playerid, COLOR_WHITE, string);
        SendClientMessage(playerid, COLOR_WHITE, "Health before check: 100.0");
        format(string, sizeof(string), "Health after check: %.1f", health);
        SendClientMessage(playerid, COLOR_WHITE, string);
        SendClientMessage(playerid, COLOR_GREEN, "_______________________________________________________________");
    }
    else
	{
        SendClientMessage(playerid, COLOR_GREEN, "____________________ CAN HILESI SONUCLARI _______________");
        format(string, sizeof(string), "The health hack check on %s was {FF0606}negative{FFFFFF}. The player was not health hacking.", GetPlayerNameEx(giveplayerid));
        SendClientMessage(playerid, COLOR_WHITE, string);
        SendClientMessage(playerid, COLOR_WHITE, "Health before check: 100.0");
        format(string, sizeof(string), "Health after check: %.1f", health);
        SendClientMessage(playerid, COLOR_WHITE, string);
        SendClientMessage(playerid, COLOR_GREEN, "_______________________________________________________________");
    }

	SetPlayerHealth(giveplayerid, HHcheckFloats[giveplayerid][0]);
	SetPlayerArmourEx(giveplayerid, HHcheckFloats[giveplayerid][1]);
	SetPlayerPos(giveplayerid, HHcheckFloats[giveplayerid][2], HHcheckFloats[giveplayerid][3], HHcheckFloats[giveplayerid][4]);
	SetPlayerFacingAngle(giveplayerid, HHcheckFloats[giveplayerid][5]);
	SetCameraBehindPlayer(giveplayerid);
	SetPlayerVirtualWorld(giveplayerid, HHcheckVW[giveplayerid]);
 	SetPlayerInterior(giveplayerid, HHcheckInt[giveplayerid]);

  	for(new i = 0; i < 6; i++)
	{
		HHcheckFloats[giveplayerid][i] = 0;
	}
	HHcheckVW[giveplayerid] = 0;
	HHcheckInt[giveplayerid] = 0;

    HHcheckUsed = 0;
    return 1;
}

CMD:a(playerid, params[])
{
	return cmd_admin(playerid, params);
}

CMD:admin(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1) {
		if(!isnull(params)) {
			new szMessage[128];
			format(szMessage, sizeof(szMessage), "* Level %d Admin %s: {FFFFFF}%s", PlayerInfo[playerid][pAdmin], GetPlayerNameEx(playerid), params);
			ABroadCast(COLOR_LIGHTGREEN, szMessage, 1);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: (/a)dmin [admin chat]");
	}
	return 1;
}

CMD:cnn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(!isnull(params)) {

			new
				szMessage[128];

			format(szMessage, sizeof(szMessage), "~b~%s: ~w~%s",GetPlayerNameEx(playerid), params);
			foreach(Player, i) GameTextForPlayer(i, szMessage, 5000, 6);
		}
		else SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /cnn [mesaj]. ~n~ = new line, ~r~ = red, ~g~ = green, ~b~ = blue, ~w~ = white, ~y~ = yellow.");
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:cnnn(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			iTextID,
			szMessage[128];

		if(sscanf(params, "is[128]", iTextID, szMessage)) {
			SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /cnnn [type 1-6] [mesaj]. ~n~ = new line, ~r~ = red, ~g~ = green, ~b~ = blue, ~w~ = white, ~y~ = yellow.");
		}
		else if(!(0 <= iTextID <= 6 && iTextID != 2)) {
			SendClientMessage(playerid, COLOR_GRAD2, "Text ID must be between 0 and 6, but not 2 (due to SA:MP bugs).");
		}
		else foreach(Player, i) GameTextForPlayer(i, szMessage, 5000, iTextID);
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:motd(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 7)
    {
  		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /motd [mesaj]");
		new string[128];
    	format(string, sizeof(string), "%s, Global haberleri '%s' olarak deitirdi.", GetPlayerNameEx(playerid), params);
		ABroadCast(COLOR_LIGHTRED, string, 5);
		format(GlobalMOTD, sizeof(GlobalMOTD), "%s", params);
		SendClientMessage(playerid, COLOR_WHITE, "Global haberleri deitirdin.");

		format(string, sizeof(string), "Haberler: %s", params);

		Misc_Save();
	}
	return 1;
}

CMD:amotd(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 5)
    {
    	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		if(isnull(params)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /amotd [mesaj]");
		new string[128];
		format(AdminMOTD, sizeof(AdminMOTD), "%s", params);
		format(string, sizeof(string), "AdminKomutu: %s, admin haberlerini '%s' olarak deitirdi.", GetPlayerNameEx(playerid), params);
		ABroadCast(COLOR_LIGHTRED, string, 5);
		SendClientMessage(playerid, COLOR_WHITE, "Admin haberlerini gncellediniz.");
		Misc_Save();
	}
	return 1;
}

CMD:paused(playerid, params[]) {
    if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

    	new
			szMessage[42 + MAX_PLAYER_NAME];

	    SendClientMessage(playerid,COLOR_WHITE,"ALT-TAB yapm oyuncu listesi.");
	    foreach(Player, i) if(playerTabbed[i] != 0) {
			if(playerTabbedTime[i] > 60) format(szMessage, sizeof(szMessage), "* %s (ID %d) adl oyuncu %d dakikadr ALT-TAB'da.", GetPlayerNameEx(i), i, playerTabbedTime[i] / 60);
			else format(szMessage, sizeof(szMessage), "* %s (ID %d) adl oyuncu %d saniyedir ALT-TAB'da.", GetPlayerNameEx(i), i, playerTabbedTime[i]);

			if(PlayerInfo[i][pAdmin] >= 2) SendClientMessage(playerid,COLOR_WHITE, szMessage);
			else SendClientMessage(playerid,COLOR_GREY, szMessage);
  		}
   	}
    else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanmaya yetkin yok.");
	return 1;
}

CMD:hafk(playerid, params[]) {
    if(PlayerInfo[playerid][pHelper] >= 4)
	{
    	new
			szMessage[36 + MAX_PLAYER_NAME];

	    SendClientMessage(playerid,COLOR_WHITE,"AFK oyuncu listesi...");
	    foreach(Player, i) if(playerAFK[i] != 0 && playerAFKTime[i] > 60) {
			format(szMessage,sizeof(szMessage),"* %s (ID %d) adl oyuncu %d dakikadr AFK.", GetPlayerNameEx(i), i, playerAFKTime[i] / 60);
			if(PlayerInfo[i][pAdmin] >= 2) SendClientMessage(playerid,COLOR_RED,szMessage);
			else SendClientMessage(playerid,COLOR_GREY,szMessage);
  		}
   	}
    else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanmaya yetkin yok.");
	return 1;
}

CMD:afk(playerid, params[]) {
	return cmd_paused(playerid, params);
}

CMD:gotoco(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new Float: pos[3], int;
		if(sscanf(params, "fffd", pos[0], pos[1], pos[2], int)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gotoco [x coordinate] [y coordinate] [z coordinate] [interior]");

		SendClientMessage(playerid, COLOR_GRAD2, "Girilen koordinatlara teleport oldun.");
		SetPlayerPos(playerid, pos[0], pos[1], pos[2]);
		SetPlayerInterior(playerid, int);
	}
	return 1;
}

CMD:check(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 1)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_GRAD1, "KULLANIM: /check [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid))
		{
			ShowStats(playerid,giveplayerid);
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:ocheck(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ocheck [name]");

	new
		giveplayerid = ReturnUser(params);

	if(IsPlayerConnected(giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "Bu oyuncu zaten oyunda, bunun yerine /check kullan.");

	new
		szPlayerName[MAX_PLAYER_NAME],
	    szQuery[68];

	mysql_real_escape_string(params, szPlayerName, g_MySQLConnections[0]);
	format(szQuery, sizeof(szQuery), "SELECT * FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(szQuery, THREAD_GET_STATS, playerid, g_MySQLConnections[0]);
	return 1;
}

CMD:okills(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] < 3)
		return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	if(isnull(params))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /okills [name]");

	new
		giveplayerid = ReturnUser(params);

	if(IsPlayerConnected(giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "Bu oyuncu oyunda, /kills komutunu kullanmalsn.");

	new
		szPlayerName[MAX_PLAYER_NAME],
	    szQuery[68];

	mysql_real_escape_string(params, szPlayerName, g_MySQLConnections[0]);
	format(szQuery, sizeof(szQuery), "SELECT * FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(szQuery, THREAD_OFFLINE_KILLS, playerid, g_MySQLConnections[0]);
	return 1;
}


CMD:evyardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessage(playerid, COLOR_WHITE,"*** EV YARDIM *** - yardm alabilmek iin komut yazn.");
    SendClientMessage(playerid, COLOR_GRAD3,"*** EV *** /ekilit /evikirala /kirayiayarla /kiracicikar /kiracilaricikar /evisat /evimisat /zilebas /kiracilar");
    SendClientMessage(playerid, COLOR_GRAD3,"*** EV *** /evdenal /evekoy /evkasasi /esilahal /esilahsakla /evedavetet /evanahtarlari /evanahtariver /evanahtarlarinial");
    return 1;
}

CMD:kirayardim(playerid, params[])
{
    SendClientMessage(playerid, COLOR_GREEN,"_______________________________________");
    SendClientMessage(playerid, COLOR_WHITE,"*** KRALAMA YARDIM *** - yardm alabilmek iin komut yazn.");
    SendClientMessage(playerid, COLOR_GRAD3,"*** KRA *** /kiralamaiptal /gir /cik /kiracilar");
    return 1;
}

CMD:kiracilar(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID && PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID)
		return SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");

	new
		szMessage[128],
		count;

	SendClientMessage(playerid, COLOR_GREEN, "--------------------- [ Ev Kiracilari ] ---------------------");
	foreach(Player, i) {
		if(PlayerInfo[playerid][pHouse] == PlayerInfo[i][pRenting] && PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID) {
			format(szMessage, sizeof(szMessage), "Ev 1 | %s (%i)", GetPlayerNameEx(i), i);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
			count++;
		} else if(PlayerInfo[playerid][pHouse2] == PlayerInfo[i][pRenting] && PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID) {
			format(szMessage, sizeof(szMessage), "House 2 | %s (%i)", GetPlayerNameEx(i), i);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
			count++;
		}
	}
	if(count == 0)
		return SendClientMessage(playerid, COLOR_WHITE, "Evini kimse kiralamyor.");
    return 1;
}

CMD:hnext(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 5)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_RED, "* Listing next available house...");
		for(new x;x<MAX_HOUSES;x++)
		{
		    if(HouseInfo[x][hOwned] == 0)
		    {
		        new string[128];
		        format(string, sizeof(string), "%d kullanma msait.", x);
		        SendClientMessage(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	return 1;
}

CMD:goinhouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new housenum;
		if(sscanf(params, "d", housenum)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /goinhouse [housenumber]");

		SetPlayerInterior(playerid,HouseInfo[housenum][hHInteriorWorld]);
		if(HouseInfo[housenum][hCustomInterior] == 1)
		{
			LoadObjectsForPlayer(playerid);
		}
		SetPlayerPos(playerid,HouseInfo[housenum][hInteriorX],HouseInfo[housenum][hInteriorY],HouseInfo[housenum][hInteriorZ]);
		GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
		PlayerInfo[playerid][pInt] = HouseInfo[housenum][hHInteriorWorld];
		PlayerInfo[playerid][pVW] = housenum+60000;
		SetPlayerVirtualWorld(playerid, housenum+60000);
	}
	return 1;
}

CMD:gotohouse(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new housenum;
		if(sscanf(params, "d", housenum)) return SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /gotohouse [housenumber]");

		SetPlayerPos(playerid,HouseInfo[housenum][hExteriorX],HouseInfo[housenum][hExteriorY],HouseInfo[housenum][hExteriorZ]);
		GameTextForPlayer(playerid, "~w~Teleporting", 5000, 1);
		SetPlayerInterior(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
	}
	return 1;
}

CMD:hedit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
 	}

	new string[128], choice[32], houseid, amount;
	if(sscanf(params, "s[32]dD", choice, houseid, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hedit [name] [houseid] [(Optional)amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Exterior, Interior, CustomInterior, CustomExterior, Level, Price");
		return 1;
	}

	if(strcmp(choice, "interior", true) == 0)
	{
		GetPlayerPos(playerid, HouseInfo[houseid][hInteriorX], HouseInfo[houseid][hInteriorY], HouseInfo[houseid][hInteriorZ]);
		GetPlayerFacingAngle(playerid, HouseInfo[houseid][hInteriorR]);
		HouseInfo[houseid][hHInteriorWorld] = GetPlayerInterior(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Interioru deitirdin.");
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Interior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(HouseInfo[houseid][hCustomInterior] == 0)
		{
			HouseInfo[houseid][hCustomInterior] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "House set to custom interior!");
		}
		else
		{
			HouseInfo[houseid][hCustomInterior] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "House set to normal (not custom) interior!");
		}
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Custom Interior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(HouseInfo[houseid][hCustomExterior] == 0)
		{
			HouseInfo[houseid][hCustomExterior] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "House set to custom exterior!");
		}
		else
		{
			HouseInfo[houseid][hCustomExterior] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "House set to normal (not custom) exterior!");
		}
		SaveHouses();

		format(string, sizeof(string), "%s has edited HouseID %d's Custom Exterior.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "exterior", true) == 0)
	{
		GetPlayerPos(playerid, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]);
		GetPlayerFacingAngle(playerid, HouseInfo[houseid][hExteriorR]);
		SendClientMessage(playerid, COLOR_WHITE, "Exterior'u deitirdin.");
		DestroyPickup(HouseInfo[houseid][hPickupID]);
		SaveHouses();

		format(string, sizeof(string), "%s, %d ID2'li evin exteriorunu deitirdi.", GetPlayerNameEx(playerid), houseid);
		Log("logs/hedit.log", string);
		if(HouseInfo[houseid][hOwned] ==0)
		{
			DestroyPickup(HouseInfo[houseid][hPickupID]);
			DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
			format(string, sizeof(string), "{E3BF1E}Bu ev satlktr!\n Level: %d\nID: %d\ncret: $%d\nSatn almak iin /evsatinal",HouseInfo[houseid][hLevel],houseid,HouseInfo[houseid][hValue]);
			HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string, COLOR_HOUSEGREEN, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
			HouseInfo[houseid][hPickupID] = CreatePickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ], -1);
		}
		else
		{
			if(HouseInfo[houseid][hRentable] == 0)
			{
				DestroyPickup(HouseInfo[houseid][hPickupID]);
				DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
				format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid);
				HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string,COLOR_HOUSEGREEN,HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
				HouseInfo[houseid][hPickupID] = CreatePickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ], -1);
			}
			else
			{
				DestroyPickup(HouseInfo[houseid][hPickupID]);
				DestroyDynamic3DTextLabel(HouseInfo[houseid][hTextID]);
				format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid,HouseInfo[houseid][hRentFee]);
				HouseInfo[houseid][hTextID] = CreateDynamic3DTextLabel(string,COLOR_HOUSEGREEN,HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ]+0.5,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
				HouseInfo[houseid][hPickupID] = CreatePickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ], -1);
			}
		}
	}
	else if(strcmp(choice, "level", true) == 0)
	{
		HouseInfo[houseid][hLevel] = amount;
		format(string, sizeof(string), "Evin levelini %d olarak deitirdin.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);
		if(HouseInfo[houseid][hOwned] ==0)
		{
			format(string, sizeof(string), "{E3BF1E}Bu ev satlktr!\n Level: %d\nID: %d\ncret: $%d\nSatn almak iin /evsatinal",HouseInfo[houseid][hLevel],houseid,HouseInfo[houseid][hValue]);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_HOUSEGREEN, string);
		}
		else
		{
			if(HouseInfo[houseid][hRentable] == 0)
			{
				format(string, sizeof(string), "{E3BF1E}Ev sahibi: %s\n{E3BF1E}Level: %d\n{E3BF1E}ID: %d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid);
				UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_HOUSEGREEN, string);
			}
			else
			{
				format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid,HouseInfo[houseid][hRentFee]);
				UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_HOUSEGREEN, string);
			}
		}
		format(string, sizeof(string), "%s, %d ID'li evin levelini %d olarak deitirdi.", GetPlayerNameEx(playerid), houseid, amount);
		Log("logs/hedit.log", string);
	}
	else if(strcmp(choice, "price", true) == 0)
	{
		HouseInfo[houseid][hValue] = amount;
		format(string, sizeof(string), "Evin fiyatn $%d olarak deitirdin.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);
		if(HouseInfo[houseid][hOwned] ==0)
		{
			format(string, sizeof(string), "Bu ev satlktr!\nLevel: %d\nID: %d\ncret: $%d\nSatn almak iin /evsatinal",HouseInfo[houseid][hLevel],houseid,HouseInfo[houseid][hValue]);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_HOUSEGREEN, string);
		}

		format(string, sizeof(string), "%s, %d ID'li evin fiyatn $%d olarak deitirdi.", GetPlayerNameEx(playerid), amount);
		Log("logs/hedit.log", string);
	}
	else if(strcmp(choice, "class", true) == 0)
	{
		switch(amount)
		{
		case 1:
			{
				format(HouseInfo[houseid][hDescription], 128, "Low");
				SendClientMessage(playerid, COLOR_WHITE, "Evin snfn 1 (Low) olarak deitirdin");
			}
		case 2:
			{
				format(HouseInfo[houseid][hDescription], 128, "Medium");
				SendClientMessage(playerid, COLOR_WHITE, "Evin snfn 2 (Medium) olarak deitirdin");
			}
		case 3:
			{
				format(HouseInfo[houseid][hDescription], 128, "High");
				SendClientMessage(playerid, COLOR_WHITE, "Evin snfn 3 (High) olarak deitirdin");
			}
		}
		if(HouseInfo[houseid][hOwned] ==0)
		{
			format(string, sizeof(string), "Bu ev satlktr!\n Bilgi: %s\nFiyat: $%d\n Level: %d\nID: %d\nBu evi almak iin /evsatinal",HouseInfo[houseid][hDescription],HouseInfo[houseid][hValue],HouseInfo[houseid][hLevel],houseid);
			UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_HOUSEGREEN, string);
		}

		format(string, sizeof(string), "%s, %d ID'li evin Class'n %d olarak deitirdi.", GetPlayerNameEx(playerid), houseid, amount);
		Log("logs/hedit.log", string);
	}
	SaveHouses();
	return 1;
}

CMD:hname(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}

	new string[128], houseid, ownername[24];
	if(sscanf(params, "ds[24]", houseid, ownername)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hname [houseid] [name]");

	format(HouseInfo[houseid][hOwner], 24, "%s", ownername);
	format(string, sizeof(string), "Ev sahibini %s olarak deitirdin.", ownername);
	HouseInfo[houseid][hOwned] = 1;
	HouseInfo[houseid][hRentable] = 0;
	SendClientMessage(playerid, COLOR_WHITE, string);
	DestroyPickup(HouseInfo[houseid][hPickupID]);
	HouseInfo[houseid][hPickupID] = CreatePickup(1273, 23, HouseInfo[houseid][hExteriorX], HouseInfo[houseid][hExteriorY], HouseInfo[houseid][hExteriorZ], -1);
	format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[houseid][hOwner],HouseInfo[houseid][hLevel],houseid);
	UpdateDynamic3DTextLabelText(HouseInfo[houseid][hTextID], COLOR_HOUSEGREEN, string);

	format(string, sizeof(string), "%s, %d ID'li evin sahibini %s olarak deitirdi.", GetPlayerNameEx(playerid), houseid, ownername);
	Log("logs/hedit.log", string);

	return 1;
}

CMD:edit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6)
	{
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "|__________________ Edit __________________|");
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /edit [name] [amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Level, Price");
		SendClientMessage(playerid, COLOR_WHITE, "|____________________________________________|");
		return 1;
	}

	for(new i = 0; i < sizeof(HouseInfo); i++)
	{
		if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
		{
			format(string, sizeof(string), "Ev: %d", i);
			SendClientMessage(playerid, COLOR_GRAD2, string);
			if(amount > 0)
			{
				if(strcmp(choice,"level",true) == 0)
				{
					HouseInfo[i][hLevel] = amount;
				}
				else if(strcmp(choice,"price",true) == 0)
				{
					HouseInfo[i][hValue] = amount;
				}
			}
			if(HouseInfo[i][hOwned] ==0)
			{
				format(string, sizeof(string), "{E3BF1E}Bu ev satlktr!\n Level: %d\nID: %d\ncret: $%d\nSatn almak iin /evsatinal",HouseInfo[i][hLevel],i,HouseInfo[i][hValue]);
				UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_HOUSEGREEN, string);
			}
			else
			{
				if(HouseInfo[i][hRentable] == 0)
				{
     				format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[i][hOwner],HouseInfo[i][hLevel],i);
					UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_HOUSEGREEN, string);
				}
				else
				{
     				format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[i][hOwner],HouseInfo[i][hLevel],i,HouseInfo[i][hRentFee]);
					UpdateDynamic3DTextLabelText(HouseInfo[i][hTextID], COLOR_HOUSEGREEN, string);
				}
			}
		}
	}
	return 1;
}

CMD:odakirala(playerid, params[])
{
    //new string[128];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);
    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]) && HouseInfo[h][hRentFee] >= 1)
		{
            if(! strcmp(HouseInfo[h][hOwner], "Nobody", true))
			{
                SendClientMessage(playerid, COLOR_WHITE, "Sahibi olmayan evi kiralayamazsn.");
            }
            else
			{
                if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
				{
                    SendClientMessage(playerid, COLOR_WHITE, "   Zaten bir evin var, eer bunu kiralamak istiyorsan /evisat yaz.");
                    return 1;
                }
                if(GetPlayerCash(playerid) > HouseInfo[h][hRentFee])
				{
                    if(HouseInfo[h][hRentable] == 0)
					{
                        SendClientMessage(playerid, COLOR_WHITE, "Bu ev kiralanabilir deil.");
                        return 1;
                    }
                    else
					{
                        PlayerInfo[playerid][pRenting] = h;
                        GivePlayerCash(playerid,-HouseInfo[h][hRentFee]);
                        HouseInfo[h][hSafeMoney] = HouseInfo[h][hSafeMoney]+HouseInfo[h][hRentFee];
                        SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
                        if(HouseInfo[h][hCustomInterior] == 1)
						{
                            LoadObjectsForPlayer(playerid);
                        }
                        SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
                        GameTextForPlayer(playerid, "~w~Eve Hosgeldin~n~Evinden cikmak iin kapida /cik yazman yeterli.", 5000, 3);
                        PlayerInfo[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
                        PlayerInfo[playerid][pVW] = 60000+h;
                        SetPlayerVirtualWorld(playerid, h+60000);
                        SendClientMessage(playerid, COLOR_WHITE, "Tebrikler: Artk istediin zaman girebilir yada kabilirsin.");
                        SendClientMessage(playerid, COLOR_WHITE, "Yardm mensn grmek iin /yardim yazabilirsin.");
   						PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
						GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
						GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
                        OnPlayerStatsUpdate(playerid);
                        //new ip[32];
                        //GetPlayerIp(playerid,ip,sizeof(ip));
                        //format(string,sizeof(string),"%s (IP: %s) has rented house ID %d (owned by %s) for $%d.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hOwner],HouseInfo[h][hRentFee]);
                        //Log("logs/house.log", string);
                        return 1;
                    }
                }
                else
				{
                    SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");
                    return 1;
                }
            }
        }
    }
    return 1;
}

CMD:kiralamaiptal(playerid, params[])
{
    new playername[MAX_PLAYER_NAME];
    GetPlayerName(playerid, playername, sizeof(playername));
    if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
	{
        SendClientMessage(playerid, COLOR_WHITE, "   Bu evin sahibisin!");
        return 1;
    }
    if(PlayerInfo[playerid][pRenting] != INVALID_HOUSE_ID)
	{
        PlayerInfo[playerid][pRenting] = INVALID_HOUSE_ID;
        SendClientMessage(playerid, COLOR_WHITE, "Artk evsizsin.");
    }
    return 1;
}

CMD:ekilit(playerid, params[]) {
	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorZ]))) {

		new
			szMessage[30 + MAX_PLAYER_NAME];

		if(HouseInfo[PlayerInfo[playerid][pHouse]][hLock] == 1)
		{
			HouseInfo[PlayerInfo[playerid][pHouse]][hLock] = 0;
			format(szMessage, sizeof(szMessage), "* %s evinin kaplarnn kilidini at.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			HouseInfo[PlayerInfo[playerid][pHouse]][hLock] = 1;
			format(szMessage, sizeof(szMessage), "* %s evinin kaplarn kilitledi.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorZ]))) {

		new
			szMessage[30 + MAX_PLAYER_NAME];

		if(HouseInfo[PlayerInfo[playerid][pHouse2]][hLock] == 1)
		{
			HouseInfo[PlayerInfo[playerid][pHouse2]][hLock] = 0;
			format(szMessage, sizeof(szMessage), "* %s evinin kaplarnn kilidini at.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			HouseInfo[PlayerInfo[playerid][pHouse2]][hLock] = 1;
			format(szMessage, sizeof(szMessage), "* %s evinin kaplarn kilitledi.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else if(HouseKey[playerid] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[HouseKey[playerid]][hExteriorX], HouseInfo[HouseKey[playerid]][hExteriorY], HouseInfo[HouseKey[playerid]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[HouseKey[playerid]][hInteriorX], HouseInfo[HouseKey[playerid]][hInteriorY], HouseInfo[HouseKey[playerid]][hInteriorZ]))) {
		new
			szMessage[30 + MAX_PLAYER_NAME];
		if(HouseInfo[HouseKey[playerid]][hLock] == 1)
		{
			HouseInfo[HouseKey[playerid]][hLock] = 0;
			format(szMessage, sizeof(szMessage), "* %s evinin kaplarnn kilidini at.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
		else
		{
			HouseInfo[HouseKey[playerid]][hLock] = 1;
			format(szMessage, sizeof(szMessage), "* %s evinin kaplarn kilitledi.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Ya evin yok, yada evinde deilsin.");
	return 1;
}

CMD:evikirala(playerid, params[]) {
	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorZ]))) {

		new
			szMessage[128];

		if(!HouseInfo[PlayerInfo[playerid][pHouse]][hRentable]) {
			HouseInfo[PlayerInfo[playerid][pHouse]][hRentable] = 1;
			format(szMessage, sizeof(szMessage), "{E3BF1E}Ev sahibi: %s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[PlayerInfo[playerid][pHouse]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse]][hLevel],PlayerInfo[playerid][pHouse],HouseInfo[PlayerInfo[playerid][pHouse]][hRentFee]);
			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouse]][hTextID], COLOR_HOUSEGREEN, szMessage);
			SendClientMessage(playerid, COLOR_WHITE, "Bu ev artk kiralanabilir.");
		}
		else {
			HouseInfo[PlayerInfo[playerid][pHouse]][hRentable] = 0;
			format(szMessage, sizeof(szMessage), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[PlayerInfo[playerid][pHouse]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse]][hLevel],PlayerInfo[playerid][pHouse]);
			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouse]][hTextID], COLOR_HOUSEGREEN, szMessage);
			SendClientMessage(playerid, COLOR_WHITE, "Bu ev artk kiralanabilir deil.");
		}
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorZ]))) {
		new
			szMessage[128];

		if(!HouseInfo[PlayerInfo[playerid][pHouse2]][hRentable]) {
			HouseInfo[PlayerInfo[playerid][pHouse2]][hRentable] = 1;
			format(szMessage, sizeof(szMessage), "{E3BF1E}Ev sahibi: %s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse2]][hLevel],PlayerInfo[playerid][pHouse2],HouseInfo[PlayerInfo[playerid][pHouse2]][hRentFee]);
			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouse2]][hTextID], COLOR_HOUSEGREEN, szMessage);
			SendClientMessage(playerid, COLOR_WHITE, "Bu ev artk kiralanabilir.");
		}
		else {
			HouseInfo[PlayerInfo[playerid][pHouse2]][hRentable] = 0;
			format(szMessage, sizeof(szMessage), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse2]][hLevel],PlayerInfo[playerid][pHouse2]);
			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouse2]][hTextID], COLOR_HOUSEGREEN, szMessage);
			SendClientMessage(playerid, COLOR_WHITE, "Bu ev artk kiralanabilir deil.");
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Ya evin yok, yada evinde deilsin.");
	return 1;
}

CMD:kirayiayarla(playerid, params[])
{
	new string[128], fee;
	if(sscanf(params, "d", fee)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kirayiayarla [fee]");

	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorZ])))
	{
		if(!(1 <= fee <= 1000))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Minimum kira $1, maksimum kira $1000'dr.");
		}
		else
		{

			HouseInfo[PlayerInfo[playerid][pHouse]][hRentFee] = fee;
			format(string, sizeof(string), "Evinin kira faturasn $%i olarak deitirdin.", HouseInfo[PlayerInfo[playerid][pHouse]][hRentFee]);
			SendClientMessage(playerid, COLOR_WHITE, string);

			if(HouseInfo[PlayerInfo[playerid][pHouse]][hRentable]) format(string, sizeof(string), "{E3BF1E}Ev sahibi: %s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[PlayerInfo[playerid][pHouse]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse]][hLevel],PlayerInfo[playerid][pHouse],HouseInfo[PlayerInfo[playerid][pHouse]][hRentFee]);
			else format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[PlayerInfo[playerid][pHouse]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse]][hLevel],PlayerInfo[playerid][pHouse]);
			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouse]][hTextID], COLOR_HOUSEGREEN, string);
		}
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorZ])))
	{
		if(!(1 <= fee <= 1000))
		{
			SendClientMessage(playerid, COLOR_WHITE, "Minimum kira $1, maksimum kira $1000'dr.");
		}
		else {

			HouseInfo[PlayerInfo[playerid][pHouse2]][hRentFee] = fee;
			format(string, sizeof(string), "Evinin kira faturasn $%i olarak deitirdin.", HouseInfo[PlayerInfo[playerid][pHouse2]][hRentFee]);
			SendClientMessage(playerid, COLOR_WHITE, string);

			if(HouseInfo[PlayerInfo[playerid][pHouse2]][hRentable]) format(string, sizeof(string), "{E3BF1E}Ev sahibi: %s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d\n{E3BF1E}Kira: {FFFFFF}%d TL\n{E3BF1E}Oda kiralamak icin /odakirala",HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse2]][hLevel],PlayerInfo[playerid][pHouse2],HouseInfo[PlayerInfo[playerid][pHouse2]][hRentFee]);
			else format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner],HouseInfo[PlayerInfo[playerid][pHouse2]][hLevel],PlayerInfo[playerid][pHouse2]);
			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[playerid][pHouse2]][hTextID], COLOR_HOUSEGREEN, string);
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Ya evin yok, yada evinde deilsin.");
	return 1;
}

CMD:kiracicikar(playerid, params[])
{
	new string[128], giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /kiracicikar [Oyuncu ID/sim]");
	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorZ])))
	{
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				return SendClientMessage(playerid, COLOR_WHITE, "Kendini kiraclktan karamazsn.");
			}
			else if(PlayerInfo[giveplayerid][pRenting] == PlayerInfo[playerid][pHouse])
			{
				format(string, sizeof(string), "%s, seni kiraclktan kard.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_WHITE, string);

				format(string, sizeof(string), "%s adl kiiyi kiraclktan kardn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);

				PlayerInfo[giveplayerid][pRenting] = INVALID_HOUSE_ID;
			}
			else SendClientMessage(playerid, COLOR_WHITE, "Bu kii evini kiralamyor.");
		}
		else SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorZ])))
	{
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid == playerid)
			{
				return SendClientMessage(playerid, COLOR_WHITE, "Kendini kiraclktan karamazsn.");
			}
			else if(PlayerInfo[giveplayerid][pRenting] == PlayerInfo[playerid][pHouse2])
			{
				format(string, sizeof(string), "%s, seni kiraclktan kard.", GetPlayerNameEx(playerid));
				SendClientMessage(giveplayerid, COLOR_WHITE, string);

				format(string, sizeof(string), "%s adl kiiyi kiraclktan kardn.", GetPlayerNameEx(giveplayerid));
				SendClientMessage(playerid, COLOR_WHITE, string);

				PlayerInfo[giveplayerid][pRenting] = INVALID_HOUSE_ID;
			}
			else SendClientMessage(playerid, COLOR_WHITE, "Bu kii evini kiralamyor.");
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Ya evin yok, yada evinde deilsin.");
	return 1;
}

CMD:kiracilaricikar(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hInteriorZ])))
	{
		new giveplayerid, string[56];
		foreach(Player, i) if(PlayerInfo[i][pRenting] == PlayerInfo[playerid][pHouse]) {
			format(string, sizeof(string), "%s, seni kiraclktan kard.", GetPlayerNameEx(playerid));
			SendClientMessage(i, COLOR_WHITE, string);
			PlayerInfo[i][pRenting] = INVALID_HOUSE_ID;
			++giveplayerid;
		}
		format(string, sizeof(string), "%i online kiraclar, kiraclktan atld.", giveplayerid);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && (IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hExteriorZ]) || IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorX], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorY], HouseInfo[PlayerInfo[playerid][pHouse2]][hInteriorZ])))
	{
		new giveplayerid, string[56];
		foreach(Player, i) if(PlayerInfo[i][pRenting] == PlayerInfo[playerid][pHouse2]) {
			format(string, sizeof(string), "%s, seni kiraclktan kard.", GetPlayerNameEx(playerid));
			SendClientMessage(i, COLOR_WHITE, string);
			PlayerInfo[i][pRenting] = INVALID_HOUSE_ID;
			++giveplayerid;
		}
		format(string, sizeof(string), "%i online kiraclar, kiraclktan atld.", giveplayerid);
		SendClientMessage(playerid, COLOR_WHITE, string);
	}
	else SendClientMessage(playerid, COLOR_GRAD2, "Ya evin yok, yada evinde deilsin.");
	return 1;
}

CMD:evsatinal(playerid, params[])
{
    new string[128];
    new playername[MAX_PLAYER_NAME];
    new sendername[MAX_PLAYER_NAME];
    new Float:oldposx, Float:oldposy, Float:oldposz;
    GetPlayerName(playerid, playername, sizeof(playername));
    GetPlayerPos(playerid, oldposx, oldposy, oldposz);

    if(IsPlayerInRangeOfPoint(playerid,5.0, 0.0, 0.0, 0.0))
    {// This is to prevent players from buying non-ready houses at the 0,0,0  coordinates
        SendClientMessage(playerid, COLOR_WHITE, "Bu mekandaki evleri alamazsn.");
        return 1;
    }

    for(new h = 0; h < sizeof(HouseInfo); h++)
	{
        if(IsPlayerInRangeOfPoint(playerid,2.0,HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ]))
		{
            if(HouseInfo[h][hOwned] == 0)
			{
                if(PlayerInfo[playerid][pLevel] < HouseInfo[h][hLevel])
				{
                    format(string, sizeof(string), "   Bunu satn alabilmek iin %d level olman gerekiyor.", HouseInfo[h][hLevel]);
                    SendClientMessage(playerid, COLOR_GRAD5, string);
                    return 1;
                }
                if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID)
                {
                    SendClientMessage(playerid, COLOR_GRAD5, "Zaten bir evin var.");
                    return 1;
                }
                if(PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID)
				{

					if(GetPlayerCash(playerid) >= HouseInfo[h][hValue])
					{
    					if(GetPVarInt(playerid, "BuyHouseConfirm") == 0)
						{
							SetPVarInt(playerid, "BuyHouseConfirm", 1);
							SendClientMessage(playerid, COLOR_WHITE, "Bu evi satn almak zeresin. Aldktan sonra paran geri alamayacaksn.");
							SendClientMessage(playerid, COLOR_WHITE, "Evi almak konusunda eminsen, komutu tekrar yaz. (/evsatinal).");
							return 1;
						}
						DeletePVar(playerid, "BuyHouseConfirm");

						PlayerInfo[playerid][pHouse] = h;
						HouseInfo[h][hOwned] = 1;
						HouseInfo[h][hRentable] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerCash(playerid,-HouseInfo[h][hValue]);
						SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
						if(HouseInfo[h][hCustomInterior] == 1)
						{
							LoadObjectsForPlayer(playerid);
						}

						format(string, sizeof(string), "* %s kendi evine girdi.", GetPlayerNameEx(playerid));
						ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

						SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
      					SetPlayerFacingAngle(playerid,HouseInfo[h][hInteriorR]);
        				SetCameraBehindPlayer(playerid);
						GameTextForPlayer(playerid, "~w~Eve Hosgeldin~n~Evinden kmak iin kapda /cik yazman yeterli.", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
						SendClientMessage(playerid, COLOR_WHITE, "Yeni alveriiniz iin tebrikler.");
						SendClientMessage(playerid, COLOR_WHITE, "Type /evyardim to review the help section!");
						SaveHouses();
	 					PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
						PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
						GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
						GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
						GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
						OnPlayerStatsUpdate(playerid);
						PlayerInfo[playerid][pVW] = h+60000;
						SetPlayerVirtualWorld(playerid, h+60000);
						DestroyPickup(HouseInfo[h][hPickupID]);
						HouseInfo[h][hPickupID] = CreatePickup(1273, 23, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ], -1);
						format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
						UpdateDynamic3DTextLabelText(HouseInfo[h][hTextID], COLOR_HOUSEGREEN, string);
						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						format(string,sizeof(string),"%s (IP: %s) adl kii %d ID'li evi $%d'a satn ald.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hValue]);
						Log("logs/house.log", string);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   Bunun iin paran yok.");
						return 1;
					}
				}
				/*else if(PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID)
				{
				    if(PlayerInfo[playerid][pDonator] == 0)
				        return SendClientMessage(playerid, COLOR_GREY, "You already own a house!");

					if(GetPlayerCash(playerid) > HouseInfo[h][hValue])
					{
						PlayerInfo[playerid][pHouse2] = h;
						HouseInfo[h][hOwned] = 1;
						HouseInfo[h][hRentable] = 0;
						GetPlayerName(playerid, sendername, sizeof(sendername));
						strmid(HouseInfo[h][hOwner], sendername, 0, strlen(sendername), 255);
						GivePlayerCash(playerid,-HouseInfo[h][hValue]);
						SetPlayerInterior(playerid,HouseInfo[h][hHInteriorWorld]);
						if(HouseInfo[h][hCustomInterior] == 1)
						{
							LoadObjectsForPlayer(playerid);
						}
						SetPlayerPos(playerid,HouseInfo[h][hInteriorX],HouseInfo[h][hInteriorY],HouseInfo[h][hInteriorZ]);
 						SetPlayerFacingAngle(playerid,HouseInfo[h][hInteriorA]);
        				SetCameraBehindPlayer(playerid);
						GameTextForPlayer(playerid, "~w~Eve Hosgeldin~n~Evinden kmak iin kapda /cik yazman yeterli.", 5000, 3);
						PlayerInfo[playerid][pInt] = HouseInfo[h][hHInteriorWorld];
						SendClientMessage(playerid, COLOR_WHITE, "Yeni alveriiniz iin tebrikler.");
						SendClientMessage(playerid, COLOR_WHITE, "Type /yardim to review the property help section!");
						SaveHouses();
						OnPlayerStatsUpdate(playerid);
						PlayerInfo[playerid][pVW] = h+60000;
						SetPlayerVirtualWorld(playerid, h+60000);
						DestroyPickup(HouseInfo[h][hPickupID]);
						HouseInfo[h][hPickupID] = CreatePickup(1273, 23, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ], -1);
						format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[h][hOwner],HouseInfo[h][hLevel],h);
						UpdateDynamic3DTextLabelText(HouseInfo[h][hTextID], COLOR_HOUSEGREEN, string);
						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						format(string,sizeof(string),"%s (IP: %s) adl kii %d ID'li evi $%d'a satn ald.",GetPlayerNameEx(playerid),ip,h,HouseInfo[h][hValue]);
						Log("logs/house.log", string);
						return 1;
					}
					else
					{
						SendClientMessage(playerid, COLOR_WHITE, "   You don't have the cash for that!");
						return 1;
					}
				}*/
            }
            else
			{
                SendClientMessage(playerid, COLOR_WHITE, "Bu evin sahibi var.");
            }
        }
    }
    return 1;
}

CMD:evisat(playerid, params[])
{
	new string[128];
	new house = PlayerInfo[playerid][pHouse];
	new house2 = PlayerInfo[playerid][pHouse2];

	if(house == INVALID_HOUSE_ID && house2 == INVALID_HOUSE_ID)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");
		return 1;
	}

	if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ]))
	{
		if(GetPVarInt(playerid, "SellHouseConfirm") == 0)
		{
			SetPVarInt(playerid, "SellHouseConfirm", 1);
			SendClientMessage(playerid, COLOR_WHITE, "Evini bedavaya satmak zeresin. Bunun iin para almayacaksn.");
			SendClientMessage(playerid, COLOR_WHITE, "Evini satmaya eminsen, komutu tekrar yaz (/evisat).");
			return 1;
		}
		DeletePVar(playerid, "SellHouseConfirm");

		ClearHouse(house);
		HouseInfo[house][hLock] = 1;
		format(HouseInfo[house][hOwner], 128, "Nobody");
		HouseInfo[house][hGLUpgrade] = 1;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~n~~w~Evini sattin!");
		GameTextForPlayer(playerid, string, 4000, 3);
		PlayerInfo[playerid][pHouse] = INVALID_HOUSE_ID;
		if(PlayerInfo[playerid][pVW] == house+60000)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ]);
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pHouse] = INVALID_HOUSE_ID;
		}
		//PlayerInfo[playerid][pInsurance] = 0;
		SaveHouses();

		PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
		GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
		GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
		OnPlayerStatsUpdate(playerid);
		DestroyPickup(HouseInfo[house][hPickupID]);
		HouseInfo[house][hPickupID] = CreatePickup(1273, 23, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ], -1);
		DestroyDynamic3DTextLabel(HouseInfo[house][hTextID]);
		format(string, sizeof(string), "Bu ev satlktr!\n Level: %d\nID: %d\ncret: $%d\nSatn almak iin /evsatinal",HouseInfo[house][hLevel],house,HouseInfo[house][hValue]);
		HouseInfo[house][hTextID] = CreateDynamic3DTextLabel(string, COLOR_HOUSEGREEN, HouseInfo[house][hExteriorX], HouseInfo[house][hExteriorY], HouseInfo[house][hExteriorZ]+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) adl kii evini $%d'a satt (ID %d).",GetPlayerNameEx(playerid),ip,house,HouseInfo[house][hValue]);
		Log("logs/house.log", string);
		return 1;
	}
	// (TEMPORARY - ZHAO NOTE) No second houses for now
	/*else if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house2][hExteriorX],HouseInfo[house2][hExteriorY],HouseInfo[house2][hExteriorZ]))
	{
		if(GetPVarInt(playerid, "SellHouseConfirm") == 0)
		{
			SetPVarInt(playerid, "SellHouseConfirm", 1);
			SendClientMessage(playerid, COLOR_WHITE, "Evini bedavaya satmak zeresin. Bunun iin para almayacaksn.");
			SendClientMessage(playerid, COLOR_WHITE, "Evini satmaya eminsen, komutu tekrar yaz (/evisat).");
			return 1;
		}
		DeletePVar(playerid, "SellHouseConfirm");

		ClearHouse(house2);
		HouseInfo[house2][hLock] = 1;
		format(HouseInfo[house2][hOwner], 128, "Nobody");
		HouseInfo[house2][hGLUpgrade] = 1;
		PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
		format(string, sizeof(string), "~w~You have sold your property!");
		GameTextForPlayer(playerid, string, 4000, 3);
		PlayerInfo[playerid][pHouse2] = INVALID_HOUSE_ID;
		if(PlayerInfo[playerid][pVW] == house2+60000)
		{
			SetPlayerInterior(playerid,0);
			SetPlayerPos(playerid,HouseInfo[house2][hExteriorX],HouseInfo[house2][hExteriorY],HouseInfo[house2][hExteriorZ]);
			PlayerInfo[playerid][pInt] = 0;
			PlayerInfo[playerid][pHouse2] = INVALID_HOUSE_ID;
		}
		//PlayerInfo[playerid][pInsurance] = 0;
		SaveHouses();

		PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
		GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
		GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
		OnPlayerStatsUpdate(playerid);
		DestroyPickup(HouseInfo[house2][hPickupID]);
		HouseInfo[house2][hPickupID] = CreatePickup(1273, 23, HouseInfo[house2][hExteriorX], HouseInfo[house2][hExteriorY], HouseInfo[house2][hExteriorZ], -1);
		DestroyDynamic3DTextLabel(HouseInfo[house2][hTextID]);
		format(string, sizeof(string), "Bu ev satlktr!\n Level: %d\nID: %d\ncret: $%d\nSatn almak iin /evsatinal",HouseInfo[house][hLevel],house,HouseInfo[house][hValue]);
		HouseInfo[house2][hTextID] = CreateDynamic3DTextLabel(string, COLOR_HOUSEGREEN, HouseInfo[house2][hExteriorX], HouseInfo[house2][hExteriorY], HouseInfo[house2][hExteriorZ]+0.5,20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
		new ip[32];
		GetPlayerIp(playerid,ip,sizeof(ip));
		format(string,sizeof(string),"%s (IP: %s) adl kii evini $%d'a satt (ID %d).",GetPlayerNameEx(playerid),ip,house2,HouseInfo[house2][hValue]);
		Log("logs/house.log", string);
		return 1;
 	}*/
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Satabilmek iin evinin kapsna yakn olmalsn.");
	}
	return 1;
}


CMD:zilebas(playerid, params[])
{
	for(new h; h < sizeof(HouseInfo); h++) if(IsPlayerInRangeOfPoint(playerid, 3.0, HouseInfo[h][hExteriorX], HouseInfo[h][hExteriorY], HouseInfo[h][hExteriorZ])) {

		new
			string[75 + MAX_PLAYER_NAME];

		foreach(Player, i) if(GetPlayerVirtualWorld(i) == h + 60000 && GetPlayerInterior(i) == HouseInfo[h][hHInteriorWorld]) {
			format(string,sizeof(string),"%s adl kiinin evinin kaps alyor.", HouseInfo[h][hOwner]);
			SendClientMessage(i,COLOR_PURPLE,string);
			GameTextForPlayer(i, "~n~~n~~n~~n~~n~~n~~n~~n~~w~Kapi caliyor...", 4000,3);
		}
		format(string,sizeof(string),"* %s, elini kaldrr ve kapnn yanndaki zile basp, %s adl kiinin kapsn alar.",GetPlayerNameEx(playerid), HouseInfo[h][hOwner]);
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	return 1;
}

CMD:evimisat(playerid, params[])
{
    new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
    if((PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0) || (PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)) {
	    new
			string[128],
			giveplayerid,
			price;

	    if(sscanf(params, "ud", giveplayerid, price))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evimisat [Oyuncu ID/sim] [fiyat]");

        if(price < 1)
			return SendClientMessage(playerid, COLOR_GREY, "Fiyat 0'dan yksek olmak zorunda.");

        if(!IsPlayerConnected(giveplayerid))
			return SendClientMessage(playerid, COLOR_GREY, "Oyuncu oyunda deil");

		if(PlayerInfo[giveplayerid][pHouse] != INVALID_HOUSE_ID)
			return SendClientMessage(playerid, COLOR_GRAD5, "Bu kiinin zaten bir evi var.");

        if(PlayerInfo[giveplayerid][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[giveplayerid][pHouse]][hOwner], true) == 0)
			return SendClientMessage(playerid, COLOR_GREY, "Bu kiinin zaten bir evi var.");

        new
			house = PlayerInfo[playerid][pHouse],
			house2 = PlayerInfo[playerid][pHouse2];

        if(PlayerInfo[giveplayerid][pLevel] >= HouseInfo[PlayerInfo[playerid][pHouse]][hLevel]) {
			if(ProxDetectorS(8.0, playerid, giveplayerid)) {
				if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house][hExteriorX],HouseInfo[house][hExteriorY],HouseInfo[house][hExteriorZ])) {
					if(GetPVarInt(playerid, "SellMyTimer") > 0) {
						format(string, sizeof(string), "Tekrar sat teklifi yollamak iin %d saniye beklemelisin.", GetPVarInt(playerid, "SellMyTimer"));
						SendClientMessage(playerid,COLOR_GREY,string);
						return 1;
					}
					HouseOffer[giveplayerid] = playerid;
					HousePrice[giveplayerid] = price;
					House[giveplayerid] = 1;
					format(string, sizeof(string), "* %s adl kiiye evini $%d'a satmak iin teklif yolladn.", GetPlayerNameEx(giveplayerid), price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s sana, sahip olduu evi $%d'a satmak istiyor, satn almak iin (/kabulet ev)", GetPlayerNameEx(playerid), price);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					SetPVarInt(playerid, "SellMyTimer", 30); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_SELLMYTIMER);
				}  else if(IsPlayerInRangeOfPoint(playerid, 4.0,HouseInfo[house2][hExteriorX],HouseInfo[house2][hExteriorY],HouseInfo[house2][hExteriorZ])) {
					HouseOffer[giveplayerid] = playerid;
					HousePrice[giveplayerid] = price;
					House[giveplayerid] = 2;
					format(string, sizeof(string), "* %s adl kiiye evini $%d'a satmak iin teklif yolladn.", GetPlayerNameEx(giveplayerid), price);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* %s sana, sahip olduu evi $%d'a satmak istiyor, satn almak iin (/kabulet ev)", GetPlayerNameEx(playerid), price);
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
				} else SendClientMessage(playerid, COLOR_GREY, "Evinin yaknnda deilsin");
			} else SendClientMessage(playerid, COLOR_GREY, "Bu kii senin yannda deil");
        } else SendClientMessage(playerid, COLOR_GREY, "Evi satmaya altn kiinin leveli evi almak iin yeterli deil.");
    } else SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");
    return 1;
}

CMD:evdenal(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));

	new string[128], amount, choice[32];

	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evdenal [isim] [miktar]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Pot, Crack, Materyal");
		return 1;
	}

	PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
	PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
	GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
	GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
	GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);

	if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse]+60000)
	{
		if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
		{
			if(strcmp(choice, "Para", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney]-=amount;
					PlayerInfo[playerid][pCash] += amount;
					format(string, sizeof(string), "Evinin kasasndan $%d para kardn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz para karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) adl kii evinin kasasndan $%d ald (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar para yok.");
				}
			}
			else if(strcmp(choice, "Pot", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse]][hPot] >= amount)
				{
					if(PlayerInfo[playerid][pPot] > 500)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Zaten 500 gram potun var.");
						return 1;
					}
					if(amount+PlayerInfo[playerid][pPot] > 500)
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "500 gramdan fazla pot tayamazsn.");
					    return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse]][hPot]-=amount;
					PlayerInfo[playerid][pPot] += amount;
					format(string, sizeof(string), "Evinin kasasndan %d gram pot kardn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz pot karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of pot from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar pot yok.");
				}
			}
			else if(strcmp(choice, "Materyal", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse]][hMaterials] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse]][hMaterials]-=amount;
					PlayerInfo[playerid][pMats] += amount;
					format(string, sizeof(string), "Evinin kasasndan %d materyal kardn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz materyal karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) adl kii evinin kasasndan %d materyal ald (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar materyal yok.");
				}
			}
			else if(strcmp(choice, "Crack", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse]][hCrack] >= amount)
				{
					if(PlayerInfo[playerid][pCrack] > 250)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Zaten 250 gram crackin var.");
						return 1;
					}
					if(amount+PlayerInfo[playerid][pCrack] > 250)
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "You can't carry more than 250 grams of crack.");
					    return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse]][hCrack]-=amount;
					PlayerInfo[playerid][pCrack] += amount;
					format(string, sizeof(string), "Evinin kasasndan %d gram crack aldn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz crack karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of crack from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar crack yok.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evdenal [name] [amount]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Cash, Pot, Crack, Materials");
			}
		}
	}


	else if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse2]+60000)
	{
		if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(playername, HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)
		{
			if(strcmp(choice, "Cash", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney]-=amount;
					PlayerInfo[playerid][pCash] += amount;
					format(string, sizeof(string), "Evinin kasasndan $%d para kardn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz para karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) adl kii evinin kasasndan $%d ald (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar para yok.");
				}
			}
			else if(strcmp(choice, "Pot", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse2]][hPot] >= amount)
				{
					if(PlayerInfo[playerid][pPot] > 500)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Zaten 500 gram potun var.");
						return 1;
					}
					if(amount+PlayerInfo[playerid][pPot] > 500)
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "500 gramdan fazla pot tayamazsn.");
					    return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse2]][hPot]-=amount;
					PlayerInfo[playerid][pPot] += amount;
					format(string, sizeof(string), "Evinin kasasndan %d gram pot kardn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz pot karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of pot from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar pot yok.");
				}
			}
			else if(strcmp(choice, "Materials", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse2]][hMaterials] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse2]][hMaterials]-=amount;
					PlayerInfo[playerid][pMats] += amount;
					format(string, sizeof(string), "Evinin kasasndan %d materyal kardn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz materyal karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) adl kii evinin kasasndan %d materyal ald (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar materyal yok.");
				}
			}
			else if(strcmp(choice, "Crack", true, strlen(choice)) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az karamazsn.");
					return 1;
				}
				if(HouseInfo[PlayerInfo[playerid][pHouse2]][hCrack] >= amount)
				{
					if(PlayerInfo[playerid][pCrack] > 250)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "Zaten 250 gram crackin var.");
						return 1;
					}
					if(amount+PlayerInfo[playerid][pCrack] > 250)
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "250 gramdan fazla crack tayamazsn.");
					    return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse2]][hCrack]-=amount;
					PlayerInfo[playerid][pCrack] += amount;
					format(string, sizeof(string), "Evinin kasasndan %d gram crack aldn.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii evinin kasasndan biraz crack karr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has withdrawn %d grams of crack from their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Alabilecein o kadar crack yok.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evdenal [isim] [miktar]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Pot, Crack, Materyal");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Herhangi bir evin iinde deilsin.");
		return 1;
	}
	return 1;
}

CMD:evekoy(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new string[128], choice[32], amount;
	if(sscanf(params, "s[32]d", choice, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evekoy [name] [amount]");
		SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Pot, Crack, Materyal");
		return 1;
	}

	PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
	PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
	GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
	GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
	GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);

	if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse]+60000)
	{
		if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID)
		{
			if(strcmp(choice, "para", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pCash] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney]+=amount;
					PlayerInfo[playerid][pCash] -= amount;
					format(string, sizeof(string), "Evinin kasasna $%d koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii czdanndan biraz para karr ve evinin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) adl kii evinin kasasna $%d koydu (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklayabilecek paran yok.");
				}
			}
			else if(strcmp(choice, "pot", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pPot] >= amount)
				{
					if(amount < 1 || amount > 25)
					{
						SendClientMessage(playerid, COLOR_GREY, "Ayn anda 25 gramdan fazla saklayamazsn.");
						return 1;
					}
					if(amount + HouseInfo[PlayerInfo[playerid][pHouse]][hPot] >= 250)
					{
						SendClientMessage(playerid, COLOR_GREY, "Evin zaten pot dolu!");
						return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse]][hPot]+=amount;
					PlayerInfo[playerid][pPot] -= amount;
					format(string, sizeof(string), "Evinin kasasna %d gram pot koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s cebinden biraz pot karr ve evinin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of pot into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklamak iin yeterli potun yok.");
				}
			}
			else if(strcmp(choice, "materyal", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pMats] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse]][hMaterials]+=amount;
					PlayerInfo[playerid][pMats] -= amount;
					format(string, sizeof(string), "Evinin kasasna %d materyal koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii biriz materyal karr ve evinin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %S) adl kii evinin kasasna %d materyal koydu (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklamak iin yeterli materyalin yok.");
				}
			}
			else if(strcmp(choice, "crack", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pCrack] >= amount)
				{
					if(amount < 1 || amount > 25)
					{
						SendClientMessage(playerid, COLOR_GREY, "Ayn anda 25 gramdan fazla saklayamazsn.");
						return 1;
					}
					if(amount + HouseInfo[PlayerInfo[playerid][pHouse]][hCrack] >= 250)
					{
						SendClientMessage(playerid, COLOR_GREY, "Evinin kasas zaten crack dolu!");
						return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse]][hCrack]+=amount;
					PlayerInfo[playerid][pCrack] -= amount;
					format(string, sizeof(string), "Evinin kasasna %d gram crack koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii cebinden biraz crack karr ve evin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of crack into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklamak iin yeterli crackin yok.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evekoy [isim] [miktar]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Pot, Crack, Materyal");
			}
		}
	}
	else if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse2]+60000)
	{
		if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID)
		{
			if(strcmp(choice, "para", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pCash] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney]+=amount;
					PlayerInfo[playerid][pCash] -= amount;
					format(string, sizeof(string), "Evinin kasasna $%d koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii czdanndan biraz para karr ve evinin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) adl kii evinin kasasna $%d koydu (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklayabilecek paran yok.");
				}
			}
			else if(strcmp(choice, "pot", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pPot] >= amount)
				{
					if(amount < 1 || amount > 25)
					{
						SendClientMessage(playerid, COLOR_GREY, "Ayn anda 25 gramdan fazla saklayamazsn.");
						return 1;
					}
					if(amount + HouseInfo[PlayerInfo[playerid][pHouse2]][hPot] >= 250)
					{
						SendClientMessage(playerid, COLOR_GREY, "Evin zaten pot dolu!");
						return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse2]][hPot]+=amount;
					PlayerInfo[playerid][pPot] -= amount;
					format(string, sizeof(string), "Evinin kasasna %d gram pot koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s cebinden biraz pot karr ve evinin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of pot into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklamak iin yeterli potun yok.");
				}
			}
			else if(strcmp(choice, "materyal", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pMats] >= amount)
				{
					HouseInfo[PlayerInfo[playerid][pHouse2]][hMaterials]+=amount;
					PlayerInfo[playerid][pMats] -= amount;
					format(string, sizeof(string), "Evinin kasasna %d materyal koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii biriz materyal karr ve evinin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %S) adl kii evinin kasasna %d materyal koydu (Ev ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklamak iin yeterli materyalin yok.");
				}
			}
			else if(strcmp(choice, "crack", true) == 0)
			{
				if(amount < 1)
				{
					SendClientMessage(playerid, COLOR_WHITE, "Birden az saklayamazsn.");
					return 1;
				}
				if(PlayerInfo[playerid][pCrack] >= amount)
				{
					if(amount < 1 || amount > 25)
					{
						SendClientMessage(playerid, COLOR_GREY, "Ayn anda 25 gramdan fazla saklayamazsn.");
						return 1;
					}
					if(amount + HouseInfo[PlayerInfo[playerid][pHouse2]][hCrack] >= 250)
					{
						SendClientMessage(playerid, COLOR_GREY, "Evinin kasas zaten crack dolu!");
						return 1;
					}
					HouseInfo[PlayerInfo[playerid][pHouse2]][hCrack]+=amount;
					PlayerInfo[playerid][pCrack] -= amount;
					format(string, sizeof(string), "Evinin kasasna %d gram crack koydun.", amount);
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string,sizeof(string), "* %s adl kii cebinden biraz crack karr ve evin kasasna yerletirir.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SaveHouses();
					OnPlayerStatsUpdate(playerid);
					/*new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					format(string,sizeof(string),"%s (IP: %s) has deposited %d grams of crack into their house (house ID %d).",GetPlayerNameEx(playerid),ip,amount,PlayerInfo[playerid][pHouse2]);
					Log("logs/house.log", string);*/
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Saklamak iin yeterli crackin yok.");
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evekoy [isim] [miktar]");
				SendClientMessage(playerid, COLOR_GRAD2, "Kullanlabilir Isimler: Para, Pot, Crack, Materyal");
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Herhangi bir evin iinde deilsin.");
	}
	return 1;
}

CMD:evkasasi(playerid, params[])
{
	if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse]+60000)
	{
		if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID)
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++)
			{
				if(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][s] != 0)
				{
					weaponsinlocker++;
				}
			}
			new string[80];
			format(string, sizeof(string), "Silahdolab: %d/%d | Para: $%d | Pot: %d | Crack: %d | Materyal: %d", weaponsinlocker,HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade], HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney], HouseInfo[PlayerInfo[playerid][pHouse]][hPot], HouseInfo[PlayerInfo[playerid][pHouse]][hCrack], HouseInfo[PlayerInfo[playerid][pHouse]][hMaterials]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}

	else if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse2]+60000)
	{
		if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID)
		{
			new weaponsinlocker;
			for(new s = 0; s < 5; s++)
			{
				if(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][s] != 0)
				{
					weaponsinlocker++;
				}
			}
			new string[80];
			format(string, sizeof(string), "Silahdolab: %d/%d | Para: $%d | Pot: %d | Crack: %d | Materyal: %d", weaponsinlocker,HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade], HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney], HouseInfo[PlayerInfo[playerid][pHouse2]][hPot], HouseInfo[PlayerInfo[playerid][pHouse2]][hCrack], HouseInfo[PlayerInfo[playerid][pHouse2]][hMaterials]);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}

	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Sahibi olduun evin iinde deilsin.");
	}
	return 1;
}

CMD:esilahal(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	new string[128], slot;

	if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse]+60000)
	{
		if(PlayerInfo[playerid][pHouse])
		{
			if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

			if(sscanf(params, "d", slot))
			{
				new weaponname[50];
				SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
				format(string, sizeof(string), "*** %s Kasa ***", GetPlayerNameEx(playerid));
		   		SendClientMessage(playerid, COLOR_WHITE, string);
				for(new s = 0; s < 5; s++)
				{
					if(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][s] != 0)
					{
						GetWeaponName(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][s], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /esilahal [slot]");
				return 1;
			}

			if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "Silah dolabndan baka bir silah karmak iin %d saniye beklemen gerek.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessage(playerid,COLOR_GREY,string);
				return 1;
			}
			new maxslots = HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessage(playerid, COLOR_GREY, "Yanl slot.");
				return 1;
			}
			if(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1] != 0)
			{
				new weaponname[50];
				GetWeaponName(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1], weaponname, sizeof(weaponname));
				GivePlayerValidWeapon(playerid, HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1], 60000);
				HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1] = 0;
				if(strcmp(weaponname, "silenced pistol", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Susturuculu tabancan kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Susturuculu tabancasn kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "desert eagle", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Desert Eagle kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Desert Eagle'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Shotgun kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Shotgun'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "combat shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan SPAS-12 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan SPAS-12'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan MP5 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan MP5'ini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan AK-47 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan AK-47'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan M4 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan M4'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Rifle kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Rifle'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "sniper rifle", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Sniper Rifle kardn.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					format(string,sizeof(string), "* adl kii evninin silah dolabndan Sniper Rifle'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
                if(strcmp(weaponname, "micro smg", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Uzi kardn.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Uzi'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(strcmp(weaponname, "tec9", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Uzi kardn.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Uzi'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				SaveHouses();
				PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
				PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
				GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
				GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
				GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
				OnPlayerStatsUpdate(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Bu slotta sakladn bir silah yok.");
				return 1;
			}
		}
	}
	else if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse2]+60000)
	{
		if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID)
		{
			if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

			if(sscanf(params, "d", slot))
			{
				new weaponname[50];
				SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
				format(string, sizeof(string), "*** %s Kasa ***", GetPlayerNameEx(playerid));
		   		SendClientMessage(playerid, COLOR_WHITE, string);
				for(new s = 0; s < 5; s++)
				{
					if(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][s] != 0)
					{
						GetWeaponName(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][s], weaponname, sizeof(weaponname));
						format(string, sizeof(string), "Slot %d: %s", s+1, weaponname);
						SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				SendClientMessage(playerid, COLOR_GREEN, "________________________________________________");
				SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /esilahal [slot]");
				return 1;
			}

			if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "Silah dolabndan baka bir silah karmak iin %d saniye beklemen gerek.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessage(playerid,COLOR_GREY,string);
				return 1;
			}
			new maxslots = HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessage(playerid, COLOR_GREY, "Yanl slot.");
				return 1;
			}
			if(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1] != 0)
			{
				new weaponname[50];
				GetWeaponName(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1], weaponname, sizeof(weaponname));
				GivePlayerValidWeapon(playerid, HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1], 60000);
				HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1] = 0;
				if(strcmp(weaponname, "silenced pistol", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Susturuculu tabancan kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Susturuculu tabancasn kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "desert eagle", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Desert Eagle kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Desert Eagle'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Shotgun kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Shotgun'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "combat shotgun", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan SPAS-12 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan SPAS-12'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "mp5", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan MP5 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan MP5'ini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "ak47", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan AK-47 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan AK-47'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "m4", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan M4 kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan M4'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "rifle", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Rifle kardn.");
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Rifle'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
				if(strcmp(weaponname, "sniper rifle", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Sniper Rifle kardn.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					format(string,sizeof(string), "* adl kii evninin silah dolabndan Sniper Rifle'n kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(strcmp(weaponname, "micro smg", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Uzi kardn.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Uzi'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				if(strcmp(weaponname, "tec9", true, strlen(weaponname)) == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Silah dolabndan Uzi kardn.");
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
					format(string,sizeof(string), "* %s adl kii evinin silah dolabndan Uzi'sini kard.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				SaveHouses();
				PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
				PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
				GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
				GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
				GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
				OnPlayerStatsUpdate(playerid);
				return 1;
			}
			else
			{
				SendClientMessage(playerid, COLOR_WHITE, "Bu slotta sakladn bir silah yok.");
				return 1;
			}
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Herhangi bir evin iinde deilsin.");
	}
	return 1;
}

CMD:esilahsakla(playerid, params[])
{
	if(AdminDuty[playerid] == 1)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak ibandayken  bu komutu kullanamazsn.");
		return 1;
	}

	if(GetPVarInt(playerid, "PBM") > 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Paintball oyunundayken bunu yapamazsn.");
		return 1;
	}
	if(GetPVarInt(playerid, "EventToken") != 0)
	{
		SendClientMessage(playerid, COLOR_GREY, "Etkinlikteyken bunu kullanamazsn.");
		return 1;
	}
	new string[128], weaponchoice[32], slot;
	if(sscanf(params, "s[32]d", weaponchoice, slot)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /esilahsakla [silah] [slot]");

	if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse]+60000)
	{
		if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID)
		{
			if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "   Baka bir silah koymadan nce %d saniye beklemelisin.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessage(playerid,COLOR_GREY,string);
				return 1;
			}

			new maxslots = HouseInfo[PlayerInfo[playerid][pHouse]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessage(playerid, COLOR_GREY, "Yanl slot.");
				return 1;
			}

			if(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu slotta zaten silahn var.");
				return 1;
			}

			new weapon;
			if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Susturuculu tabancan silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][2];
					format(string,sizeof(string), "* %s adl kii susturuculu tabancasn evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Desert Eagle'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][2];
					format(string,sizeof(string), "* %s adl kii Desert Eagle'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shotgun'unu silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][3];
					format(string,sizeof(string), "* %s adl kii Shotgun'unu evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "SPAS-12'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][3];
					format(string,sizeof(string), "* %s adl kii SPAS-12'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "MP5'ini silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][4];
					format(string,sizeof(string), "* %s adl kii MP5'ini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}

			else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "AK47'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][5];
					format(string,sizeof(string), "* %s adl kii AK-47'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "M4'n silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][5];
					format(string,sizeof(string), "* %s adl kii M4'n evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Rifle'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][6];
					format(string,sizeof(string), "* %s adl kii Riflesini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sniper Rifle'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][6];
					format(string,sizeof(string), "* %s adl kii sniper Riflesini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "uzi", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][4] == 28 && PlayerInfo[playerid][pAGuns][4] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Uzini silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][4];
					format(string,sizeof(string), "* %s adl kii uzisini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "tec9", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][4] == 32 && PlayerInfo[playerid][pAGuns][4] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Tec9'unu silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][4];
					format(string,sizeof(string), "%s adl kii tec9'unu evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			if(weapon == 0) return SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin.");
			if(HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1] == 0)
			{
				HouseInfo[PlayerInfo[playerid][pHouse]][hWeapons][slot-1] = weapon;
				RemovePlayerWeapon(playerid, weapon);
				SaveHouses();
				PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
				PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
				GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
				GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
				GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
				OnPlayerStatsUpdate(playerid);
				return 1;
			}
			else { SendClientMessage(playerid,COLOR_GREY,"Yanl silah ad!"); return 1; }
		}
	}

	else if(GetPlayerVirtualWorld(playerid) == PlayerInfo[playerid][pHouse2]+60000)
	{
		if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID)
		{
			if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
			{
				format(string, sizeof(string), "   Baka bir silah koymadan nce %d saniye beklemelisin.", GetPVarInt(playerid, "GiveWeaponTimer"));
				SendClientMessage(playerid,COLOR_GREY,string);
				return 1;
			}
			new maxslots = HouseInfo[PlayerInfo[playerid][pHouse2]][hGLUpgrade];
			if(slot > maxslots)
			{
				SendClientMessage(playerid, COLOR_GREY, "Yanl slot.");
				return 1;
			}

			if(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1] != 0)
			{
				SendClientMessage(playerid, COLOR_GREY, "Bu slotta zaten silahn var.");
				return 1;
			}

			new weapon;
			if(strcmp(weaponchoice, "sdpistol", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][2] == 23 && PlayerInfo[playerid][pAGuns][2] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Susturuculu tabancan silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][2];
					format(string,sizeof(string), "* %s adl kii susturuculu tabancasn evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "deagle", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][2] == 24 && PlayerInfo[playerid][pAGuns][2] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Desert Eagle'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][2];
					format(string,sizeof(string), "* %s adl kii Desert Eagle'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "shotgun", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][3] == 25 && PlayerInfo[playerid][pAGuns][3] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Shotgun'unu silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][3];
					format(string,sizeof(string), "* %s adl kii Shotgun'unu evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "spas12", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][3] == 27 && PlayerInfo[playerid][pAGuns][3] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "SPAS-12'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][3];
					format(string,sizeof(string), "* %s adl kii SPAS-12'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "mp5", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "MP5'ini silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][4];
					format(string,sizeof(string), "* %s adl kii MP5'ini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "ak47", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][5] == 30 && PlayerInfo[playerid][pAGuns][5] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "AK47'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][5];
					format(string,sizeof(string), "* %s adl kii AK-47'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "m4", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][5] == 31 && PlayerInfo[playerid][pAGuns][5] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "M4'n silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][5];
					format(string,sizeof(string), "* %s adl kii M4'n evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "rifle", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][6] == 33 && PlayerInfo[playerid][pAGuns][6] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Rifle'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][6];
					format(string,sizeof(string), "* %s adl kii Riflesini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "sniper", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][6] == 34 && PlayerInfo[playerid][pAGuns][6] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Sniper Rifle'ni silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][6];
					format(string,sizeof(string), "* %s adl kii sniper Rifle'sini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "uzi", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][4] == 28 && PlayerInfo[playerid][pAGuns][4] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Uzini silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][4];
					format(string,sizeof(string), "* %s adl kii uzisini evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			else if(strcmp(weaponchoice, "tec9", true, strlen(weaponchoice)) == 0)
			{
				if(PlayerInfo[playerid][pGuns][4] == 29 && PlayerInfo[playerid][pAGuns][4] == 0)
				{
					SendClientMessage(playerid, COLOR_LIGHTBLUE, "Tec9'unu silah dolabna koydun.");
					weapon = PlayerInfo[playerid][pGuns][4];
					format(string,sizeof(string), "%s adl kii tec9'unu evinin silah dolabna yerletirdi.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPVarInt(playerid, "GiveWeaponTimer", 10); SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
				}
			}
			if(weapon == 0) return SendClientMessage(playerid, COLOR_GREY, "Bu silaha sahip deilsin.");
			if(HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1] == 0)
			{
				HouseInfo[PlayerInfo[playerid][pHouse2]][hWeapons][slot-1] = weapon;
				RemovePlayerWeapon(playerid, weapon);
				SaveHouses();
				PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
				PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
				GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
				GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
				GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
				OnPlayerStatsUpdate(playerid);
				return 1;
			}
			else { SendClientMessage(playerid,COLOR_GREY,"Yanl silah ad!"); return 1; }
		}
	}

	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Herhangi bir evin iinde deilsin.");
	}
	return 1;
}

CMD:evimibul(playerid, params[])
{
    if(CheckPointCheck(playerid))
	{
        SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
        return 1;
    }
    if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID)
	{
        SetPlayerCheckpoint(playerid,HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorX], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorY], HouseInfo[PlayerInfo[playerid][pHouse]][hExteriorZ], 4.0);
        GameTextForPlayer(playerid, "~w~Evin yolu ~r~belirlendi", 5000, 1);
        gPlayerCheckpointStatus[playerid] = CHECKPOINT_HOME;
    }
    else
	{
        GameTextForPlayer(playerid, "~w~Evsizsin", 5000, 1);
    }
    return 1;
}

CMD:evedavetet(playerid, params[])
{
	if(PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID && PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID)
		return SendClientMessage(playerid, COLOR_WHITE, "Evin yok.");

	new
		giveplayerid,
		houseid;

	if(PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID || PlayerInfo[playerid][pHouse] == INVALID_HOUSE_ID) {
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evedavetet [Oyuncu ID/sim]");

		if(giveplayerid == playerid)
			return SendClientMessage(playerid, COLOR_WHITE, "Kendi zerinde /evedavetet komutunu kullanamazsn.");

		if(giveplayerid != INVALID_PLAYER_ID) {
			new string[59 + MAX_PLAYER_NAME];
			if(PlayerInfo[playerid][pHouse2] == INVALID_HOUSE_ID) hInviteHouse[giveplayerid] = PlayerInfo[playerid][pHouse];
			else hInviteHouse[giveplayerid] = PlayerInfo[playerid][pHouse2];
			hInviteOffer[giveplayerid] = playerid;
			format(string, sizeof(string), "   %s adl kii seni evine davet etti. (/kabulet davet).", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s adl kiiyi evine davet ettin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		} else return SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	} else {
		if(sscanf(params, "ui", giveplayerid, houseid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /evedavetet [Oyuncu ID/sim] [house 1/2]");

		if(giveplayerid == playerid)
			return SendClientMessage(playerid, COLOR_WHITE, "Kendi zerinde /evedavetet komutunu kullanamazsn.");

		if(giveplayerid != INVALID_PLAYER_ID) {
			new string[59 + MAX_PLAYER_NAME];
			if(houseid == 1) hInviteHouse[giveplayerid] = PlayerInfo[playerid][pHouse];
			else if(houseid == 2) hInviteHouse[giveplayerid] = PlayerInfo[playerid][pHouse2];
			else return SendClientMessage(playerid, COLOR_GRAD2, "Invalid house specified.");
			hInviteOffer[giveplayerid] = playerid;
			format(string, sizeof(string), "   %s adl kii seni evine davet etti. (/kabulet davet).", GetPlayerNameEx(playerid));
			SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
			format(string, sizeof(string), "%s adl kiiyi evine davet ettin.", GetPlayerNameEx(giveplayerid));
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
		} else return SendClientMessage(playerid, COLOR_GRAD2, "Geersiz oyuncu.");
	}
	return 1;
}

CMD:hsetvw(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 3)
	{
		new string[128], giveplayerid, vw;
		if(sscanf(params, "ud", giveplayerid, vw)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setvw [Oyuncu ID/sim] [virtual world]");

		if(IsPlayerConnected(giveplayerid))
		{
			PlayerInfo[giveplayerid][pVW] =  vw;
			SetPlayerVirtualWorld(giveplayerid,  vw);
			format(string, sizeof(string), "%s adl oyuncunun virtual world'unu %d olarak deitirdin.", GetPlayerNameEx(giveplayerid),  vw);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:setvw(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid, vw;
		if(sscanf(params, "ud", giveplayerid, vw)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setvw [Oyuncu ID/sim] [virtual world]");

		if(IsPlayerConnected(giveplayerid))
		{
			PlayerInfo[giveplayerid][pVW] =  vw;
			SetPlayerVirtualWorld(giveplayerid,  vw);
			format(string, sizeof(string), "%s adl oyuncunun virtual world'unu %d olarak deitirdin.", GetPlayerNameEx(giveplayerid),  vw);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:setint(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2 || PlayerInfo[playerid][pHelper] >= 3)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid, int;
		if(sscanf(params, "ud", giveplayerid, int)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setint [Oyuncu ID/sim] [interiorid]");

		if(IsPlayerConnected(giveplayerid))
		{
		    if(PlayerInfo[giveplayerid][pAdmin] <= PlayerInfo[playerid][pAdmin]) {
				PlayerInfo[giveplayerid][pInt] = int;
				SetPlayerInterior(giveplayerid, int);
				format(string, sizeof(string), "%s adl kiinin interiorunu %d olarak deitirdin.", GetPlayerNameEx(giveplayerid), int);
				SendClientMessage(playerid, COLOR_GRAD2, string);
			} else return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu seninle eit leveldeki yada yksek leveldeki admin zerinde kullanamazsn.");
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:hsetint(playerid, params[])
{
	if(PlayerInfo[playerid][pHelper] >= 3)
	{
		new string[128], giveplayerid, int;
		if(sscanf(params, "ud", giveplayerid, int)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /hsetint [Oyuncu ID/sim] [interiorid]");

		if(IsPlayerConnected(giveplayerid))
		{
			PlayerInfo[giveplayerid][pInt] = int;
			SetPlayerInterior(giveplayerid, int);
			format(string, sizeof(string), "%s adl kiinin interiorunu %d olarak deitirdin.", GetPlayerNameEx(giveplayerid), int);
			SendClientMessage(playerid, COLOR_GRAD2, string);
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:setskin(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new
			string[128],
			giveplayerid,
			skinid;

		if(sscanf(params, "ud", giveplayerid, skinid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /setskin [Oyuncu ID/sim] [skinid]");

		if(giveplayerid != INVALID_PLAYER_ID) {
			if(!IsInvalidSkin(skinid)) {
				if(GetPlayerSkin(giveplayerid) == skinid)
					return SendClientMessage(playerid, COLOR_WHITE, "Oyuncu zaten setiin kyafeti giyiyor.");

			    if(AdminDuty[giveplayerid] == 0 || giveplayerid == playerid) {
					PlayerInfo[giveplayerid][pSkin] = skinid;
					format(string, sizeof(string), "Kyafetin %d olarak %s tarafndan deitirildi.", skinid, GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_WHITE, string);
					format(string, sizeof(string), "%s adl kiiye %d ID'li kyafeti verdin.", GetPlayerNameEx(giveplayerid), skinid);
					SendClientMessage(playerid, COLOR_WHITE, string);
					SetPlayerSkin(giveplayerid, PlayerInfo[giveplayerid][pSkin]);
				} else return SendClientMessage(playerid, COLOR_GRAD1, "Kendin hari ibanda olan hibir adminin kyafetini deitiremezsin.");
			}
			else return SendClientMessage(playerid, COLOR_GREY, "Yanl Skin ID!");
		}
	}
	else return SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	return 1;
}

CMD:gotoid(playerid, params[])
{
	new giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gotoid [Oyuncu ID/sim]");

	new Float:plocx,Float:plocy,Float:plocz;
	if(IsPlayerConnected(giveplayerid))
	{
		if(PlayerInfo[playerid][pAdmin] >= 1)
		{
			if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    	{
	        	SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
				return 1;
	    	}
			if(GetPlayerState(giveplayerid) == PLAYER_STATE_SPECTATING)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu birini izliyor.");
				return 1;
			}
			if(GetPlayerState(playerid) == PLAYER_STATE_SPECTATING)
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Izlerken bunu yapamazsn.");
				return 1;
			}
			GetPlayerPos(giveplayerid, plocx, plocy, plocz);
			Streamer_UpdateEx(playerid, plocx, plocy, plocz);

			if(GetPlayerState(playerid) == 2)
			{
				new tmpcar = GetPlayerVehicleID(playerid);
				SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
				TelePos[playerid][0] = 0.0;TelePos[playerid][1] = 0.0;
				fVehSpeed[playerid] = 0.0;
			}
			else
			{
				SetPlayerPos(playerid,plocx,plocy+2, plocz);
			}

			SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
			SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
			new giveplayeridvw = GetPlayerVirtualWorld(giveplayerid);
			new giveplayerint =  GetPlayerInterior(giveplayerid);
			PlayerInfo[playerid][pVW] = giveplayeridvw;
			PlayerInfo[playerid][pInt] = giveplayerint;

			SendClientMessage(playerid, COLOR_WHITE, "Inlandn!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		}

	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:gethere(playerid, params[]) {
	new
		giveplayerid;

	if(sscanf(params, "u", giveplayerid))
		return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gethere [Oyuncu ID/sim]");

	new
		Float:plocx,
		Float:plocy,
		Float:plocz;

	if(IsPlayerConnected(giveplayerid)) {
		if(PlayerInfo[giveplayerid][pAdmin] >= PlayerInfo[playerid][pAdmin] && AdminDuty[giveplayerid] == 1)
			return SendClientMessage(playerid, COLOR_WHITE, "Bu komutu sana eit veya daha yksek leveldeki admin  zerinde uygulayamazsn.");

		if(PlayerInfo[playerid][pAdmin] >= 1) {
			if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

	    	if(GetPVarInt(giveplayerid,"MedicCall") == 1)
	    	    return SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu uanda yaral, /goto komutunu kullanarak teleport olabilirsin.");

			if(GetPlayerState(giveplayerid) == PLAYER_STATE_SPECTATING)
				return SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu birini izliyor.");

			GetPlayerPos(playerid, plocx, plocy, plocz);
			Streamer_UpdateEx(giveplayerid, plocx, plocy, plocz);
			SetPVarInt(playerid, "BeingTeleported", 1);

			if(GetPlayerState(giveplayerid) == 2)
			{
				TelePos[giveplayerid][0] = 0.0;
				TelePos[giveplayerid][1] = 0.0;
				fVehSpeed[giveplayerid] = 0.0;
				new tmpcar = GetPlayerVehicleID(giveplayerid);
				SetVehiclePos(tmpcar, plocx, plocy+4, plocz);
				LinkVehicleToInterior(GetPlayerVehicleID(giveplayerid), GetPlayerInterior(playerid));
				SetPlayerInterior(giveplayerid, GetPlayerInterior(playerid));
				SetVehicleVirtualWorld(GetPlayerVehicleID(giveplayerid), GetPlayerVirtualWorld(playerid));
				SetPlayerVirtualWorld(giveplayerid, GetPlayerVirtualWorld(playerid));
			}
			else
			{
				SetPlayerPos(giveplayerid,plocx,plocy+2, plocz);
			}

			SetPlayerInterior(giveplayerid, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(giveplayerid, GetPlayerVirtualWorld(playerid));
			new playeridvw = GetPlayerVirtualWorld(playerid);
			new playerint =  GetPlayerInterior(playerid);
			PlayerInfo[giveplayerid][pVW] = playeridvw;
			PlayerInfo[giveplayerid][pInt] = playerint;

			SendClientMessage(giveplayerid, COLOR_WHITE, "Inlandn!");
		}
		else
		{
			SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
		}

	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Geersiz oyuncu.");
	return 1;
}

CMD:beltasfaafsaasf(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /belt [Oyuncu ID/sim]");

		if(!IsPlayerConnected(giveplayerid))
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
			return SendClientMessage(playerid,COLOR_WHITE, "You can't belt a higher admin.");

		new
			Float:shealth;

		GetPlayerHealth(giveplayerid, shealth);
		SetPlayerHealth(giveplayerid, shealth-5);
		GetPlayerPos(giveplayerid, PlayerInfo[giveplayerid][pPos_x], PlayerInfo[giveplayerid][pPos_y], PlayerInfo[giveplayerid][pPos_z]);
		SetPlayerPos(giveplayerid, PlayerInfo[giveplayerid][pPos_x], PlayerInfo[giveplayerid][pPos_y], PlayerInfo[giveplayerid][pPos_z]-5);
		PlayerPlaySound(giveplayerid, 1130, PlayerInfo[giveplayerid][pPos_x], PlayerInfo[giveplayerid][pPos_y], PlayerInfo[giveplayerid][pPos_z]-5);
		format(string, sizeof(string), "AdminKomutu: %s was belted by %s",GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
		ABroadCast(COLOR_LIGHTRED,string,1);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:slap(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }

		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /slap [Oyuncu ID/sim]");

		if(!IsPlayerConnected(giveplayerid))
		    return SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");

		if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
			return SendClientMessage(playerid,COLOR_WHITE, "Senden yksek leveldeki admini tokatlayamazsn.");

		new
			Float:shealth;

		GetPlayerHealth(giveplayerid, shealth);
		SetPlayerHealth(giveplayerid, shealth-5);
		GetPlayerPos(giveplayerid, PlayerInfo[giveplayerid][pPos_x], PlayerInfo[giveplayerid][pPos_y], PlayerInfo[giveplayerid][pPos_z]);
		SetPlayerPos(giveplayerid, PlayerInfo[giveplayerid][pPos_x], PlayerInfo[giveplayerid][pPos_y], PlayerInfo[giveplayerid][pPos_z]+5);
		PlayerPlaySound(giveplayerid, 1130, PlayerInfo[giveplayerid][pPos_x], PlayerInfo[giveplayerid][pPos_y], PlayerInfo[giveplayerid][pPos_z]+5);
		format(string, sizeof(string), "AdminKomutu: %s adl oyuncu %s tarafndan tokatland.",GetPlayerNameEx(giveplayerid), GetPlayerNameEx(playerid));
		ABroadCast(COLOR_LIGHTRED,string,1);
	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:freeze(playerid, params[]) {
	if(PlayerInfo[playerid][pAdmin] >= 2) {
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	        return SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");

		new
			string[128],
			giveplayerid;

		if(sscanf(params, "u", giveplayerid))
			return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /serbestbirak [Oyuncu ID/sim]");

		if(IsPlayerConnected(giveplayerid)) {
			if(PlayerInfo[giveplayerid][pAdmin] > PlayerInfo[playerid][pAdmin])
				return SendClientMessage(playerid, COLOR_GRAD2, "Senden yksek leveldeki admini donduramazsn.");

			TogglePlayerControllable(giveplayerid, 0);
			SetPVarInt(giveplayerid, "IsFrozen", 1);
			format(string, sizeof(string), "AdminKomutu: %s adl oyuncu %s tarafndan donduruldu.",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
			ABroadCast(COLOR_LIGHTRED,string,1);
		}
	}
	else SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");

	return 1;
}

CMD:unfreeze(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 2)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new string[128], giveplayerid;
		if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /unfreeze [Oyuncu ID/sim]");


		if(IsPlayerConnected(giveplayerid))
		{
			DeletePVar(giveplayerid, "IsFrozen");
			TogglePlayerControllable(giveplayerid, 1);
			format(string, sizeof(string), "AdminKomutu: %s adl oyuncunun donmas  %s tarafndan kaldrld.",GetPlayerNameEx(giveplayerid),GetPlayerNameEx(playerid));
			ABroadCast(COLOR_LIGHTRED,string,1);
		}
		else
		{
			SendClientMessage(playerid, COLOR_WHITE, "Geersiz oyuncu.");
		}

	}
	else
	{
		SendClientMessage(playerid, COLOR_GRAD1, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:spec(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 1)
	{
		SendClientMessage(playerid, COLOR_GREY, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   	}
	if(strcmp(params, "off", true) == 0)
	{
		if(Spectating[playerid] > 0 && PlayerInfo[playerid][pAdmin] >= 1)
		{
			GettingSpectated[Spectate[playerid]] = 999;
			Spectating[playerid] = 0;
			Spectate[playerid] = 999;
			SetPVarInt(playerid, "SpecOff", 1);
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Kimseyi izlemiyorsun.");
			return 1;
		}
	}
	if(strcmp(params, "o", true) == 0)
	{
		if(Spectating[playerid] > 0 && PlayerInfo[playerid][pAdmin] >= 2)
		{
			GettingSpectated[Spectate[playerid]] = 999;
			Spectating[playerid] = 0;
			Spectate[playerid] = 999;
			SetPVarInt(playerid, "SpecOff", 1);
			TogglePlayerSpectating(playerid, false);
			SetCameraBehindPlayer(playerid);
			return 1;
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Kimseyi izlemiyorsun.");
			return 1;
		}
	}

	new giveplayerid;
	if(sscanf(params, "u", giveplayerid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /spec (oyuncu/off)");
	if(IsPlayerConnected(giveplayerid))
	{
		if(InsideTut[giveplayerid] >= 1)
		{
			SendClientMessage(playerid, COLOR_WHITE, "NOT: Bu oyuncu tantm izliyor. Airbreak tahmini yapmadan nce snrdan kmadklarna emin olun.");
		}
		if(GetPVarInt(giveplayerid, "PBM") > 0) SendClientMessage(playerid, COLOR_WHITE, "NOT: Bu oyuncu paintballda. Airbreak tahmini yapmadan nce snrdan kmadklarna emin olun.");
		if(Spectating[playerid] == 0)
		{
			new Float: pPositions[3];
			GetPlayerPos(playerid, pPositions[0], pPositions[1], pPositions[2]);
			SetPVarFloat(playerid, "SpecPosX", pPositions[0]);
			SetPVarFloat(playerid, "SpecPosY", pPositions[1]);
			SetPVarFloat(playerid, "SpecPosZ", pPositions[2]);
			SetPVarInt(playerid, "SpecInt", GetPlayerInterior(playerid));
			SetPVarInt(playerid, "SpecVW", GetPlayerVirtualWorld(playerid));
			if(IsPlayerInAnyVehicle(giveplayerid))
			{
				TogglePlayerSpectating(playerid, true);
				new carid = GetPlayerVehicleID(giveplayerid);
				PlayerSpectateVehicle(playerid, carid);
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
			}
			else
			{
				TogglePlayerSpectating(playerid, true);
				PlayerSpectatePlayer(playerid, giveplayerid);
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
			}
			GettingSpectated[giveplayerid] = playerid;
			Spectate[playerid] = giveplayerid;
			Spectating[playerid] = 1;
		}
		else
		{
			if(IsPlayerInAnyVehicle(giveplayerid))
			{
				TogglePlayerSpectating(playerid, true);
				new carid = GetPlayerVehicleID(giveplayerid);
				PlayerSpectateVehicle(playerid, carid);
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
			}
			else
			{
				TogglePlayerSpectating(playerid, true);
				PlayerSpectatePlayer(playerid, giveplayerid);
				SetPlayerInterior(playerid, GetPlayerInterior(giveplayerid));
				SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(giveplayerid));
			}
			GettingSpectated[Spectate[playerid]] = 999;
			GettingSpectated[giveplayerid] = playerid;
			Spectate[playerid] = giveplayerid;
			Spectating[playerid] = 1;
		}
	}
	else
	{
		SendClientMessage(playerid, COLOR_WHITE, "Hedef msait deil.");
	}
	return 1;
}

CMD:god(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 1)
	{
        SetPlayerHealth(playerid, 100000);
        SetPlayerArmour(playerid, 100000);
    }
	return 1;
}

CMD:adminler(playerid, params[])
{
	SendClientMessage(playerid, COLOR_ORANGE,"Online Yneticiler");
	for(new i=0;i<MAX_PLAYERS;i++)
	{
		if(IsPlayerConnected(i))
		{
			if(PlayerInfo[i][pAdmin] != 0 && PlayerInfo[i][pAdmin] < 10)
			{
				new string[256];
				new name[MAX_PLAYER_NAME];
				GetPlayerName(i,name,sizeof(name));
				if(AdminDuty[i] == 1)
				{
					format(string,sizeof(string),"{FFFFFF}%s (%s) - {48FC64}(banda : Evet) - (Msait)",name, RPALN(i));
					SendClientMessage(playerid,0x33AA33AA,string);
				}
				else if(AdminDuty[i] == 0)
				{
					format(string,sizeof(string),"{FFFFFF}%s (%s) - (banda: Hayr)",PlayerInfo[i][pAdminName], RPALN(i));
					SendClientMessage(playerid,0xFFFFFFFF,string);
				}
			}
		}
	}
	return 1;
}

CMD:dmpedit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}

	new string[128], choice[32], mapiconid, amount;
	if(sscanf(params, "s[32]dD", choice, mapiconid, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /dmpedit [name] [mapiconid] [(Optional)amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Position, MarkerType, Color, Delete");
		return 1;
	}

	if(mapiconid < 0 || mapiconid >= MAX_DMAPICONS)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Invalid Map Icon ID!");
	}

	if(strcmp(choice, "position", true) == 0)
	{
		GetPlayerPos(playerid, DMPInfo[mapiconid][dmpPosX], DMPInfo[mapiconid][dmpPosY], DMPInfo[mapiconid][dmpPosZ]);
		DMPInfo[mapiconid][dmpInt] = GetPlayerInterior(playerid);
		DMPInfo[mapiconid][dmpVW] = GetPlayerVirtualWorld(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "You have changed the position!");
		if(IsValidDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID])) DestroyDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID]);
		DMPInfo[mapiconid][dmpMapIconID] = CreateDynamicMapIcon(DMPInfo[mapiconid][dmpPosX], DMPInfo[mapiconid][dmpPosY], DMPInfo[mapiconid][dmpPosZ], DMPInfo[mapiconid][dmpMarkerType], DMPInfo[mapiconid][dmpColor], DMPInfo[mapiconid][dmpVW], DMPInfo[mapiconid][dmpInt], -1, 500.0);
		SaveDynamicMapIcons();
		format(string, sizeof(string), "%s has edited MapIconID %d's Position.", GetPlayerNameEx(playerid), mapiconid);
		Log("logs/dmpedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "delete", true) == 0)
	{
		SendClientMessage(playerid, COLOR_WHITE, "You have deleted the map icon!");
		DMPInfo[mapiconid][dmpPosX] = 0.0;
		DMPInfo[mapiconid][dmpPosY] = 0.0;
		DMPInfo[mapiconid][dmpPosZ] = 0.0;
		DMPInfo[mapiconid][dmpVW] = 0;
		DMPInfo[mapiconid][dmpInt] = 0;
		DMPInfo[mapiconid][dmpMarkerType] = 0;
		DMPInfo[mapiconid][dmpColor] = 0;
		SaveDynamicMapIcons();
		if(IsValidDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID])) DestroyDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID]);
		format(string, sizeof(string), "%s has deleted MapIconID %d.", GetPlayerNameEx(playerid), mapiconid);
		Log("logs/dmpedit.log", string);
		return 1;

	}
	else if(strcmp(choice, "markertype", true) == 0)
	{
		DMPInfo[mapiconid][dmpMarkerType] = amount;
		format(string, sizeof(string), "You have set the marker type to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);
		if(IsValidDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID])) DestroyDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID]);
		DMPInfo[mapiconid][dmpMapIconID] = CreateDynamicMapIcon(DMPInfo[mapiconid][dmpPosX], DMPInfo[mapiconid][dmpPosY], DMPInfo[mapiconid][dmpPosZ], DMPInfo[mapiconid][dmpMarkerType], DMPInfo[mapiconid][dmpColor], DMPInfo[mapiconid][dmpVW], DMPInfo[mapiconid][dmpInt], -1, 500.0);
		format(string, sizeof(string), "%s has edited MapIconID %d's Marker Type to %d.", GetPlayerNameEx(playerid), mapiconid, amount);
		Log("logs/dmpedit.log", string);
	}
	else if(strcmp(choice, "color", true) == 0)
	{
		DMPInfo[mapiconid][dmpColor] = amount;
		format(string, sizeof(string), "You have set the color to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);
		if(IsValidDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID])) DestroyDynamicMapIcon(DMPInfo[mapiconid][dmpMapIconID]);
		DMPInfo[mapiconid][dmpMapIconID] = CreateDynamicMapIcon(DMPInfo[mapiconid][dmpPosX], DMPInfo[mapiconid][dmpPosY], DMPInfo[mapiconid][dmpPosZ], DMPInfo[mapiconid][dmpMarkerType], DMPInfo[mapiconid][dmpColor], DMPInfo[mapiconid][dmpVW], DMPInfo[mapiconid][dmpInt], -1, 500.0);
		format(string, sizeof(string), "%s has edited MapIconID %d's Color to %d.", GetPlayerNameEx(playerid), mapiconid, amount);
		Log("logs/dmpedit.log", string);
	}
	SaveDynamicMapIcons();
	return 1;
}

CMD:dmpnext(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		SendClientMessage(playerid, COLOR_RED, "* Listing next available map icon...");
		for(new x;x<MAX_DMAPICONS;x++)
		{
		    if(DMPInfo[x][dmpMarkerType] == 0)
		    {
		        new string[128];
		        format(string, sizeof(string), "%d kullanma msait.", x);
		        SendClientMessage(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	return 1;
}

CMD:dmpnear(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 6)
	{
		SendClientMessage(playerid, COLOR_RED, "* Listing all map icons within 30 meters of you");
		new Float:X, Float:Y, Float:Z;
  		GetPlayerPos(playerid, X, Y, Z);
		for(new i;i<MAX_DMAPICONS;i++)
		{
			if(IsPlayerInRangeOfPoint(playerid, 30, DMPInfo[i][dmpPosX], DMPInfo[i][dmpPosY], DMPInfo[i][dmpPosZ]))
			{
				if(DMPInfo[i][dmpMarkerType] != 0)
				{
				    new string[128];
			    	format(string, sizeof(string), "MapIcon ID %d | %f from you", i, GetDistance(DMPInfo[i][dmpPosX], DMPInfo[i][dmpPosY], DMPInfo[i][dmpPosZ], X, Y, Z));
			    	SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:gotodmp(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 6)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}

	new mapiconid;
	if(sscanf(params, "d", mapiconid)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gotodmp [mapiconid]");

	if(mapiconid >= MAX_DMAPICONS || mapiconid < 0)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "KULLANIM: /gotodmp [mapiconid]");
		return 1;
	}
	SetPlayerPos(playerid, DMPInfo[mapiconid][dmpPosX], DMPInfo[mapiconid][dmpPosY], DMPInfo[mapiconid][dmpPosZ]);
	SetPlayerVirtualWorld(playerid, DMPInfo[mapiconid][dmpVW]);
	SetPlayerInterior(playerid, DMPInfo[mapiconid][dmpInt]);
	return 1;
}

CMD:ddnear(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_RED, "* 15 metre ierisindeki dinamik kaplar gsteriliyor.");
		new Float:X, Float:Y, Float:Z;
  		GetPlayerPos(playerid, X, Y, Z);
		for(new i;i<MAX_DDOORS;i++)
		{
  			 if(IsPlayerInRangeOfPoint(playerid, 15, DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]))
			{
				if(DDoorsInfo[i][ddDescription] != 0)
				{
				    new string[128];
			    	format(string, sizeof(string), "DynamicDoor ID %d | %f from you", i, GetDistance(DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ], X, Y, Z));
			    	SendClientMessage(playerid, COLOR_WHITE, string);
				}
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
	}
	return 1;
}

CMD:ddedit(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
   }

	new string[128], choice[32], doorid, amount;
	if(sscanf(params, "s[32]dD(1)", choice, doorid, amount))
	{
		SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ddedit [name] [doorid] [amount]");
		SendClientMessage(playerid, COLOR_GREY, "Kullanlabilir Isimler: Exterior, Interior, CustomInterior, CustomExterior, VIP");
		SendClientMessage(playerid, COLOR_GREY, "Gang, Faction, Wanted, Admin, VehicleAble, Color, PickupModel, Delete");
		if(PlayerInfo[playerid][pAdmin] >= 6)
		{
			SendClientMessage(playerid, COLOR_GREY, "NotEditable");
		}
		return 1;
	}

	if(doorid >= MAX_DDOORS)
	{
		SendClientMessage(playerid, COLOR_WHITE, "Invalid Door ID!");
		return 1;
	}

	if(strcmp(choice, "noteditable", true) == 0)
	{
	    if(PlayerInfo[playerid][pAdmin] >= 6)
	    {
			if(DDoorsInfo[doorid][ddNotEditable] == 0)
			{
				DDoorsInfo[doorid][ddNotEditable] = 1;
				SendClientMessage(playerid, COLOR_WHITE, "Door set to not editable (can no longer be edited)!");
		    }
			else
			{
				DDoorsInfo[doorid][ddNotEditable] = 0;
				SendClientMessage(playerid, COLOR_WHITE, "Door set to editable (can be edited again)!");
			}
			SaveDynamicDoors();
			format(string, sizeof(string), "%s has edited DoorID %d's NotEditable.", GetPlayerNameEx(playerid), doorid);
			Log("logs/ddedit.log", string);
		}
		return 1;
	}

	if(DDoorsInfo[doorid][ddNotEditable] == 1)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Bu kap Level 6 admin tarafndan editlenemez hale getirildi, deiiklik yapmak iin onlara ulan.");
	    return 1;
	}

	if(strcmp(choice, "interior", true) == 0)
	{
		GetPlayerPos(playerid, DDoorsInfo[doorid][ddInteriorX], DDoorsInfo[doorid][ddInteriorY], DDoorsInfo[doorid][ddInteriorZ]);
		GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddInteriorA]);
		DDoorsInfo[doorid][ddInteriorInt] = GetPlayerInterior(playerid);
		DDoorsInfo[doorid][ddInteriorVW] = GetPlayerVirtualWorld(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Interioru deitirdin.");
		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Interior.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "custominterior", true) == 0)
	{
		if(DDoorsInfo[doorid][ddCustomInterior] == 0)
		{
			DDoorsInfo[doorid][ddCustomInterior] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "Door set to custom interior!");
		}
		else
		{
			DDoorsInfo[doorid][ddCustomInterior] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Door set to normal (not custom) interior!");
		}
		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's CustomInterior.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "customexterior", true) == 0)
	{
		if(DDoorsInfo[doorid][ddCustomExterior] == 0)
		{
			DDoorsInfo[doorid][ddCustomExterior] = 1;
			SendClientMessage(playerid, COLOR_WHITE, "Door set to custom exterior!");
		}
		else
		{
			DDoorsInfo[doorid][ddCustomExterior] = 0;
			SendClientMessage(playerid, COLOR_WHITE, "Door set to normal (not custom) exterior!");
		}
		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's CustomExterior.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "exterior", true) == 0)
	{
		GetPlayerPos(playerid, DDoorsInfo[doorid][ddExteriorX], DDoorsInfo[doorid][ddExteriorY], DDoorsInfo[doorid][ddExteriorZ]);
		GetPlayerFacingAngle(playerid, DDoorsInfo[doorid][ddExteriorA]);
		DDoorsInfo[doorid][ddExteriorVW] = GetPlayerVirtualWorld(playerid);
		DDoorsInfo[doorid][ddExteriorInt] = GetPlayerInterior(playerid);
		SendClientMessage(playerid, COLOR_WHITE, "Exterior'u deitirdin.");
		//if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
		DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);
		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Exterior.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
	}
	else if(strcmp(choice, "donator", true) == 0)
	{
		DDoorsInfo[doorid][ddVIP] = amount;

		format(string, sizeof(string), "You have changed the Donator Level to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Donator Level.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "gang", true) == 0)
	{
		DDoorsInfo[doorid][ddGang] = amount;

		format(string, sizeof(string), "You have changed the Family to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Family.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "faction", true) == 0)
	{
		DDoorsInfo[doorid][ddFaction] = amount;

		format(string, sizeof(string), "You have changed the Faction to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Faction.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "admin", true) == 0)
	{
		DDoorsInfo[doorid][ddAdmin] = amount;

		format(string, sizeof(string), "You have changed the Admin Level to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Admin Level.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "wanted", true) == 0)
	{
		DDoorsInfo[doorid][ddWanted] = amount;

		format(string, sizeof(string), "You have changed the Wanted to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's Wanted.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "vehicleable", true) == 0)
	{
		DDoorsInfo[doorid][ddVehicleAble] = amount;

		format(string, sizeof(string), "You have changed the VehicleAble to %d.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s has edited DoorID %d's VehicleAble.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "color", true) == 0)
	{
		DDoorsInfo[doorid][ddColor] = amount;

		format(string, sizeof(string), "Kapnn rengini %d olarak deitirdin.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		//if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
		DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s, %d ID'li kapnn rengini deitirdi.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "pickupmodel", true) == 0)
	{
		DDoorsInfo[doorid][ddPickupModel] = amount;

		format(string, sizeof(string), "Pickup modelini %d olarak deitirdiniz.", amount);
		SendClientMessage(playerid, COLOR_WHITE, string);

		//if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
		DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
		if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		CreateDynamicDoor(doorid);

		SaveDynamicDoors();
		format(string, sizeof(string), "%s, %d ID'li kapnn Pickupmodel'ini deitirdi.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	else if(strcmp(choice, "delete", true) == 0)
	{
	    if(DDoorsInfo[doorid][ddDescription] == 0) {
	        format(string, sizeof(string), "%d ID'sine sahip bir kap yok.", doorid);
			SendClientMessage(playerid, COLOR_WHITE, string);
			return 1;
	    }
    	//if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
    	DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
	    DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
		DDoorsInfo[doorid][ddDescription] = 0;
		DDoorsInfo[doorid][ddCustomInterior] = 0;
		DDoorsInfo[doorid][ddExteriorVW] = 0;
		DDoorsInfo[doorid][ddExteriorInt] = 0;
		DDoorsInfo[doorid][ddInteriorVW] = 0;
		DDoorsInfo[doorid][ddInteriorInt] = 0;
		DDoorsInfo[doorid][ddExteriorX] = 0;
		DDoorsInfo[doorid][ddExteriorY] = 0;
		DDoorsInfo[doorid][ddExteriorZ] = 0;
		DDoorsInfo[doorid][ddExteriorA] = 0;
		DDoorsInfo[doorid][ddInteriorX] = 0;
		DDoorsInfo[doorid][ddInteriorY] = 0;
		DDoorsInfo[doorid][ddInteriorZ] = 0;
		DDoorsInfo[doorid][ddInteriorA] = 0;
		DDoorsInfo[doorid][ddCustomExterior] = 0;
		DDoorsInfo[doorid][ddVIP] = 0;
		DDoorsInfo[doorid][ddGang] = 0;
		DDoorsInfo[doorid][ddFaction] = 0;
		DDoorsInfo[doorid][ddAdmin] = 0;
		DDoorsInfo[doorid][ddWanted] = 0;
		DDoorsInfo[doorid][ddVehicleAble] = 0;
		DDoorsInfo[doorid][ddColor] = 0;
		DDoorsInfo[doorid][ddPass] = 0;
		DDoorsInfo[doorid][ddLocked] = 0;
		DDoorsInfo[doorid][ddNotEditable] = 0;
		SaveDynamicDoors();
		format(string, sizeof(string), "%d ID'li kapy sildin.", doorid);
		SendClientMessage(playerid, COLOR_WHITE, string);
		format(string, sizeof(string), "%s, %d ID'li kapy sildi.", GetPlayerNameEx(playerid), doorid);
		Log("logs/ddedit.log", string);
		return 1;
	}
	return 1;
}

CMD:ddnext(playerid, params[])
{
    if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		SendClientMessage(playerid, COLOR_RED, "* Sradaki kullanlabilecek dinamik kap listesi...");
		for(new x;x<MAX_DDOORS;x++)
		{
		    if(DDoorsInfo[x][ddDescription] == 0)
		    {
		        new string[128];
		        format(string, sizeof(string), "%d kullanma msait.", x);
		        SendClientMessage(playerid, COLOR_WHITE, string);
		        break;
			}
		}
	}
	else
	{
	    SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	return 1;
}

CMD:ddname(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");
		return 1;
	}
	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}

	new string[128], doorid, doorname[128];

	if(sscanf(params, "ds[128]", doorid, doorname)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ddname [doorid] [name]");

	if(DDoorsInfo[doorid][ddNotEditable] == 1)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Bu kap Level 6 admin tarafndan editlenemez hale getirildi, deiiklik yapmak iin onlara ulan.");
	    return 1;
	}

	format(DDoorsInfo[doorid][ddDescription], 128, "%s", doorname);
	SendClientMessage(playerid, COLOR_WHITE, "Kapnn ismini deitirdiniz.");
	//if(IsValidDynamicPickup(DDoorsInfo[doorid][ddPickupID])) DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
	DestroyPickup(DDoorsInfo[doorid][ddPickupID]);
	if(IsValidDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID])) DestroyDynamic3DTextLabel(DDoorsInfo[doorid][ddTextID]);
	CreateDynamicDoor(doorid);
	SaveDynamicDoors();

	format(string, sizeof(string), "%s, %d ID'li kapnn ismini %s olarak deitirdi.", GetPlayerNameEx(playerid), doorid, doorname);
	Log("logs/ddedit.log", string);
	return 1;
}

CMD:lockdoor(playerid, params[])
{
    for(new i = 0; i < sizeof(DDoorsInfo); i++) {
        if(IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW] || IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW]) {
        	if(DDoorsInfo[i][ddPass] < 1)
                return SendClientMessage(playerid, COLOR_GREY, "Bu kapnn kitlenmesi mmkn deil.");
         	if(strcmp(DDoorsInfo[i][ddPass], "Yok", true) == 0)
                return SendClientMessage(playerid, COLOR_GREY, "Bu kapnn kitlenmesi mmkn deil.");

			ShowPlayerDialogEx(playerid, DOORLOCK, DIALOG_STYLE_INPUT, "Kap Gvenlii","Bu kapnn ifresini girin.","Giri","Iptal");
			SetPVarInt(playerid, "Door", i);
		}
	}
	return 1;
}

CMD:ddpass(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] < 5)
		return SendClientMessage(playerid, COLOR_GRAD2, "Bu komutu kullanma yetkiniz yok!");

	if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
 	{
  		SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
		return 1;
	}

	new string[128],
		doorid,
		doorpass[24];

	if(sscanf(params, "ds[24]", doorid, doorpass)) { SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /ddpass [doorid] [pass]"); SendClientMessage(playerid, COLOR_WHITE, "To remove the password on the door set the password to 'none' "); return 1; }


	if(DDoorsInfo[doorid][ddNotEditable] == 1)
	{
	    SendClientMessage(playerid, COLOR_WHITE, "Bu kap Level 6 admin tarafndan editlenemez hale getirildi, deiiklik yapmak iin onlara ulan.");
	    return 1;
	}

	format(DDoorsInfo[doorid][ddPass], 24, "%s", doorpass);
	SendClientMessage(playerid, COLOR_WHITE, "Bu kapnn ifresini deitirdin.");
	SaveDynamicDoors();
	format(string, sizeof(string), "%s, %d ID'li kapnn ifresini %s olarak deitirdi.", GetPlayerNameEx(playerid), doorid, doorpass);
	Log("logs/ddedit.log", string);
	return 1;
}

CMD:goindoor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new doornum;
		if(sscanf(params, "d", doornum)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /goindoor [kapinumarasi]");

		Streamer_UpdateEx(playerid, DDoorsInfo[doornum][ddInteriorX],DDoorsInfo[doornum][ddInteriorY],DDoorsInfo[doornum][ddInteriorZ]);
		SetPlayerInterior(playerid,DDoorsInfo[doornum][ddInteriorInt]);
		SetPlayerPos(playerid,DDoorsInfo[doornum][ddInteriorX],DDoorsInfo[doornum][ddInteriorY],DDoorsInfo[doornum][ddInteriorZ]);
		SetPlayerFacingAngle(playerid,DDoorsInfo[doornum][ddInteriorA]);
		if(DDoorsInfo[doornum][ddCustomInterior])
		{
			LoadObjectsForPlayer(playerid);
		}
		PlayerInfo[playerid][pInt] = DDoorsInfo[doornum][ddInteriorInt];
		PlayerInfo[playerid][pVW] = DDoorsInfo[doornum][ddInteriorVW];
		SetPlayerVirtualWorld(playerid, DDoorsInfo[doornum][ddInteriorVW]);
	}
	return 1;
}

CMD:gotodoor(playerid, params[])
{
	if(PlayerInfo[playerid][pAdmin] >= 4)
	{
		if(AdminDuty[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6)
	    {
	        SendClientMessage(playerid,COLOR_WHITE, "Admin olarak grevde deilsin.");
			return 1;
	    }
		new doornum;
		if(sscanf(params, "d", doornum)) return SendClientMessage(playerid, COLOR_WHITE, "KULLANIM: /gotodoor [doornumber]");

		Streamer_UpdateEx(playerid, DDoorsInfo[doornum][ddExteriorX],DDoorsInfo[doornum][ddExteriorY],DDoorsInfo[doornum][ddExteriorZ]);
		if(DDoorsInfo[doornum][ddCustomExterior])
		{
			LoadObjectsForPlayer(playerid);
		}
		SetPlayerInterior(playerid,DDoorsInfo[doornum][ddExteriorInt]);
		SetPlayerPos(playerid,DDoorsInfo[doornum][ddExteriorX],DDoorsInfo[doornum][ddExteriorY],DDoorsInfo[doornum][ddExteriorZ]);
		SetPlayerFacingAngle(playerid,DDoorsInfo[doornum][ddExteriorA]);
		PlayerInfo[playerid][pInt] = DDoorsInfo[doornum][ddExteriorInt];
		SetPlayerVirtualWorld(playerid, DDoorsInfo[doornum][ddExteriorVW]);
		PlayerInfo[playerid][pVW] = DDoorsInfo[doornum][ddExteriorVW];
	}
	return 1;
}

CMD:gir(playerid, params[])
{
    if(GetPVarInt(playerid, "PBM") > 0) {
        SendClientMessage(playerid, COLOR_WHITE, "Arenadayken bunu yapamazsn!");
        return 1;
    }
    if(PlayerCuffed[playerid] >= 1)
	{
        SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
        return 1;
    }
    if(PlayerInfo[playerid][pJailed] > 0)
	{
        SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
        return 1;
    }

	new string[128];
    for(new i = 0; i < sizeof(DDoorsInfo); i++)
	{
        if(IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW])
		{
            if(DDoorsInfo[i][ddVIP] > 0 && PlayerInfo[playerid][pDonator] < DDoorsInfo[i][ddVIP]) {
                SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Yeterli VIP leveline sahip deilsin.");
                return 1;
            }

            if(DDoorsInfo[i][ddGang] > 0) {
                if(PlayerInfo[playerid][pGang] != DDoorsInfo[i][ddGang]) {
                    SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Bu kap bir ete/aileye zeldir.");
                    return 1;
                }
            }

            if(DDoorsInfo[i][ddFaction] > 0 && DDoorsInfo[i][ddFaction] != 1337) {
				if(PlayerInfo[playerid][pFaction] != DDoorsInfo[i][ddFaction])
				{
					SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Bu kap oluumlara zeldir.");
					return 1;
				}
            }

			if(DDoorsInfo[i][ddFaction] == 1337) {
				if(!IsACop(playerid) || PlayerInfo[playerid][pFaction] != 5)
				{
					SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Bu kap oluumlara zeldir.");
					return 1;
				}
            }

            if(DDoorsInfo[i][ddAdmin] > 0 && PlayerInfo[playerid][pAdmin] < DDoorsInfo[i][ddAdmin]) {
                SendClientMessage(playerid, COLOR_GRAD2, "eri girmek iin yeterli admin leveline sahip deilsin.");
                return 1;
            }

            if(DDoorsInfo[i][ddWanted] > 0 && PlayerInfo[playerid][pWantedLevel] != 0) {
                SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin, bu kap arananlar listesindekiler iin yasakl.");
                return 1;
            }

			if(DDoorsInfo[i][ddLocked] == 1) {
			    return SendClientMessage(playerid, COLOR_GRAD2, "Bu kap uanda kitli.");
			}

			format(string, sizeof(string), "* %s, %s adl yere girdi.", GetPlayerNameEx(playerid), DDoorsInfo[i][ddDescription]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
            PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
            PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
            SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
            if(DDoorsInfo[i][ddCustomInterior]) {
                LoadObjectsForPlayer(playerid);
            }
            if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
                SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
                LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
            }
            else {
                SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
                SetCameraBehindPlayer(playerid);
            }
			foreach(Player, x)
			{
                if(IsABoomboxNearby(DDoorsInfo[i][ddInteriorX] ,DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ], x) < 150.0 && DDoorsInfo[i][ddInteriorVW] == BoomboxInfo[x][bbVW] && DDoorsInfo[i][ddInteriorInt] == BoomboxInfo[x][bbInt])
				{
					PlayAudioStreamForPlayer(playerid, VehicleRadioListing[BoomboxInfo[x][bbStation]-1][radiourl], BoomboxInfo[x][bbPosX], BoomboxInfo[x][bbPosY], BoomboxInfo[x][bbPosZ], 50.0, 1);
				}
			}
            return Streamer_UpdateEx(playerid, DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
        }
    }
    for(new i = 0; i < sizeof(HouseInfo); i++)
	{
        if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ]))
		{
            if(HouseKey[playerid] == i || PlayerInfo[playerid][pHouse] == i || PlayerInfo[playerid][pHouse2] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pRenting] == i || strcmp(HouseInfo[i][hOwner], PlayerInfo[playerid][pMarriedTo],true) == 0)
			{
			    if(PlayerInfo[playerid][pHouse] == i || PlayerInfo[playerid][pHouse2] == i)
			    {
					format(string, sizeof(string), "* %s kendi evine girdi.", GetPlayerNameEx(playerid));
					ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			    }
			    else
			    {
					if(HouseInfo[i][hOwned] == 0) {
						format(string, sizeof(string), "* %s evin iine girdi.", GetPlayerNameEx(playerid));
						ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					} else {
						format(string, sizeof(string), "* %s, %s adl kiinin evine girdi.", GetPlayerNameEx(playerid), HouseInfo[i][hOwner]);
						ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					}
				}

                SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
                PlayerInfo[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
                PlayerInfo[playerid][pVW] = i+60000;
                SetPlayerVirtualWorld(playerid, i+60000);
                if(HouseInfo[i][hCustomInterior] == 1)
				{
                    LoadObjectsForPlayer(playerid);
                }
                SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorR]);
                SetCameraBehindPlayer(playerid);
                if(PlayerInfo[playerid][pHouse] == i || PlayerInfo[playerid][pHouse2] == i)
                {
                	GameTextForPlayer(playerid, "~w~Eve Hosgeldin", 5000, 1);
			 	}
 				foreach(Player, x)
				{
                	if(IsABoomboxNearby(HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ], x) < 150.0 && i+60000 == BoomboxInfo[x][bbVW] && HouseInfo[i][hHInteriorWorld] == BoomboxInfo[x][bbInt])
					{
						PlayAudioStreamForPlayer(playerid, VehicleRadioListing[BoomboxInfo[x][bbStation]-1][radiourl], BoomboxInfo[x][bbPosX], BoomboxInfo[x][bbPosY], BoomboxInfo[x][bbPosZ], 50.0, 1);
					}
				}
				Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
            }
            else
			{
                GameTextForPlayer(playerid, "~r~Kitli", 5000, 1);
            }
            return 1;
        }
    }

    // Hitman HQ
    if(IsPlayerInRangeOfPoint(playerid, 2.0,  1938.545898, 165.629531, 37.281250))
	{
        if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
            SetPlayerVirtualWorld(playerid, 666420);
            PlayerInfo[playerid][pVW] = 666420;
            SetPlayerInterior(playerid, 42);
            PlayerInfo[playerid][pInt] = 42;
            SetPlayerPos(playerid, 1277.019165, -758.428771, 5080.750000);
            SetPlayerFacingAngle(playerid, 358.16);
            SetCameraBehindPlayer(playerid);

    		LoadObjectsForPlayer(playerid);
   			SendClientMessage(playerid, COLOR_WHITE, "Cephanelik odasnda silah almak iin /siparis");
        }
    }

    // The Lubu Gentlemen's Club
    else if(IsPlayerInRangeOfPoint(playerid, 3.0,  511.817230, -1510.971679, 14.566996))
	{
		format(string, sizeof(string), "* %s, Scylla Bar'a girdi.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

 		SetPlayerVirtualWorld(playerid, 373737);
   		PlayerInfo[playerid][pVW] = 373737;
     	SetPlayerInterior(playerid, 37);
      	PlayerInfo[playerid][pInt] = 37;
       	SetPlayerPos(playerid, -1077.946533, 613.206665, 1116.507812);
        SetPlayerFacingAngle(playerid, 92.42);
        SetCameraBehindPlayer(playerid);

		LoadObjectsForPlayer(playerid);

		PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=242774", -1087.677978, 615.239807, 1116.507812, 40.0, 1);
    }

    // The Tableau Club
    else if(IsPlayerInRangeOfPoint(playerid, 3.0,  561.802795, -1506.722412, 14.548986))
	{
		format(string, sizeof(string), "* %s, Scylla Kulbne girdi.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

 		SetPlayerVirtualWorld(playerid, 363636);
   		PlayerInfo[playerid][pVW] = 363636;
     	SetPlayerInterior(playerid, 36);
      	PlayerInfo[playerid][pInt] = 36;
       	SetPlayerPos(playerid, 308.045654, 1053.886840, 1098.540039);
        SetPlayerFacingAngle(playerid, 267.57);
        SetCameraBehindPlayer(playerid);

		LoadObjectsForPlayer(playerid);

		PlayAudioStreamForPlayer(playerid, "http://188.132.234.206:8000/listen.pls", 321.139465, 1034.947753, 1098.914062, 120.0, 1);
    }

    // The Tableau Club (VIP ROOM)
    else if(IsPlayerInRangeOfPoint(playerid, 3.0,  307.904296, 1025.602294, 1098.540039))
	{
	    if(GetPlayerCash(playerid) >= 100)
	    {
			format(string, sizeof(string), "* %s, Scylla Kulb VIP odasna girdi.", GetPlayerNameEx(playerid));
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			GivePlayerCash(playerid, -100);
			GameTextForPlayer(playerid, "~r~-$100", 3000, 1);

 			SetPlayerVirtualWorld(playerid, 363636);
   			PlayerInfo[playerid][pVW] = 363636;
     		SetPlayerInterior(playerid, 36);
      		PlayerInfo[playerid][pInt] = 36;
       		SetPlayerPos(playerid, 293.066436, 1029.785278, 1104.560058);
        	SetPlayerFacingAngle(playerid, 352.47);
        	SetCameraBehindPlayer(playerid);
		 }
		 else
		 {
		    SendClientMessage(playerid, COLOR_GREY, " You do not have the cash for that.");
		 }
    }

    // Santa Maria Surfer's Lounge
    else if(IsPlayerInRangeOfPoint(playerid, 3.0,  387.958374, -1870.688110, 7.835937))
	{
		format(string, sizeof(string), "* %s, Santa Maria Srflerin Yeri'ne girdi.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

 		SetPlayerVirtualWorld(playerid, 353535);
   		PlayerInfo[playerid][pVW] = 353535;
     	SetPlayerInterior(playerid, 35);
      	PlayerInfo[playerid][pInt] = 35;
       	SetPlayerPos(playerid, 271.742034, 1074.419677, 5096.750000);
        SetPlayerFacingAngle(playerid, 86.54);
        SetCameraBehindPlayer(playerid);

		LoadObjectsForPlayer(playerid);

		PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=21585", 271.742034, 1074.419677, 5096.750000, 120.0, 1);
    }

	new vehicleid = GetPlayerVehicleID(playerid);
	new closestcar = GetClosestCar(playerid, vehicleid);
	if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && GetVehicleModel(closestcar) == 519)
	{
	    if(VehicleStatus{closestcar} == 1) return SendClientMessage(playerid, COLOR_WHITE, "Uak hasar grdnden dolay binemezsin.");
   		format(string, sizeof(string), "* %s adl kii Shamal model uaa yolcu olarak bindi.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
     	SetPlayerPos(playerid, 2.509036, 23.118730, 1199.593750);
     	SetPlayerFacingAngle(playerid, 82.14);
        SetCameraBehindPlayer(playerid);
		PlayerInfo[playerid][pVW] = closestcar;
		SetPlayerVirtualWorld(playerid, closestcar);
		PlayerInfo[playerid][pInt] = 1;
        SetPlayerInterior(playerid, 1);
		InsideShamal[playerid] = closestcar;
		SendClientMessage(playerid, COLOR_WHITE, "Uan kapsndan dar kmak iin /cik yaz. /camdanbak komutu ile dar bakabilirsin.");

		foreach(Player, x)
		{
 			if(IsABoomboxNearby(2.509036, 23.118730, 1199.593750, x) < 150.0 && closestcar == BoomboxInfo[x][bbVW] && BoomboxInfo[x][bbInt] == 1)
			{
				PlayAudioStreamForPlayer(playerid, VehicleRadioListing[BoomboxInfo[x][bbStation]-1][radiourl], BoomboxInfo[x][bbPosX], BoomboxInfo[x][bbPosY], BoomboxInfo[x][bbPosZ], 50.0, 1);
			}
		}
	}
    return 1;
}

CMD:cik(playerid, params[])
{
    if(GetPVarInt(playerid, "PBM") > 0) {
        SendClientMessage(playerid, COLOR_WHITE, "Arenadayken bunu yapamazsn!");
        return 1;
    }
    if(PlayerInfo[playerid][pJailed] > 0)
	{
        SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
        return 1;
    }
	new string[128];

    for(new i = 0; i <  sizeof(DDoorsInfo); i++) {
        if(IsPlayerInRangeOfPoint(playerid,3,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW])
		{
			format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
            PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
            SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
            PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
            if(DDoorsInfo[i][ddCustomExterior]) {
				LoadObjectsForPlayer(playerid);
            }
            if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
                SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
                LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
            }
            else {
                SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
                SetCameraBehindPlayer(playerid);
            }
            return Streamer_UpdateEx(playerid, DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
        }
    }
    for(new i = 0; i <  sizeof(HouseInfo); i++) {
        if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && (GetPlayerVirtualWorld(playerid) == i+60000))
		{
			format(string, sizeof(string), "* %s evden dar kt.", GetPlayerNameEx(playerid));
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			SetPlayerInterior(playerid,0);
            PlayerInfo[playerid][pInt] = 0;
            if(HouseInfo[i][hCustomExterior])
			{
                LoadObjectsForPlayer(playerid);
            }
            SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
            SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorR]);
            SetCameraBehindPlayer(playerid);
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            return Streamer_UpdateEx(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
        }
    }

    // Hitman HQ
    if(IsPlayerInRangeOfPoint(playerid, 2.0, 1277.019165, -758.428771, 5080.750000) && (GetPlayerVirtualWorld(playerid) == 666420))
	{
        if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
		{
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid, 1938.545898, 165.629531, 37.281250);
            SetPlayerFacingAngle(playerid, 338.54);
            SetCameraBehindPlayer(playerid);
        }
    }

    // The Lubu Gentlemen's Club
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, -1077.946533, 613.206665, 1116.507812) && (GetPlayerVirtualWorld(playerid) == 373737))
	{
		format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		SetPlayerVirtualWorld(playerid, 0);
   		PlayerInfo[playerid][pVW] = 0;
     	SetPlayerInterior(playerid, 0);
      	PlayerInfo[playerid][pInt] = 0;
      	SetPlayerPos(playerid, 511.817230, -1510.971679, 14.566996);
       	SetPlayerFacingAngle(playerid, 272.11);
       	SetCameraBehindPlayer(playerid);

       	StopAudioStreamForPlayer(playerid);
    }

    // The Tableau Club
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 308.045654, 1053.886840, 1098.540039) && (GetPlayerVirtualWorld(playerid) == 363636))
	{
		format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		SetPlayerVirtualWorld(playerid, 0);
   		PlayerInfo[playerid][pVW] = 0;
     	SetPlayerInterior(playerid, 0);
      	PlayerInfo[playerid][pInt] = 0;
      	SetPlayerPos(playerid, 561.802795, -1506.722412, 14.548986);
       	SetPlayerFacingAngle(playerid, 86.78);
       	SetCameraBehindPlayer(playerid);

       	StopAudioStreamForPlayer(playerid);
    }
    // The Tableau Club (VIP ROOM)
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 293.066436, 1029.785278, 1104.560058) && (GetPlayerVirtualWorld(playerid) == 363636))
	{
 		SetPlayerVirtualWorld(playerid, 363636);
   		PlayerInfo[playerid][pVW] = 363636;
     	SetPlayerInterior(playerid, 36);
      	PlayerInfo[playerid][pInt] = 36;
      	SetPlayerPos(playerid, 307.904296, 1025.602294, 1098.540039);
       	SetPlayerFacingAngle(playerid, 264.06);
       	SetCameraBehindPlayer(playerid);
    }
    // Santa Maria Surfer's Lounge
    else if(IsPlayerInRangeOfPoint(playerid, 3.0, 271.742034, 1074.419677, 5096.750000) && (GetPlayerVirtualWorld(playerid) == 353535))
	{
		format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
		ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

		SetPlayerVirtualWorld(playerid, 0);
   		PlayerInfo[playerid][pVW] = 0;
     	SetPlayerInterior(playerid, 0);
      	PlayerInfo[playerid][pInt] = 0;
      	SetPlayerPos(playerid, 387.958374, -1870.688110, 7.835937);
       	SetPlayerFacingAngle(playerid, 89.99);
       	SetCameraBehindPlayer(playerid);

       	StopAudioStreamForPlayer(playerid);
    }
    // Shamal
    else if(InsideShamal[playerid] != INVALID_VEHICLE_ID && IsPlayerInRangeOfPoint(playerid,3,2.509036, 23.118730, 1199.593750))
	{
        format(string, sizeof(string), "* %s, Shamal model uaktan dar kt.", GetPlayerNameEx(playerid));
        ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

        if(InsideShamal[playerid] == INVALID_VEHICLE_ID || GetVehicleModel(InsideShamal[playerid]) != 519) {
            PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
            GivePlayerValidWeapon(playerid, 46, 60000);
            SetPlayerPos(playerid, 0.000000, 0.000000, 420.000000);
        }
        else {
            new Float:X, Float:Y, Float:Z;
            GetVehiclePos(InsideShamal[playerid], X, Y, Z);
            SetPlayerPos(playerid, X-4, Y-2.3, Z);

            new Float:XB, Float:YB, Float:ZB;
            GetVehiclePos(InsideShamal[playerid], XB, YB, ZB);
            if(ZB > 50.0) {
                PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
                GivePlayerValidWeapon(playerid, 46, 60000);
            }
        }

        PlayerInfo[playerid][pVW] = 0;
        SetPlayerVirtualWorld(playerid, 0);
        PlayerInfo[playerid][pInt] = 0;
        SetPlayerInterior(playerid, 0);
        InsideShamal[playerid] = INVALID_VEHICLE_ID;
    }
    return 1;
}

main()
{
	print("\n----------------------------------");
	print("Master RPG");
	print("----------------------------------\n");
}

forward OnPlayerStatsUpdate(playerid);
public OnPlayerStatsUpdate(playerid) {
	#pragma unused playerid
	return 1;
}

forward OnPlayerLogin(playerid,password[]);
public OnPlayerLogin(playerid,password[]) {
	#pragma unused playerid
	#pragma unused password
	return 1;
}

forward OnPlayerOfflineLogin(playername[]);
public OnPlayerOfflineLogin(playername[]) {
	#pragma unused playername
}

forward OnPlayerOfflineSave(playername[]);
public OnPlayerOfflineSave(playername[]) {
	#pragma unused playername
	return 1;
}

forward OnPlayerRegister(playerid, password[]);
public OnPlayerRegister(playerid, password[]) {
	if(IsPlayerConnected(playerid)) {
		new
		    szPlayerName[MAX_PLAYER_NAME],
		    szPlayerName2[MAX_PLAYER_NAME],
		    szQuery[225];

		GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME);

		mysql_real_escape_string(szPlayerName, szPlayerName2, g_MySQLConnections[0]);

		SetPVarString(playerid, "password", password);

		// Set the variable to logged in so we aren't cockblocked by SaveAccount()
		gPlayerLogged[playerid] = 1;

		format(szQuery, sizeof(szQuery), "INSERT INTO players (Username, Password) VALUES('%s', '%s')", szPlayerName2, password);
		mysql_query(szQuery, THREAD_REGISTER_ACCOUNT, playerid, g_MySQLConnections[0]);
		PlayerInfo[playerid][pLevel] = 1;

	}
	return 1;
}

stock AntiDeAMX()
{
    new a[][] = {
        "Unarmed (Fist)",
        "Brass K"
    };
    #pragma unused a
}

#if defined TREASURE_HUNT_ENABLED
stock SetRandomHuntPos() {
	iHuntLocation = random(sizeof(fTreasureHuntLS));

	DestroyPickup(iHuntPickup);
	DestroyDynamic3DTextLabel(lHunt);
	iHuntPickup = CreatePickup(1279, 1, fTreasureHuntLS[iHuntLocation][0], fTreasureHuntLS[iHuntLocation][1], fTreasureHuntLS[iHuntLocation][2], 0);
	lHunt = CreateDynamic3DTextLabel("Hediyebulma Etkinlii\nGiris yapin", COLOR_YELLOW, fTreasureHuntLS[iHuntLocation][0], fTreasureHuntLS[iHuntLocation][1], fTreasureHuntLS[iHuntLocation][2]+0.5, 20.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, -1, -1, -1, 10.0);
	return 1;
}

stock PrizeMenu(playerid) {
	ShowPlayerDialogEx(playerid, DIALOG_HUNT_PRIZE, DIALOG_STYLE_LIST, "Hediyebulma dl Seenei", "20 pot, 10 crack\n2,000 materyal\nDesert Eagle\n1 saygi puani\n", "Tamam", "Iptal");
	return 1;
}

stock AskHuntQuestion(playerid) {
	if(!IsPlayerConnected(playerid))
	    return 0;

	SetPVarInt(playerid, "HuntQ", random(10));

	SendClientMessage(playerid, COLOR_WHITE, "To unlock the prize, you must answer a question. If you get the answer wrong, the treasure will be moved before you have a chance to try again.");
	switch(GetPVarInt(playerid, "HuntQ")) {
	    case 0: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "What was the date the server opened? (EU/US timezone)", "January 6th\nJanuary 3rd\nJanuary 5th\nJanuary 8th", "Tamam", "Iptal");
	    case 1: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "What is Jay Chawla's favourite catchphrase?", "Game on\nPlug in\nMastication for the Nation\nMatch on\n", "Tamam", "Iptal");
	    case 2: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "Do you know a man named Miles Thorson?", "Yes, we're good friends\nHe kicked my dog\nNo, He's an imaginary character from The Mentalist\n", "Tamam", "Iptal");
	    case 3: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "When was the theoretical physicist Albert Einstein born?", "December 25th, 2011\nMarch 14th, 1879\nApril 18th, 1955\nJanuary 4th, 1804", "Tamam", "Iptal");
	    case 4: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "What is the 'sizeof' function in Pawn?", "A stock function\nA forwarded function\nA macro which gets the size of a string\nThe name of a cereal", "Tamam", "Iptal");
	    case 5: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "What is the callsign of the Campo's team in Battlefield 3?", "Kimball 4-6\nMisfit 1-3\nFitmissie 69\nActual 1-3", "Tamam", "Iptal");
	    case 6: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "In the popular US TV show 'Psych', what is the name of the sidekick?", "Burton Guster\nCarlton Lassiter\nJames Roday\nHenry Spencer", "Tamam", "Iptal");
	    case 7: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "Which company developed the iPhone?", "Grapefruit\nOrange\nApple\nBlackBerry", "Tamam", "Iptal");
	    case 8: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "What symbol is used for hashtags on Twitter?", "#\n$\n�\n&", "Tamam", "Iptal");
	    case 9: ShowPlayerDialogEx(playerid, DIALOG_HUNT_QUESTION, DIALOG_STYLE_LIST, "3 robbers robbed a store. Once they came out, they were totally changed, but they still continued robbing. Why?", "Developers, developers, developers, developers (cont.)\nThey changed their clothes, not their ways\nThey used Harry Potter's cloak of invisibility\nThe sun is shining everyday", "Tamam", "Iptal");
	}

	return 1;
}
#endif

public OnGameModeInit()
{
    new
		string[42],
		time[3];

    #if defined TREASURE_HUNT_ENABLED
    	SetRandomHuntPos();
    #endif

	AntiDeAMX();
	Streamer_TickRate(125);

	SetGameModeText("SR:RP " SERVER_VERSION);

	ManualVehicleEngineAndLights();
	EnableStuntBonusForAll(0);
	DisableInteriorEnterExits();
	SetNameTagDrawDistance(45.0);
	AllowInteriorWeapons(1);
	SetWeather(2);
	LoadGates();
	SkinList = LoadModelSelectionMenu("SkinList.txt");

	//------------------------------------------------------------------------------------------------------------
	// MySQL
	//------------------------------------------------------------------------------------------------------------

	if(!IsBETAServer()) {
		g_MySQLConnections[0] = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
	} else
	g_MySQLConnections[0] = mysql_connect(SQL_HOST, SQL_USER, SQL_DB, SQL_PASS);
	if(mysql_ping() == 1)
	{
		mysql_debug(0);// SQL Log - 0: Off / 1: On
		printf("[MySQL]: `%s` Veritabanina baglanti kuruldu, sunucu aciliyor.", SQL_DB);
	}
	else
	{
		printf("[MySQL-HATA]: `%s` Veritabanina baglanti kurulamadi, Sunucu kapatiliyor.", SQL_DB);
		SendRconCommand("exit");
		return 0;
	}
	mysql_debug(0);

	mysql_query("set session query_cache_type=0;", THREAD_NO_RESULT, 0, g_MySQLConnections[0]);

	// Dynamic systems
	LoadPoints();
	LoadFamilies();
	LoadHouses();
	LoadDynamicDoors();
	LoadDynamicMapIcons();
	LoadcDealerships();
	Misc_Load();

	for(new f = 0; f < sizeof(FamilyInfo); f++)
	{
		for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
		{
		    FamilyVehicleInfo[f][fv][fvModelId] = 0;
			FamilyVehicleInfo[f][fv][fvSpawnx] = 0.0;
			FamilyVehicleInfo[f][fv][fvSpawny] = 0.0;
			FamilyVehicleInfo[f][fv][fvSpawnz] = 0.0;
			FamilyVehicleInfo[f][fv][fvSpawna] = 0.0;
			FamilyVehicleInfo[f][fv][fvPaintJob] = -1;
			FamilyVehicleInfo[f][fv][fvColor1] = 126;
			FamilyVehicleInfo[f][fv][fvColor2] = 126;
			FamilyVehicleInfo[f][fv][fvPrice] = 0;
			FamilyVehicleInfo[f][fv][fvFuel] = 100.00;
	    	FamilyVehicleInfo[f][fv][fvId] = INVALID_VEHICLE_ID;
		}
	}

	LoadFamiliesHQ();
	ClearReports();

	for(new h = 0; h < sizeof(FamilyInfo); h++)
	{
		if(FamilyInfo[h][FamilyUSafe] > 0)
		{
			FamilyInfo[h][FamilyPickup] = CreatePickup(1239, 23, FamilyInfo[h][FamilySafe][0], FamilyInfo[h][FamilySafe][1], FamilyInfo[h][FamilySafe][2], -1);
		}
		if(FamilyInfo[h][FamilyEntrance][0] != 0.0 && FamilyInfo[h][FamilyEntrance][1] != 0.0)
		{
		    FamilyInfo[h][FamilyEntrancePickup] = CreatePickup(1318, 23, FamilyInfo[h][FamilyEntrance][0], FamilyInfo[h][FamilyEntrance][1], FamilyInfo[h][FamilyEntrance][2], -1);
			format(string, sizeof(string), "%s", FamilyInfo[h][FamilyName]);
			FamilyInfo[h][FamilyEntranceText] = CreateDynamic3DTextLabel(string,COLOR_YELLOW,FamilyInfo[h][FamilyEntrance][0], FamilyInfo[h][FamilyEntrance][1], FamilyInfo[h][FamilyEntrance][2]+0.6,4.0);
		}
		LoadGangVehicles(h);
	}

	for(new h = 0; h < sizeof(Points); h++)
	{
		if(Points[h][Type] == 3)
		{
			format(string, sizeof(string), " ALINABILIR POT: %d gram.", Points[h][Stock]);
			Points[h][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], 4.0);
			Points[h][CratePoint] = 1;
		}
		else if(Points[h][Type] == 4)
		{
			format(string, sizeof(string), " ALINABILIR CRACK: %d gram.", Points[h][Stock]);
			Points[h][TextLabel] = CreateDynamic3DTextLabel(string, COLOR_YELLOW, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], 4.0);
			Points[h][CratePoint] = 2;
		}
		CreatePickup(1239, 23, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz], -1);
	}

	new text_info[128];
	for(new d = 0; d < sizeof(CarDealershipInfo); d++)
	{
		if(CarDealershipInfo[d][cdEntranceX] != 0.0 && CarDealershipInfo[d][cdEntranceY] != 0.0)
		{
			CarDealershipInfo[d][cdPickupID] = CreatePickup(1272, 1, CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ], -1);
			if(CarDealershipInfo[d][cdOwned])
			{
	            format(text_info, sizeof(text_info),"%s arac bayisi\nSahibi: %s\nID: %d", CarDealershipInfo[d][cdMessage], CarDealershipInfo[d][cdOwner], d);
	            CarDealershipInfo[d][cdTextLabel] = CreateDynamic3DTextLabel(text_info,COLOR_LIGHTBLUE,CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]+0.5,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
			else
			{
	            format(text_info, sizeof(text_info),"% arac bayisi satilik\nUcret: %d\nID: %d", CarDealershipInfo[d][cdMessage], CarDealershipInfo[d][cdPrice], d);
	            CarDealershipInfo[d][cdTextLabel] = CreateDynamic3DTextLabel(text_info,COLOR_YELLOW,CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]+0.5,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
			}
		}
		for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
	    {
			if(CarDealershipInfo[d][cdVehicleModel][v] != 0)
			{
		        new carcreated = CreateVehicle(CarDealershipInfo[d][cdVehicleModel][v], CarDealershipInfo[d][cdVehicleSpawnX][v], CarDealershipInfo[d][cdVehicleSpawnY][v], CarDealershipInfo[d][cdVehicleSpawnZ][v], CarDealershipInfo[d][cdVehicleSpawnAngle][v], 0, 0, 6);
		        format(text_info, sizeof(text_info), "%s Satilik | Ucret: %d", GetVehicleName(carcreated), CarDealershipInfo[d][cdVehicleCost][v]);
                CarDealershipInfo[d][cdVehicleLabel][v] = CreateDynamic3DTextLabel(text_info,COLOR_LIGHTBLUE,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
                CarDealershipInfo[d][cdVehicleId][v] = carcreated;
			}
		}
	}

	gettime(time[0], time[1], time[2]);
	FixHour(time[0]);
	PSeconds = 1;
	PMinutes = time[1];
	PHours = time[0];
	time[0] = shifthour;
	ghour = shifthour;
	SetWorldTime(ghour);

	for(new i=0;i<MAX_VEHICLES;i++)
	{
	    Fuel[i] = 100;
 	}

	for(new i = 0; i <= sizeof(Peds)-1; i++)
	{
		AddPlayerClass(Peds[i][0],1958.3783,1343.1572,1100.3746,269.1425,-1,-1,-1,-1,-1,-1);
	}
	for(new i = 0; i < sizeof(CreatedCars); i++)
	{
		CreatedCars[i] = INVALID_VEHICLE_ID;
	}

	SetTimer("FotoMultaON", 100, 1);
	CrearFotoMulta(1476.9470, -1737.6896, 13.5469, 0, 0, 88.5490, 15, 80); // Sondaki (80) hz limiti.
	CrearFotoMulta(1541.3860,-1726.9974,13.3828, 0, 0, 90.6179, 15, 100); //
    CrearFotoMulta(1540.1509,-1597.2527,13.3828, 0, 0, 92.8739, 15, 100); //
  /*  CrearFotoMulta(2107.5566,-1584.5403,25.4732,1.3404); //
    CrearFotoMulta(1956.5975,-2154.5842,13.5469,180.8587); //
    CrearFotoMulta(1431.6222,-2125.7268,13.5469,100.3940); //
    CrearFotoMulta(634.2678,-1738.1862,13.4959,81.8445); //
    CrearFotoMulta(643.9243,-1214.3870,18.2813,304.6891); //
    CrearFotoMulta(1826.4525,-1779.4423,13.3828,184.0779); // */  //DEAKTF

    Foto = TextDrawCreate(-20.000000,2.000000,"|");
	TextDrawUseBox(Foto,1);
	TextDrawBoxColor(Foto,0xFFFFFF69);
	TextDrawTextSize(Foto,660.000000,22.000000);
	TextDrawAlignment(Foto,0);
	TextDrawBackgroundColor(Foto,0xFFFFFF69);
	TextDrawFont(Foto,3);
	TextDrawLetterSize(Foto,1.000000,52.200000);
	TextDrawColor(Foto,0xFFFFFF69);
	TextDrawSetOutline(Foto,1);
	TextDrawSetProportional(Foto,1);
	TextDrawSetShadow(Foto,1);

	//LSPD Button
	lspdcopsonly = CreateButton(244.90686035156, 72.328125, 1003.9609375, 3.0); // ONLYS ONLY
	lspdeveryone = CreateButton(244.92, 73.42, 1004.27, 92.0); // People, ^^==LSPD

	CreateDynamicObject(2886, 244.90686035156, 72.328125, 1003.9609375,0,0,3.0, 20002); //lspdcopsonly button
	CreateDynamicObject(2886, 244.92, 73.42, 1004.27,0,0,92.0, 20002); //lspdeveryone button

	lspddoor1 = CreateDynamicObject(1569, 246.35150146484,72.547714233398,1002.640625, 0.000000, 0.000000, 0.000000);
	lspddoor2 = CreateDynamicObject(1569, 245.03300476074,72.568511962891,1002.640625, 0.000000, 0.000000, 0.000000);
	
	//----------------[SPAWN MAP]----------------//
/* CreateDynamicObject(3524, 2092.02979, -1863.94922, 12.68264,   0.00000, 0.00000, 89.70000);
CreateDynamicObject(3524, 2091.85132, -1867.99695, 12.68264,   0.00000, 0.00000, 89.70000);
CreateDynamicObject(9833, 2106.70752, -1866.33252, 12.54522,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 2095.32910, -1862.86804, 14.46768,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3877, 2100.04980, -1862.95166, 14.46768,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(650, 2108.49316, -1868.18811, 12.54792,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(650, 2108.40796, -1864.54614, 12.54792,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19466, 2092.67310, -1863.50330, 15.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19466, 2094.90088, -1863.50330, 15.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19466, 2097.12939, -1863.50330, 15.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19466, 2099.36646, -1863.50330, 15.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19466, 2101.56567, -1863.50500, 15.42480,   0.00000, 0.00000, 90.00000);
CreateDynamicObject(19466, 2102.67725, -1864.61768, 15.42480,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19466, 2102.67725, -1864.61768, 13.49168,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19466, 2102.67944, -1866.76685, 13.49170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 2097.48755, -1868.04395, 12.54380,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19466, 2102.67847, -1868.90588, 13.49170,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19466, 2102.67847, -1868.90588, 15.36872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19466, 2102.67944, -1866.76685, 15.36872,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19377, 2096.95020, -1868.23779, 16.30740,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 2096.94092, -1868.00476, 12.54380,   0.00000, 90.00000, 0.00000);
CreateDynamicObject(19377, 2097.45972, -1868.30408, 16.30740,   0.00000, 90.00000, 0.00000); */

    
    //------------------------SAN News ALTI BUG GIDERILDI-------------------------------
    CreateDynamicObject(980, 768.20789, -1332.62781, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 756.72198, -1332.66602, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 745.19928, -1332.62927, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 735.28851, -1332.60620, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 736.09167, -1337.79016, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.53021, -1337.78064, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 759.00690, -1337.78015, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 768.28497, -1337.82959, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 779.74017, -1333.12097, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 779.72778, -1337.84216, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.28430, -1343.38574, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.19281, -1337.91931, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.18732, -1333.38232, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.27789, -1348.90967, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.31012, -1354.43091, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.28339, -1359.97534, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.36029, -1365.47314, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.35156, -1371.00732, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 735.92310, -1343.20471, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 735.89227, -1348.42041, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 735.82013, -1353.94824, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 735.90149, -1356.16162, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.38287, -1343.10156, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.40369, -1348.65405, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.35858, -1354.03943, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.30792, -1356.51453, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.35864, -1354.03943, 11.06927,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 747.30792, -1356.51453, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 737.96527, -1362.30615, 24.55220,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 748.90979, -1362.27014, 24.58220,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 748.89008, -1367.83936, 24.55220,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 748.85480, -1373.39600, 24.59720,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 748.87878, -1378.97534, 24.61220,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 748.84448, -1381.88428, 24.62720,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 737.60052, -1367.83044, 24.56720,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 737.28308, -1373.35657, 24.58220,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 737.40302, -1378.90356, 24.59720,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 737.31787, -1381.91858, 24.62720,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.36481, -1376.57922, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 781.36578, -1382.06958, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 770.03571, -1382.06494, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.74683, -1382.07935, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 770.09369, -1376.55151, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.72076, -1376.60352, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 769.91351, -1371.13757, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.58398, -1371.19788, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 770.13409, -1365.68604, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.93066, -1365.88049, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 770.09930, -1360.19983, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.91492, -1360.42419, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 770.02588, -1354.65356, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.68121, -1354.91565, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 769.75372, -1349.14941, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 769.97681, -1348.93237, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.35651, -1349.53015, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.34430, -1348.95032, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 769.96167, -1343.46924, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 769.96167, -1343.46924, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 769.96167, -1343.46924, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.66187, -1344.17444, 12.44630,   90.00000, 0.00000, 0.00000);
CreateDynamicObject(980, 758.64661, -1340.95337, 12.44630,   90.00000, 0.00000, 0.00000);
    

// ----------------------------------------------------------------------------------------
    
    
    //------------------------[ OGUZHAN MAP ]---------------------------------
    
    CreateDynamicObject(987, 1339.48364, -662.75226, 106.79475,   0.00000, 0.00000, 19.32000);
    CreateDynamicObject(987, 1328.22449, -666.63550, 106.79470,   0.00000, 0.00000, 19.32000);
   CreateDynamicObject(987, 1324.82410, -655.15997, 106.79470,   0.00000, 0.00000, -72.54000);
   CreateDynamicObject(19912, 1321.36560, -644.20880, 110.23476,   0.00000, 0.00000, 107.21999);
   CreateDynamicObject(19912, 1332.41077, -640.83154, 110.23476,   0.00000, 0.00000, 16.68004);
   CreateDynamicObject(987, 1314.36218, -640.61829, 113.01620,   0.00000, 0.00000, -71.10001);
   CreateDynamicObject(987, 1352.11292, -640.31378, 113.01620,   0.00000, 0.00000, -250.74004);
   CreateDynamicObject(987, 1325.62598, -636.82349, 113.01620,   0.00000, 0.00000, -161.04001);
   CreateDynamicObject(987, 1336.93652, -632.93982, 113.01620,   0.00000, 0.00000, -161.04001);
   CreateDynamicObject(987, 1348.26599, -629.04639, 113.01620,   0.00000, 0.00000, -161.04001);
   CreateDynamicObject(987, 1356.06262, -651.59998, 113.01620,   0.00000, 0.00000, -250.74004);
   CreateDynamicObject(987, 1359.91382, -662.81934, 113.01620,   0.00000, 0.00000, -250.74004);
   CreateDynamicObject(987, 1318.52063, -652.64758, 113.01620,   0.00000, 0.00000, -340.61990);
   CreateDynamicObject(987, 1329.78906, -648.66754, 113.01620,   0.00000, 0.00000, -340.61990);
   CreateDynamicObject(10244, 1344.74609, -658.34314, 109.52903,   0.00000, 0.00000, 17.99999);
   CreateDynamicObject(8674, 1354.82544, -664.55359, 114.65945,   0.00000, 0.00000, 17.94000);
   CreateDynamicObject(8674, 1354.82544, -664.55359, 117.56240,   0.00000, 0.00000, 17.94000);
   CreateDynamicObject(970, 1343.21863, -646.53058, 113.48179,   0.00000, 0.00000, -71.09997);
   CreateDynamicObject(970, 1344.54041, -650.40344, 113.48179,   0.00000, 0.00000, -71.09997);
   CreateDynamicObject(970, 1345.87952, -654.32996, 113.48179,   0.00000, 0.00000, -71.09997);
   CreateDynamicObject(970, 1340.51404, -645.29205, 113.48179,   0.00000, 0.00000, 19.86003);
   CreateDynamicObject(987, 1318.43127, -652.79828, 113.01620,   0.00000, 0.00000, -251.10004);
   CreateDynamicObject(1704, 1353.57910, -651.00916, 113.02927,   0.00000, 0.00000, -48.00000);
   CreateDynamicObject(1704, 1352.24084, -654.50293, 113.02927,   0.00000, 0.00000, -201.60011);
   CreateDynamicObject(1704, 1351.08301, -652.27411, 113.02927,   0.00000, 0.00000, 53.75998);
   CreateDynamicObject(1704, 1354.74231, -653.88831, 113.02927,   0.00000, 0.00000, -148.14020);
   CreateDynamicObject(1516, 1353.03906, -652.63116, 113.02943,   0.00000, 0.00000, 0.00000);
   CreateObject(19870, 1349.42139, -664.44604, 114.77671,   0.00000, 0.00000, 109.32000);
   CreateObject(19870, 1350.02295, -666.25348, 114.77671,   0.00000, 0.00000, 109.32000);
   CreateObject(19870, 1350.02295, -666.25348, 117.28769,   0.00000, 0.00000, 109.32000);
   CreateObject(19870, 1349.42139, -664.44604, 117.30616,   0.00000, 0.00000, 109.32000);
   CreateObject(19870, 1347.84961, -659.92572, 114.76783,   0.00000, 0.00000, 199.38008);
   CreateObject(19870, 1343.39673, -661.51654, 114.76783,   0.00000, 0.00000, 199.38008);
   
   // ------------------------------- TMPOBJID 'LER TSTUDIO -----------------------------------------------------------------------
     new tmpobjid;
    tmpobjid = CreateDynamicObject(19482, 1555.819091, -1677.510498, 17.323949, 0.000000, 0.000000, -179.499969, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Los Santos", 140, "Calibri", 30, 0, 0xFFFFFFFF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(19482, 1555.840820, -1677.726684, 17.040653, 0.000000, 0.000000, -179.699905, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Police Department", 140, "Calibri", 30, 0, 0xFFFFFFFF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(7090, 1554.909057, -1685.547607, 25.636882, 0.000000, 0.000000, -178.399963, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 5, 19058, "xmasboxes", "silk7-128x128", 0x00000000);
    tmpobjid = CreateDynamicObject(7090, 1554.630493, -1665.519287, 25.636882, 0.000000, 0.000000, -178.399963, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 5, 19058, "xmasboxes", "silk7-128x128", 0x00000000);
    new pdtexture;
pdtexture = CreateObject(3976, 1571.60156, -1675.75000, 35.67970, 360.00000, 360.00000, 360.00000);
SetObjectMaterial(pdtexture,1, 8675, "wddngchpl02", "shingles6",0);
SetObjectMaterial(pdtexture,2, 8675, "wddngchpl02", "shingles6",0);
SetObjectMaterial(pdtexture,3, 8675, "wddngchpl02", "shingles6",0);
SetObjectMaterial(pdtexture,4, 8675, "wddngchpl02", "shingles6",0);
SetObjectMaterial(pdtexture,5, 8675, "wddngchpl02", "shingles6",0);
SetObjectMaterial(pdtexture,6, 8675, "wddngchpl02", "shingles6",0);
SetObjectMaterial(pdtexture,12,8488, "flamingo1", "shopwindowlow2_256",0);

//-----------------------------------------------------------------------------------------------------------------------------

//--------------------------------------------------- GOVERNMENT --------------------------------------------
    tmpobjid = CreateDynamicObject(19482, 1490.245605, -1750.748046, 27.366878, 0.000000, 0.000000, 90.399986, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "LOS", 90, "Ariel", 70, 0, 0xFF0000FF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(19482, 1483.156494, -1750.817871, 27.406871, 0.000000, 0.000000, 88.799987, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "SANTOS", 90, "Ariel", 70, 0, 0xFF0000FF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(19482, 1477.335327, -1750.778686, 27.396890, 0.000000, 0.000000, 88.099990, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "GOVERNMENT", 90, "Ariel", 70, 0, 0xFF0000FF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(7090, 1465.893554, -1751.293334, 29.676889, 0.000000, 0.000000, 81.999977, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 4, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    SetDynamicObjectMaterial(tmpobjid, 5, 19058, "xmasboxes", "silk7-128x128", 0x00000000);
    tmpobjid = CreateDynamicObject(19482, 1466.628295, -1744.954956, 29.605886, -89.999931, 7.100009, -0.599999, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    tmpobjid = CreateDynamicObject(7090, 1496.243774, -1750.754760, 29.676868, 0.000000, 0.000000, 90.699989, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
// -----------------------------------------------------------------------------------------------------------------------------

// ---------------------------------------------- L.S. CAR CENTER ----------------------------------------------------------------
    tmpobjid = CreateDynamicObject(19482, 544.324096, -1292.471191, 24.591358, 0.000000, 0.000000, 90.700012, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "L.S. CAR", 120, "Ariel", 90, 1, 0xFF0000FF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(19482, 538.440185, -1292.519897, 24.605251, 0.000000, 0.000000, 90.499992, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "CENTER", 120, "Ariel", 90, 1, 0xFF0000FF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(19355, 537.256713, -1292.878662, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 537.276611, -1292.817871, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 540.496704, -1292.795166, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 543.646789, -1292.772949, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 546.786437, -1292.751464, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 549.766357, -1292.730712, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 537.275512, -1292.647705, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 540.345275, -1292.626831, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 543.465393, -1292.604858, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 546.595153, -1292.583251, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 549.604980, -1292.562988, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);
    tmpobjid = CreateDynamicObject(19355, 549.775146, -1292.561401, 24.824167, 0.000000, 0.000000, 90.400032, -1, -1, -1, 2308.00, 2308.00);

// -----------------------------------------------------------------------------------------------------------------------------

// ---------------------------------------------- GUVEN HASTANESI --------------------------------------------------------------
    tmpobjid = CreateDynamicObject(7090, 2042.175659, -1407.894775, 32.091945, 0.000000, 0.000000, -89.500061, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    tmpobjid = CreateDynamicObject(7090, 2016.494384, -1407.868286, 31.821947, 0.000000, 0.000000, -89.500061, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    tmpobjid = CreateDynamicObject(19482, 2016.713989, -1413.970581, 31.353881, -103.599960, 0.000000, 0.000000, -1, -1, -1, 2308.00, 2308.00);

// -----------------------------------------------------------------------------------------------------------------------------

// ----------------------------------------------- ATATURK HASTANESI -----------------------------------------------------------
    tmpobjid = CreateDynamicObject(19482, 1176.235961, -1309.682373, 28.031578, -89.799957, 91.999969, -178.499969, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterialText(tmpobjid, 0, "Z", 30, "Wingdings", 70, 0, 0xFFFFFFFF, 0x00000000, 0);
    tmpobjid = CreateDynamicObject(7090, 1170.321533, -1338.662719, 28.414791, 0.000000, 0.000000, 0.000000, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
    tmpobjid = CreateDynamicObject(7090, 1170.321533, -1309.791015, 28.414791, 0.000000, 0.000000, 0.000000, -1, -1, -1, 2308.00, 2308.00);
    SetDynamicObjectMaterial(tmpobjid, 2, 19058, "xmasboxes", "silk6-128x128", 0x00000000);
// -----------------------------------------------------------------------------------------------------------------------------

// ------------------------------------------------ DIN SPOR SALONU -----------------------------------------------------------------

// -----------------------------------------------------------------------------------------------------------------------------

// ---------------------------------------------------- SAN News ----------------------------------------------------------
tmpobjid = CreateDynamicObject(19482, 649.619506, -1357.620239, 14.907516, 0.000000, 0.000000, 179.999969, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterialText(tmpobjid, 0, "SAN Network", 90, "Ariel", 30, 0, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateDynamicObject(6516, 717.687988, -1357.280029, 18.046899, 0.000000, 0.000000, 0.000000, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterial(tmpobjid, 0, 10765, "airportgnd_sfse", "white", 0x00000000);
SetDynamicObjectMaterial(tmpobjid, 2, 10765, "airportgnd_sfse", "ws_airpt_concrete", 0x00000000);
tmpobjid = CreateDynamicObject(6490, 717.484008, -1357.300048, 20.296899, 0.000000, 0.000000, 0.000000, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterial(tmpobjid, 2, 8639, "chinatownmall", "ctmall04_64", 0x00000000);
tmpobjid = CreateDynamicObject(19482, 647.400451, -1356.591064, 19.183956, 0.000000, 0.000000, 0.000000, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterialText(tmpobjid, 0, "C", 50, "Webdings", 90, 0, 0xFF0000FF, 0x00000000, 0);
tmpobjid = CreateDynamicObject(19482, 772.263793, -1385.076782, 14.287158, 0.000000, 0.000000, -89.900016, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterialText(tmpobjid, 0, "GR", 90, "Ariel", 70, 1, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateDynamicObject(19482, 770.144653, -1329.725708, 14.287158, 0.000000, 0.000000, 87.100006, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterialText(tmpobjid, 0, "GR", 90, "Ariel", 70, 1, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateDynamicObject(19482, 771.746215, -1330.394042, 14.287158, 0.000000, 0.000000, -91.399963, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterialText(tmpobjid, 0, "IKI", 90, "Ariel", 70, 1, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateDynamicObject(19482, 770.424865, -1384.497070, 14.287158, 0.000000, 0.000000, 89.800003, -1, -1, -1, 2308.00, 2308.00);
SetDynamicObjectMaterialText(tmpobjid, 0, "IKI", 90, "Ariel", 70, 1, 0xFFFFFFFF, 0x00000000, 0);
//    LS. VINEWOOD TABELA ANKARA

/* tmpobjid = CreateObject(19700, 1419.015869, -806.862609, 83.177673, -91.200012, -0.000049, 0.000000, 2308.00);
SetObjectMaterialText(tmpobjid, "K", 0, 60, "Ariel", 170, 0, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateObject(19700, 1409.725463, -806.862609, 83.177673, -91.200012, -0.000049, 0.000000, 2308.00);
SetObjectMaterialText(tmpobjid, "N", 0, 60, "Ariel", 170, 0, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateObject(19700, 1400.475708, -806.862609, 83.177673, -91.200012, -0.000049, 0.000000, 2308.00);
SetObjectMaterialText(tmpobjid, "A", 0, 60, "Ariel", 170, 0, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateObject(19700, 1428.247070, -806.862609, 83.177673, -91.200012, -0.000049, 0.000000, 2308.00);
SetObjectMaterialText(tmpobjid, "A", 0, 60, "Ariel", 170, 0, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateObject(19700, 1437.157592, -806.862609, 83.177673, -91.200012, -0.000049, 0.000000, 2308.00);
SetObjectMaterialText(tmpobjid, "R", 0, 60, "Ariel", 170, 0, 0xFFFFFFFF, 0x00000000, 0);
tmpobjid = CreateObject(19700, 1445.908081, -806.862609, 83.177673, -91.200012, -0.000049, 0.000000, 2308.00);
SetObjectMaterialText(tmpobjid, "A", 0, 60, "Ariel", 170, 0, 0xFFFFFFFF, 0x00000000, 0);

tmpobjid = CreateObject(16133, 1405.041870, -781.329284, 68.830459, 0.000000, 0.000000, 81.800018, 2308.00);
tmpobjid = CreateObject(19790, 1396.709716, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1401.741088, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1406.691162, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1411.550903, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1416.520629, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1421.480957, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1426.431152, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1431.331909, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1436.292114, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1441.192138, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1446.121948, -805.115173, 72.560867, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19790, 1447.332275, -805.085144, 72.570877, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(16133, 1472.633178, -791.069152, 68.830459, 0.000000, 0.000000, 81.800018, 2308.00);
tmpobjid = CreateObject(19121, 1394.239135, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1399.259033, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1404.189697, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1409.300292, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1413.489990, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1417.989990, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1422.060302, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1426.880737, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1431.601074, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1436.110961, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1440.211303, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1444.521606, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00);
tmpobjid = CreateObject(19121, 1449.321777, -807.372863, 78.161804, 0.000000, 0.000000, 0.000000, 2308.00); */

// -----------------------------------------------------------------------------------------------------------------------------
   


//---------------------------------- VIP MEKAN ALTI (BUG GDERLD) ---------------------------

    CreateDynamicObject(980, 682.03912, -449.23489, -26.66600,   90.00000, 0.00000, 90.00000);
    CreateDynamicObject(19376, 682.13300, -449.40601, -26.61800,   0.00000, 90.00000, 90.00000);
    CreateDynamicObject(980, 682.03912, -449.23489, -26.59100,   90.00000, 0.00000, 90.00000);
    CreateDynamicObject(19376, 682.12860, -459.90015, -26.61800,   0.00000, 90.00000, 90.00000);


//-------------------------------------------------------------------------------------------------

	// Faction gates
	LSPDGate = CreateDynamicObject(968, 1544.6943359375, -1630.73046875, 13.27956199646, 0.000000, 90, 90); //
 	LSPDGate2 = CreateDynamicObject(971, 1588.6428222656, -1638.02734375, 15.240161895752, 0, 0, 181.03271484375);
	FBIGate1 = CreateDynamicObject(971, 320.40628051758, -1487.9129638672, 26.900407791138, 0.000000, 0.000000, 144.85501098633); //
	FBIGate2 = CreateDynamicObject(971, 283.96463012695, -1543.154296875, 27.167940139771, 0.000000, 0.000000, 326.25500488281); //
    SAHGate1 = CreateDynamicObject(971,778.0999800,-1330.1999500,13.5000000,0.0000000,180.0000000,0.0000000); //object(subwaygate) (1)
	SAHGate2 = CreateDynamicObject(971,777.9000200,-1384.8000500,13.5000000,0.0000000,179.9950000,0.0000000); //object(subwaygate) (2)
	
    //-----------------[ LSPD KAPI /kapi ]-------------//
	LSPDLobby[0] = CreateDynamicObject(3051, 253.18507385254, 108.53353881836, 1003.5809326172, 0, 0, 47.410034179688); // LSPD Lobby Door Left
	LSPDLobby[1] = CreateDynamicObject(3051, 253.16732788086, 109.68534088135, 1003.5809326172, 0, 0, 47.406005859375); // LSPD Lobby Door Right
	LSPDLobby[2] = CreateDynamicObject(3051, 239.63652038574, 118.1950302124, 1003.5809326172, 0, 0, 46.910034179688); // LSPD Lobby Door Left
	LSPDLobby[3] = CreateDynamicObject(3051, 239.63296508789, 117.00688171387, 1003.5809326172, 0, 0, 225.291015625); // LSPD Lobby Door Right
    LSPDLobby[4] = CreateDynamicObject(1536, 264.32269287109, 112.54183959961, 1003.6422119141, 0, 0, 0); // LSPD Lobby Door Left
	LSPDLobby[5] = CreateDynamicObject(1536, 267.33877563477, 112.54633331299, 1003.6422119141, 0, 0, 179.2099609375); // LSPD Lobby Door Right
	LSPDCells[2] = CreateDynamicObject(13360,258.949157,91.412040,1002.528625,0.000000,0.000000,-90.000000); // LSPD Cells Door Left Block
	LSPDCells[3] = CreateDynamicObject(13360,258.949157,90.292076,1002.528625,0.000000,0.000000,90.000000); // LSPD Cells Door Right Block
	LSPDOffice[0] = CreateDynamicObject(13360,255.494674,85.290985,1002.445312,0.000000,0.000000,0.000000); // LSPD Office Door Left
	LSPDOffice[1] = CreateDynamicObject(13360,254.380661,85.286033,1002.445312,0.000000,0.000000,180.000000); // LSPD Office Door Right
	LSPDChief[0] = CreateDynamicObject(3051,230.55876160,119.57346344,1010.58093262,0.00000000,0.00000000,316.63513184);// Chief's Door Right
	LSPDChief[1] = CreateDynamicObject(3051,231.60127258,119.61708832,1010.58093262,0.00000000,0.00000000,316.63146973);// Chief's Door Left


	// Faction text labels and pickups

		//hapseat
	CreatePickup(1247, 23, 1528.082397, -1677.978637, 5.890625, -1); // LSPD
	CreateDynamic3DTextLabel("/hapseat",COLOR_YELLOW,1528.082397, -1677.978637, 5.890625+0.6,4.0);  // LSPD
	CreatePickup(1247, 23, 1564.830932, -1652.506469, 28.395606, -1);  // LSPD roof
	CreateDynamic3DTextLabel("/hapseat",COLOR_YELLOW,1564.830932, -1652.506469, 28.395606+0.6,4.0); // LSPD roof
	CreatePickup(1247, 23, 304.796508, -1526.349731, 76.539062, -1); // FBI roof
	CreateDynamic3DTextLabel("/hapseat",COLOR_YELLOW,304.796508, -1526.349731, 76.539062+0.6,4.0);  // FBI roof
	CreatePickup(1247, 23, 298.313842, -1536.036865, 24.593750, -1); // FBI
	CreateDynamic3DTextLabel("/hapseat",COLOR_YELLOW,298.313842, -1536.036865, 24.593750+0.6,4.0);  // FBI
	
	CreateDynamic3DTextLabel("/bankasoy",COLOR_YELLOW,2942.9377,-1769.0336,1178.4684+0.6,4.0);  // IEM
	CreatePickup(1247, 23, 1528.082397, -1677.978637, 5.890625, -1); // IEM


	    //teslimet
	CreatePickup(1247, 23, 1992.484130, -2312.814208, 13.546875, -1);
	CreateDynamic3DTextLabel("Most Wanted sulular iin\n/teslimet yaz.",COLOR_YELLOW,1992.484130, -2312.814208, 13.546875+0.6,4.0);
	CreateDynamicObject(1681,1994.44226074,-2315.96582031,14.67000008,0.00000000,0.00000000,90.00000000); //object(ap_learjet1_01) (1)

		//aracibaglaing
    CreateDynamic3DTextLabel("Ara balama yeri\nArac balamak iin\n/aracibagla yaz.",COLOR_YELLOW,1602.002197, -1608.801879, 13.662560+0.6,5.0);

    	// LSPD lockers
   	CreateDynamic3DTextLabel("Dolabn amak iin\n/lspd yaz.",COLOR_DBLUE,267.1261,109.7117,1004.6172+0.6,4.0);

	 //SAN Lockers
    CreateDynamic3DTextLabel("Dolabn amak iin\n/san yaz.",COLOR_NEWS, 256.0074,1778.3248,701.0859+0.6,4.0);

   	//LST Dolap
   	CreateDynamic3DTextLabel("Dolab amak iin\n/lst yaz.",COLOR_NEWS,19,1492.7949, 1308.4761, 1093.2922);

        //FBI lockers
   	CreateDynamic3DTextLabel("Dolabn amak iin\n/fbi yaz.",COLOR_DBLUE,310.3679,-1537.5204,-45.1338+0.6,4.0);///fbi

   	    // LSFMD lockers
   	CreateDynamic3DTextLabel("Dolabn amak iin\n/lsfmd yaz.",COLOR_LIGHTRED,1188.5157470703,-1350.9741210938, 2423.2648925781+0.6,4.0);
   	CreateDynamic3DTextLabel("Dolabn amak iin\n/lsfmd yaz.",COLOR_LIGHTRED,190.006729, 166.458602, 1997.859375+0.6,4.0);

	//vip
	CreatePickup(1276, 23, 681.4130,-459.2401,-25.6172, -1);
    CreateDynamic3DTextLabel("Vip zelliklerine erimek iin\n/vip yaz.",COLOR_WHITE, 681.4130,-459.2401,-25.6172+0.6,4.0);

    //vip garaj
    CreatePickup(1239, 23, 1273.8411,-1337.5276,13.3486, -1);
    CreateDynamic3DTextLabel("Garajdan kmak iin\n/vcik yaz.",COLOR_WHITE, 1273.8411,-1337.5276,13.3486+0.6,4.0);

   	    // /teslimet
	CreatePickup(1240, 23, 1142.4733,-1326.3633,13.6259, -1);// Deliverpt
	CreatePickup(1240, 23, 1165.1564,-1368.8240,26.6502, -1);// Deliverpt
	CreatePickup(1240, 23, 2027.0599,-1410.6870,16.9922, -1);// Deliverpt
	CreatePickup(1240, 23, 2024.5742,-1382.7844,48.3359, -1);// Deliverpt
 	CreateDynamic3DTextLabel("/yteslimet",COLOR_LIGHTRED,1142.4733,-1326.3633,13.6259+0.6,4.0);///yteslimet
   	CreateDynamic3DTextLabel("/yteslimet",COLOR_LIGHTRED,1165.1564,-1368.8240,26.6502+0.6,4.0);///yteslimet
   	CreateDynamic3DTextLabel("/yteslimet",COLOR_LIGHTRED,2027.0599,-1410.6870,16.9922+0.6,4.0);///yteslimet
   	CreateDynamic3DTextLabel("/yteslimet",COLOR_LIGHTRED,2024.5742,-1382.7844,48.3359+0.6,4.0);///yteslimet

   	    // /tedaviol
	CreatePickup(1240, 23, 1179.4012451172,-1331.5632324219,2423.0461425781, -1);
	CreateDynamic3DTextLabel("Hastaln geirmek iin\n/tedaviol yaz.",COLOR_LIGHTRED,1179.4012451172,-1331.5632324219,2423.0461425781+0.6,4.0);
	    // /sigortaal
	CreatePickup(1239, 23, 1169.7209472656,-1348.3218994141,2423.0461425781, -1);// /Old Insurance: 2086.4915,2826.7122,-16.1744
	CreateDynamic3DTextLabel("Sigorta almak iin\n/sigortaal yaz.",COLOR_YELLOW,1169.7209472656,-1348.3218994141,2423.0461425781+0.6,4.0);// Insurance

	CreateDynamic3DTextLabel("Dolab amak iin\n/gov yaz..",COLOR_YELLOW, 394.94, 103.08, 1014.23, 4.0);//  Government lockers
	
	// ------------------------- AYTEKIN HOLDING --------------------
	
	CreateDynamicObject(8674, 1014.98419, -972.69629, 43.97580,   0.00000, 0.00000, 7.20000);
CreateDynamicObject(8674, 1014.98248, -972.69098, 41.06040,   0.00000, 0.00000, 7.20000);
CreateDynamicObject(8674, 1025.12976, -971.32947, 41.05260,   0.00000, 0.00000, 8.34000);
CreateDynamicObject(8674, 1025.12976, -971.32947, 43.98498,   0.00000, 0.00000, 8.34000);
CreateDynamicObject(8674, 1035.28076, -969.83185, 41.05260,   0.00000, 0.00000, 8.34000);
CreateDynamicObject(8674, 1035.28076, -969.83185, 44.05643,   0.00000, 0.00000, 8.04000);
CreateDynamicObject(3498, 1038.30371, -973.64087, 49.76530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3498, 1012.75970, -975.78906, 49.76530,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 1032.81897, -970.66199, 46.40991,   0.00000, 0.00000, -61.79998);
CreateDynamicObject(1723, 1032.94592, -973.97321, 46.54850,   0.00000, 0.00000, -173.52000);
CreateDynamicObject(1516, 1031.78650, -972.42224, 46.45103,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1704, 1028.89331, -972.09570, 46.40991,   0.00000, 0.00000, -298.31998);
CreateDynamicObject(2313, 1039.50842, -970.86963, 46.51453,   0.00000, 0.00000, -81.54002);
CreateDynamicObject(1786, 1039.87341, -971.18280, 47.00782,   0.00000, 0.00000, -83.39999);
CreateDynamicObject(1670, 1031.78223, -972.36676, 47.03274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19831, 1031.90393, -977.33350, 46.51711,   0.00000, 0.00000, -175.26004);
CreateDynamicObject(1893, 1035.93750, -973.98401, 54.28733,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1028.56702, -974.14160, 54.28733,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1024.54614, -974.47626, 54.28733,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1016.06769, -974.28589, 54.28733,   0.00000, 0.00000, 0.35999);
CreateDynamicObject(955, 1033.85352, -976.82214, 46.86681,   0.00000, 0.00000, -163.31996);
CreateDynamicObject(2313, 1010.87463, -974.47424, 46.51841,   0.00000, 0.00000, -82.55999);
CreateDynamicObject(19377, 1035.73560, -974.48621, 54.37382,   0.00000, 90.00000, 6.54000);
CreateDynamicObject(19806, 1013.51917, -974.14276, 53.19559,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19806, 1023.03217, -973.57031, 53.19560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19806, 1038.23669, -972.75201, 53.19560,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1893, 1031.98242, -974.24512, 54.28733,   0.00000, 0.00000, 0.35999);
CreateDynamicObject(1893, 1019.92975, -974.22784, 54.28733,   0.00000, 0.00000, 0.35999);
CreateDynamicObject(19121, 1040.77979, -968.97211, 42.05761,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1042.21753, -976.06787, 42.05761,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1039.63464, -968.46533, 42.05761,   0.00000, 0.00000, -0.18000);
CreateDynamicObject(19121, 1036.27686, -969.02362, 42.05761,   0.00000, 0.00000, -0.18000);
CreateDynamicObject(19121, 1026.46997, -984.03741, 42.21457,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19121, 1022.73645, -983.87762, 42.21457,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19916, 1034.88196, -976.41174, 46.51700,   0.00000, 0.00000, -168.05998);
CreateDynamicObject(19914, 1030.94482, -972.59229, 46.61120,   0.00000, -47.43350, 40.82980);
CreateDynamicObject(1516, 1029.78345, -974.43689, 46.45103,   0.00000, 0.00000, 5.70000);
CreateDynamicObject(1516, 1034.41589, -973.93890, 46.45103,   0.00000, 0.00000, 5.70000);
CreateDynamicObject(19893, 1032.16333, -972.10156, 46.97601,   0.00000, 0.00000, 332.40009);
CreateDynamicObject(19818, 1029.79468, -974.22144, 47.09137,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19818, 1030.06677, -973.93579, 47.09137,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19818, 1034.04761, -973.67218, 47.09137,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19818, 1034.58655, -973.95508, 47.09137,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19818, 1031.51733, -972.75177, 47.09137,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19818, 1031.47351, -972.01569, 47.09137,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1030.02332, -974.51202, 47.03274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1030.02332, -974.51202, 47.03274,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1670, 1034.24377, -974.13885, 47.03274,   0.00000, 0.00000, 0.36000);
CreateDynamicObject(19999, 1013.84064, -974.79230, 46.51613,   0.00000, 0.00000, 99.78004);
CreateDynamicObject(2357, 1015.44415, -974.77643, 46.89360,   0.00000, 0.00000, -82.20002);
CreateDynamicObject(19893, 1015.05054, -974.24445, 47.30646,   0.00000, 0.00000, 294.23996);
CreateDynamicObject(348, 1015.08441, -975.34473, 47.30636,   84.00000, 0.00000, 0.00000);
CreateDynamicObject(351, 1010.59662, -974.50348, 47.01460,   76.00000, 0.00000, 0.00000);
CreateDynamicObject(356, 1033.18335, -974.05377, 47.42200,   91.00000, 1.46010, 112.38060);
CreateDynamicObject(355, 1010.83868, -975.09222, 47.05455,   98.00000, 0.00000, 0.00000);
CreateDynamicObject(351, 1010.51257, -975.50562, 47.01460,   76.00000, 0.00000, 0.00000);
CreateDynamicObject(19897, 1015.12427, -975.01996, 47.30225,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(355, 1014.88422, -973.30627, 47.34710,   -84.00000, 98.00000, 69.70001);
CreateDynamicObject(19820, 1015.21747, -975.63904, 47.20599,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(19454, 1014.53851, -972.20380, 52.82680,   0.00000, 0.00000, -83.52000);
CreateDynamicObject(19454, 1023.49304, -971.15045, 52.83012,   0.00000, 0.00000, -83.28000);
CreateDynamicObject(19454, 1033.01135, -970.00238, 52.82871,   0.00000, 0.00000, -82.92001);
CreateDynamicObject(19454, 1035.76282, -969.65051, 52.82603,   0.00000, 0.00000, -82.92001);
CreateDynamicObject(19377, 1025.38684, -975.77759, 54.35678,   0.00000, 90.00000, 7.50000);
CreateDynamicObject(19377, 1015.15967, -977.00970, 54.37382,   0.00000, 90.00000, 7.38000);
CreateDynamicObject(19454, 1041.01611, -973.90649, 52.82062,   0.00000, 0.00000, -173.57993);
CreateDynamicObject(19454, 1010.36420, -977.47729, 52.79812,   0.00000, 0.00000, -173.63992);
CreateDynamicObject(19325, 1037.08801, -969.61438, 49.25891,   0.00000, 0.00000, -82.86000);
CreateDynamicObject(19325, 1030.50903, -970.45129, 49.24970,   0.00000, 0.00000, -82.74000);
CreateDynamicObject(19325, 1024.05286, -971.27521, 49.24020,   0.00000, 0.00000, -82.56000);
CreateDynamicObject(19325, 1017.47040, -972.13428, 49.25292,   0.00000, 0.00000, -82.56000);
CreateDynamicObject(19325, 1013.16870, -972.70862, 49.24020,   0.00000, 0.00000, -82.56000);
CreateDynamicObject(19325, 1010.36078, -976.42780, 49.24020,   0.00000, 0.00000, 6.06000);
CreateDynamicObject(19325, 1011.04529, -982.87299, 49.24200,   0.00000, 0.00000, 6.06000);
CreateDynamicObject(19325, 1040.74109, -972.43616, 49.26801,   0.00000, 0.00000, 6.54000);
CreateDynamicObject(19325, 1041.49536, -978.99011, 49.26801,   0.00000, 0.00000, 6.54000);
CreateDynamicObject(632, 1012.93878, -977.83960, 46.52097,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(16151, 1026.32251, -977.38806, 46.51661,   0.00000, 0.00000, -79.80000);
CreateDynamicObject(1618, 1039.19116, -969.26721, 55.21255,   -0.24000, -2.34000, -803.94025);
CreateDynamicObject(1969, 1037.61914, -975.85248, 47.09876,   0.00000, 0.00000, 7.26000);
CreateDynamicObject(19273, 1019.91168, -979.13019, 48.10323,   0.00000, 0.00000, 180.42004);
CreateDynamicObject(19610, 1015.08948, -974.71613, 47.40210,   55.00000, -55.00000, 98.00000);
CreateDynamicObject(1504, 1023.92004, -984.34967, 41.71607,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(1504, 1018.13647, -979.27618, 46.37027,   0.00000, 0.00000, 5.28000);
CreateDynamicObject(970, 1041.22119, -974.20306, 46.67789,   0.00000, 0.00000, -82.07998);
CreateDynamicObject(970, 1040.74255, -971.17120, 46.67790,   0.00000, 0.00000, -82.08000);
CreateDynamicObject(970, 1038.37000, -969.45251, 46.67789,   0.00000, 0.00000, 7.26001);
CreateDynamicObject(970, 1034.25500, -969.96277, 46.67789,   0.00000, 0.00000, 7.26001);
CreateDynamicObject(970, 1030.12952, -970.48187, 46.67789,   0.00000, 0.00000, 6.96001);
CreateDynamicObject(970, 1030.12952, -970.48187, 46.67789,   0.00000, 0.00000, 6.96001);
CreateDynamicObject(970, 1030.12952, -970.48187, 46.67789,   0.00000, 0.00000, 6.96001);
CreateDynamicObject(970, 1025.97522, -971.03558, 46.67789,   0.00000, 0.00000, 7.68001);
CreateDynamicObject(970, 1021.88617, -971.54932, 46.67789,   0.00000, 0.00000, 7.68001);
CreateDynamicObject(970, 1017.79846, -972.06573, 46.67789,   0.00000, 0.00000, 7.38001);
CreateDynamicObject(970, 1013.73999, -972.62927, 46.68750,   0.00000, 0.00000, 7.38000);
CreateDynamicObject(970, 1011.93549, -972.84180, 46.68750,   0.00000, 0.00000, 7.38000);
CreateDynamicObject(970, 1010.14264, -975.16925, 46.67790,   0.00000, 0.00000, -83.27997);
CreateDynamicObject(970, 1010.61359, -979.30231, 46.67790,   0.00000, 0.00000, -84.54000);
CreateDynamicObject(2309, 1017.21619, -976.95276, 46.51781,   0.00000, 0.00000, 9.35999);
CreateDynamicObject(2309, 1016.89496, -972.84326, 46.51781,   0.00000, 0.00000, -173.82018);
CreateDynamicObject(2309, 1018.27490, -975.73682, 46.51781,   0.00000, 0.00000, 98.16000);
CreateDynamicObject(2309, 1018.15387, -974.80396, 46.51781,   0.00000, 0.00000, 96.78003);
CreateDynamicObject(2309, 1018.27490, -975.73682, 46.51781,   0.00000, 0.00000, 98.16000);
CreateDynamicObject(2309, 1018.02960, -973.83154, 46.51781,   0.00000, 0.00000, 96.78003);
CreateDynamicObject(2309, 1019.15955, -973.67346, 46.51781,   0.00000, 0.00000, 96.78003);
CreateDynamicObject(2309, 1018.02960, -973.83154, 46.51781,   0.00000, 0.00000, 96.78003);
CreateDynamicObject(2309, 1019.33844, -974.58099, 46.51781,   0.00000, 0.00000, 96.78003);
CreateDynamicObject(2309, 1019.46136, -975.53375, 46.51781,   0.00000, 0.00000, 96.84003);
CreateDynamicObject(2309, 1019.33844, -974.58099, 46.51781,   0.00000, 0.00000, 96.78003);
CreateDynamicObject(2309, 1020.59497, -975.36530, 46.51781,   0.00000, 0.00000, 96.84003);
CreateDynamicObject(2309, 1020.51752, -974.48810, 46.51781,   0.00000, 0.00000, 96.84003);
CreateDynamicObject(2309, 1020.41833, -973.57166, 46.51781,   0.00000, 0.00000, 96.84003);
CreateDynamicObject(19273, 1019.91168, -979.13019, 48.10323,   0.00000, 0.00000, 180.42004);
CreateDynamicObject(1333, 1013.83044, -983.53168, 42.40281,   0.00000, 0.00000, -179.63998);
CreateDynamicObject(19273, 1025.94543, -984.21844, 43.55675,   0.00000, 0.00000, 0.00000);
CreateDynamicObject(3761, 1018.46594, -983.86713, 43.01385,   0.00000, 0.00000, 89.10001);
CreateDynamicObject(1692, 1035.09460, -972.26251, 55.28508,   0.00000, 0.00000, 6.72000);
CreateDynamicObject(1692, 1016.14606, -974.60852, 55.28743,   0.00000, 0.00000, 6.96000);
CreateDynamicObject(1692, 1025.62158, -973.53510, 55.28743,   0.00000, 0.00000, 6.96000);
CreateDynamicObject(1692, 1026.14270, -977.75458, 55.28743,   0.00000, 0.00000, 6.96000);
CreateDynamicObject(1692, 1035.57617, -976.48102, 55.28508,   0.00000, 0.00000, 6.72000);
CreateDynamicObject(1692, 1016.50891, -978.78290, 55.28743,   0.00000, 0.00000, 6.96000);
CreateDynamicObject(6865, 1025.89502, -971.17279, 54.45007,   0.00000, 0.00000, -125.22000);
CreateDynamicObject(983, 1010.11987, -976.59705, 41.31153,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.11987, -976.59705, 42.57439,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.11987, -976.59705, 43.81841,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.11987, -976.59705, 44.80530,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.37054, -981.40082, 41.31153,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.37054, -981.40082, 42.54997,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.37054, -981.40082, 43.82652,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(983, 1010.37054, -981.40082, 44.65377,   0.00000, 0.00000, 3.18000);
CreateDynamicObject(1516, 1036.23999, -980.52820, 41.94867,   0.00000, 0.00000, -5.63999);
CreateDynamicObject(1723, 1033.63110, -981.88330, 41.79147,   0.00000, 0.00000, 95.27998);
CreateDynamicObject(1723, 1037.09998, -983.04370, 41.79147,   0.00000, 0.00000, 181.79996);
CreateDynamicObject(1723, 1038.86914, -979.29755, 41.79147,   0.00000, 0.00000, -88.44002);
CreateDynamicObject(1723, 1035.08923, -978.31445, 41.79147,   0.00000, 0.00000, 4.31995);
CreateDynamicObject(19966, 1040.81104, -968.96448, 41.63926,   0.00000, 0.00000, 96.47999);

// -----------------------------------------------------------------------------------------


	// Gie
	CreateDynamicObject(8168, 75.90000, -1268.90002, 15.20000,   0.00000, 0.00000, 234.00000);
	CreateDynamicObject(9131, 71.57333, -1257.87659, 13.16000,   0.00000, 0.00000, 38.00000);
	CreateDynamicObject(9131, 71.10223, -1257.28638, 13.16000,   0.00000, 0.00000, 37.99620);
	CreateDynamicObject(9131, 70.62750, -1256.67993, 13.16000,   0.00000, 0.00000, 37.99620);
	CreateDynamicObject(1434, 118.10000, -1241.00000, 14.10000,   0.00000, 0.00000, 306.00000);
	CreateDynamicObject(1434, 117.30000, -1239.90002, 14.10000,   0.00000, 0.00000, 305.99670);
	CreateDynamicObject(1434, 116.50000, -1238.80005, 14.10000,   0.00000, 0.00000, 305.99670);
	CreateDynamicObject(9131, 80.20000, -1269.19995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 80.60000, -1269.69995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 81.00000, -1270.19995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 81.40000, -1270.69995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 81.80000, -1271.19995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 75.00000, -1273.19995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 75.40000, -1273.69995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 75.80000, -1274.19995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(9131, 76.20000, -1274.69995, 14.60000,   0.00000, 0.00000, 37.99622);
	CreateDynamicObject(1459, 95.60000, -1255.00000, 14.20000,   0.00000, 0.00000, 307.99622);
	CreateDynamicObject(1459, 94.30000, -1253.30005, 14.20000,   0.00000, 0.00000, 307.99622);
	CreateDynamicObject(8168, 56.40000, -1318.50000, 12.50000,   0.00000, 0.00000, 235.49994);
	CreateDynamicObject(9131, 47.40000, -1310.69995, 10.38000,   0.00000, 0.00000, 308.00000);
	CreateDynamicObject(9131, 56.50000, -1322.19995, 11.70000,   0.00000, 0.00000, 307.99622);
	CreateDynamicObject(9131, 57.00000, -1322.80005, 11.70000,   0.00000, 0.00000, 307.99622);
	CreateDynamicObject(9131, 57.40000, -1323.30005, 11.70000,   0.00000, 0.00000, 307.99622);
	CreateDynamicObject(9131, 48.35130, -1311.89905, 10.35030,   0.00000, 0.00000, 307.99619);
	CreateDynamicObject(1435, 24.10000, -1341.09998, 9.00000,   0.00000, 0.00000, 306.00000);
	CreateDynamicObject(1435, 24.90000, -1342.19995, 9.00000,   0.00000, 0.00000, 305.99670);
	CreateDynamicObject(1435, 25.60000, -1343.19995, 9.00000,   0.00000, 0.00000, 305.99670);
	CreateDynamicObject(1435, 26.30000, -1344.09998, 9.00000,   0.00000, 0.00000, 305.99670);
	CreateDynamicObject(1459, 33.00000, -1335.19995, 10.00000,   0.00000, 0.00000, 310.00000);
	CreateDynamicObject(1459, 34.50000, -1337.09998, 10.00000,   0.00000, 0.00000, 309.99573);
	CreateDynamicObject(9131, 47.86450, -1311.32214, 10.38000,   0.00000, 0.00000, 307.99619);
	CreateDynamicObject(7522, 1735.52637, 514.02734, 31.89012,   356.97327, 0.00000, 340.91125);
	CreateDynamicObject(7522, 1747.18774, 547.28925, 29.84759,   356.64001, 0.00000, 340.91125);
	CreateDynamicObject(3095, 1746.58728, 508.45862, 28.66553,   0.00000, 90.00000, 340.74640);
	CreateDynamicObject(3095, 1747.58167, 511.31937, 28.66553,   0.00000, 90.00000, 340.74097);
	CreateDynamicObject(3095, 1758.03027, 541.10870, 26.71450,   0.00000, 90.00000, 340.74097);
	CreateDynamicObject(3095, 1759.09241, 544.14789, 26.71450,   0.00000, 90.00000, 340.74097);
	CreateDynamicObject(3095, 1736.01086, 552.47192, 26.71450,   0.00000, 90.00000, 160.98492);
	CreateDynamicObject(3095, 1734.95935, 549.42371, 26.71450,   0.00000, 90.00000, 160.98267);
	CreateDynamicObject(3095, 1724.50623, 519.62042, 28.56798,   0.00000, 90.00000, 160.98267);
	CreateDynamicObject(3095, 1723.32813, 516.20428, 28.56798,   0.00000, 90.00000, 160.98267);
	CreateDynamicObject(8168, 1756.36401, 526.16180, 28.21965,   359.49597, 357.54504, 268.10376);
	CreateDynamicObject(8168, 1726.13916, 535.99713, 28.13285,   359.49463, 2.15369, 87.89539);
	CreateDynamicObject(9339, 1740.42773, 529.29095, 26.81743,   356.75201, 0.00000, 340.89099);
	CreateDynamicObject(9339, 1741.35583, 531.96936, 26.81743,   356.74805, 0.00000, 340.88928);
	CreateDynamicObject(9339, 1741.35547, 531.96875, 27.96145,   356.74805, 0.00000, 340.88928);
	CreateDynamicObject(9339, 1740.42773, 529.29004, 28.12155,   356.74805, 0.00000, 340.88928);
	CreateDynamicObject(984, 1738.43567, 523.53619, 29.80576,   356.86401, 0.00000, 341.02051);
	CreateDynamicObject(984, 1742.57947, 535.60858, 29.08325,   356.86340, 0.00000, 341.01563);
	CreateDynamicObject(1422, 1746.93335, 502.38885, 28.35359,   0.00000, 0.00000, 337.69324);
	CreateDynamicObject(1422, 1749.71033, 501.12952, 28.35359,   0.00000, 0.00000, 337.69226);
	CreateDynamicObject(1422, 1719.38013, 512.13525, 28.26768,   0.00000, 0.00000, 337.69226);
	CreateDynamicObject(1422, 1716.66846, 513.27863, 28.26768,   0.00000, 0.00000, 337.69226);
	CreateDynamicObject(3475, 1749.53613, 502.54004, 30.02277,   0.00000, 0.00000, 248.76892);
	CreateDynamicObject(3475, 1748.26074, 503.03711, 30.02277,   0.00000, 0.00000, 248.76343);
	CreateDynamicObject(3475, 1717.94727, 514.15527, 30.02277,   0.00000, 0.00000, 67.75818);
	CreateDynamicObject(3475, 1719.39258, 513.56250, 30.02277,   0.00000, 0.00000, 67.75818);
	CreateDynamicObject(1422, 1763.04456, 548.70099, 25.36449,   0.00000, 0.00000, 340.20618);
	CreateDynamicObject(1422, 1765.94861, 547.55756, 25.36449,   0.00000, 0.00000, 340.20264);
	CreateDynamicObject(1422, 1735.56140, 557.90704, 25.33369,   0.00000, 0.00000, 340.20264);
	CreateDynamicObject(1422, 1732.62305, 558.95703, 25.33369,   0.00000, 0.00000, 340.20264);
	CreateDynamicObject(3475, 1763.80066, 547.20612, 27.19378,   0.00000, 357.15308, 251.61035);
	CreateDynamicObject(3475, 1733.92871, 557.51129, 27.15178,   0.00000, 0.00000, 73.45203);
	CreateDynamicObject(2937, 1755.85388, 535.05389, 26.15947,   357.20001, 270.76355, 358.10205);
	CreateDynamicObject(2937, 1755.56763, 531.84564, 26.36577,   357.19849, 270.75806, 350.50757);
	CreateDynamicObject(2937, 1730.38513, 539.86182, 26.40452,   357.19849, 270.75806, 322.49561);
	CreateDynamicObject(2937, 1732.16858, 542.66132, 26.20572,   357.19299, 270.75806, 334.82935);
	CreateDynamicObject(3881, 66.43406, -1534.39685, 5.69055,   0.00000, 0.00000, 353.99597);
	CreateDynamicObject(3881, 37.61413, -1530.16162, 5.69055,   0.00000, 0.00000, 353.99597);
	CreateDynamicObject(9339, 52.37988, -1528.60742, 4.45174,   0.00000, 0.00000, 80.82092);
	CreateDynamicObject(996, 41.25833, -1526.80957, 5.93131,   0.00000, 0.00000, 351.17908);
	CreateDynamicObject(996, 57.20038, -1529.29590, 5.93131,   0.00000, 0.00000, 351.17798);
	CreateDynamicObject(996, 49.22826, -1528.05249, 5.93131,   0.00000, 0.00000, 351.17798);
	CreateDynamicObject(9339, 57.46499, -1519.64722, 5.38385,   0.00000, 0.00000, 83.05487);
	CreateDynamicObject(9339, 49.10841, -1518.62280, 5.38385,   0.00000, 0.00000, 83.05115);
	CreateDynamicObject(9131, 70.38680, -1521.42688, 5.82292,   0.00000, 0.00000, 352.40820);
	CreateDynamicObject(966, 76.42062, -1264.43567, 13.28214,   0.00000, 0.00000, 306.00937);
	CreateDynamicObject(9131, 72.02923, -1258.47620, 13.18060,   0.00000, 0.00000, 37.80490);
	CreateDynamicObject(966, 53.02814, -1317.59875, 10.43972,   0.00000, 0.00000, 309.70660);
	CreateDynamicObject(966, 69.38570, -1529.71228, 3.86856,   0.00000, 0.00000, 265.01584);
	CreateDynamicObject(9131, 70.17720, -1522.40967, 3.96460,   0.00000, 0.00000, 352.70529);
	CreateDynamicObject(966, 35.94320, -1533.67041, 4.20550,   0.00000, 0.00000, 86.66590);
	CreateDynamicObject(9131, 35.60630, -1540.93359, 4.24260,   0.00000, 0.00000, 355.66483);
	CreateDynamicObject(9131, 35.55838, -1541.67908, 4.24300,   0.00000, 0.00000, 356.79251);
	CreateDynamicObject(966, 1736.71069, 506.20575, 27.76542,   0.00000, 0.00000, 161.23190);
	CreateDynamicObject(1422, 1735.07385, 505.97729, 28.16580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(966, 1739.74536, 557.03186, 24.95780,   0.00000, 0.00000, 161.46370);
	CreateDynamicObject(1422, 1747.75183, 554.70990, 25.34860,   0.00000, 0.00000, 8.43244);

	Giseler[0] = CreateDynamicObject(968, 69.36000, -1529.90137, 4.62970,   0.00000, 90.00000, 84.93570);
	Giseler[1] = CreateDynamicObject(968, 35.95300, -1533.46558, 4.92970,   0.00000, -90.00000, 86.76000);
	Giseler[2] = CreateDynamicObject(968, 76.54820, -1264.59509, 14.19720,   0.00000, 91.00000, 126.00000);
	Giseler[3] = CreateDynamicObject(968, 53.14420, -1317.74634, 11.21930,   0.00000, 90.00000, 129.67500);
	Giseler[4] = CreateDynamicObject(968, 1736.52271, 506.26941, 28.57430,   0.00000, 90.00000, 341.32001);
	Giseler[5] = CreateDynamicObject(968, 1739.60828, 557.09363, 25.89180,   0.00000, 91.00000, 341.17999);

    CreateDynamic3DTextLabel("{33AA33}Gie\n {AA3333}/kgs{FFFF00} yazarak gielererden geebilirsiniz. (10 $)",COLOR_YELLOW,69.36000, -1529.90137, 4.62970,12.0);
    CreateDynamic3DTextLabel("{33AA33}Gie\n {AA3333}/kgs{FFFF00} yazarak gielererden geebilirsiniz. (10 $)",COLOR_YELLOW,35.95300, -1533.46558, 4.92970,12.0);
    CreateDynamic3DTextLabel("{33AA33}Gie\n {AA3333}/kgs{FFFF00} yazarak gielererden geebilirsiniz. (10 $)",COLOR_YELLOW,76.54820, -1264.59509, 14.19720,12.0);
    CreateDynamic3DTextLabel("{33AA33}Gie\n {AA3333}/kgs{FFFF00} yazarak gielererden geebilirsiniz. (10 $)",COLOR_YELLOW,53.14420, -1317.74634, 11.21930,12.0);
    CreateDynamic3DTextLabel("{33AA33}Gie\n {AA3333}/kgs{FFFF00} yazarak gielererden geebilirsiniz. (10 $)",COLOR_YELLOW,1736.52271, 506.26941, 28.57430,12.0);
    CreateDynamic3DTextLabel("{33AA33}Gie\n {AA3333}/kgs{FFFF00} yazarak gielererden geebilirsiniz. (10 $)",COLOR_YELLOW,1739.60828, 557.09363, 25.89180,12.0);
    //benzin
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1941.7532,-1776.3621,13.6406, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1941.7532,-1769.2583,13.6406, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1000.4276,-937.2377,42.3281, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1007.4702,-936.3239,42.3281, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1640.1008,76.6990,36.9014, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 655.631286,-564.677124,16.335937, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1003.871704,-938.584716,42.179687, 15, 0, 1);
    Create3DTextLabel("Benzin Istasyonu\n{FFFF00}/benzindoldur yazarak aracnzn benzinini doldurun", COLOR_RED, 1939.2472,-1771.0105,13.3828, 15, 0, 1);

   //Ara Tamir
   Create3DTextLabel("{0068D7}/aractamir", COLOR_RED, 2072.9526,-1831.8055,13.5469, 15, 0, 1);
   Create3DTextLabel("{0068D7}/aractamir", COLOR_RED, 1024.91,-1031.37,31.99, 15, 0, 1);

	// Faction vehicles

   	//Vip
	VipVehicles[0] = AddStaticVehicleEx(429,1283.8994100,-1293.6992200,13.3000000,90.0000000,182,69,15); //Banshee
	VipVehicles[1] = AddStaticVehicleEx(429,1283.8994100,-1303.0000000,13.3000000,90.0000000,111,132,15); //Banshee
	VipVehicles[2] = AddStaticVehicleEx(429,1283.8994100,-1298.0000000,13.3000000,90.0000000,42,119,15); //Banshee
	VipVehicles[3] = AddStaticVehicleEx(541,1283.8994100,-1318.0000000,13.3000000,90.0000000,133,77,15); //Bullet
	VipVehicles[4] = AddStaticVehicleEx(541,1283.8994100,-1308.0000000,13.3000000,90.0000000,165,36,15); //Bullet
	VipVehicles[5] = AddStaticVehicleEx(541,1283.8994100,-1313.0000000,13.3000000,90.0000000,42,119,15); //Bullet
	VipVehicles[6] = AddStaticVehicleEx(545,1283.5996100,-1339.0000000,13.3000000,90.0000000,115,133,15); //Hustler
	VipVehicles[7] = AddStaticVehicleEx(522,1283.8994100,-1324.0000000,13.3000000,90.0000000,144,53,15); //NRG-500
	VipVehicles[8] = AddStaticVehicleEx(522,1283.8994100,-1334.0000000,13.3000000,90.0000000,139,139,15); //NRG-500
	VipVehicles[9] = AddStaticVehicleEx(545,1283.5996100,-1344.0000000,13.3000000,90.0000000,-1,-1,15); //Hustler
	VipVehicles[10] = AddStaticVehicleEx(555,1283.5996100,-1354.0000000,13.3000000,90.0000000,60,25,15); //Windsor
	VipVehicles[11] = AddStaticVehicleEx(555,1283.5996100,-1349.0000000,13.3000000,90.0000000,-1,24,15); //Windsor
	VipVehicles[12] = AddStaticVehicleEx(575,1283.5996100,-1359.0000000,13.3000000,90.0000000,101,84,15); //Broadway
	VipVehicles[13] = AddStaticVehicleEx(467,1283.5996100,-1364.0000000,13.3000000,90.0000000,92,87,15); //Oceanic

	// Kiralama Sistemi //DEAKTF
	/* RentableCar[0] = CreateVehicle(405, 1834.887084, -1869.552612, 13.389747, 360.0, -1, -1, VEHICLE_RESPAWN); // Sentinel
	RentableCar[1] = CreateVehicle(405, 1838.887084, -1869.552612, 13.389747, 360.0, -1, -1, VEHICLE_RESPAWN); // Sentinel
	RentableCar[2] = CreateVehicle(405, 1842.887084, -1869.552612, 13.389747, 360.0, -1, -1, VEHICLE_RESPAWN); // Sentinel
	RentableCar[3] = CreateVehicle(405, 1836.648925, -1854.549804, 13.389747, 180.0, -1, -1, VEHICLE_RESPAWN); // Sentinel
	RentableCar[4] = CreateVehicle(405, 1840.648925, -1854.549804, 13.389747, 180.0, -1, -1, VEHICLE_RESPAWN); // Sentinel
	RentableCar[5] = CreateVehicle(510, 1829.9003, -1851.5295, 13.6956, 88.9800, -1, -1, VEHICLE_RESPAWN);
    RentableCar[6] = CreateVehicle(510, 1829.8795, -1852.3306, 13.6956, 88.9800, -1, -1, VEHICLE_RESPAWN);
    RentableCar[7] = CreateVehicle(510, 1829.7184, -1853.2367, 13.6956, 88.9800, -1, -1, VEHICLE_RESPAWN);
    RentableCar[8] = CreateVehicle(510, 1829.7417, -1855.0747, 13.6956, 88.9800, -1, -1, VEHICLE_RESPAWN);
    RentableCar[9] = CreateVehicle(510, 1829.7413, -1854.1074, 13.6956, 88.9800, -1, -1, VEHICLE_RESPAWN);

	for(new x;x<sizeof(RentableCar);x++) {
	    format(string, sizeof(string), "KIRALIK %d", RentableCar[x]);
	    SetVehicleNumberPlate(RentableCar[x], string);
	    SetVehicleToRespawn(RentableCar[x]);
    	format(string,sizeof(string),"KIRALIK %d",RentableCar[x]);
	} */

	// LSPD
	LSPDVehicles[0] = AddStaticVehicleEx(596, 1601.795898, -1684.209350, 5.631327, 90.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[1] = AddStaticVehicleEx(596, 1601.790527, -1688.099243, 5.611071, 90.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[2] = AddStaticVehicleEx(596, 1601.790649, -1692.043945, 5.627151, 90.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[3] = AddStaticVehicleEx(596, 1601.790527, -1696.380981, 5.617440, 90.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[4] = AddStaticVehicleEx(596, 1601.790161, -1700.374267, 5.618237, 90.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[5] = AddStaticVehicleEx(596, 1601.791015, -1704.578247, 5.613302, 90.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[6] = AddStaticVehicleEx(596, 1595.375122, -1710.665039, 5.629010, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[7] = AddStaticVehicleEx(596, 1591.266113, -1711.172851, 5.562825, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[8] = AddStaticVehicleEx(596, 1587.176269, -1711.167724, 5.559627, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[9] = AddStaticVehicleEx(596, 1583.157104, -1711.164550, 5.575726, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[10] = AddStaticVehicleEx(596, 1578.746948, -1711.159790, 5.579936, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[11] = AddStaticVehicleEx(596, 1574.747192, -1711.155517, 5.616508, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[12] = AddStaticVehicleEx(596, 1570.507080, -1711.150390, 5.631289, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Car (LSPD)
	LSPDVehicles[13] = AddStaticVehicleEx(560, 1545.363403, -1684.183715, 5.776185, 90.0, 79, 0, VEHICLE_RESPAWN); // Unlimited
	LSPDVehicles[14] = AddStaticVehicleEx(560, 1545.271606, -1680.033325, 5.789134, 90.0, 79, 0, VEHICLE_RESPAWN); // Unlimited
	LSPDVehicles[15] = AddStaticVehicleEx(525, 1545.206909, -1676.062377, 5.768874, 90.0, 0, 79, VEHICLE_RESPAWN); // Tow Truck
	LSPDVehicles[16] = AddStaticVehicleEx(525, 1545.136840, -1671.935791, 5.796144, 90.0, 0, 79, VEHICLE_RESPAWN); // Tow Truck
	LSPDVehicles[17] = AddStaticVehicleEx(525, 1545.113891, -1667.590332, 5.768740, 90.0, 0, 79, VEHICLE_RESPAWN); // Tow Truck
	LSPDVehicles[18] = AddStaticVehicleEx(525, 1545.052978, -1663.159057, 5.769451, 90.0, 0, 79, VEHICLE_RESPAWN); // Tow Truck
	LSPDVehicles[19] = AddStaticVehicleEx(528, 1539.080932, -1644.956298, 6.022599, 180.0, 79, 1, VEHICLE_RESPAWN); // S.W.A.T. Van
	LSPDVehicles[20] = AddStaticVehicleEx(437, 1534.736694, -1644.953979, 6.025968, 180.0, 79, 1, VEHICLE_RESPAWN); // Coach
	LSPDVehicles[22] = AddStaticVehicleEx(601, 1526.807250, -1644.952392, 5.685305, 180.0, 79, 0, VEHICLE_RESPAWN); // S.W.A.T. Van
	LSPDVehicles[23] = AddStaticVehicleEx(523, 1586.753173, -1680.919067, 5.467967, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[24] = AddStaticVehicleEx(523, 1583.504272, -1680.935913, 5.456614, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[25] = AddStaticVehicleEx(523, 1583.508789, -1678.958862, 5.454283, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[26] = AddStaticVehicleEx(523, 1583.510498, -1677.093017, 5.481368, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[27] = AddStaticVehicleEx(523, 1583.519409, -1675.270629, 5.453042, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[28] = AddStaticVehicleEx(523, 1586.685302, -1678.958740, 5.490104, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[29] = AddStaticVehicleEx(523, 1586.702880, -1677.099365, 5.452620, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[30] = AddStaticVehicleEx(523, 1586.705566, -1675.270629, 5.434679, 270.0, 0, 0, VEHICLE_RESPAWN); // HPV-1000
	LSPDVehicles[31] = AddStaticVehicleEx(599, 1585.306152, -1667.855957, 6.086935, 270.0, 79, 1, VEHICLE_RESPAWN); // Police Ranger
	LSPDVehicles[32] = AddStaticVehicleEx(599, 1585.286010, -1671.934448, 6.118605, 270.0, 79, 1, VEHICLE_RESPAWN); // Police Ranger
	LSPDVehicles[33] = AddStaticVehicleEx(427, 1544.986694, -1659.187500, 6.019245, 90.0, 79, 1, VEHICLE_RESPAWN); // Enforcer
	LSPDVehicles[34] = AddStaticVehicleEx(598, 1544.987060, -1655.224243, 6.054365, 90.0, 79, 1, VEHICLE_RESPAWN); // LVPD
	LSPDVehicles[35] = AddStaticVehicleEx(598, 1544.987182, -1651.171020, 6.010422, 90.0, 79, 1, VEHICLE_RESPAWN); // LVPD
	LSPDVehicles[36] = AddStaticVehicleEx(599, 1558.675781, -1711.144897, 6.032533, 0.0, 79, 1, VEHICLE_RESPAWN); // Police Ranger
	LSPDVehicles[37] = AddStaticVehicleEx(497,1564.34960938,-1648.89172363,28.66711426,90.00000000,0,1,VEHICLE_RESPAWN); //Police Maverick
	LSPDVehicles[38] = AddStaticVehicleEx(497,1564.30908203,-1700.77612305,28.66711426,90.00000000,0,1,VEHICLE_RESPAWN); //Police Maverick
	LSPDVehicles[39] = AddStaticVehicleEx(482, 1529.8717, -1671.1698, 6.1506, 270.0, 0, 0, VEHICLE_RESPAWN); // Buritto ( BLACK )
	LSPDVehicles[40] = AddStaticVehicleEx(482, 1529.7588, -1665.1688, 6.1506, 270.0, 1, 1, VEHICLE_RESPAWN); // Buritto ( WHITE )
	for(new x;x<sizeof(LSPDVehicles);x++)
	{
	    format(string, sizeof(string), "LSPD %d", LSPDVehicles[x]);
	    SetVehicleNumberPlate(LSPDVehicles[x], string);
	}

	// FBI
 	FBIVehicles[0] = AddStaticVehicleEx(490,278.2950,-1535.1125,24.7221,234.8203,0,0,2000); // FBI car 1
	FBIVehicles[1] = AddStaticVehicleEx(490,281.3488,-1531.0051,24.7211,234.4913,0,0,2000); // FBI car 2
	FBIVehicles[2] = AddStaticVehicleEx(490,284.1479,-1526.7838,24.7219,235.9317,0,0,2000); // FBI car 3
	FBIVehicles[3] = AddStaticVehicleEx(402,287.9204,-1522.4076,24.4254,233.3578,0,0,2000); // FBI car 4
	FBIVehicles[4] = AddStaticVehicleEx(402,291.0083,-1518.0157,24.4255,235.8604,0,0,2000); // FBI car 5
	FBIVehicles[5] = AddStaticVehicleEx(426,294.4281,-1513.3267,24.3367,233.7115,0,0,2000); // FBI car 6
	FBIVehicles[6] = AddStaticVehicleEx(426,297.6391,-1508.7694,24.3367,233.2394,0,0,2000); // FBI car 7
	FBIVehicles[7] = AddStaticVehicleEx(482,301.1381,-1504.8762,24.7139,233.2884,0,0,2000); // FBI Car 8
	FBIVehicles[8] = AddStaticVehicleEx(415,304.2608,-1486.6423,24.2188,235.1092,0,0,2000); // FBI Car 9
    FBIVehicles[9] = AddStaticVehicleEx(415,307.1080,-1482.1565,24.2188,234.6429,0,0,2000); // FBI Car 10
    FBIVehicles[10] = AddStaticVehicleEx(487, 316.47, -1516.18, 77.24, 228.39, 0, 79, 2000); //  Levithian - FBI Roof
    FBIVehicles[11] = AddStaticVehicleEx(487, 329.79, -1500.35, 77.24, 222.55, 0, 79, 2000); //  Levithian - FBI Roof
    FBIVehicles[12] = AddStaticVehicleEx(427, 300.645629, -1490.589233, 24.723447, 233.09, 0, 0, 2000); //  FBI Enforcer
    FBIVehicles[13] = AddStaticVehicleEx(560, 294.8336, -1540.6174, 24.2991, 54.4162, 0, 0, 2000); //  FBI Unlimited
    FBIVehicles[14] = AddStaticVehicleEx(560, 292.0438, -1545.2189, 24.2991, 55.1461, 0, 0, 2000); //  FBI Unlimited
    FBIVehicles[15] = AddStaticVehicleEx(528, 295.0438, -15457.2189, 24.2991, 55.1461, 0, 0, 2000); //  FBI Unlimited

	// LSFMD
   	LSFMDVehicles[1] = AddStaticVehicleEx(452,721.1721,-1628.0261,-0.6700,180.6752,1,53, VEHICLE_RESPAWN); // LSFD Boat 2
	LSFMDVehicles[2] = AddStaticVehicleEx(452,720.1046,-1693.4014,-0.4581,179.7505,1,35, VEHICLE_RESPAWN); // LSFD Boat 3
	LSFMDVehicles[3] = AddStaticVehicleEx(416,1607.2472,-2153.6628,13.7036,88.4947,1,3, VEHICLE_RESPAWN); // FDA Ambulance
	LSFMDVehicles[4] = AddStaticVehicleEx(416,1590.8926,-2152.0854,13.7039,268.5291,1,3, VEHICLE_RESPAWN); // LSFMD ambulance
	LSFMDVehicles[5] = AddStaticVehicleEx(416,1590.9957,-2159.7983,13.7047,269.8668,1,3, VEHICLE_RESPAWN); // LSFMD ambulance
	LSFMDVehicles[6] = AddStaticVehicleEx(416,1591.0316,-2167.6848,13.7039,269.8569,1,3, VEHICLE_RESPAWN); // LSFMD ambulance
	LSFMDVehicles[7] = AddStaticVehicleEx(407, 1544.7987060547, -2173.884765625, 13.916874885559, 270, -1, -1, VEHICLE_RESPAWN); //Ambulance
    LSFMDVehicles[8] = AddStaticVehicleEx(407, 1544.7987060547, -2165.47265625, 13.916874885559, 270, -1, -1, VEHICLE_RESPAWN); //Ambulance
	LSFMDVehicles[9] = AddStaticVehicleEx(544, 1513.0217285156, -2173.1804199219, 13.916874885559, 90, -1, -1, VEHICLE_RESPAWN);//Ambulance
	LSFMDVehicles[10] = AddStaticVehicleEx(416, 87.18, -160.59, 2.74, 357.75, 1, 3, VEHICLE_RESPAWN);//Ambulance - LSFMD Sub Station
	LSFMDVehicles[11] = AddStaticVehicleEx(490, 97.63, -171.87, 2.75, 271.18, 3, 1, VEHICLE_RESPAWN); // LSFMD Rancher - Sub Station
	LSFMDVehicles[12] = AddStaticVehicleEx(407, 95.26, -164.77, 2.82, 269.32, 3, 1, VEHICLE_RESPAWN); // Fire Truck - Sub Station
	LSFMDVehicles[13] = AddStaticVehicleEx(563, 152.42, -167.52, 2.28, 92.43, 3, 1, VEHICLE_RESPAWN); // Raindance - Sub Station
	LSFMDVehicles[14] = AddStaticVehicleEx(416,1220.61, 301.97, 19.70, 155.82,1,3, VEHICLE_RESPAWN); // Memorial - Ambulance
	LSFMDVehicles[15] = AddStaticVehicleEx(416,1227.83, 298.53, 19.70, 155.16,1,3, VEHICLE_RESPAWN); // Memorial - Ambulance
	LSFMDVehicles[16] = AddStaticVehicleEx(563,1230.78, 318.34, 25.46, 153.57,1,3, VEHICLE_RESPAWN); // Memorial - Raindance
	LSFMDVehicles[17] = AddStaticVehicleEx(416,1609.2712,-2181.0779,13.7039,177.3877,1,3, VEHICLE_RESPAWN); // LSFD Ambulance
	LSFMDVehicles[18] = AddStaticVehicleEx(554,1580.2485,-2147.9507,13.6308,270.7723,3,1, VEHICLE_RESPAWN); // LSFD Car
	LSFMDVehicles[19] = AddStaticVehicleEx(554,1545.3405,-2183.1868,13.6328,269.7860,3,1, VEHICLE_RESPAWN); // LSFD Car 2
	LSFMDVehicles[20] = AddStaticVehicleEx(416,1179.9149,-1308.8851,13.8767,268.7781,1,3, VEHICLE_RESPAWN); //Ambulance 1
	LSFMDVehicles[21] = AddStaticVehicleEx(416,1179.3976,-1338.5197,13.9653,270.0616,1,3, VEHICLE_RESPAWN); //Ambulance 2
	LSFMDVehicles[22] = AddStaticVehicleEx(416,2036.9012,-1425.9266,17.1406,359.5312,1,3, VEHICLE_RESPAWN); //Ambulance 3
	LSFMDVehicles[23] = AddStaticVehicleEx(416,2008.3009,-1411.0936,17.1413,88.3472,1,3, VEHICLE_RESPAWN); //Ambulance 4
	LSFMDVehicles[24] = AddStaticVehicleEx(407,1545.6364,-2155.6382,13.7988,273.9738,3,1, VEHICLE_RESPAWN); //Ambulance 5
	LSFMDVehicles[25] = AddStaticVehicleEx(407,1516.0275,-2162.9231,13.7834,89.9683,3,1, VEHICLE_RESPAWN); //Ambulance 6
	LSFMDVehicles[26] = AddStaticVehicleEx(416,1606.9974,-2167.0830,13.7039,91.1709,1,3, VEHICLE_RESPAWN); //Ambulance 7
	LSFMDVehicles[27] = AddStaticVehicleEx(416,1607.3264,-2148.6665,13.7040,89.7026,1,3, VEHICLE_RESPAWN); //Ambulance 8
	LSFMDVehicles[28] = AddStaticVehicleEx(490,1616.3599,-2144.3535,13.6824,88.7370,3,1, VEHICLE_RESPAWN); // LSFMDFBIRANCHER main station
	LSFMDVehicles[29] = AddStaticVehicleEx(490,1628.9847,-2151.2844,13.6831,269.9678,3,1, VEHICLE_RESPAWN); // LSFMDFBIRANCHER sub station new
    LSFMDVehicles[30] = AddStaticVehicleEx(416,-2668.79589844,605.40057373,14.75412750,180.00000000,1,3,VEHICLE_RESPAWN); //Ambulance
	LSFMDVehicles[31] = AddStaticVehicleEx(416,-2662.53906250,605.74005127,14.75412750,180.00000000,1,3,VEHICLE_RESPAWN); //Ambulance
	LSFMDVehicles[32] = AddStaticVehicleEx(416,-2655.28808594,605.89562988,14.75412750,180.00000000,1,3,VEHICLE_RESPAWN); //Ambulance
	LSFMDVehicles[33] = AddStaticVehicleEx(407,-2021.93737793,84.03466797,28.25847435,270.00000000,3,1,VEHICLE_RESPAWN); //Firetruck
	LSFMDVehicles[34] = AddStaticVehicleEx(407,-2022.07055664,92.80475616,28.41874695,270.00000000,3,1,VEHICLE_RESPAWN); //Firetruck
	LSFMDVehicles[35] = AddStaticVehicleEx(407,-2022.19433594,76.03833008,28.25847435,270.00000000,3,11,VEHICLE_RESPAWN); //Firetruck
	LSFMDVehicles[36] = AddStaticVehicleEx(563,1633.9830,-2180.9321,14.2601,267.5514,3,1,VEHICLE_RESPAWN); // fda raindance
	LSFMDVehicles[37] = AddStaticVehicleEx(563,1489.1141,-2168.0686,14.2523,180.3227,3,1,VEHICLE_RESPAWN); // raindance 2
	LSFMDVehicles[38] = AddStaticVehicleEx(487,-2703.3201,624.0250,14.1766,180.2649, 1, 3, VEHICLE_RESPAWN);//Medic Chopper/*Maverick*/
	LSFMDVehicles[39] = AddStaticVehicleEx(487, 1610.3516,-2180.1248,19.9312,354.8875,1, 3, VEHICLE_RESPAWN);//Medic Chopper/*Maverick*/ -- in LS
	LSFMDVehicles[40] = AddStaticVehicleEx(487, 1620.5365,-2179.8254,19.9498,5.4440,1, 3, VEHICLE_RESPAWN);//Medic Chopper/*Maverick*/ -- in LS

    for(new x;x<sizeof(LSFMDVehicles);x++) {
	    format(string, sizeof(string), "LSMFD %d", LSFMDVehicles[x]);
	    SetVehicleNumberPlate(LSFMDVehicles[x], string);
	    SetVehicleToRespawn(LSFMDVehicles[x]);
	}

	// Government vehicles
	GovVehicles[0] = AddStaticVehicleEx(409,1278.07080078,-2014.19921875,58.83128357,0.00000000,0, 0, VEHICLE_RESPAWN); //Stretch
	GovVehicles[1] = AddStaticVehicleEx(409,1278.27148438,-2024.24951172,58.83128357,0.00000000,0, 0, VEHICLE_RESPAWN); //Stretch
	GovVehicles[2] = AddStaticVehicleEx(489,1246.49230957,-2009.86267090,60.20861435,270.00000000,0, 0, VEHICLE_RESPAWN); //Rancher
	GovVehicles[3] = AddStaticVehicleEx(489,1246.25427246,-2015.10778809,60.20861435,270.00000000,0, 0, VEHICLE_RESPAWN); //Rancher
	GovVehicles[4] = AddStaticVehicleEx(489,1245.95520020,-2019.85485840,60.20861435,270.00000000,0, 0, VEHICLE_RESPAWN); //Rancher
	GovVehicles[5] = AddStaticVehicleEx(489,1245.90637207,-2024.60449219,60.20861435,270.00000000,0, 0, VEHICLE_RESPAWN); //Rancher
	GovVehicles[6] = AddStaticVehicleEx(463,1263.28942871,-2009.04907227,58.94292068,180.00000000,0, 0, VEHICLE_RESPAWN); //serbestbirakway
	GovVehicles[7] = AddStaticVehicleEx(463,1266.04895020,-2008.95178223,58.94292068,180.00000000,0, 0, VEHICLE_RESPAWN); //serbestbirakway
	GovVehicles[8] = AddStaticVehicleEx(487,1116.52880859,-2055.13989258,74.69468689,0.00000000,0, 0, VEHICLE_RESPAWN); //Maverick
	GovVehicles[9] = AddStaticVehicleEx(487,1115.95190430,-2019.10473633,74.69468689,180.00000000,0, 0, VEHICLE_RESPAWN); //Maverick
	GovVehicles[10] = AddStaticVehicleEx(426, 1257.2582, -2010.0286, 59.6413, 179.5065, 0, 0, VEHICLE_RESPAWN); // Premier
    GovVehicles[11] = AddStaticVehicleEx(426, 1462.2908, -1845.3002, 13.6906, 270.0187, 0, 0, VEHICLE_RESPAWN); // Premier
    GovVehicles[12] = AddStaticVehicleEx(426, 1487.0929, -1845.2926, 13.6904, 270.0193, 0, 0, VEHICLE_RESPAWN); // Premier
    GovVehicles[13] = AddStaticVehicleEx(426, 1509.3724, -1847.7166, 13.6876, 265.7939, 0, 0, VEHICLE_RESPAWN); // Premier
    GovVehicles[14] = AddStaticVehicleEx(560, 1532.8997, -1846.7733, 13.6909, 1.3031, 0, 0, VEHICLE_RESPAWN); // Unlimited
    GovVehicles[15] = AddStaticVehicleEx(560, 1551.6821, -1840.1754, 13.6897, 260.9821, 0, 0, VEHICLE_RESPAWN); // Unlimited
    GovVehicles[16] = AddStaticVehicleEx(560, 1554.8734, -1783.5621, 13.6906, 359.1968, 0, 0, VEHICLE_RESPAWN); // Unlimited
    GovVehicles[17] = AddStaticVehicleEx(560, 1554.6436, -1718.8489, 13.6926, 88.5928, 0, 0, VEHICLE_RESPAWN); // Unlimited


    for(new x;x<sizeof(GovVehicles);x++) {
	    format(string, sizeof(string), "GOV %d", GovVehicles[x]);
	    SetVehicleNumberPlate(GovVehicles[x], string);
	    SetVehicleToRespawn(GovVehicles[x]);
	}

	// SANews vehicles
    SANVehicles[0] = AddStaticVehicleEx(582,740.6042480469,-1334.6889648438,13.6949853897,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[1] = AddStaticVehicleEx(582,745.6818237305,-1334.6668701172,13.6950349808,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[2] = AddStaticVehicleEx(582,750.3946533203,-1334.4571533203,13.6954946518,180.6304321289,49,11,2000); //Newsvan
	SANVehicles[3] = AddStaticVehicleEx(582,755.1726684570,-1334.3752441406,13.6956758499,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[4] = AddStaticVehicleEx(582,760.6042480469,-1334.6889648438,13.6949853897,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[5] = AddStaticVehicleEx(582,765.6818237305,-1334.6668701172,13.6950349808,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[6] = AddStaticVehicleEx(582,770.3946533203,-1334.4571533203,13.6954946518,180.6304321289,49,11,2000); //Newsvan
	SANVehicles[7] = AddStaticVehicleEx(582,775.1726684570,-1334.3752441406,13.6956758499,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[8] = AddStaticVehicleEx(582,780.1726684570,-1334.3752441406,13.6956758499,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[9] = AddStaticVehicleEx(582,785.1726684570,-1334.3752441406,13.6956758499,180.5405273438,49,11,2000); //Newsvan
	SANVehicles[10] = AddStaticVehicleEx(488,743.5921630859,-1366.7655029297,25.9572105408,0.0000000000,49,11,2000); //Helikopter
	SANVehicles[11] = AddStaticVehicleEx(488,735.5921630859,-1366.7655029297,25.9572105408,0.0000000000,49,11,2000); //Helikopter

    for(new x;x<sizeof(SANVehicles);x++) {
	    format(string, sizeof(string), "SAN %d", SANVehicles[x]);
	    SetVehicleNumberPlate(SANVehicles[x], string);
	    SetVehicleToRespawn(SANVehicles[x]);
	}

    // Trucker Vehicles
   	TruckerVehicles[0] = AddStaticVehicleEx(456,2223.45068359,-2675.48315430,13.79090691,0.00000000,-1,-1,300); //Yankee
	TruckerVehicles[1] = AddStaticVehicleEx(456,2229.94897461,-2675.69653320,13.79090691,0.00000000,-1,-1,300); //Yankee
	TruckerVehicles[2] = AddStaticVehicleEx(456,2247.59399414,-2678.06005859,13.79090691,0.00000000,-1,-1,300); //Yankee
	TruckerVehicles[3] = AddStaticVehicleEx(414,2252.95361328,-2678.02856445,13.70086479,0.00000000,-1,-1,300); //Mule
	TruckerVehicles[4] = AddStaticVehicleEx(414,2257.94824219,-2677.81347656,13.70086479,0.00000000,-1,-1,300); //Mule
	TruckerVehicles[5] = AddStaticVehicleEx(414,2263.20507812,-2677.70410156,13.70086479,0.00000000,-1,-1,300); //Mule
	TruckerVehicles[6] = AddStaticVehicleEx(456,2165.29052734,-2657.01904297,13.79687500,270.00000000,-1,-1,300); //Yankee
	TruckerVehicles[7] = AddStaticVehicleEx(456,2167.83178711,-2650.11987305,13.79687500,270.00000000,-1,-1,300); //Yankee
	TruckerVehicles[8] = AddStaticVehicleEx(456,2203.90942383,-2641.51489258,13.79687500,270.00000000,-1,-1,300); //Yankee
	TruckerVehicles[9] = AddStaticVehicleEx(499,2175.12963867,-2637.71411133,13.64687538,180.00000000,-1,-1,300); //Benson
	TruckerVehicles[10] = AddStaticVehicleEx(499,2180.41625977,-2638.07910156,13.64687538,180.00000000,-1,-1,300); //Benson
	TruckerVehicles[11] = AddStaticVehicleEx(499,2185.71166992,-2638.12036133,13.64687538,180.00000000,-1,-1,300); //Benson
	TruckerVehicles[12] = AddStaticVehicleEx(414,2205.19726562,-2597.21484375,13.69090652,270.00000000,-1,-1,300); //Mule
	TruckerVehicles[13] = AddStaticVehicleEx(499,2213.06250000,-2583.26538086,13.64687538,0.00000000,-1,-1,300); //Benson
	TruckerVehicles[14] = AddStaticVehicleEx(456,2204.75000000,-2569.27026367,13.79687500,270.00000000,-1,-1,300); //Yankee
	TruckerVehicles[15] = AddStaticVehicleEx(456,2239.31396484,-2644.32055664,13.79451466,90.00000000,-1,-1,300); //Yankee
	TruckerVehicles[16] = AddStaticVehicleEx(456,2239.52050781,-2638.99414062,13.79451466,90.00000000,-1,-1,300); //Yankee
	TruckerVehicles[17] = AddStaticVehicleEx(456,2239.46142578,-2633.49414062,13.79451466,90.00000000,-1,-1,300); //Yankee
	TruckerVehicles[18] = AddStaticVehicleEx(456,2239.34033203,-2627.85107422,13.79451466,90.00000000,-1,-1,300); //Yankee
	TruckerVehicles[19] = AddStaticVehicleEx(456,2206.29296875,-2530.18920898,13.79687500,270.00000000,-1,-1,300); //Yankee
	TruckerVehicles[20] = AddStaticVehicleEx(456,2206.20117188,-2524.10937500,13.79687500,270.00000000,-1,-1,300); //Yankee
	TruckerVehicles[21] = AddStaticVehicleEx(456,2206.03466797,-2518.52441406,13.79687500,270.00000000,-1,-1,300); //Yankee
	
	// TIR FR ARALARI
   	TirVehicles[0] = AddStaticVehicle(591,1681.3542,2317.4434,11.3493,269.1071,0,0); // trclk
   	TirVehicles[1] = AddStaticVehicle(403,1690.1923,2317.4795,11.4361,269.7741,0,0); // trclk
   	TirVehicles[2] = AddStaticVehicle(403,1690.1417,2323.4148,11.4300,271.6211,0,0); // trclk
   	TirVehicles[3] = AddStaticVehicle(591,1681.2426,2323.1521,11.3552,271.5007,0,0); // trclk
   	TirVehicles[4] = AddStaticVehicle(403,1690.1476,2329.5090,11.4152,272.6236,0,0); // trclk
   	TirVehicles[5] = AddStaticVehicle(591,1681.2792,2329.1626,11.3480,272.0438,0,0); // trclk
   	TirVehicles[6] = AddStaticVehicle(403,1689.7123,2335.6465,11.4152,272.9861,0,0); // trclk
   	TirVehicles[7] = AddStaticVehicle(591,1681.0524,2335.2192,11.3564,271.8666,0,0); // trclk
   	TirVehicles[8] = AddStaticVehicle(591,1681.2759,2345.1104,11.4059,270.1549,0,0); // trc
   	TirVehicles[9] = AddStaticVehicle(403,1689.8907,2345.4265,11.4294,272.3325,0,0); // trc
   	TirVehicles[10] = AddStaticVehicle(403,1689.4695,2350.6216,11.4238,271.7876,0,0); // trc
   	TirVehicles[11] = AddStaticVehicle(591,1680.5756,2350.3679,11.3456,271.3307,0,0); // trc
   	TirVehicles[12] = AddStaticVehicle(403,1689.9396,2356.4314,11.4159,271.7545,0,0); // trc
   	TirVehicles[13] = AddStaticVehicle(591,1681.0403,2356.1912,11.3611,271.3117,0,0); // trc
   	TirVehicles[14] = AddStaticVehicle(403,1690.1370,2361.5085,11.4082,274.3175,0,0); // trc
   	TirVehicles[15] = AddStaticVehicle(591,1681.2263,2360.8435,11.3558,274.1830,0,0); // trc
   	TirVehicles[16] = AddStaticVehicle(403,1630.1073,2352.7754,11.3959,91.1824,0,0); // trc
   	TirVehicles[17] = AddStaticVehicle(591,1639.0052,2352.9163,11.3146,90.6130,0,0); // trc
   	TirVehicles[18] = AddStaticVehicle(403,1630.2164,2346.2764,11.4405,88.5044,0,0); // trc
   	TirVehicles[19] = AddStaticVehicle(591,1639.1488,2346.1404,11.3588,89.2690,0,0); // trc
   	TirVehicles[20] = AddStaticVehicle(403,1630.6726,2334.7998,11.4091,89.9115,0,0); // trc
   	TirVehicles[21] = AddStaticVehicle(591,1639.5366,2334.7625,11.3778,89.2794,0,0); // trc
   	TirVehicles[22] = AddStaticVehicle(403,1630.5443,2328.1938,11.4090,89.5922,0,0); // trc
   	TirVehicles[23] = AddStaticVehicle(591,1639.4572,2328.1758,11.3563,89.8193,0,0); // trc
   	TirVehicles[24] = AddStaticVehicle(403,1630.2382,2316.6104,11.4066,90.1221,0,0); // trc
   	TirVehicles[25] = AddStaticVehicle(591,1639.0552,2316.5991,11.3653,89.5853,0,0); // trc
   	TirVehicles[26] = AddStaticVehicle(403,1630.3169,2307.7549,11.4089,89.9482,0,0); // trc
   	TirVehicles[27] = AddStaticVehicle(591,1639.2467,2307.7700,11.3581,90.0444,0,0); // trc
   	TirVehicles[28] = AddStaticVehicle(403,1630.2457,2297.0591,11.4076,89.3273,0,0); // trc
   	TirVehicles[29] = AddStaticVehicle(591,1639.1774,2296.9768,11.3555,89.4789,0,0); // trc

    // Cimentocu ARALARI
   	CimentoVehicles[0] = AddStaticVehicle(584,1839.1010, -1794.8956, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[1] = AddStaticVehicle(403,1849.1277, -1794.9033, 14.0008,-90.0000,3,3); // cimentocu
   	CimentoVehicles[3] = AddStaticVehicle(584,1839.1748, -1799.6750, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[4] = AddStaticVehicle(403,1849.1293, -1799.7212, 14.0008,-90.0000,3,3); // cimentocu
   	CimentoVehicles[5] = AddStaticVehicle(584,1868.0371, -1794.5146, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[6] = AddStaticVehicle(403,1878.5308, -1794.3247, 14.0008,-90.0000,3,3); // cimentocu
   	CimentoVehicles[7] = AddStaticVehicle(584,1867.9944, -1799.6727, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[8] = AddStaticVehicle(403,1878.9548, -1799.6962, 14.0008,-90.0000,3,3); // cimentocu
   	CimentoVehicles[9] = AddStaticVehicle(584,1893.0577, -1800.6351, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[10] = AddStaticVehicle(403,1903.1099, -1800.3372, 14.0008,-90.0000,3,3); // cimentocu
   	CimentoVehicles[11] = AddStaticVehicle(584,1891.9110, -1793.8903, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[12] = AddStaticVehicle(403,1902.0643, -1794.2266, 14.0008,-90.0000,3,3); // cimentocu
   	CimentoVehicles[13] = AddStaticVehicle(584,1894.6097, -1813.7950, 14.5077,-105.0000,3,3); // cimentocu
   	CimentoVehicles[14] = AddStaticVehicle(403,1904.1617, -1816.1912, 14.5077,-105.0000,3,3); // cimentocu
   	CimentoVehicles[15] = AddStaticVehicle(584,1918.6012, -1818.1490, 14.5077,-95.0000,3,3); // cimentocu
   	CimentoVehicles[16] = AddStaticVehicle(403,1928.9108, -1819.0156, 14.0008,-95.0000,3,3); // cimentocu
   	CimentoVehicles[17] = AddStaticVehicle(584,1920.0107, -1799.8275, 14.5077,-90.0000,3,3); // cimentocu
   	CimentoVehicles[18] = AddStaticVehicle(403,1930.6429, -1799.7225, 14.0008,-90.0000,3,3); // cimentocu
   	
    // Paintball (pickup + 3dtextlabel)
    CreateDynamic3DTextLabel("Paintball v1 - Oynamak iin /paintball",COLOR_WHITE, 1782.872680, -1565.576049, 13.347187+0.5,10.0);
    CreatePickup(1254, 23, 1782.872680, -1565.576049, 13.347187, -1);

	// Added by Calgon (extra vehicles really needed)
	TruckerVehicles[22] = AddStaticVehicle(456,2453.1619,-2639.1846,13.8379,270.4689,102,300); // Ocean Docks 1
	TruckerVehicles[23] = AddStaticVehicle(456,2473.5852,-2639.2966,13.8242,268.3057,102,300); // Ocean Docks 2
	TruckerVehicles[24] = AddStaticVehicle(456,2453.1306,-2649.3818,13.8346,271.3797,102,300); // Ocean Docks 3
	TruckerVehicles[25] = AddStaticVehicle(456,2471.5981,-2649.7627,13.8288,269.0897,102,300); // Ocean Docks 4
	TruckerVehicles[26] = AddStaticVehicle(456,2393.3713,-2670.7224,13.8374,89.5815,102,300); // Ocean Docks 5
	TruckerVehicles[27] = AddStaticVehicle(456,2397.2883,-2627.0601,13.8374,358.5510,102,300); // Ocean Docks 6
	TruckerVehicles[28] = AddStaticVehicle(456,2397.9001,-2602.9380,13.8374,358.5483,102,300); // Ocean Docks 7
	TruckerVehicles[29] = AddStaticVehicle(456,2203.0491,-2632.2080,13.2632,91.2853,53,300); // Ocean Docks Truck x1 (needs model)
	TruckerVehicles[30] = AddStaticVehicle(456,2247.2212,-2605.2102,8.0225,356.8250,53,300); // Ocean Docks Truck x2 (needs model)
	TruckerVehicles[31] = AddStaticVehicle(456,2248.7383,-2577.7927,8.0144,356.8441,53,300); // Ocean Docks Truck x3 (needs model)
	TruckerVehicles[32] = AddStaticVehicle(456,2248.7473,-2556.0659,8.0211,359.6938,53,300); // Ocean Docks Truck x4 (needs model)
	TruckerVehicles[33] = AddStaticVehicle(456,2248.8784,-2531.6667,8.0229,359.6888,53,300); // Ocean Docks Truck x5 (needs model)
	TruckerVehicles[34] = AddStaticVehicle(456,2248.9675,-2515.1245,8.0156,359.6818,53,300); // Ocean Docks Truck x6 (needs model)
	TruckerVehicles[35] = AddStaticVehicle(456,2249.0857,-2494.2341,8.0111,359.7150,53,300); // Ocean Docks Truck x7 (needs model)
	TruckerVehicles[36] = AddStaticVehicle(456,2264.4348,-2484.6040,8.0058,261.9050,53,300); // Ocean Docks Truck x8 (needs model)

	//ARMY BASE
    CreateDynamicObject(3115,269.29998779,1881.80004883,3.20000005,0.00000000,0.00000000,0.00000000); //object(carrier_lift1_sfse) (2)
    CreateDynamicObject(16782,261.89999390,1883.59997559,5.90000010,0.00000000,0.00000000,0.00000000); //object(a51_radar_scan) (1)
    CreateDynamicObject(9819,263.00000000,1882.30004883,4.30000019,0.00000000,0.00000000,179.99450684); //object(shpbridge_sfw02) (2)
    CreateDynamicObject(9818,274.60000610,1887.69995117,5.00000000,0.00000000,0.00000000,0.00000000); //object(shpbridge_sfw01) (1)
    CreateDynamicObject(3397,262.29980469,1888.19921875,3.40000010,0.00000000,0.00000000,179.99450684); //object(a51_sdsk_1_) (2)
    CreateDynamicObject(1671,263.70001221,1888.00000000,4.00000000,0.00000000,0.00000000,270.00000000); //object(swivelchair_a) (1)
    CreateDynamicObject(8209,189.39999390,1991.09997559,19.70000076,0.00000000,0.00000000,269.98901367); //object(vgsselecfence11) (2)
    CreateDynamicObject(8209,310.89999390,2081.10009766,19.70000076,0.00000000,0.00000000,179.99450684); //object(vgsselecfence11) (3)
    CreateDynamicObject(8209,339.70001221,2081.19995117,19.70000076,0.00000000,0.00000000,179.98901367); //object(vgsselecfence11) (4)
    CreateDynamicObject(8209,389.60000610,2031.59997559,19.70000076,0.00000000,0.00000000,89.98901367); //object(vgsselecfence11) (5)
    CreateDynamicObject(8209,389.60000610,1940.00000000,19.70000076,0.00000000,0.00000000,89.97802734); //object(vgsselecfence11) (6)
    CreateDynamicObject(987,378.79998779,1885.80004883,16.70000076,0.00000000,0.00000000,22.00000000); //object(elecfence_bar) (1)
    CreateDynamicObject(987,367.70001221,1881.30004883,16.70000076,0.00000000,0.00000000,21.99462891); //object(elecfence_bar) (12)
    CreateDynamicObject(987,356.60000610,1876.80004883,16.70000076,0.00000000,0.00000000,21.99462891); //object(elecfence_bar) (13)
    CreateDynamicObject(987,355.00000000,1876.19995117,16.70000076,0.00000000,0.00000000,21.99462891); //object(elecfence_bar) (14)
    CreateDynamicObject(987,355.20001221,1864.40002441,16.70000076,0.00000000,0.00000000,89.99462891); //object(elecfence_bar) (15)
    CreateDynamicObject(987,355.20001221,1852.50000000,16.70000076,0.00000000,0.00000000,89.99450684); //object(elecfence_bar) (16)
    CreateDynamicObject(987,355.20001221,1840.59997559,16.70000076,0.00000000,0.00000000,89.99450684); //object(elecfence_bar) (17)
    CreateDynamicObject(987,355.20001221,1828.69995117,16.70000076,0.00000000,0.00000000,89.99450684); //object(elecfence_bar) (18)
    CreateDynamicObject(987,355.20001221,1816.80004883,16.70000076,0.00000000,0.00000000,89.99450684); //object(elecfence_bar) (19)
    CreateDynamicObject(987,355.70001221,1809.40002441,16.70000076,0.00000000,0.00000000,94.24072266); //object(elecfence_bar) (20)
    CreateDynamicObject(987,326.19921875,1786.00000000,16.70000076,0.00000000,0.00000000,32.22290039); //object(elecfence_bar) (23)
    CreateDynamicObject(987,321.00000000,1782.90002441,16.70000076,0.00000000,0.00000000,32.22290039); //object(elecfence_bar) (24)
    CreateDynamicObject(987,309.00000000,1783.09997559,16.70000076,0.00000000,0.00000000,0.22290039); //object(elecfence_bar) (25)
    CreateDynamicObject(987,297.00000000,1783.09997559,16.70000076,0.00000000,0.00000000,0.21972656); //object(elecfence_bar) (26)
    CreateDynamicObject(987,285.10000610,1783.00000000,16.70000076,0.00000000,0.00000000,0.21972656); //object(elecfence_bar) (27)
    CreateDynamicObject(987,276.60000610,1783.00000000,16.70000076,0.00000000,0.00000000,0.21972656); //object(elecfence_bar) (28)
    CreateDynamicObject(987,276.29998779,1794.90002441,16.70000076,0.00000000,0.00000000,272.21972656); //object(elecfence_bar) (29)
    CreateDynamicObject(987,276.20001221,1798.90002441,16.70000076,0.00000000,0.00000000,272.21374512); //object(elecfence_bar) (30)
    CreateDynamicObject(16093,119.59999847,1903.59997559,21.70000076,0.00000000,0.00000000,180.00000000); //object(a51_gatecontrol) (1)
    CreateDynamicObject(16638,119.50000000,1904.59997559,19.89999962,0.00000000,0.00000000,179.99450684); //object(a51_gatecon_a) (1)
    CreateDynamicObject(3390,119.90000153,1905.00000000,21.79999924,0.00000000,0.00000000,90.00000000); //object(a51_sdsk_ncol1_) (1)
    CreateDynamicObject(3389,122.09999847,1904.00000000,21.79999924,0.00000000,0.00000000,90.00000000); //object(a51_srack1_) (1)
    CreateDynamicObject(1671,119.90000153,1904.00000000,22.29999924,0.00000000,0.00000000,140.00000000); //object(swivelchair_a) (2)
    CreateDynamicObject(2985,115.00000000,1906.79980469,21.79999924,0.00000000,0.00000000,90.00000000); //object(minigun_base) (1)
    CreateDynamicObject(2985,124.00000000,1906.59960938,21.79999924,0.00000000,0.00000000,89.99450684); //object(minigun_base) (2)
    CreateDynamicObject(3117,246.00000000,1862.90002441,19.50000000,0.00000000,0.00000000,39.99572754); //object(a51_ventcoverb) (1)
    CreateDynamicObject(987,200.89999390,2040.69995117,17.00000000,0.00000000,0.00000000,180.00000000); //object(elecfence_bar) (2)
    CreateDynamicObject(987,212.89999390,2040.69995117,17.00000000,0.00000000,0.00000000,179.99450684); //object(elecfence_bar) (3)
    CreateDynamicObject(987,213.00000000,2052.69995117,17.00000000,0.00000000,0.00000000,269.99450684); //object(elecfence_bar) (4)
    CreateDynamicObject(987,222.19999695,2060.39990234,17.00000000,0.00000000,0.00000000,219.98901367); //object(elecfence_bar) (5)
    CreateDynamicObject(987,226.39999390,2071.69995117,17.00000000,0.00000000,0.00000000,249.98535156); //object(elecfence_bar) (6)
    CreateDynamicObject(987,230.00000000,2081.60009766,17.00000000,0.00000000,0.00000000,249.98291016); //object(elecfence_bar) (7)
    CreateDynamicObject(987,241.89999390,2080.69995117,17.00000000,0.00000000,0.00000000,175.98291016); //object(elecfence_bar) (8)
    CreateDynamicObject(987,253.89999390,2080.69995117,17.00000000,0.00000000,0.00000000,179.97351074); //object(elecfence_bar) (9)
    CreateDynamicObject(987,265.89999390,2080.69995117,17.00000000,0.00000000,0.00000000,179.96704102); //object(elecfence_bar) (10)
    CreateDynamicObject(987,348.00000000,1800.00000000,16.70000076,0.00000000,0.00000000,54.24072266); //object(elecfence_bar) (20)
    CreateDynamicObject(987,330.39999390,1788.69995117,16.70000076,0.00000000,0.00000000,32.22290039); //object(elecfence_bar) (23)
    CreateDynamicObject(9241,232.00000000,2018.19995117,18.00000000,0.00000000,0.00000000,180.00000000); //object(copbits_sfn) (1)
    CreateDynamicObject(9241,233.00000000,1973.09997559,18.00000000,0.00000000,0.00000000,179.99450684); //object(copbits_sfn) (2)
    CreateDynamicObject(3095,268.50000000,1884.19995117,16.00000000,0.00000000,0.00000000,0.00000000); //object(a51_jetdoor) (1)
    
    
   	//All Saint n Otopark
	CreateObject(8661, 1226.07, -1302.46, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1224.56, -1342.10, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1236.75, -1302.48, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1239.61, -1342.09, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1236.15, -1365.11, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1223.84, -1367.09, 12.37,   0.00, 0.00, 90.00);
	CreateObject(967, 1216.68, -1358.14, 12.17,   0.00, 0.00, -90.00);
	CreateObject(966, 1216.20, -1357.14, 12.37,   0.00, 0.00, -90.00);
	CreateObject(968, 1216.22, -1357.10, 12.99,   0.00, 0.00, -90.00);
	CreateObject(973, 1215.99, -1363.75, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.24, -1345.43, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1215.98, -1373.00, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1215.98, -1380.59, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1220.59, -1385.22, 13.13,   0.00, 0.00, 180.00);
	CreateObject(973, 1229.90, -1385.22, 13.13,   0.00, 0.00, 180.00);
	CreateObject(973, 1241.33, -1385.19, 13.13,   0.00, 0.00, 180.00);
	CreateObject(973, 1245.80, -1380.39, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.81, -1371.06, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.79, -1361.82, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.78, -1352.88, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.76, -1343.89, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.74, -1334.60, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1216.25, -1336.07, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.26, -1326.80, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.31, -1308.25, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.30, -1317.54, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.31, -1298.92, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.32, -1295.39, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1239.15, -1290.95, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1220.83, -1290.92, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1230.01, -1290.94, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1241.31, -1290.97, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1245.74, -1325.31, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.73, -1316.00, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.75, -1306.68, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.75, -1297.50, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.71, -1295.72, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1239.29, -1385.22, 13.13,   0.00, 0.00, 180.00);
	CreateObject(640, 1231.23, -1376.90, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.23, -1355.45, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.23, -1366.16, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.30, -1301.82, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.21, -1344.68, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.19, -1333.98, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.22, -1323.35, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.24, -1312.58, 13.03,   0.00, 0.00, 0.00);
	CreateObject(10183, 1227.06, -1359.47, 12.39,   0.00, 0.00, -44.49);
	CreateObject(10183, 1227.02, -1319.48, 12.39,   0.00, 0.00, -44.49);
	CreateObject(10183, 1235.53, -1319.19, 12.39,   0.00, 0.00, 135.24);
	CreateObject(10183, 1235.42, -1359.37, 12.39,   0.00, 0.00, 135.24);
	CreateObject(1297, 1232.50, -1368.89, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1363.51, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.42, -1358.13, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1352.78, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.37, -1347.42, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1342.04, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.40, -1336.72, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1331.28, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.39, -1326.04, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1320.62, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.51, -1315.20, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1309.92, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1299.26, 15.77,   0.00, 0.00, -180.14);
	CreateObject(19425, 1216.18, -1355.23, 12.40,   0.00, 0.00, 90.00);
	CreateObject(19425, 1216.18, -1352.10, 12.40,   0.00, 0.00, 90.00);
	CreateObject(1297, 1229.95, -1299.31, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.12, -1374.28, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1229.99, -1379.54, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.02, -1368.87, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.17, -1363.55, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.11, -1358.13, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.11, -1352.82, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.17, -1347.46, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.12, -1342.04, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.04, -1336.70, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.00, -1331.30, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1229.93, -1326.04, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.01, -1320.64, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.08, -1315.21, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1229.88, -1309.91, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1232.44, -1304.55, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1230.04, -1304.53, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1232.43, -1374.24, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.35, -1379.44, 15.77,   0.00, 0.00, -180.14);
    
   	//Bug dzeltili Map (Sakn silme bu mapi bug vard bu maple dzelttim)
	CreateObject(987, 2778.41699, -1600.51282, 12.30367,   0.00000, -2.00000, 180.00000);
	CreateObject(987, 2790.36450, -1600.51282, 11.88560,   0.00000, -2.00000, 180.00000);
	CreateObject(10183, 2788.04590, -1623.25171, 9.91660,   0.00000, 0.00000, 226.00000);
	CreateObject(955, 2768.22168, -1601.42627, 10.27461,   0.00000, 0.00000, 90.00000);
	CreateObject(1555, 2765.57275, -1611.37341, 9.87042,   0.00000, 0.00000, 90.00000);
	CreateObject(1215, 2793.71558, -1627.10352, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2789.75659, -1628.96155, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2768.08154, -1628.81519, 11.63195,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2765.71313, -1618.52783, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2765.74634, -1602.69067, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1280, 2771.72363, -1600.90906, 10.34309,   0.00000, 0.00000, 93.00000);
	CreateObject(1280, 2777.33765, -1600.83496, 10.34310,   0.00000, 0.00000, 92.00000);
	CreateObject(1280, 2783.43018, -1600.66907, 10.34310,   0.00000, 0.00000, 92.00000);
	CreateObject(1215, 2774.55688, -1600.75940, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2780.64868, -1600.63086, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1215, 2785.85425, -1600.60901, 10.32939,   0.00000, 0.00000, 0.00000);
	CreateObject(1280, 2788.38916, -1600.64880, 10.34310,   0.00000, 0.00000, 92.00000);
	CreateObject(1215, 2790.25488, -1600.67786, 10.32939,   0.00000, 0.00000, 0.00000);
	
	//Seguel Mekan
	CreateObject(19448, 397.14526, -1883.83130, 1.23563,   0.00000, 0.00000, 0.00000);
	CreateObject(19447, 399.31863, -1883.68347, 1.15042,   0.00000, 0.00000, 0.00000);
	CreateObject(19448, 397.14529, -1893.47546, 1.23560,   0.00000, 0.00000, 0.00000);
	CreateObject(19447, 398.46814, -1893.24536, 1.24190,   0.00000, 0.00000, -10.00000);
	CreateObject(19447, 398.46970, -1893.26257, 4.72000,   0.00000, 0.00000, -10.00000);
	CreateObject(19447, 399.30405, -1883.71851, 4.59531,   0.00000, 0.00000, 0.00000);
	CreateObject(19448, 397.15445, -1883.85339, 4.74070,   0.12000, -0.06000, 0.00000);
	CreateObject(19448, 397.14529, -1893.47229, 4.71760,   0.00000, 0.00000, 0.00000);
	CreateObject(19325, 360.96500, -1881.57690, 4.29430,   0.00000, 0.00000, 0.00000);
	CreateObject(19447, 361.01645, -1877.09558, 0.51674,   0.00000, 0.00000, 0.00000);
	CreateObject(19447, 361.05194, -1886.70837, 0.51670,   0.00000, 0.00000, 0.00000);
	CreateObject(19325, 360.96500, -1888.20361, 4.29430,   0.00000, 0.00000, 0.00000);
	CreateObject(1491, 361.05847, -1893.03882, 0.99460,   0.00000, 0.00000, 90.00000);
	CreateObject(19447, 361.03802, -1896.33521, -0.72684,   0.00000, 0.00000, 0.00000);
	CreateObject(19428, 361.05237, -1892.30981, 5.21492,   0.00000, 0.00000, 0.00000);
	CreateObject(716, 361.92450, -1892.77551, 6.78176,   0.00000, 0.00000, 0.00000);
	CreateObject(19545, 368.49515, -1868.84863, 1.03190,   0.00000, 0.00000, 0.00000);
	CreateObject(19545, 383.38257, -1861.82959, 1.03190,   0.00000, 0.00000, 0.00000);
	CreateObject(14407, 363.69452, -1888.94788, -0.94702,   0.00000, 0.00000, 190.20007);
	CreateObject(14407, 367.59555, -1888.25867, -0.94530,   0.00000, 0.00000, 189.89993);
	CreateObject(14407, 371.48499, -1887.56848, -0.94530,   0.00000, 0.00000, -169.85989);
	CreateObject(14407, 375.37900, -1886.87280, -0.94530,   0.00000, 0.00000, -169.80000);
	CreateObject(14407, 379.24905, -1886.19177, -0.94530,   0.00000, 0.00000, 189.29980);
	CreateObject(19448, 385.85120, -1885.93408, 0.50500,   0.00000, 0.00000, 86.16000);
	CreateObject(19448, 389.99509, -1891.08618, 0.50500,   0.00000, 0.00000, 0.12000);
	CreateObject(19429, 381.03851, -1884.83875, 0.50500,   0.00000, 0.00000, 8.70000);
	CreateObject(19429, 381.24142, -1884.88000, 0.50498,   0.00000, 0.00000, 9.42000);
	CreateObject(19448, 383.17291, -1881.01147, 2.18760,   0.00000, 90.00000, -3.96000);
	CreateObject(19448, 386.66415, -1881.23792, 2.18760,   0.00000, 90.00000, -3.96000);
	CreateObject(19448, 390.12051, -1881.47974, 2.18760,   0.00000, 90.00000, -3.96000);
	CreateObject(19448, 391.77988, -1891.12354, 2.18760,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 395.25610, -1891.28857, 2.18760,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 397.10632, -1881.80078, 2.18760,   0.00000, 90.00000, -3.96000);
	CreateObject(19448, 393.62399, -1881.62244, 2.18760,   0.00000, 90.00000, -3.96000);
	CreateObject(19448, 362.87186, -1881.89197, 2.14534,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 366.33301, -1880.88062, 2.14530,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 369.75421, -1880.25928, 2.14531,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 373.25473, -1879.93909, 2.14530,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 376.73428, -1879.34119, 2.14530,   0.00000, 90.00000, 0.00000);
	CreateObject(19448, 380.21136, -1879.28967, 2.14530,   0.00000, 90.00000, 0.00000);
	CreateObject(18663, 399.40701, -1883.97632, 4.71690,   0.00000, 0.00000, 180.00000);
	CreateObject(18667, 399.41248, -1885.33691, 2.29502,   0.00000, 0.00000, 180.00000);
	CreateObject(19815, 393.61469, -1879.22144, 5.19008,   0.00000, 0.00000, 0.00000);
	CreateObject(1297, 372.33987, -1892.79578, 3.00705,   0.00000, 0.00000, -86.28001);
	CreateObject(945, 379.56805, -1889.85425, 13.36171,   -3.90000, -1.44000, -90.53999);
	CreateObject(3406, 339.98117, -1905.64148, -1.95662,   0.00000, 0.00000, 90.00000);
	CreateObject(3406, 339.98120, -1914.43433, -1.95660,   0.00000, 0.00000, 90.00000);
	CreateObject(3406, 339.98120, -1923.21069, -1.95660,   0.00000, 0.00000, 90.00000);
	CreateObject(3406, 339.96121, -1932.01172, -1.95660,   0.00000, 0.00000, 90.00000);
	CreateObject(3406, 335.15997, -1927.01855, -1.95660,   0.00000, 0.00000, 0.00000);
	CreateObject(3406, 345.88904, -1922.53455, -1.95660,   0.00000, 0.00000, 0.00000);
	CreateObject(19124, 339.22159, -1936.72742, 2.16122,   0.00000, 0.00000, 0.00000);
	CreateObject(19611, 339.24149, -1936.69409, 0.08797,   0.00000, 0.00000, 0.00000);
	CreateObject(19087, 394.02957, -1881.27600, 6.47104,   -17.82000, -10.92000, 0.00000);
	CreateObject(19917, 394.58789, -1882.39368, 3.61247,   0.00000, 0.00000, 90.00000);
	CreateObject(19087, 393.96991, -1883.54834, 6.42250,   17.82000, -10.92000, 0.00000);
	CreateObject(19921, 396.10999, -1881.34961, 3.60444,   0.00000, 0.00000, -90.00000);
	CreateObject(19898, 395.05038, -1882.03101, 2.27493,   0.00000, 0.00000, 0.00000);
	CreateObject(19898, 394.73929, -1882.66907, 3.07820,   0.00000, 0.00000, -145.62000);
	CreateObject(19621, 393.90009, -1881.71521, 3.16510,   0.00000, 0.00000, 0.00000);
	CreateObject(2180, 394.09827, -1882.09375, 2.27374,   0.00000, 0.00000, 0.00000);
	CreateObject(2180, 394.09830, -1882.94250, 2.27480,   0.00000, 0.00000, 0.00000);
	CreateObject(19899, 396.63452, -1880.55225, 2.27940,   0.00000, 0.00000, 179.94000);
	CreateObject(19325, 389.91498, -1892.71094, 4.27933,   0.00000, 0.00000, 0.00000);
	CreateObject(19366, 389.99481, -1887.80872, 1.21230,   0.00000, 0.00000, 0.00000);
	CreateObject(19366, 396.37039, -1886.39709, 1.24210,   0.00000, 0.00000, 90.00000);
	CreateObject(19366, 393.15256, -1886.39709, 1.28178,   0.00000, 0.00000, 90.00000);
	CreateObject(1491, 390.05518, -1886.41638, 2.23338,   0.00000, 0.00000, 0.00000);
	CreateObject(19165, 392.39871, -1886.28845, 4.24870,   -90.00000, 0.00000, 0.00000);
	CreateObject(19366, 396.36990, -1886.39709, 4.72330,   0.00000, 0.00000, 90.00000);
	CreateObject(19366, 393.15009, -1886.39709, 4.76414,   0.00000, 0.00000, 90.00000);
	CreateObject(19366, 389.99481, -1887.80286, 4.70539,   0.00000, 0.00000, 0.00000);
	CreateObject(19171, 390.79053, -1886.36011, 5.47879,   90.00000, 0.00000, 180.00000);
	CreateObject(19174, 394.49408, -1886.49548, 4.32247,   0.00000, 0.00000, 0.00000);
	CreateObject(2180, 395.67877, -1890.34753, 2.27570,   0.00000, 0.00000, -180.00000);
	CreateObject(1671, 395.39041, -1892.09241, 2.68960,   0.00000, 0.00000, 179.64000);
	CreateObject(11631, 396.38992, -1890.82275, 3.51595,   0.00000, 0.00000, -90.00000);
	CreateObject(1671, 394.37857, -1889.41199, 2.68956,   0.00000, 0.00000, 88.74001);
	CreateObject(1671, 394.37857, -1889.41199, 2.68956,   0.00000, 0.00000, 88.74001);
	CreateObject(1671, 396.41434, -1889.29333, 2.68961,   0.00000, 0.00000, -90.00000);
	CreateObject(1412, 387.30148, -1886.03967, 2.41182,   0.00000, 0.00000, -3.60000);
	CreateObject(19121, 394.74249, -1890.48108, 1.70331,   0.00000, 0.00000, 0.00000);
	CreateObject(1726, 385.71619, -1886.75769, 0.92030,   0.00000, 0.00000, 0.24000);
	CreateObject(1726, 388.92999, -1887.30737, 0.92030,   0.00000, 0.00000, -90.00000);
	CreateObject(1726, 389.03751, -1889.95117, 0.92030,   0.00000, 0.00000, -99.78000);
	CreateObject(1726, 387.47061, -1892.04065, 0.92031,   0.00000, 0.00000, 178.07991);
	CreateObject(1827, 386.52365, -1889.60474, 0.88866,   0.00000, 0.00000, 0.00000);
	CreateObject(19625, 394.27960, -1890.70874, 3.09580,   0.00000, 0.00000, 0.00000);
	CreateObject(19897, 394.30191, -1890.66614, 3.08200,   0.00000, 0.00000, 0.00000);
	CreateObject(19810, 389.89050, -1887.41431, 3.71150,   0.00000, 0.00000, 89.94000);
	CreateObject(19810, 389.89459, -1886.19653, 3.87118,   0.00000, 0.00000, 0.00000);
	CreateObject(19893, 395.67712, -1890.14600, 3.07855,   0.00000, 0.00000, -50.94001);
	CreateObject(1726, 361.86203, -1880.15625, 2.22846,   0.00000, 0.00000, 0.00000);
	CreateObject(1726, 366.02768, -1880.00598, 2.22926,   0.00000, 0.00000, 0.00000);
	CreateObject(1726, 372.46780, -1879.84155, 2.22862,   0.00000, 0.00000, 0.00000);
	
	//SAD nterior
	CreateDynamicObject(14602, 443.17050, 129.15662, 1012.75000,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(14596, 441.67422, 113.92827, 1018.07123,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(14594, 413.20795, 128.15453, 1013.21185,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(14595, 431.43433, 128.62827, 1022.93750,   0.00000, 0.00000, 3.14160);
    CreateDynamicObject(1566, 436.15274, 118.79973, 1026.17432,   0.00000, 0.00000, -87.00000);
    CreateDynamicObject(1566, 436.33707, 115.69265, 1026.17432,   0.00000, 0.00000, 93.52000);
	CreateDynamicObject(1566, 444.10770, 120.98395, 1026.29285,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(14593, 425.64359, 158.53134, 1009.71088,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1522, 457.77277, 129.19337, 1007.37921,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1616, 457.52188, 125.54417, 1010.37494,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1616, 457.12921, 133.14490, 1010.37488,   0.00000, 0.00000, 101.00000);
	CreateDynamicObject(1892, 455.90347, 129.35262, 1007.34235,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 425.35156, 128.22018, 1007.38263,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 422.17001, 134.51260, 1007.38263,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 422.17001, 140.80510, 1007.38263,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 422.16995, 123.91969, 1007.38263,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1714, 422.17001, 115.75870, 1007.38263,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2190, 427.55338, 128.08876, 1008.10681,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2190, 424.04782, 134.27660, 1008.29510,   0.00000, 0.00000, -89.76000);
	CreateDynamicObject(2190, 424.04779, 140.51230, 1008.29510,   0.00000, 0.00000, -89.76000);
	CreateDynamicObject(2190, 424.04779, 123.69470, 1008.29510,   0.00000, 0.00000, -89.76000);
	CreateDynamicObject(2190, 424.04779, 115.48920, 1008.29510,   0.00000, 0.00000, -89.76000);
	CreateDynamicObject(1776, 431.19009, 114.03474, 1008.51898,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1776, 442.55957, 144.32521, 1008.51898,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1817, 440.18585, 139.99657, 1007.38208,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 439.54254, 142.46562, 1007.26807,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 441.72708, 138.70929, 1007.26813,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 442.86981, 141.77211, 1007.26813,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1703, 443.70459, 135.56171, 1007.26813,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 440.32339, 135.51080, 1007.26813,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2011, 441.57425, 144.41142, 1007.38391,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 440.98413, 135.63000, 1007.38391,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 436.07703, 144.07619, 1007.38391,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2007, 420.56766, 129.48398, 1007.37543,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 420.26440, 127.29800, 1007.40991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 420.26440, 130.82770, 1007.40991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 420.47586, 123.81694, 1007.40991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 420.62393, 120.32542, 1007.40991,   0.00000, 0.00000, 90.84000);
	CreateDynamicObject(2164, 420.74380, 117.93214, 1007.40991,   0.00000, 0.00000, 90.84000);
	CreateDynamicObject(2164, 420.26440, 133.30110, 1007.40991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 420.25772, 137.83351, 1007.40991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 420.21942, 140.37425, 1007.40991,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2002, 420.87921, 135.31039, 1007.53241,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2002, 420.96497, 122.34299, 1007.53241,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2002, 437.21161, 144.06836, 1007.38165,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, 443.22745, 138.25476, 1007.38171,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2202, 421.23083, 115.37970, 1007.36243,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2202, 420.70416, 142.22278, 1007.36243,   0.00000, 0.00000, 89.34000);
	CreateDynamicObject(2773, 429.48544, 127.37024, 1007.95123,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2773, 429.22751, 129.29727, 1007.95117,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2773, 431.41580, 127.34633, 1007.95123,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1892, 431.91171, 145.14259, 1007.37756,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1536, 429.68079, 146.70306, 1007.38391,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2164, 418.16779, 172.24210, 1007.35132,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 422.21710, 172.24210, 1007.35132,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 426.00461, 172.24210, 1007.35132,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2164, 430.73053, 172.24205, 1007.35126,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2202, 420.09079, 171.98901, 1007.48871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2202, 423.97681, 171.94290, 1007.48871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2202, 428.31784, 171.96254, 1007.48871,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, 432.97922, 171.65317, 1007.38177,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2011, 434.42664, 172.05283, 1007.38397,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 428.61002, 166.96864, 1007.38269,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1998, 423.35583, 166.38481, 1007.38232,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1998, 422.77582, 156.69142, 1007.38232,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 422.33591, 165.40753, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 423.75650, 158.69128, 1007.38269,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2008, 427.80917, 157.23119, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1998, 428.81009, 158.20953, 1007.38232,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(1998, 427.59351, 164.99466, 1007.38232,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 424.98053, 159.22694, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 426.84647, 159.36420, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 426.74231, 164.64076, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 424.30994, 165.28294, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 423.79214, 156.55685, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 423.50256, 164.58749, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 428.44479, 164.88293, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 428.71841, 155.86897, 1007.38269,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 428.78149, 159.27190, 1007.38269,   0.00000, 0.00000, 80.00000);
	CreateDynamicObject(1806, 422.47903, 159.58917, 1007.38269,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 423.54816, 167.28246, 1007.38269,   0.00000, 0.00000, 80.00000);
	CreateDynamicObject(1806, 427.59521, 168.08383, 1007.38269,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 423.52539, 151.83774, 1007.38092,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 429.02820, 151.78328, 1007.38092,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2002, 425.31946, 151.85777, 1007.38177,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1703, 419.48505, 132.76776, 1013.17902,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(1703, 425.22250, 132.93529, 1013.17902,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(1817, 422.97180, 132.31255, 1013.18323,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(3857, 435.11481, 138.20396, 1007.64319,   0.00000, 0.00000, 138.00000);
	CreateDynamicObject(3858, 445.06445, 134.86897, 1007.71234,   0.00000, 0.00000, 47.00000);
	CreateDynamicObject(3859, 430.70761, 166.68985, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 430.65344, 165.81902, 1007.83838,   0.00000, 0.00000, 16.34000);
	CreateDynamicObject(3859, 430.63611, 157.94678, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 430.57300, 156.12607, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 428.00851, 153.75146, 1007.83838,   0.00000, 0.00000, 107.48000);
	CreateDynamicObject(3859, 424.24786, 153.63055, 1007.83838,   0.00000, 0.00000, 107.48000);
	CreateDynamicObject(3859, 419.06848, 156.18974, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 419.02853, 157.90483, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 419.12881, 165.80801, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 419.12753, 166.76654, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(3859, 421.34454, 169.27780, 1007.83838,   0.00000, 0.00000, 107.42001);
	CreateDynamicObject(3859, 425.55896, 169.33713, 1007.83838,   0.00000, 0.00000, 107.42001);
	CreateDynamicObject(2008, 436.14725, 147.61261, 1013.18329,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1998, 435.20425, 145.57671, 1013.18329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1998, 444.78775, 149.39966, 1013.18329,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1998, 439.38187, 141.79153, 1013.18329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 440.39050, 143.77191, 1013.18329,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2008, 435.58853, 136.55170, 1013.18329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 443.79062, 147.44687, 1013.18329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1998, 436.60931, 138.55617, 1013.18329,   0.00000, 0.00000, -180.00000);
	CreateDynamicObject(1998, 444.99893, 137.71057, 1013.18329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2008, 446.05688, 139.70648, 1013.18329,   0.00000, 0.00000, 180.06000);
	CreateDynamicObject(14455, 439.07175, 150.92784, 1014.81305,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14455, 444.74222, 150.91931, 1014.81305,   0.00000, 0.00000, 179.88000);
	CreateDynamicObject(14455, 439.07175, 150.92784, 1014.81305,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(14455, 446.12808, 150.83133, 1014.81305,   0.00000, 0.00000, 179.88000);
	CreateDynamicObject(1806, 440.14255, 141.89024, 1013.18274,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 436.38046, 145.04115, 1013.18274,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 444.68698, 146.71182, 1013.18274,   0.00000, 0.00000, -0.72000);
	CreateDynamicObject(1806, 446.15622, 137.66341, 1013.18274,   0.00000, 0.00000, -0.72000);
	CreateDynamicObject(1806, 436.49896, 135.77205, 1013.18274,   0.00000, 0.00000, -0.18000);
	CreateDynamicObject(1806, 435.41882, 138.60358, 1013.18268,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 439.44019, 145.09482, 1013.18268,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 444.81726, 140.24196, 1013.18268,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 443.78091, 149.99306, 1013.18268,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 434.86493, 149.31947, 1013.18268,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(2001, 435.01828, 134.96544, 1013.18243,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 447.13831, 135.25998, 1013.18243,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2167, 447.32632, 146.27631, 1013.17877,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2167, 447.32526, 145.37386, 1013.17877,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2167, 447.44559, 141.06514, 1013.17877,   0.00000, 0.00000, 269.64001);
	CreateDynamicObject(2167, 447.32526, 145.37386, 1013.17877,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(2167, 447.43524, 140.17979, 1013.17877,   0.00000, 0.00000, 268.86002);
	CreateDynamicObject(2167, 434.65872, 139.91748, 1013.17877,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(2167, 434.63947, 140.82101, 1013.17877,   0.00000, 0.00000, 91.52000);
	CreateDynamicObject(2167, 434.59604, 141.66959, 1013.17877,   0.00000, 0.00000, 90.14000);
	CreateDynamicObject(2614, 420.54166, 123.26780, 1011.13885,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2614, 419.99963, 133.28351, 1011.13885,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1726, 428.34409, 144.60780, 1013.18268,   0.00000, 0.00000, -157.00000);
	CreateDynamicObject(1726, 428.09238, 148.66679, 1013.18268,   0.00000, 0.00000, -55.00000);
	CreateDynamicObject(1726, 424.25256, 148.40646, 1013.18268,   0.00000, 0.00000, 27.00000);
	CreateDynamicObject(1726, 424.17300, 144.21942, 1013.18268,   0.00000, 0.00000, -236.00000);
	CreateDynamicObject(1819, 426.94601, 146.88074, 1013.23413,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1815, 425.06610, 145.32404, 1013.18243,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 400.72760, 141.57550, 1014.88940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14455, 406.40952, 141.54842, 1014.88940,   0.00000, 0.00000, -0.06000);
	CreateDynamicObject(14455, 402.30222, 150.99744, 1014.88940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(14455, 405.51770, 151.43854, 1014.88940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(14455, 408.18628, 151.12044, 1014.88940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(14455, 411.26651, 151.31326, 1014.88940,   0.00000, 0.00000, -90.30000);
	CreateDynamicObject(14455, 410.96030, 146.97746, 1014.88940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14455, 407.86539, 146.79295, 1014.88940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14455, 405.19107, 147.08624, 1014.88940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14455, 401.95508, 146.68034, 1014.88940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2258, 431.45166, 151.37630, 1015.46460,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1502, 430.07932, 142.14235, 1013.17322,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(1502, 437.45303, 134.10759, 1013.21277,   0.00000, 0.00000, 2.06000);
	CreateDynamicObject(1566, 399.45621, 137.22459, 1014.38300,   0.00000, 0.00000, 91.00000);
	CreateDynamicObject(3859, 419.10907, 157.93016, 1007.83838,   0.00000, 0.00000, 15.92000);
	CreateDynamicObject(2171, 396.95041, 113.12847, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2174, 395.48849, 113.05640, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2171, 393.58261, 113.12850, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2171, 392.17416, 113.02560, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2171, 390.77240, 112.92740, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2171, 389.35315, 112.86655, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2174, 387.91476, 112.73984, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2171, 386.03091, 112.69887, 1013.22223,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2595, 397.03491, 113.20120, 1014.40210,   0.00000, 0.00000, -193.00000);
	CreateDynamicObject(2595, 393.77771, 113.11400, 1014.40210,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(2595, 392.38950, 113.06450, 1014.40210,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(2595, 390.95169, 112.98250, 1014.40210,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(2595, 389.53577, 112.96539, 1014.40210,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(2595, 386.25235, 112.79257, 1014.40210,   0.00000, 0.00000, -196.00000);
	CreateDynamicObject(1715, 395.63904, 114.40808, 1013.22278,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(1715, 392.88474, 114.38015, 1013.22278,   0.00000, 0.00000, 39.76000);
	CreateDynamicObject(1715, 391.54193, 114.13776, 1013.22278,   0.00000, 0.00000, 39.76000);
	CreateDynamicObject(1715, 390.15585, 114.19040, 1013.22278,   0.00000, 0.00000, 39.40000);
	CreateDynamicObject(1715, 385.82724, 113.80259, 1013.22278,   0.00000, 0.00000, 39.40000);
	CreateDynamicObject(2102, 394.94760, 113.03130, 1014.01062,   0.00000, 0.00000, -186.00000);
	CreateDynamicObject(2102, 387.38403, 112.83018, 1014.01062,   0.00000, 0.00000, 186.00000);
	CreateDynamicObject(2606, 396.37469, 112.63440, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2606, 394.41412, 112.53706, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2606, 392.43390, 112.43571, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2606, 390.46005, 112.37875, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2606, 388.51086, 112.32563, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2606, 386.55530, 112.24412, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2606, 386.06519, 112.22862, 1015.24579,   0.00000, 0.00000, 182.00000);
	CreateDynamicObject(2700, 385.44800, 112.16222, 1016.65924,   0.00000, 0.00000, 64.00000);
	CreateDynamicObject(1502, 400.09567, 119.24388, 1013.22229,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14782, 396.32413, 102.35831, 1014.20038,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 399.86835, 105.19016, 1013.61499,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(1280, 392.69107, 104.61734, 1013.61499,   0.00000, 0.00000, -177.00000);
	CreateDynamicObject(2627, 392.77441, 110.47860, 1013.22388,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(2627, 394.28970, 110.42160, 1013.22388,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(2627, 395.75641, 110.43990, 1013.22388,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(2630, 397.66299, 110.61375, 1013.22278,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2630, 399.05298, 110.70396, 1013.22278,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1502, 400.45990, 107.73768, 1013.22223,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2009, 415.92697, 113.07748, 1013.21527,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(2008, 416.88211, 115.08820, 1013.22559,   0.00000, 0.00000, -179.00000);
	CreateDynamicObject(2009, 416.88760, 120.09359, 1013.22797,   0.00000, 0.00000, -178.00000);
	CreateDynamicObject(2008, 415.96259, 118.04186, 1013.22559,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(2001, 415.21848, 118.06227, 1013.22363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 415.34769, 114.47250, 1013.22363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 411.53745, 120.40652, 1013.22363,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2002, 412.21112, 120.48003, 1013.22302,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2167, 411.33853, 113.98377, 1013.22308,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(2167, 411.30273, 114.88397, 1013.22308,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(2167, 411.26715, 115.80338, 1013.22308,   0.00000, 0.00000, 92.00000);
	CreateDynamicObject(2167, 411.20572, 116.70682, 1013.22308,   0.00000, 0.00000, 91.64000);
	CreateDynamicObject(1806, 416.81412, 117.25796, 1013.22308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 416.95248, 113.06870, 1013.22308,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1806, 415.90805, 120.28140, 1013.22308,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1806, 415.94864, 116.08545, 1013.22308,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1502, 412.27600, 111.19350, 1013.22223,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19325, 434.80380, 127.12782, 1020.11713,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1703, 440.04935, 125.01354, 1018.91949,   0.00000, 0.00000, 183.00000);
	CreateDynamicObject(1703, 436.93909, 126.42925, 1018.91949,   0.00000, 0.00000, 93.00000);
	CreateDynamicObject(1817, 438.50644, 127.87662, 1018.98340,   0.00000, 0.00000, -87.00000);
	CreateDynamicObject(19325, 434.20398, 135.86992, 1020.11713,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1776, 439.55920, 133.82195, 1020.07928,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(2002, 438.37494, 133.62878, 1018.95062,   0.00000, 0.00000, 3.00000);
	CreateDynamicObject(1566, 406.57233, 122.33733, 1019.99677,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(2184, 420.58731, 117.45639, 1018.98279,   0.00000, 0.00000, -173.00000);
	CreateDynamicObject(2614, 419.76907, 114.24054, 1021.36011,   0.00000, 0.00000, 181.00000);
	CreateDynamicObject(1714, 419.63226, 115.25078, 1018.98108,   0.00000, 0.00000, -171.00000);
	CreateDynamicObject(2204, 424.28616, 120.15734, 1018.98334,   0.00000, 0.00000, -88.00000);
	CreateDynamicObject(1715, 418.23074, 118.36418, 1018.98328,   0.00000, 0.00000, 33.00000);
	CreateDynamicObject(1715, 420.38821, 118.49179, 1018.98328,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(1703, 415.96561, 118.90194, 1018.98352,   0.00000, 0.00000, 93.00000);
	CreateDynamicObject(1703, 406.25439, 131.90034, 1018.87152,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(1703, 401.38120, 131.59718, 1018.87152,   0.00000, 0.00000, 2.00000);
	CreateDynamicObject(1817, 404.39395, 131.23233, 1018.98181,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 419.11465, 132.41829, 1018.87152,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1703, 424.00534, 132.63083, 1018.87152,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1817, 422.20181, 132.09300, 1018.98181,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(1776, 395.40762, 131.35262, 1020.07715,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1776, 396.61832, 131.33582, 1020.07715,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 408.96396, 131.88669, 1018.98401,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 414.09448, 132.27679, 1018.98401,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 418.50781, 132.44141, 1018.98401,   0.00000, 0.00000, -0.12000);
	CreateDynamicObject(2001, 435.48749, 124.40955, 1018.97400,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1566, 429.88788, 141.80588, 1019.99677,   0.00000, 0.00000, 4.00000);
	CreateDynamicObject(2773, 431.14792, 129.30261, 1007.95117,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2614, 444.01208, 129.30789, 1011.86755,   0.00000, 0.00000, -91.00000);
	CreateDynamicObject(3857, 434.87881, 142.70468, 1007.78149,   0.00000, 0.00000, 138.06000);
	CreateDynamicObject(2001, 414.08679, 132.97658, 1013.22290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 408.80368, 132.67747, 1013.22290,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 418.73468, 132.80190, 1013.22290,   0.00000, 0.00000, -8.58000);

    //LSPD nterior
	CreateDynamicObject(4100,246.77636719,119.14941406,1005.49426270,179.99450684,0.00000000,39.78698730); //object(meshfence1_lan) (1)
	CreateDynamicObject(8167,239.43359375,110.25000000,1004.93316650,0.00000000,0.00000000,0.00000000); //object(apgate1_vegs01) (1)
	CreateDynamicObject(8167,253.00439453,114.35208130,1004.93316650,0.00000000,0.00000000,0.00000000); //object(apgate1_vegs01) (2)
	CreateDynamicObject(14782,267.84732056,109.19232941,1004.63323975,0.00000000,0.00000000,268.08020020); //object(int3int_boxing30) (1)
	CreateDynamicObject(14782,260.85162354,108.74571991,1004.63323975,0.00000000,0.00000000,90.94232178); //object(int3int_boxing30) (2)
	CreateDynamicObject(7191,232.99995422,143.63647461,1011.19342041,0.00000000,0.00000000,179.76049805); //object(vegasnnewfence2b) (1)
	CreateDynamicObject(2358,263.46618652,107.28220367,1003.73370361,0.00000000,0.00000000,181.90002441); //object(ammo_box_c2) (1)
	CreateDynamicObject(2358,263.46582031,107.28125000,1003.98394775,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (2)
	CreateDynamicObject(2358,263.46582031,107.28125000,1004.20916748,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (3)
	CreateDynamicObject(2358,263.46582031,107.28125000,1004.43438721,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (4)
	CreateDynamicObject(2359,263.30657959,107.25208282,1004.77838135,0.00000000,0.00000000,181.39978027); //object(ammo_box_c5) (1)
	CreateDynamicObject(2358,262.76599121,107.28039551,1004.45941162,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (5)
	CreateDynamicObject(2358,262.76562500,107.28027344,1004.23419189,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (6)
	CreateDynamicObject(2358,262.76562500,107.28027344,1004.00897217,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (7)
	CreateDynamicObject(2358,262.76562500,107.28027344,1003.80877686,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (8)
	CreateDynamicObject(2358,262.76562500,107.28027344,1003.65863037,0.00000000,0.00000000,181.89514160); //object(ammo_box_c2) (9)
	CreateDynamicObject(2948,275.77252197,123.06134796,1003.56188965,0.00000000,0.00000000,0.00000000); //object(cr_door_02) (1)
	CreateDynamicObject(2948,275.77725220,121.13547516,1003.56188965,0.00000000,0.00000000,179.66503906); //object(cr_door_02) (2)
	CreateDynamicObject(1616,252.56152344,107.35058594,1005.76739502,0.00000000,0.00000000,0.00000000); //object(nt_securecam1_01) (1)
	CreateDynamicObject(1491,264.96093750,115.75349426,1003.60900879,0.00000000,0.00000000,0.00000000); //object(gen_doorint01) (1)
	CreateDynamicObject(1555,266.47906494,115.77565765,1003.63238525,0.00000000,0.00000000,0.00000000); //object(gen_doorext17) (1)
	CreateDynamicObject(1651,266.87606812,119.39785004,1004.60723877,0.00000000,0.00000000,181.58471680); //object(od_copwindows) (2)
	CreateDynamicObject(1651,266.92150879,119.41818237,1006.70928955,0.00000000,0.00000000,181.58203125); //object(od_copwindows) (3)
	CreateDynamicObject(1491,267.09613037,115.97501373,1003.60900879,0.00000000,0.00000000,93.85989380); //object(gen_doorint01) (2)
	CreateDynamicObject(1651,266.90090942,118.95106506,1004.60723877,0.00000000,0.00000000,181.58471680); //object(od_copwindows) (5)
	CreateDynamicObject(1651,266.90039062,118.95019531,1006.45904541,0.00000000,0.00000000,181.58203125); //object(od_copwindows) (6)
	CreateDynamicObject(2986,266.95986938,117.49172211,1006.61041260,90.00000000,0.00000000,91.57977295); //object(lxr_motelvent) (1)
	CreateDynamicObject(2986,266.97463989,117.01647186,1006.61041260,90.00000000,0.00000000,91.57653809); //object(lxr_motelvent) (2)
	CreateDynamicObject(1649,266.88775635,119.16368103,1005.28295898,0.00000000,90.00000000,93.40493774); //object(wglasssmash) (1)
	CreateDynamicObject(2008,267.43453979,119.01253510,1003.61718750,0.00000000,0.00000000,92.70001221); //object(officedesk1) (1)
	CreateDynamicObject(2181,269.99804688,118.26933289,1003.61718750,0.00000000,0.00000000,270.02026367); //object(med_office5_desk_2) (1)
	CreateDynamicObject(2182,268.98043823,120.23191833,1003.61718750,0.00000000,0.00000000,270.27026367); //object(med_office5_desk_1) (1)
	CreateDynamicObject(1516,269.84375000,116.92089844,1003.97717285,0.00000000,0.00000000,0.00000000); //object(dyn_table_03) (1)
	CreateDynamicObject(1721,265.18994141,120.05978394,1003.51708984,0.00000000,0.00000000,181.50512695); //object(est_chair1) (1)
	CreateDynamicObject(2370,264.88958740,117.87501526,1003.24182129,0.00000000,0.00000000,0.00000000); //object(shop_set_1_table) (1)
	CreateDynamicObject(1892,252.47659302,109.60369110,1002.21875000,0.00000000,0.00000000,269.24023438); //object(security_gatsh) (1)
	CreateDynamicObject(1892,240.09683228,118.07995605,1002.21875000,0.00000000,0.00000000,269.98645020); //object(security_gatsh) (2)
	CreateDynamicObject(1892,217.19754028,117.30550385,998.21972656,0.00000000,0.00000000,358.22839355); //object(security_gatsh) (3)
	CreateDynamicObject(16780,265.26678467,119.02535248,1007.23876953,0.00000000,0.00000000,0.00000000); //object(ufo_light03) (2)
	CreateDynamicObject(2063,263.29510498,112.27163696,1004.49371338,0.00000000,0.00000000,359.93518066); //object(cj_greenshelves) (1)
	CreateDynamicObject(2066,261.62219238,112.02260590,1003.61718750,0.00000000,0.00000000,0.00000000); //object(cj_m_fileing2) (1)
	CreateDynamicObject(1787,268.81463623,120.25945282,1004.48406982,0.00000000,0.00000000,0.00000000); //object(med_video_1) (1)
	CreateDynamicObject(1791,268.90127563,120.46062469,1004.48596191,0.00000000,0.00000000,0.00000000); //object(swank_tv_2) (1)
	CreateDynamicObject(1808,268.08905029,120.64011383,1003.61718750,0.00000000,0.00000000,0.00000000); //object(cj_watercooler2) (1)
	CreateDynamicObject(1809,269.43606567,120.27085114,1004.40911865,0.00000000,0.00000000,0.50000000); //object(med_hi_fi) (1)
	CreateDynamicObject(2202,245.60911560,126.57507324,1002.21875000,0.00000000,0.00000000,0.00000000); //object(photocopier_2) (1)
 	CreateDynamicObject(1569, 244.91960144043, 106.9514465332, 1002.21875, 0, 0, 0);
	CreateDynamicObject(1569, 247.92735290527, 106.95510101318, 1002.21875, 0, 0, 179.79797363281);
	CreateDynamicObject(17564, 241.75001525879, 107.2537689209, 1003.4508056641, 0, 0, 359.94860839844);
	//Pain Sprey
	CreateObject(980, 2071.61353, -1831.91516, 14.35060,   0.00000, 0.00000, 90.00000);
	CreateObject(980, 1024.56970, -1029.42676, 33.29143,   0.00000, 0.00000, 0.00000);
	CreateObject(980, 720.32074, -462.60565, 15.59379,   0.00000, -90.00000, 0.00000);
	CreateObject(980, 488.65308, -1734.70984, 9.05921,   0.00000, -90.00000, -9.00000);
   	//LSPD n Map
    CreateDynamicObject(1215, 1492.91, -1774.49, 13.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1469.70, -1774.24, 13.89,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1412.50, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1411.00, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1410.04, -1753.50, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1410.04, -1755.00, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1547.90, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1546.20, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1548.80, -1753.30, 13.20,   0.00, 0.00, 270.00);
    CreateDynamicObject(1216, 1548.80, -1755.00, 13.20,   0.00, 0.00, 270.00);
    CreateDynamicObject(1223, 1409.70, -1752.30, 12.00,   0.00, 0.00, 315.00);
    CreateDynamicObject(1223, 1549.20, -1752.40, 12.00,   0.00, 0.00, 215.00);
    CreateDynamicObject(18981, 1512.28, -1612.65, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.94, -1637.80, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.12, -1659.54, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.10, -1684.43, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.10, -1709.04, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.10, -1733.70, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1609.78, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1634.47, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1659.31, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1684.29, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.25, -1709.22, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1734.13, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.46, -1609.60, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1634.58, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1659.37, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.50, -1684.32, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1709.19, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1734.07, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1438.03, -1609.69, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1441.99, -1634.33, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1442.79, -1658.89, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1438.10, -1683.56, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1437.64, -1707.52, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1437.98, -1732.34, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(10368, 1481.24, -1677.82, 32.87,   0.00, 0.00, -180.00);
    CreateDynamicObject(655, 1520.22, -1723.10, 12.91,   0.00, 0.00, 0.00);
    CreateDynamicObject(655, 1438.17, -1723.05, 12.89,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1462.22, -1718.38, 12.77,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1482.94, -1718.67, 13.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1515.45, -1699.30, 22.51,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1515.75, -1678.49, 22.44,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1482.92, -1659.16, 12.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1462.18, -1659.31, 12.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1443.07, -1678.55, 22.47,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1443.10, -1699.15, 22.45,   0.00, 0.00, 0.00);
    CreateDynamicObject(655, 1519.89, -1634.66, 12.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(655, 1438.46, -1634.64, 12.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(16061, 1485.49, -1602.62, 12.38,   0.00, 0.00, 90.00);
    CreateDynamicObject(16061, 1485.48, -1631.74, 12.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(6965, 1482.81, -1616.72, 15.99,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1461.06, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1473.99, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1492.50, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1503.39, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1503.63, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1492.48, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1476.86, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1461.43, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(3853, 1438.14, -1601.00, 16.17,   0.00, 0.00, 90.00);
    CreateDynamicObject(3853, 1520.55, -1600.91, 16.21,   0.00, 0.00, 90.00);
    CreateDynamicObject(1257, 1436.48, -1629.19, 13.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1229, 1435.56, -1626.23, 13.85,   0.00, 0.00, 270.00);
    CreateDynamicObject(14468, 1481.73, -1602.55, 12.61,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1471.47, -1602.49, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1487.51, -1602.49, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1496.13, -1602.19, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1499.87, -1601.89, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1508.03, -1602.35, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1465.26, -1602.27, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1456.79, -1602.19, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1456.56, -1631.44, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1464.72, -1631.64, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1469.88, -1631.47, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1478.73, -1631.43, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1482.99, -1631.52, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1487.65, -1631.53, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1496.56, -1631.58, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1499.15, -1631.46, 12.61,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1507.32, -1631.65, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(8623, 1450.36, -1616.66, 12.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(647, 1450.48, -1619.61, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(647, 1450.37, -1616.41, 12.67,   0.00, 0.00, 0.00);
    CreateDynamicObject(647, 1450.21, -1612.75, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(3439, 1450.09, -1610.33, 16.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(3439, 1450.37, -1622.71, 16.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(1294, 1522.71, -1640.77, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1522.71, -1656.79, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1522.71, -1674.98, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1522.71, -1702.54, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1486.39, -1725.71, 16.84,   0.00, 0.00, 90.00);
    CreateDynamicObject(1294, 1458.80, -1725.71, 16.84,   0.00, 0.00, 90.00);
    CreateDynamicObject(1294, 1436.15, -1675.37, 16.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(1294, 1436.15, -1656.06, 16.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(1294, 1436.15, -1642.41, 16.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(1359, 1438.28, -1633.54, 13.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(1359, 1520.39, -1633.62, 13.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1509.88, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1489.49, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1469.06, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1448.63, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1492.91, -1774.49, 13.82,   0.00, 0.00, 0.00);
    CreateDynamicObject(1215, 1469.70, -1774.24, 13.89,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1412.50, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1411.00, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1410.04, -1753.50, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1410.04, -1755.00, 13.20,   0.00, 0.00, 90.00);
    CreateDynamicObject(1216, 1547.90, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1546.20, -1752.70, 13.20,   0.00, 0.00, 0.00);
    CreateDynamicObject(1216, 1548.80, -1753.30, 13.20,   0.00, 0.00, 270.00);
    CreateDynamicObject(1216, 1548.80, -1755.00, 13.20,   0.00, 0.00, 270.00);
    CreateDynamicObject(1223, 1409.70, -1752.30, 12.00,   0.00, 0.00, 315.00);
    CreateDynamicObject(1223, 1549.20, -1752.40, 12.00,   0.00, 0.00, 215.00);
    CreateDynamicObject(18981, 1511.85, -1609.65, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.08, -1634.65, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.12, -1659.54, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.10, -1709.04, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1512.10, -1733.70, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1609.78, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1634.47, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1659.31, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1684.29, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.25, -1709.22, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1487.23, -1734.13, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.46, -1609.60, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1634.58, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1659.37, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.50, -1684.32, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.52, -1709.19, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1462.50, -1734.06, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1438.03, -1609.69, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1441.99, -1634.33, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1442.79, -1658.89, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1438.10, -1683.56, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1437.64, -1707.52, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(18981, 1437.98, -1732.34, 11.87,   0.00, 90.00, 0.00);
    CreateDynamicObject(655, 1520.22, -1723.10, 12.91,   0.00, 0.00, 0.00);
    CreateDynamicObject(655, 1438.17, -1723.05, 12.89,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1462.20, -1718.38, 12.77,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1482.94, -1718.67, 13.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1515.45, -1699.30, 22.51,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1515.75, -1678.49, 22.44,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1482.92, -1659.16, 12.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(3511, 1462.18, -1659.31, 12.80,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1443.07, -1678.55, 22.47,   0.00, 0.00, 0.00);
    CreateDynamicObject(712, 1443.10, -1699.15, 22.45,   0.00, 0.00, 0.00);
    CreateDynamicObject(655, 1519.89, -1634.66, 12.88,   0.00, 0.00, 0.00);
    CreateDynamicObject(655, 1438.46, -1634.64, 12.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(16061, 1485.49, -1602.62, 12.38,   0.00, 0.00, 90.00);
    CreateDynamicObject(6965, 1482.81, -1616.72, 15.99,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1461.06, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1473.99, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1492.50, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1503.39, -1631.56, 13.14,   0.00, 0.00, 180.00);
    CreateDynamicObject(1364, 1503.63, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1492.48, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1476.86, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(1364, 1461.43, -1602.17, 13.14,   0.00, 0.00, 0.00);
    CreateDynamicObject(3853, 1438.12, -1600.99, 16.17,   0.00, 0.00, 90.00);
    CreateDynamicObject(3853, 1520.55, -1600.91, 16.21,   0.00, 0.00, 90.00);
    CreateDynamicObject(1257, 1436.48, -1629.19, 13.59,   0.00, 0.00, 0.00);
    CreateDynamicObject(1229, 1435.56, -1626.23, 13.85,   0.00, 0.00, 270.00);
    CreateDynamicObject(14468, 1481.73, -1602.55, 12.61,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1471.47, -1602.49, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1487.51, -1602.49, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1496.13, -1602.19, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1499.87, -1601.89, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1508.03, -1602.35, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1465.26, -1602.27, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1456.79, -1602.19, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1456.56, -1631.44, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1464.72, -1631.64, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1469.88, -1631.47, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1478.73, -1631.43, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1482.99, -1631.52, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1487.65, -1631.53, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1496.56, -1631.58, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1499.15, -1631.46, 12.61,   0.00, 0.00, 0.00);
    CreateDynamicObject(14468, 1507.32, -1631.65, 12.37,   0.00, 0.00, 0.00);
    CreateDynamicObject(8623, 1450.36, -1616.66, 12.36,   0.00, 0.00, 90.00);
    CreateDynamicObject(647, 1450.48, -1619.61, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(647, 1450.37, -1616.41, 12.67,   0.00, 0.00, 0.00);
    CreateDynamicObject(647, 1450.21, -1612.75, 12.36,   0.00, 0.00, 0.00);
    CreateDynamicObject(3439, 1450.11, -1610.34, 16.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(3439, 1450.37, -1622.71, 16.43,   0.00, 0.00, 0.00);
    CreateDynamicObject(1294, 1522.71, -1640.77, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1522.71, -1656.79, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1522.71, -1674.98, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1522.71, -1702.54, 16.84,   0.00, 0.00, 180.00);
    CreateDynamicObject(1294, 1486.39, -1725.71, 16.84,   0.00, 0.00, 90.00);
    CreateDynamicObject(1294, 1458.80, -1725.71, 16.84,   0.00, 0.00, 90.00);
    CreateDynamicObject(1294, 1436.15, -1675.37, 16.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(1294, 1436.15, -1656.06, 16.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(1294, 1436.15, -1642.41, 16.84,   0.00, 0.00, 0.00);
    CreateDynamicObject(1359, 1438.28, -1633.54, 13.00,   0.00, 0.00, 0.00);
    CreateDynamicObject(1359, 1520.39, -1633.62, 13.08,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1509.88, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1489.49, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1469.06, -1599.75, 13.81,   0.00, 0.00, 0.00);
    CreateDynamicObject(8673, 1448.63, -1599.75, 13.81,   0.00, 0.00, 0.00);
    
    	//All Saint n Otopark
	CreateObject(8661, 1226.07, -1302.46, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1224.56, -1342.10, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1236.75, -1302.48, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1239.61, -1342.09, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1236.15, -1365.11, 12.37,   0.00, 0.00, 90.00);
	CreateObject(8661, 1223.84, -1367.09, 12.37,   0.00, 0.00, 90.00);
	CreateObject(967, 1216.68, -1358.14, 12.17,   0.00, 0.00, -90.00);
	CreateObject(966, 1216.20, -1357.14, 12.37,   0.00, 0.00, -90.00);
	CreateObject(968, 1216.22, -1357.10, 12.99,   0.00, 0.00, -90.00);
	CreateObject(973, 1215.99, -1363.75, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.24, -1345.43, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1215.98, -1373.00, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1215.98, -1380.59, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1220.59, -1385.22, 13.13,   0.00, 0.00, 180.00);
	CreateObject(973, 1229.90, -1385.22, 13.13,   0.00, 0.00, 180.00);
	CreateObject(973, 1241.33, -1385.19, 13.13,   0.00, 0.00, 180.00);
	CreateObject(973, 1245.80, -1380.39, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.81, -1371.06, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.79, -1361.82, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.78, -1352.88, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.76, -1343.89, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.74, -1334.60, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1216.25, -1336.07, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.26, -1326.80, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.31, -1308.25, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.30, -1317.54, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.31, -1298.92, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1216.32, -1295.39, 13.13,   0.00, 0.00, 90.00);
	CreateObject(973, 1239.15, -1290.95, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1220.83, -1290.92, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1230.01, -1290.94, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1241.31, -1290.97, 13.13,   0.00, 0.00, 0.00);
	CreateObject(973, 1245.74, -1325.31, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.73, -1316.00, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.75, -1306.68, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.75, -1297.50, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1245.71, -1295.72, 13.13,   0.00, 0.00, -90.00);
	CreateObject(973, 1239.29, -1385.22, 13.13,   0.00, 0.00, 180.00);
	CreateObject(640, 1231.23, -1376.90, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.23, -1355.45, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.23, -1366.16, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.30, -1301.82, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.21, -1344.68, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.19, -1333.98, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.22, -1323.35, 13.03,   0.00, 0.00, 0.00);
	CreateObject(640, 1231.24, -1312.58, 13.03,   0.00, 0.00, 0.00);
	CreateObject(10183, 1227.06, -1359.47, 12.39,   0.00, 0.00, -44.49);
	CreateObject(10183, 1227.02, -1319.48, 12.39,   0.00, 0.00, -44.49);
	CreateObject(10183, 1235.53, -1319.19, 12.39,   0.00, 0.00, 135.24);
	CreateObject(10183, 1235.42, -1359.37, 12.39,   0.00, 0.00, 135.24);
	CreateObject(1297, 1232.50, -1368.89, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1363.51, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.42, -1358.13, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1352.78, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.37, -1347.42, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1342.04, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.40, -1336.72, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1331.28, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.39, -1326.04, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1320.62, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.51, -1315.20, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1309.92, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.43, -1299.26, 15.77,   0.00, 0.00, -180.14);
	CreateObject(19425, 1216.18, -1355.23, 12.40,   0.00, 0.00, 90.00);
	CreateObject(19425, 1216.18, -1352.10, 12.40,   0.00, 0.00, 90.00);
	CreateObject(1297, 1229.95, -1299.31, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.12, -1374.28, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1229.99, -1379.54, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.02, -1368.87, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.17, -1363.55, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.11, -1358.13, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.11, -1352.82, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.17, -1347.46, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.12, -1342.04, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.04, -1336.70, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.00, -1331.30, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1229.93, -1326.04, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.01, -1320.64, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1230.08, -1315.21, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1229.88, -1309.91, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1232.44, -1304.55, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1230.04, -1304.53, 15.77,   0.00, 0.00, 0.00);
	CreateObject(1297, 1232.43, -1374.24, 15.77,   0.00, 0.00, -180.14);
	CreateObject(1297, 1232.35, -1379.44, 15.77,   0.00, 0.00, -180.14);

	//SAN Interior Yeni
    CreateObject(19376,247.7400000,1783.1300000,700.0000000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19376,258.2400000,1783.1400000,700.0000000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19376,247.7400000,1773.5500000,700.0000000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19376,258.2300000,1773.5500000,700.0000000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19450,250.4400000,1784.4400000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,245.6300000,1779.9400000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19450,253.9100000,1780.1200000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19450,253.0300000,1775.8400000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19404,252.3300000,1778.4100000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19388,249.6500000,1777.3000000,701.6500000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(19388,246.6600000,1775.8400000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19466,252.3800000,1778.3900000,702.4300000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2165,251.8100000,1777.8500000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19358,248.5400000,1774.6200000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1714,252.6300000,1777.0000000,700.0900000,0.0000000,0.0000000,230.0000000); //
    CreateObject(2007,253.7000000,1776.7000000,700.0100000,0.0000000,0.0000000,-90.0000000); //
    CreateObject(1961,250.8200000,1775.9700000,701.8600000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1962,251.5500000,1775.9700000,701.8600000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1960,252.2700000,1775.9700000,701.8600000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1569,247.0500000,1784.3900000,700.0200000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1569,250.0300000,1784.3900000,700.0200000,0.0000000,0.0000000,180.0000000); //
    CreateObject(1703,251.1000000,1783.8400000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1703,246.2300000,1779.1600000,700.0900000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2315,247.5200000,1779.4600000,700.0900000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2315,251.3900000,1782.5000000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2250,251.4200000,1782.5100000,701.0300000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2250,247.5200000,1780.3100000,701.0300000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2852,252.6100000,1782.4900000,700.5800000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2894,247.4200000,1779.6700000,700.5800000,0.0000000,0.0000000,39.0000000); //
    CreateObject(2011,246.2100000,1783.9700000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2011,253.2400000,1779.0700000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19450,245.6300000,1770.3000000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19358,250.1300000,1773.1200000,701.6500000,0.0000000,0.0000000,90.4000000); //
    CreateObject(19388,252.8000000,1774.2300000,701.6500000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(1536,252.2900000,1773.6900000,699.9500000,0.0000000,0.0000000,45.0000000); //
    CreateObject(19450,249.1800000,1768.9800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(1705,246.3000000,1770.1700000,700.0900000,0.0000000,0.0000000,90.0000000); //
    CreateObject(1705,247.8500000,1769.6300000,700.0900000,0.0000000,0.0000000,180.0000000); //
    CreateObject(1705,251.8300000,1769.6300000,700.0900000,0.0000000,0.0000000,180.0000000); //
    CreateObject(2315,248.6000000,1769.5500000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2855,248.7800000,1769.5500000,700.5800000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2251,249.6700000,1769.3600000,701.4100000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1667,249.9100000,1769.7500000,700.6900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1667,250.0800000,1769.6500000,700.6900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2817,248.0200000,1783.1800000,700.0800000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19450,254.8100000,1780.6500000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(14393,255.2300000,1759.9500000,702.3200000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,261.7300000,1768.9800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,249.1900000,1768.8300000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19388,255.3100000,1768.9800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19388,255.3100000,1768.8300000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,261.7300000,1768.8300000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(14391,256.1300000,1760.8600000,701.0500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(1705,257.1100000,1767.6400000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1705,258.6800000,1767.0200000,700.0900000,0.0000000,0.0000000,-90.0000000); //
    CreateObject(2332,259.6300000,1764.3600000,700.3800000,0.0000000,0.0000000,-90.0000000); //
    CreateObject(638,254.7200000,1765.2000000,701.4300000,0.0000000,0.0000000,90.0000000); //
    CreateObject(638,258.0700000,1765.2000000,701.4300000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2894,256.4000000,1765.1800000,701.1000000,0.0000000,0.0000000,80.0000000); //
    CreateObject(1714,257.1100000,1762.8100000,700.1000000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(1714,254.1800000,1762.7700000,700.1000000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2395,250.9500000,1759.8200000,700.1000000,0.0000000,0.0000000,180.0000000); //
    CreateObject(2395,252.4800000,1759.8200000,702.4600000,0.0000000,0.0000000,180.0000000); //
    CreateObject(2395,249.7900000,1759.5900000,702.4600000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2395,248.1900000,1759.5800000,700.1000000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1704,254.3100000,1753.9000000,700.0900000,0.0000000,0.0000000,135.0000000); //
    CreateObject(1704,256.2200000,1754.4900000,700.0900000,0.0000000,0.0000000,-135.0000000); //
    CreateObject(1815,254.4200000,1754.7300000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2247,254.8900000,1755.3200000,700.9900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2010,253.3300000,1754.9500000,700.1000000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2010,256.5900000,1754.9100000,700.1000000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19466,253.9500000,1759.9500000,701.9200000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19466,256.1700000,1759.9500000,701.9200000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19466,258.4000000,1759.9500000,701.9200000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19376,259.0000000,1763.9000000,699.9900000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19450,262.6100000,1772.1800000,701.6500000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(19450,263.6700000,1770.7600000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19450,257.7500000,1783.8200000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19388,257.7500000,1777.4300000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19388,259.3700000,1782.0800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19388,265.7600000,1782.0800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,268.4000000,1775.6300000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19358,256.1700000,1781.3100000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(2606,256.2100000,1781.1500000,702.5600000,13.5000000,0.0000000,0.0000000); //
    CreateObject(2165,255.7800000,1780.6000000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1806,256.4500000,1779.5900000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2078,255.1600000,1777.8200000,700.1100000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19376,268.6800000,1783.1200000,700.0000000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19376,268.7100000,1773.5300000,700.0000000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19450,262.0900000,1787.4500000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,269.7200000,1784.4100000,701.6500000,0.0000000,0.0000000,45.0000000); //
    CreateObject(19450,269.6100000,1780.3600000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(19450,272.1500000,1782.0800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19358,262.5700000,1782.0800000,701.6500000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19450,262.6800000,1786.8800000,701.6500000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1702,261.9300000,1772.3700000,700.0800000,0.0000000,0.0000000,225.0000000); //
    CreateObject(2315,259.7500000,1772.1400000,700.0900000,0.0000000,0.0000000,45.0000000); //
    CreateObject(2315,266.1000000,1777.9500000,700.0900000,0.0000000,0.0000000,45.0000000); //
    CreateObject(1702,268.8900000,1779.5800000,700.0800000,0.0000000,0.0000000,270.0000000); //
    CreateObject(1702,267.6300000,1776.3300000,700.0800000,0.0000000,0.0000000,180.0000000); //
    CreateObject(2251,260.1000000,1772.7100000,701.4100000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2251,266.9400000,1779.0100000,701.4100000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1667,260.7600000,1772.7300000,700.6900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1667,266.2600000,1777.7700000,700.6900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1667,266.3400000,1777.8600000,700.6900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1667,266.2000000,1777.8800000,700.6900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2207,265.4900000,1785.1400000,700.0900000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(1714,267.2900000,1785.6700000,700.1000000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(330,266.9800000,1784.2400000,700.8600000,90.0000000,0.0000000,90.0000000); //
    CreateObject(2894,265.8700000,1785.3300000,700.8600000,0.0000000,0.0000000,0.0000000); //
    CreateObject(2608,263.0000000,1785.0700000,701.2100000,0.0000000,0.0000000,90.0000000); //
    CreateObject(1962,267.8500000,1786.1300000,701.8600000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(2185,258.6700000,1785.3500000,700.0900000,0.0000000,0.0000000,0.0000000); //
    CreateObject(1714,260.0300000,1786.6000000,700.1000000,0.0000000,0.0000000,-45.0000000); //
    CreateObject(1704,260.0200000,1783.9200000,700.0900000,0.0000000,0.0000000,180.0000000); //
    CreateObject(2078,262.3800000,1784.8800000,700.1100000,0.0000000,0.0000000,-90.0000000); //
    CreateObject(2007,257.9500000,1786.7400000,700.0100000,0.0000000,0.0000000,90.0000000); //
    CreateObject(19378,247.7400000,1783.1300000,703.4300000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19378,247.7400000,1773.5500000,703.4300000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19378,258.2300000,1773.5500000,703.4300000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19378,268.6800000,1783.1200000,703.4300000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19378,268.7100000,1773.5300000,703.4300000,0.0000000,90.0000000,0.0000000); //
    CreateObject(19378,258.2400000,1783.1400000,703.4300000,0.0000000,90.0000000,0.0000000); //

	//oralar buralar
	CreateDynamicObject(970, 2218.86230, -2663.42065, 13.06254,   0.00000, 0.00000, -89.03999);
	CreateDynamicObject(970, 2218.57837, -2659.31372, 13.04313,   0.00000, 0.00000, -82.08001);
	CreateDynamicObject(970, 2217.56396, -2655.32446, 13.05824,   0.00000, 0.00000, -68.69997);
	CreateDynamicObject(966, 2216.50464, -2653.22070, 12.44911,   0.00000, 0.00000, -81.41998);
	CreateDynamicObject(968, 2216.52954, -2653.16406, 13.28233,   0.00000, 0.00000, -79.56000);
	CreateDynamicObject(967, 2216.26196, -2654.66577, 12.58085,   0.00000, 0.00000, -165.00005);
	CreateDynamicObject(970, 2215.35815, -2644.19824, 13.05673,   0.00000, 0.00000, -86.57999);
	CreateDynamicObject(970, 2215.02271, -2640.07764, 12.98629,   0.00000, 0.00000, -86.03999);
	CreateDynamicObject(970, 2214.88647, -2636.19653, 12.98498,   0.00000, 0.00000, -89.34000);
	CreateDynamicObject(970, 2214.13159, -2632.31348, 13.00482,   0.00000, 0.00000, -66.96001);
	CreateDynamicObject(988, 2186.60449, -2592.15234, 12.53189,   0.00000, 0.00000, -4.74000);
	CreateDynamicObject(982, 2198.82568, -2505.24268, 13.19665,   0.00000, 0.00000, -89.70000);
	CreateDynamicObject(983, 2211.72925, -2505.24463, 13.15760,   0.00000, 0.00000, -89.57999);
	CreateDynamicObject(982, 2215.02686, -2518.02563, 13.23036,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 2720.26050, -2504.53174, 12.48158,   0.00000, 0.00000, -90.71999);
	CreateDynamicObject(987, 2720.26929, -2487.19189, 15.03591,   0.00000, 0.00000, -89.81999);
	CreateDynamicObject(987, 2720.09790, -2506.12988, 15.15468,   0.00000, 0.00000, -91.98001);
	CreateDynamicObject(987, 2720.16553, -2497.68726, 15.00619,   0.00000, 0.00000, -88.32000);
	CreateDynamicObject(987, 2720.21899, -2379.58447, 14.69796,   0.00000, 0.00000, -91.67998);
	CreateDynamicObject(987, 2720.10425, -2389.04614, 14.87397,   0.00000, 0.00000, -90.54000);
	CreateDynamicObject(987, 2719.33569, -2409.63257, 14.95025,   0.00000, 0.00000, -90.30000);
	CreateDynamicObject(987, 2719.72144, -2399.13574, 17.74280,   0.00000, 0.00000, -89.75999);
	CreateDynamicObject(970, 2266.72827, -2674.98804, 13.09751,   0.00000, 0.00000, -88.98000);
	CreateDynamicObject(970, 2266.68530, -2679.12671, 13.11104,   0.00000, 0.00000, -90.47999);
	CreateDynamicObject(970, 2266.65137, -2683.21997, 13.10287,   0.00000, 0.00000, -90.60001);
	CreateDynamicObject(970, 2266.58057, -2687.33276, 13.09980,   0.00000, 0.00000, -91.13998);
	CreateDynamicObject(19461, 2262.36060, -2689.80884, 14.05437,   0.00000, 0.00000, -86.70000);
	CreateDynamicObject(19461, 2252.96606, -2690.44824, 14.04439,   0.00000, 0.00000, -85.44004);
	CreateDynamicObject(19461, 2243.94897, -2691.16089, 14.05774,   0.00000, 0.00000, -85.62000);
	CreateDynamicObject(19461, 2234.60547, -2691.91382, 14.06358,   0.00000, 0.00000, -85.08001);
	CreateDynamicObject(19461, 2226.89258, -2692.40527, 14.06221,   0.00000, 0.00000, -88.14001);
	CreateDynamicObject(19461, 2218.22314, -2692.58057, 14.08369,   0.00000, 0.00000, -88.67999);
	CreateDynamicObject(19313, 1942.15503, -1772.65308, 14.60681,   0.00000, 0.00000, -90.06001);
	CreateDynamicObject(19313, 1941.14319, -1772.63489, 14.55131,   0.00000, 0.00000, -90.12001);
	CreateDynamicObject(970, 1749.69983, -1849.91235, 13.07960,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1753.86182, -1849.94666, 13.11765,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1757.98120, -1849.94336, 13.11372,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1762.08850, -1849.93970, 13.11023,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1766.19141, -1849.95667, 13.11255,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1770.31641, -1849.94275, 13.12130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1774.42761, -1849.94727, 13.13014,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1778.57153, -1849.92236, 13.14379,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1782.70166, -1849.95459, 13.12255,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1786.84387, -1849.98901, 13.12848,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1790.98645, -1849.93677, 13.15369,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1795.05566, -1849.96472, 13.11732,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1799.32947, -1850.09229, 13.00126,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1803.45557, -1850.12134, 12.99639,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1807.38647, -1850.04236, 13.06546,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1228.95007, -1415.94495, 12.82193,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1224.82483, -1415.95898, 12.83288,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1210.77612, -1415.90063, 12.84436,   0.00000, 0.00000, 0.72000);
	CreateDynamicObject(970, 1214.92029, -1415.88965, 12.82636,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1206.11499, -1426.31775, 12.85438,   0.00000, 0.00000, -89.33999);
	CreateDynamicObject(970, 1206.21167, -1420.12610, 12.90472,   0.00000, 0.00000, -85.25999);
	CreateDynamicObject(970, 1233.54968, -1426.92090, 12.93401,   0.00000, 0.00000, -86.10001);
	CreateDynamicObject(970, 1233.52917, -1420.53699, 12.87150,   0.00000, 0.00000, -91.38000);
	CreateDynamicObject(11334, 1228.70276, -1420.44055, 12.98580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18090, 1223.50940, -1427.43945, 14.72344,   0.00000, 0.00000, -88.26001);
	CreateDynamicObject(11334, 1211.77087, -1421.95959, 13.01633,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19128, 1220.75073, -1420.66907, 12.34953,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1143.08960, -1416.03748, 13.10564,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1137.53979, -1416.02527, 13.10714,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1131.42102, -1415.95007, 13.10526,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1125.68750, -1415.93762, 13.06716,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1119.51782, -1415.96790, 13.01607,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1112.16223, -1415.97839, 13.04737,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1060.59424, -1496.41650, 12.87754,   0.00000, 0.00000, -104.70000);
	CreateDynamicObject(970, 1125.34314, -1561.98669, 13.02626,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1131.29602, -1562.12012, 13.07065,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1186.03894, -1493.22729, 12.96648,   0.00000, 0.00000, -90.90002);
	CreateDynamicObject(970, 1186.10120, -1486.48328, 13.02481,   0.00000, 0.00000, -88.38002);
	CreateDynamicObject(982, 2219.55981, -2669.25586, 13.49819,   0.00000, 0.00000, -90.30000);
	CreateDynamicObject(982, 2264.11670, -2672.83350, 13.25211,   0.00000, 0.00000, 88.25997);
	CreateDynamicObject(966, 2251.95093, -2625.76782, 12.56929,   -1.56000, -0.36000, -0.78000);
	CreateDynamicObject(968, 2252.03613, -2625.75879, 13.26517,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(966, 2252.10303, -2464.70728, 12.52920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(968, 2251.99438, -2464.68530, 13.36635,   0.00000, 0.00000, 0.00000);

	//kaka
	CreateDynamicObject(19462, 2123.50562, -1927.55884, 14.13806,   0.00000, 0.00000, -92.45999);
	CreateDynamicObject(19462, 2114.46973, -1927.16113, 14.18457,   0.00000, 0.00000, -92.45998);
	CreateDynamicObject(19462, 2112.20044, -1926.95715, 14.24069,   0.00000, 0.00000, -91.25996);
	CreateDynamicObject(19462, 2107.51074, -1922.41418, 14.01086,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 2128.22998, -1923.38647, 13.97600,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 2128.23120, -1916.96338, 13.96843,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 2107.49634, -1915.19312, 14.10445,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 2128.22607, -1913.06348, 13.97828,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 2117.44873, -1916.17444, 14.63560,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16151, 2117.10547, -1926.23730, 12.91181,   0.00000, 0.00000, -91.43999);
	CreateDynamicObject(16152, 2109.94238, -1918.44507, 12.35250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16152, 2127.18604, -1916.56970, 12.59341,   0.00000, 0.00000, -180.60002);
	CreateDynamicObject(2531, 2111.41724, -1926.32141, 12.40829,   0.00000, 0.00000, -180.48012);
	CreateDynamicObject(1968, 2118.47949, -1913.12671, 13.06002,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1968, 2114.32617, -1913.49438, 13.06066,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1968, 2114.14966, -1917.32495, 13.06585,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1968, 2121.60840, -1916.49182, 13.08897,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1968, 2122.04858, -1912.96924, 13.06766,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1968, 2119.42651, -1919.96582, 13.08685,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(984, 2114.29810, -1904.38513, 13.16482,   0.00000, 0.00000, -90.42002);
	CreateDynamicObject(983, 2123.87964, -1904.30200, 13.21094,   0.00000, 0.00000, -89.81998);
	CreateDynamicObject(983, 2125.55176, -1904.38574, 13.08648,   0.00000, 0.00000, -90.05999);
	CreateDynamicObject(991, 2137.33447, -1922.22009, 13.72420,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2242.47363, -2487.80151, 13.24007,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2242.48608, -2513.37012, 13.23659,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2242.47754, -2538.99634, 13.22331,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2242.48511, -2564.62305, 13.24953,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2242.44312, -2590.21655, 13.24142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(982, 2242.49951, -2615.86816, 13.22789,   0.00000, 0.00000, 0.00000);

	 // Vinewood map
    CreateDynamicObject(1215, 1421.44263, -860.34448, 48.54089,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1376.84448, -908.83319, 34.96894,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1383.26343, -886.35681, 37.95261,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1399.94788, -863.00946, 43.62886,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1447.32727, -866.74988, 52.82248,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1510.56104, -846.22845, 65.41674,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1471.82556, -873.59088, 56.25064,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1215, 1497.52258, -869.13684, 60.71116,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(979, 1503.79980, -836.19922, 66.90000,   0.00000, 9.24500, 245.49500);
    CreateDynamicObject(979, 1507.69995, -827.90002, 68.40000,   0.00000, 9.24500, 244.24500);
    CreateDynamicObject(979, 1510.00000, -819.20001, 69.90000,   0.00000, 9.23950, 265.99255);
    CreateDynamicObject(979, 1510.59998, -810.00000, 71.50000,   0.00000, 10.48706, 266.73999);
    CreateDynamicObject(979, 1511.00000, -800.79999, 73.20000,   0.00000, 10.48645, 268.23706);
    CreateDynamicObject(979, 1510.09998, -792.09998, 75.80000,   0.00000, 22.48096, 283.98669);
    CreateDynamicObject(979, 1506.09998, -785.20001, 79.50000,   4.27820, 25.80511, 313.91968);
    CreateDynamicObject(979, 1499.30005, -780.50000, 83.20000,   4.39944, 22.04272, 332.70221);
    CreateDynamicObject(979, 1491.19995, -777.20001, 86.30000,   5.01068, 17.03751, 339.44244);
    CreateDynamicObject(979, 1482.80005, -774.59998, 88.90000,   5.03574, 16.03079, 343.02698);
    CreateDynamicObject(979, 1474.19995, -772.09998, 91.20000,   5.10037, 13.01807, 342.04202);
    CreateDynamicObject(979, 1465.69995, -769.00000, 93.00000,   5.15994, 9.49979, 335.85153);
    CreateDynamicObject(979, 1458.50000, -763.59961, 94.40000,   5.17456, 7.98706, 308.72681);
    CreateDynamicObject(979, 1454.69995, -756.20001, 95.00000,   5.22498, 359.95410, 282.45599);
    CreateDynamicObject(979, 1453.19995, -747.09998, 94.80000,   5.21979, 357.69116, 276.65881);
    CreateDynamicObject(979, 1453.19995, -737.90002, 94.10000,   5.19107, 353.67093, 264.52213);
    CreateDynamicObject(979, 1453.40002, -728.70001, 93.00000,   5.18021, 352.66232, 274.35858);
    CreateDynamicObject(979, 1451.59998, -719.90002, 91.80000,   5.17709, 352.41016, 289.62866);
    CreateDynamicObject(979, 1447.09998, -712.09998, 90.40000,   5.14737, 350.40045, 311.55771);
    CreateDynamicObject(979, 1440.40002, -706.00000, 89.00000,   5.17303, 352.40332, 324.87262);
    CreateDynamicObject(979, 1432.40002, -701.50000, 88.10000,   5.20447, 356.41925, 337.50797);
    CreateDynamicObject(979, 1423.59998, -698.70001, 87.60000,   5.20691, 357.42258, 347.66437);
    CreateDynamicObject(979, 1414.50000, -697.20001, 87.20000,   5.20300, 357.66925, 353.38959);
    CreateDynamicObject(979, 956.90002, -953.40002, 39.90000,   0.00000, 359.74500, 3.49496);
    CreateDynamicObject(979, 947.59998, -954.00000, 39.80000,   0.00000, 358.99182, 3.74365);
    CreateDynamicObject(979, 938.29999, -954.59998, 39.70000,   0.00000, 359.73926, 3.74084);
    CreateDynamicObject(979, 929.00000, -955.20001, 39.70000,   0.00000, 0.23633, 3.73535);
    CreateDynamicObject(979, 919.70001, -955.79999, 39.80000,   0.00000, 0.98621, 3.72986);
    CreateDynamicObject(979, 910.40002, -956.70001, 39.90000,   0.00000, 0.23328, 7.47437);
    CreateDynamicObject(979, 901.29999, -957.59998, 40.00000,   359.75003, 0.98071, 3.72498);
    CreateDynamicObject(979, 892.00000, -957.79999, 40.10000,   359.74728, 0.22778, 358.72107);
    CreateDynamicObject(979, 882.70001, -957.70001, 40.40000,   359.74231, 3.47525, 359.98471);
    CreateDynamicObject(979, 873.40002, -957.70001, 41.30000,   359.74371, 7.72171, 0.00259);
    CreateDynamicObject(979, 864.29999, -957.79999, 43.30000,   359.75113, 17.21799, 1.29214);
    CreateDynamicObject(979, 855.59998, -958.20001, 45.90000,   359.74567, 15.96558, 4.03537);
    CreateDynamicObject(979, 846.70001, -957.40002, 48.00000,   359.73572, 10.21307, 346.25574);
    CreateDynamicObject(979, 838.70001, -953.29999, 49.30000,   359.72812, 6.21176, 319.73178);
    CreateDynamicObject(979, 835.79999, -945.79999, 50.80000,   359.73050, 12.70734, 262.01071);
    CreateDynamicObject(979, 849.79999, -940.50000, 52.00000,   0.00000, 333.50000, 66.00000);
    CreateDynamicObject(979, 853.90002, -933.20001, 55.80000,   0.00000, 337.99548, 55.49487);
    CreateDynamicObject(979, 859.00000, -926.00000, 58.70000,   0.00000, 345.74442, 53.74194);
    CreateDynamicObject(979, 864.00000, -918.40002, 60.90000,   0.00000, 346.98975, 59.73962);
    CreateDynamicObject(979, 868.40002, -910.50000, 62.70000,   0.00000, 350.48669, 62.23816);
    CreateDynamicObject(979, 872.20001, -902.20001, 63.90000,   0.00000, 354.48584, 68.23755);
    CreateDynamicObject(979, 875.59998, -893.50000, 64.40000,   0.00000, 359.48486, 68.98608);
    CreateDynamicObject(803, 874.09961, -893.09961, 64.50000,   0.00000, 0.00000, 0.00000);

    // VIP Mekannn ordaki aalk alan itler
    CreateDynamicObject(1361, 1304.78369, -1843.68372, 13.29022,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(973, 1402.89941, -944.19922, 34.80000,   1.48865, 355.98999, 350.60120);
    CreateDynamicObject(973, 1411.79980, -945.69922, 35.50000,   1.74133, 4.48792, 170.60120);
    CreateDynamicObject(973, 1411.89941, -945.69922, 35.50000,   1.24146, 354.97925, 350.84290);
    CreateDynamicObject(973, 1421.09998, -947.20001, 35.90000,   2.70987, 0.24887, 350.52173);
    CreateDynamicObject(973, 1393.80005, -942.70001, 34.30000,   0.00000, 357.74231, 350.49133);
    CreateDynamicObject(973, 1421.00000, -947.20001, 35.90000,   5.70782, 0.50095, 170.72876);
    CreateDynamicObject(973, 1393.80005, -942.70001, 34.30000,   0.00000, 1.98853, 170.49683);
    CreateDynamicObject(973, 1438.80005, -949.90002, 36.10000,   3.20325, 0.24765, 171.51123);
    CreateDynamicObject(973, 1430.19922, -948.59961, 36.00000,   1.19751, 358.99475, 351.79321);
    CreateDynamicObject(973, 1438.40002, -949.79999, 36.10000,   4.20239, 359.49548, 351.55835);
    CreateDynamicObject(973, 1447.50000, -951.19922, 36.20000,   4.19678, 359.24194, 351.07361);
    CreateDynamicObject(973, 1447.30005, -951.20001, 36.20000,   4.19595, 1.24384, 170.67322);
    CreateDynamicObject(973, 1456.59961, -952.59961, 36.30000,   4.20227, 359.74182, 351.28784);
    CreateDynamicObject(973, 1456.30005, -952.59998, 36.30000,   4.20227, 359.74182, 171.28784);
    CreateDynamicObject(973, 1465.69922, -954.00000, 36.20000,   4.19678, 1.49963, 351.15601);
    CreateDynamicObject(973, 1483.50000, -956.79999, 35.70000,   5.19159, 359.73743, 171.28607);
    CreateDynamicObject(973, 1474.39941, -955.39941, 35.90000,   6.19080, 357.73132, 171.50757);
    CreateDynamicObject(973, 1465.19922, -954.00000, 36.20000,   4.19678, 358.74207, 171.35657);
    CreateDynamicObject(973, 1474.89941, -955.39941, 35.90000,   4.19128, 2.24670, 351.10107);
    CreateDynamicObject(973, 1484.00000, -956.79980, 35.70000,   4.19128, 0.48889, 351.22742);
    CreateDynamicObject(973, 1492.69995, -958.20001, 35.60000,   2.43567, 358.98267, 171.30579);
    CreateDynamicObject(973, 1493.19922, -958.19922, 35.60000,   4.68567, 0.73608, 351.44714);
    CreateDynamicObject(1361, 1497.86877, -958.80884, 35.91085,   0.00000, 0.00000, 1.99951);
    CreateDynamicObject(1361, 1388.69922, -941.72552, 33.93084,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(973, 1402.90002, -944.20001, 34.80000,   1.48822, 4.24277, 170.63647);
    CreateDynamicObject(973, 1430.19995, -948.59998, 36.00000,   1.19760, 0.74512, 171.50659);
    CreateDynamicObject(3526, 1348.69922, -1270.39941, 12.50000,   0.00000, 0.00000, 89.24194);
    CreateDynamicObject(3526, 1351.59961, -1270.39941, 12.50000,   0.00000, 0.00000, 89.24194);
    CreateDynamicObject(6046, 1304.98743, -1772.00281, 13.43682,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1360, 1369.82898, -957.61841, 34.10689,   0.00000, 0.00000, 352.00000);
    CreateDynamicObject(1360, 1361.04956, -1023.42981, 26.48089,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(1215, 1360.81201, -1018.91229, 26.31656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.55286, -1741.30872, 17.57030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.46655, -1766.35889, 17.57030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.40723, -1794.61621, 17.82030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.43726, -1823.50647, 17.57030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 1292.09656, -1722.42737, 15.77705,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1297, 1291.90320, -1767.48560, 15.77705,   0.00000, 0.00000, 179.99451);
    CreateDynamicObject(1297, 1291.99915, -1842.07227, 15.77705,   0.00000, 0.00000, 179.99451);
    CreateDynamicObject(1297, 1292.00244, -1805.60400, 15.77705,   0.00000, 0.00000, 179.99451);
    CreateDynamicObject(1294, 1317.21204, -1841.52185, 17.06500,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1302.70020, -1840.18250, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69458, -1836.02417, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70313, -1831.85107, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70850, -1827.69531, 13.08811,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72485, -1823.54480, 13.06223,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72961, -1819.37390, 13.06182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73010, -1815.23364, 13.06206,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73059, -1811.06543, 13.06229,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74219, -1806.89526, 13.06783,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74487, -1802.73999, 13.06911,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74548, -1798.59705, 13.06940,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74609, -1794.43274, 13.06969,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.76367, -1790.26721, 13.07808,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.75244, -1786.10547, 13.07272,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74841, -1781.94470, 13.07080,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74451, -1777.77539, 13.06893,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74023, -1773.59973, 13.06689,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73157, -1769.44067, 13.06276,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72961, -1765.29565, 13.06182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73169, -1761.12939, 13.06281,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73425, -1756.98608, 13.05736,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72607, -1752.83191, 13.05355,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72119, -1748.66309, 13.05127,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72388, -1744.49158, 13.05252,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72485, -1740.31873, 13.05298,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71533, -1736.17627, 13.04853,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71289, -1732.02039, 13.04739,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71436, -1727.86157, 13.04808,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72302, -1723.71057, 13.05212,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72046, -1719.56738, 13.05116,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71814, -1715.42334, 13.04720,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71399, -1711.25708, 13.04530,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70850, -1707.10242, 13.04280,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70081, -1702.95081, 13.03928,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70081, -1698.79321, 13.03928,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69287, -1694.63110, 13.03566,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68726, -1690.47229, 13.03310,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68982, -1686.32019, 13.03427,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69043, -1682.15112, 13.03455,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68494, -1678.00989, 13.03204,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69885, -1673.86011, 13.03182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70276, -1669.71594, 13.02243,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70691, -1665.56079, 13.01309,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70715, -1661.40820, 13.00499,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70667, -1657.26514, 13.00485,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70276, -1653.10205, 13.00366,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69983, -1648.94116, 13.00848,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70190, -1644.78357, 13.00910,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70691, -1640.63330, 13.00243,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70422, -1636.47778, 13.00163,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70520, -1632.33264, 13.00192,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70642, -1628.19568, 13.00228,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70190, -1624.05042, 13.00095,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69958, -1619.88892, 13.00026,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69751, -1615.76025, 12.99965,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69043, -1611.61145, 12.99755,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68835, -1607.46021, 12.99694,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68652, -1603.30994, 12.99640,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68542, -1599.15723, 12.99607,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68201, -1594.99304, 12.99506,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67480, -1590.84290, 12.99294,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67029, -1586.68738, 12.99160,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.66675, -1582.51575, 12.99055,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67151, -1578.35205, 12.99196,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67224, -1574.19739, 12.99218,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.66504, -1570.07214, 12.99005,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.66370, -1565.92798, 12.98965,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.88916, -1561.82190, 13.03887,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(970, 1303.40491, -1557.71191, 13.01956,   0.00000, 0.00000, 81.99597);
    CreateDynamicObject(970, 1303.97583, -1553.60571, 13.01672,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1304.55872, -1549.47473, 13.01638,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1305.13416, -1545.35925, 13.01449,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1305.71497, -1541.25757, 13.01476,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1306.74353, -1537.28015, 12.99761,   0.00000, 0.00000, 68.99097);
    CreateDynamicObject(970, 1308.23291, -1533.38818, 13.00159,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1309.72607, -1529.49585, 13.01200,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1311.21472, -1525.60449, 13.01157,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1312.70593, -1521.71118, 13.01175,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1314.44226, -1517.97815, 13.05971,   0.00000, 0.00000, 60.98865);
    CreateDynamicObject(970, 1316.63342, -1514.51025, 13.00760,   0.00000, 0.00000, 55.98511);
    CreateDynamicObject(970, 1318.96704, -1511.06677, 13.00847,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1321.30164, -1507.61560, 13.00792,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1323.62402, -1504.18359, 13.00764,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1325.96362, -1500.72473, 13.00703,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1328.12439, -1497.16394, 12.97847,   0.00000, 0.00000, 61.98083);
    CreateDynamicObject(970, 1330.06152, -1493.49719, 12.99106,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1332.01306, -1489.83032, 13.00843,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1333.96191, -1486.14246, 13.01293,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1335.90759, -1482.45740, 13.02521,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1337.84875, -1478.78040, 13.03737,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1339.41223, -1474.95117, 12.98544,   0.00000, 0.00000, 73.97937);
    CreateDynamicObject(970, 1340.42273, -1470.92529, 13.02105,   0.00000, 0.00000, 77.22644);
    CreateDynamicObject(970, 1341.33887, -1466.88818, 13.02438,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1342.25684, -1462.81641, 13.02572,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1343.17981, -1458.75256, 13.02932,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1344.09412, -1454.68689, 13.02990,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1345.01367, -1450.61926, 13.03208,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1345.72266, -1446.54004, 13.00785,   0.00000, 0.00000, 83.22290);
    CreateDynamicObject(970, 1346.07996, -1442.39294, 13.03079,   0.00000, 0.00000, 87.22144);
    CreateDynamicObject(970, 1346.34973, -1438.23877, 13.02441,   0.00000, 0.00000, 85.72046);
    CreateDynamicObject(970, 1346.65857, -1434.09644, 13.03132,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1346.96863, -1429.94055, 13.03832,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1347.28503, -1425.78137, 13.04368,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1347.57593, -1421.64331, 13.04369,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1347.80176, -1418.40479, 13.04307,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.00378, -1416.31384, 13.07256,   0.00000, 0.00000, 359.96533);
    CreateDynamicObject(970, 1351.93896, -1418.39258, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1351.64050, -1422.55188, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1351.32788, -1426.68970, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1351.01770, -1430.82739, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.70630, -1434.95862, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.40491, -1439.07495, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.10547, -1443.21228, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1349.80127, -1447.37390, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1349.20203, -1451.46924, 13.09836,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1348.29199, -1455.50854, 13.09836,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1347.38281, -1459.56018, 13.08275,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1346.46130, -1463.61682, 13.06983,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1345.54236, -1467.66272, 13.05690,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1344.62122, -1471.72156, 13.04370,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1343.69360, -1475.77454, 13.03290,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1342.22974, -1479.61450, 13.00951,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1340.29028, -1483.29553, 13.01814,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1338.34619, -1486.96887, 13.02881,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1336.42432, -1490.61292, 13.03933,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1334.48560, -1494.26160, 13.05388,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1332.54138, -1497.93628, 13.06621,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1330.39844, -1501.48914, 13.06298,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1328.08862, -1504.91846, 13.06063,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1325.77441, -1508.36121, 13.05617,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1323.45593, -1511.79810, 13.05385,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1321.15161, -1515.20752, 13.05267,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1318.83142, -1518.64685, 13.05036,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1316.93274, -1522.32983, 13.07037,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1315.44812, -1526.21106, 13.07348,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1313.95825, -1530.11145, 13.06928,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1312.46387, -1534.00574, 13.06736,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1310.97913, -1537.88416, 13.06427,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1309.95044, -1541.88794, 13.06470,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1309.37280, -1545.99365, 13.06644,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1308.79907, -1550.10376, 13.06447,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1308.22522, -1554.22253, 13.06212,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1307.65784, -1558.34692, 13.05732,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1307.28894, -1562.44775, 12.98926,   0.00000, 0.00000, 88.24097);
    CreateDynamicObject(970, 1307.22742, -1566.58887, 13.01010,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22119, -1570.71509, 13.01221,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23120, -1574.84924, 13.00882,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24036, -1578.99133, 13.00572,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23975, -1583.16370, 13.00592,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23914, -1587.33142, 13.00613,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24170, -1591.47583, 13.00526,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24841, -1595.61938, 13.00299,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24524, -1599.76526, 13.00406,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24292, -1603.92029, 13.00485,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23889, -1608.07581, 13.00621,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23914, -1612.22095, 13.00613,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24255, -1616.37207, 13.00497,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23450, -1620.51172, 13.00770,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23926, -1624.65002, 13.00609,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23145, -1628.78101, 13.00874,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22949, -1632.92444, 13.00940,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23743, -1637.06201, 13.00671,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24011, -1641.19751, 13.00580,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24280, -1645.35168, 13.00489,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24548, -1649.52026, 13.00398,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24341, -1653.67822, 13.00568,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24231, -1657.82776, 13.00825,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24609, -1661.97729, 13.00901,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24866, -1666.13428, 13.00827,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25110, -1670.29224, 13.00737,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25488, -1674.44080, 13.00597,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25220, -1678.59888, 13.00696,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25378, -1682.74341, 13.00638,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24951, -1686.88806, 13.00795,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24963, -1691.02490, 13.00791,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24866, -1695.18994, 13.00817,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24756, -1699.34534, 13.00968,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24426, -1703.50488, 13.00963,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24109, -1707.64600, 13.01085,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23718, -1711.80603, 13.01234,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23657, -1715.96448, 13.01257,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23914, -1720.12793, 13.01159,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24133, -1724.30554, 13.01205,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24487, -1728.46790, 13.01070,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23877, -1732.62000, 13.01303,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23779, -1736.75354, 13.01340,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23633, -1740.90149, 13.01396,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23096, -1745.03638, 13.01601,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22253, -1749.21069, 13.01923,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22021, -1753.36792, 13.02011,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22742, -1757.49268, 13.01736,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23145, -1761.64526, 13.01582,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23267, -1765.77051, 13.01536,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23743, -1769.92566, 13.01354,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24231, -1774.05005, 13.01168,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24561, -1778.18982, 13.01042,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23438, -1782.35669, 13.01471,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23755, -1786.49109, 13.01349,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23523, -1790.65234, 13.01438,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22937, -1794.79028, 13.01662,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22095, -1798.91577, 13.01983,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22449, -1803.05566, 13.01848,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22595, -1807.21570, 13.01792,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23364, -1811.37158, 13.01499,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23730, -1815.51404, 13.01359,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23157, -1819.65942, 13.01578,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23584, -1823.78687, 13.01415,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23132, -1827.92212, 13.01587,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24463, -1832.05457, 13.01079,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24744, -1836.23267, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.26050, -1839.96045, 13.09836,   0.00000, 0.00000, 90.00000);
     // Ammunation ke
	CreateDynamicObject(984,1415.30688477,-1409.75573730,13.35917282,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(1)
	CreateDynamicObject(984,1415.31872559,-1422.58093262,13.35730267,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(2)
	CreateDynamicObject(983,1415.19262695,-1432.14245605,13.41322994,0.00000000,0.00000000,358.00000000); //object(fenceshit3)(1)
	CreateDynamicObject(984,1402.48925781,-1414.37402344,13.35308933,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(984,1402.48730469,-1427.20410156,13.34734821,0.00000000,0.00000000,0.00000000); //object(fenceshit2)(4)
	CreateDynamicObject(983,1402.43457031,-1433.59667969,13.38587284,0.00000000,0.00000000,359.99450684); //object(fenceshit3)(2)
	CreateDynamicObject(983,1409.02880859,-1440.57067871,13.39873409,0.00000000,0.00000000,89.99450684); //object(fenceshit3)(3)
	CreateDynamicObject(983,1415.43859863,-1440.57836914,13.38217354,0.00000000,0.00000000,89.99450684); //object(fenceshit3)(4)
	CreateDynamicObject(983,1417.05444336,-1440.57177734,13.40227032,0.00000000,0.00000000,89.99450684); //object(fenceshit3)(5)
	CreateDynamicObject(983,1418.00683594,-1437.97033691,13.39592743,0.00000000,0.00000000,67.99450684); //object(fenceshit3)(6)
	CreateDynamicObject(983,1415.17797852,-1433.63452148,13.40706348,0.00000000,0.00000000,357.99499512); //object(fenceshit3)(7)
	CreateDynamicObject(984,1406.37988281,-1400.70117188,13.35188580,0.00000000,0.00000000,270.00000000); //object(fenceshit2)(6)
	CreateDynamicObject(824,1406.63891602,-1411.29333496,15.23758984,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass08)(1)
	CreateDynamicObject(823,1409.33398438,-1423.48937988,16.06217384,0.00000000,0.00000000,0.00000000); //object(genveg_tallgrass07)(1)
	CreateDynamicObject(1361,1414.36767578,-1402.95690918,13.52113056,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(1)
	CreateDynamicObject(1361,1413.23901367,-1401.72033691,13.50334644,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(2)
	CreateDynamicObject(1361,1419.46679688,-1439.65563965,13.51377010,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(3)
	CreateDynamicObject(1361,1402.96679688,-1437.02929688,13.53310394,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(4)
	CreateDynamicObject(1361,1405.64428711,-1439.89318848,13.51500225,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(5)
	CreateDynamicObject(1361,1400.57604980,-1401.83386230,13.45426178,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(6)
	CreateDynamicObject(983,1401.06713867,-1405.00805664,13.38667965,0.00000000,0.00000000,23.99450684); //object(fenceshit3)(11)
	CreateDynamicObject(1215,1399.67211914,-1402.55615234,13.27524185,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1400.01550293,-1401.05432129,13.26744843,0.00000000,0.00000000,0.00000000); //object(bollardlight)(2)
	CreateDynamicObject(1215,1413.88134766,-1402.14245605,13.31761169,0.00000000,0.00000000,0.00000000); //object(bollardlight)(3)
	CreateDynamicObject(1215,1415.02722168,-1403.51586914,13.29411411,0.00000000,0.00000000,0.00000000); //object(bollardlight)(4)
	CreateDynamicObject(1215,1412.56347656,-1401.16149902,13.30060005,0.00000000,0.00000000,0.00000000); //object(bollardlight)(5)
	CreateDynamicObject(1215,1420.30041504,-1440.30554199,13.29682064,0.00000000,0.00000000,0.00000000); //object(bollardlight)(6)
	CreateDynamicObject(1215,1420.49267578,-1439.34851074,13.28466225,0.00000000,0.00000000,0.00000000); //object(bollardlight)(7)
	CreateDynamicObject(1215,1420.96484375,-1440.01525879,13.27538395,0.00000000,0.00000000,0.00000000); //object(bollardlight)(8)
	CreateDynamicObject(1215,1403.17053223,-1437.84521484,13.32722569,0.00000000,0.00000000,0.00000000); //object(bollardlight)(9)
	CreateDynamicObject(1215,1405.05810547,-1439.74462891,13.32595921,0.00000000,0.00000000,0.00000000); //object(bollardlight)(10)
	CreateDynamicObject(1215,1404.58435059,-1438.41748047,13.42280102,0.00000000,0.00000000,0.00000000); //object(bollardlight)(11)
	CreateDynamicObject(1223,1423.40612793,-1446.37561035,12.55468750,0.00000000,0.00000000,86.00000000); //object(lampost_coast)(1)
	CreateDynamicObject(1223,1401.34887695,-1446.55981445,12.55468750,0.00000000,0.00000000,85.99548340); //object(lampost_coast)(2)
	CreateDynamicObject(1223,1391.52160645,-1425.12927246,12.56244469,0.00000000,0.00000000,3.99548340); //object(lampost_coast)(3)
	CreateDynamicObject(1223,1425.15161133,-1391.19824219,12.57480240,0.00000000,0.00000000,221.99548340); //object(lampost_coast)(4)
	CreateDynamicObject(1223,1396.90625000,-1389.83496094,12.55468750,0.00000000,0.00000000,271.99401855); //object(lampost_coast)(5)
	CreateDynamicObject(1223,1426.45849609,-1426.79833984,12.55468845,0.00000000,0.00000000,179.99523926); //object(lampost_coast)(6)
	CreateDynamicObject(8674,1401.76562500,-1450.83703613,14.31416416,0.00000000,0.00000000,0.00000000); //object(csrsfence02_lvs)(1)
	CreateDynamicObject(17969,1382.18884277,-1467.57958984,14.57242393,0.00000000,0.00000000,164.00000000); //object(hub_graffitti)(1)
	CreateDynamicObject(1490,1382.77233887,-1465.54687500,15.03289032,0.00000000,0.00000000,158.00000000); //object(tag_01)(1)
	CreateDynamicObject(8674,1379.87365723,-1484.23828125,14.01379108,0.00000000,0.00000000,344.00000000); //object(csrsfence02_lvs)(2)
	CreateDynamicObject(3091,1385.47460938,-1549.75000000,13.25998211,0.00000000,0.00000000,347.99841309); //object(imy_track_barrier)(1)
	CreateDynamicObject(5069,1378.32324219,-1468.30468750,14.83640575,0.00000000,0.00000000,161.99890137); //object(ctscene1_las)(1)
	CreateDynamicObject(3265,1391.80175781,-1452.72595215,12.55260468,0.00000000,0.00000000,170.00000000); //object(privatesign4)(1)
	CreateDynamicObject(17037,1381.49707031,-1482.27246094,15.03834915,0.00000000,0.00000000,73.99841309); //object(cuntw_carport2_)(1)
	CreateDynamicObject(1431,1378.53198242,-1483.23266602,13.09448814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(1)
	CreateDynamicObject(1431,1378.85083008,-1482.43750000,13.09448814,0.00000000,0.00000000,0.00000000); //object(dyn_box_pile)(2)
	CreateDynamicObject(1362,1379.76416016,-1483.53051758,13.14535809,0.00000000,0.00000000,0.00000000); //object(cj_firebin)(1)
	CreateDynamicObject(3497,1381.19531250,-1472.12939453,16.15717316,0.00000000,0.00000000,256.00000000); //object(vgsxrefbballnet2)(1)
	CreateDynamicObject(1439,1383.57739258,-1484.73852539,12.54687500,0.00000000,0.00000000,164.00000000); //object(dyn_dumpster_1)(1)
	CreateDynamicObject(1329,1382.33093262,-1484.17504883,12.99951172,0.00000000,0.00000000,168.00000000); //object(binnt13_la)(1)
	CreateDynamicObject(2670,1383.16943359,-1482.47253418,12.63892746,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_1)(1)
	CreateDynamicObject(2670,1379.69787598,-1481.43542480,12.63892746,0.00000000,0.00000000,0.00000000); //object(proc_rubbish_1)(2)
	CreateDynamicObject(3594,1385.71069336,-1476.12670898,13.17805195,0.00000000,0.00000000,346.00000000); //object(la_fuckcar1)(1)
	CreateDynamicObject(3035,1385.00488281,-1480.17675781,13.06701088,0.00000000,0.00000000,343.99841309); //object(tmp_bin)(1)
	CreateDynamicObject(3119,1383.33007812,-1478.57128906,12.70637417,0.00000000,0.00000000,0.00000000); //object(cs_ry_props)(1)
	CreateDynamicObject(2953,1383.95971680,-1480.04687500,13.84279823,0.00000000,0.00000000,0.00000000); //object(kmb_paper_code)(1)
	CreateDynamicObject(1442,1380.23083496,-1482.75073242,13.14535809,0.00000000,0.00000000,0.00000000); //object(dyn_firebin0)(1)
	CreateDynamicObject(1369,1380.88085938,-1483.51220703,13.16874886,0.00000000,0.00000000,118.00000000); //object(cj_wheelchair1)(1)
	CreateDynamicObject(1237,1388.06604004,-1550.29150391,12.66832447,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(1)
	CreateDynamicObject(1237,1383.32348633,-1548.87231445,12.57450676,0.00000000,0.00000000,0.00000000); //object(strtbarrier01)(2)
	CreateDynamicObject(1257,1371.84912109,-1386.69982910,13.95185852,0.00000000,0.00000000,90.00000000); //object(bustopm)(1)
	CreateDynamicObject(1361,1374.78710938,-1386.58288574,13.38723946,0.00000000,0.00000000,0.00000000); //object(cj_bush_prop2)(6)
	CreateDynamicObject(1223,1377.63916016,-1389.37927246,12.63166332,0.00000000,0.00000000,271.99401855); //object(lampost_coast)(5)
	CreateDynamicObject(1216,1376.72009277,-1386.08691406,13.32173729,0.00000000,0.00000000,0.00000000); //object(phonebooth1)(2)
	CreateDynamicObject(1216,1377.41406250,-1386.09326172,13.31665325,0.00000000,0.00000000,0.00000000); //object(phonebooth1)(3)
	CreateDynamicObject(1216,1375.99841309,-1386.12536621,13.32702446,0.00000000,0.00000000,0.00000000); //object(phonebooth1)(4)
	CreateDynamicObject(1215,1371.70507812,-1400.58422852,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1319,1367.87036133,-1400.57702637,12.92968750,0.00000000,0.00000000,270.00000000); //object(ws_ref_bollard)(4)
	CreateDynamicObject(1290,1369.80163574,-1400.58239746,18.40623474,0.00000000,0.00000000,90.00000000); //object(lamppost2)(2)
	CreateDynamicObject(1215,1400.12109375,-1400.48217773,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(3660,1389.43591309,-1400.32080078,14.28588009,0.00000000,0.00000000,0.00000000); //object(lasairfbed_las)(1)
	CreateDynamicObject(3660,1381.66748047,-1400.39367676,14.29877472,0.00000000,0.00000000,0.00000000); //object(lasairfbed_las)(2)
	CreateDynamicObject(984,1392.75903320,-1401.73181152,13.02720737,0.00000000,0.00000000,270.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(984,1379.90527344,-1401.73535156,13.01949215,0.00000000,0.00000000,270.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(984,1392.82360840,-1399.53808594,13.01949215,0.00000000,0.00000000,270.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(984,1379.97570801,-1399.52209473,13.02720737,0.00000000,0.00000000,270.00000000); //object(fenceshit2)(3)
	CreateDynamicObject(983,1375.12084961,-1401.73901367,13.06636715,0.00000000,0.00000000,269.99414062); //object(fenceshit3)(11)
	CreateDynamicObject(983,1375.17346191,-1399.52258301,13.07408237,0.00000000,0.00000000,269.98901367); //object(fenceshit3)(11)
	CreateDynamicObject(1215,1368.61999512,-1400.61572266,12.94713593,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)
	CreateDynamicObject(1215,1367.95336914,-1385.95727539,13.26457882,0.00000000,0.00000000,0.00000000); //object(bollardlight)(1)

	// VIP Mekannn ordaki aalk alan itler
    CreateDynamicObject(1361, 1304.78369, -1843.68372, 13.29022,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(973, 1402.89941, -944.19922, 34.80000,   1.48865, 355.98999, 350.60120);
    CreateDynamicObject(973, 1411.79980, -945.69922, 35.50000,   1.74133, 4.48792, 170.60120);
    CreateDynamicObject(973, 1411.89941, -945.69922, 35.50000,   1.24146, 354.97925, 350.84290);
    CreateDynamicObject(973, 1421.09998, -947.20001, 35.90000,   2.70987, 0.24887, 350.52173);
    CreateDynamicObject(973, 1393.80005, -942.70001, 34.30000,   0.00000, 357.74231, 350.49133);
    CreateDynamicObject(973, 1421.00000, -947.20001, 35.90000,   5.70782, 0.50095, 170.72876);
    CreateDynamicObject(973, 1393.80005, -942.70001, 34.30000,   0.00000, 1.98853, 170.49683);
    CreateDynamicObject(973, 1438.80005, -949.90002, 36.10000,   3.20325, 0.24765, 171.51123);
    CreateDynamicObject(973, 1430.19922, -948.59961, 36.00000,   1.19751, 358.99475, 351.79321);
    CreateDynamicObject(973, 1438.40002, -949.79999, 36.10000,   4.20239, 359.49548, 351.55835);
    CreateDynamicObject(973, 1447.50000, -951.19922, 36.20000,   4.19678, 359.24194, 351.07361);
    CreateDynamicObject(973, 1447.30005, -951.20001, 36.20000,   4.19595, 1.24384, 170.67322);
    CreateDynamicObject(973, 1456.59961, -952.59961, 36.30000,   4.20227, 359.74182, 351.28784);
    CreateDynamicObject(973, 1456.30005, -952.59998, 36.30000,   4.20227, 359.74182, 171.28784);
    CreateDynamicObject(973, 1465.69922, -954.00000, 36.20000,   4.19678, 1.49963, 351.15601);
    CreateDynamicObject(973, 1483.50000, -956.79999, 35.70000,   5.19159, 359.73743, 171.28607);
    CreateDynamicObject(973, 1474.39941, -955.39941, 35.90000,   6.19080, 357.73132, 171.50757);
    CreateDynamicObject(973, 1465.19922, -954.00000, 36.20000,   4.19678, 358.74207, 171.35657);
    CreateDynamicObject(973, 1474.89941, -955.39941, 35.90000,   4.19128, 2.24670, 351.10107);
    CreateDynamicObject(973, 1484.00000, -956.79980, 35.70000,   4.19128, 0.48889, 351.22742);
    CreateDynamicObject(973, 1492.69995, -958.20001, 35.60000,   2.43567, 358.98267, 171.30579);
    CreateDynamicObject(973, 1493.19922, -958.19922, 35.60000,   4.68567, 0.73608, 351.44714);
    CreateDynamicObject(1361, 1497.86877, -958.80884, 35.91085,   0.00000, 0.00000, 1.99951);
    CreateDynamicObject(1361, 1388.69922, -941.72552, 33.93084,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(973, 1402.90002, -944.20001, 34.80000,   1.48822, 4.24277, 170.63647);
    CreateDynamicObject(973, 1430.19995, -948.59998, 36.00000,   1.19760, 0.74512, 171.50659);
    CreateDynamicObject(3526, 1348.69922, -1270.39941, 12.50000,   0.00000, 0.00000, 89.24194);
    CreateDynamicObject(3526, 1351.59961, -1270.39941, 12.50000,   0.00000, 0.00000, 89.24194);
    CreateDynamicObject(6046, 1304.98743, -1772.00281, 13.43682,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1360, 1369.82898, -957.61841, 34.10689,   0.00000, 0.00000, 352.00000);
    CreateDynamicObject(1360, 1361.04956, -1023.42981, 26.48089,   0.00000, 0.00000, 2.00000);
    CreateDynamicObject(1215, 1360.81201, -1018.91229, 26.31656,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.55286, -1741.30872, 17.57030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.46655, -1766.35889, 17.57030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.40723, -1794.61621, 17.82030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1290, 1304.43726, -1823.50647, 17.57030,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(1297, 1292.09656, -1722.42737, 15.77705,   0.00000, 0.00000, 180.00000);
    CreateDynamicObject(1297, 1291.90320, -1767.48560, 15.77705,   0.00000, 0.00000, 179.99451);
    CreateDynamicObject(1297, 1291.99915, -1842.07227, 15.77705,   0.00000, 0.00000, 179.99451);
    CreateDynamicObject(1297, 1292.00244, -1805.60400, 15.77705,   0.00000, 0.00000, 179.99451);
    CreateDynamicObject(1294, 1317.21204, -1841.52185, 17.06500,   0.00000, 0.00000, 0.00000);
    CreateDynamicObject(970, 1302.70020, -1840.18250, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69458, -1836.02417, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70313, -1831.85107, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70850, -1827.69531, 13.08811,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72485, -1823.54480, 13.06223,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72961, -1819.37390, 13.06182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73010, -1815.23364, 13.06206,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73059, -1811.06543, 13.06229,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74219, -1806.89526, 13.06783,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74487, -1802.73999, 13.06911,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74548, -1798.59705, 13.06940,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74609, -1794.43274, 13.06969,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.76367, -1790.26721, 13.07808,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.75244, -1786.10547, 13.07272,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74841, -1781.94470, 13.07080,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74451, -1777.77539, 13.06893,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.74023, -1773.59973, 13.06689,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73157, -1769.44067, 13.06276,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72961, -1765.29565, 13.06182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73169, -1761.12939, 13.06281,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.73425, -1756.98608, 13.05736,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72607, -1752.83191, 13.05355,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72119, -1748.66309, 13.05127,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72388, -1744.49158, 13.05252,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72485, -1740.31873, 13.05298,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71533, -1736.17627, 13.04853,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71289, -1732.02039, 13.04739,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71436, -1727.86157, 13.04808,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72302, -1723.71057, 13.05212,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.72046, -1719.56738, 13.05116,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71814, -1715.42334, 13.04720,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.71399, -1711.25708, 13.04530,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70850, -1707.10242, 13.04280,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70081, -1702.95081, 13.03928,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70081, -1698.79321, 13.03928,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69287, -1694.63110, 13.03566,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68726, -1690.47229, 13.03310,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68982, -1686.32019, 13.03427,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69043, -1682.15112, 13.03455,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68494, -1678.00989, 13.03204,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69885, -1673.86011, 13.03182,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70276, -1669.71594, 13.02243,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70691, -1665.56079, 13.01309,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70715, -1661.40820, 13.00499,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70667, -1657.26514, 13.00485,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70276, -1653.10205, 13.00366,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69983, -1648.94116, 13.00848,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70190, -1644.78357, 13.00910,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70691, -1640.63330, 13.00243,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70422, -1636.47778, 13.00163,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70520, -1632.33264, 13.00192,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70642, -1628.19568, 13.00228,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.70190, -1624.05042, 13.00095,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69958, -1619.88892, 13.00026,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69751, -1615.76025, 12.99965,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.69043, -1611.61145, 12.99755,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68835, -1607.46021, 12.99694,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68652, -1603.30994, 12.99640,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68542, -1599.15723, 12.99607,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.68201, -1594.99304, 12.99506,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67480, -1590.84290, 12.99294,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67029, -1586.68738, 12.99160,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.66675, -1582.51575, 12.99055,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67151, -1578.35205, 12.99196,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.67224, -1574.19739, 12.99218,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.66504, -1570.07214, 12.99005,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.66370, -1565.92798, 12.98965,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1302.88916, -1561.82190, 13.03887,   0.00000, 0.00000, 84.00000);
    CreateDynamicObject(970, 1303.40491, -1557.71191, 13.01956,   0.00000, 0.00000, 81.99597);
    CreateDynamicObject(970, 1303.97583, -1553.60571, 13.01672,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1304.55872, -1549.47473, 13.01638,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1305.13416, -1545.35925, 13.01449,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1305.71497, -1541.25757, 13.01476,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1306.74353, -1537.28015, 12.99761,   0.00000, 0.00000, 68.99097);
    CreateDynamicObject(970, 1308.23291, -1533.38818, 13.00159,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1309.72607, -1529.49585, 13.01200,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1311.21472, -1525.60449, 13.01157,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1312.70593, -1521.71118, 13.01175,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1314.44226, -1517.97815, 13.05971,   0.00000, 0.00000, 60.98865);
    CreateDynamicObject(970, 1316.63342, -1514.51025, 13.00760,   0.00000, 0.00000, 55.98511);
    CreateDynamicObject(970, 1318.96704, -1511.06677, 13.00847,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1321.30164, -1507.61560, 13.00792,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1323.62402, -1504.18359, 13.00764,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1325.96362, -1500.72473, 13.00703,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1328.12439, -1497.16394, 12.97847,   0.00000, 0.00000, 61.98083);
    CreateDynamicObject(970, 1330.06152, -1493.49719, 12.99106,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1332.01306, -1489.83032, 13.00843,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1333.96191, -1486.14246, 13.01293,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1335.90759, -1482.45740, 13.02521,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1337.84875, -1478.78040, 13.03737,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1339.41223, -1474.95117, 12.98544,   0.00000, 0.00000, 73.97937);
    CreateDynamicObject(970, 1340.42273, -1470.92529, 13.02105,   0.00000, 0.00000, 77.22644);
    CreateDynamicObject(970, 1341.33887, -1466.88818, 13.02438,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1342.25684, -1462.81641, 13.02572,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1343.17981, -1458.75256, 13.02932,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1344.09412, -1454.68689, 13.02990,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1345.01367, -1450.61926, 13.03208,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1345.72266, -1446.54004, 13.00785,   0.00000, 0.00000, 83.22290);
    CreateDynamicObject(970, 1346.07996, -1442.39294, 13.03079,   0.00000, 0.00000, 87.22144);
    CreateDynamicObject(970, 1346.34973, -1438.23877, 13.02441,   0.00000, 0.00000, 85.72046);
    CreateDynamicObject(970, 1346.65857, -1434.09644, 13.03132,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1346.96863, -1429.94055, 13.03832,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1347.28503, -1425.78137, 13.04368,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1347.57593, -1421.64331, 13.04369,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1347.80176, -1418.40479, 13.04307,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.00378, -1416.31384, 13.07256,   0.00000, 0.00000, 359.96533);
    CreateDynamicObject(970, 1351.93896, -1418.39258, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1351.64050, -1422.55188, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1351.32788, -1426.68970, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1351.01770, -1430.82739, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.70630, -1434.95862, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.40491, -1439.07495, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1350.10547, -1443.21228, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1349.80127, -1447.37390, 13.09836,   0.00000, 0.00000, 85.71533);
    CreateDynamicObject(970, 1349.20203, -1451.46924, 13.09836,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1348.29199, -1455.50854, 13.09836,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1347.38281, -1459.56018, 13.08275,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1346.46130, -1463.61682, 13.06983,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1345.54236, -1467.66272, 13.05690,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1344.62122, -1471.72156, 13.04370,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1343.69360, -1475.77454, 13.03290,   0.00000, 0.00000, 77.22290);
    CreateDynamicObject(970, 1342.22974, -1479.61450, 13.00951,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1340.29028, -1483.29553, 13.01814,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1338.34619, -1486.96887, 13.02881,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1336.42432, -1490.61292, 13.03933,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1334.48560, -1494.26160, 13.05388,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1332.54138, -1497.93628, 13.06621,   0.00000, 0.00000, 61.97937);
    CreateDynamicObject(970, 1330.39844, -1501.48914, 13.06298,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1328.08862, -1504.91846, 13.06063,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1325.77441, -1508.36121, 13.05617,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1323.45593, -1511.79810, 13.05385,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1321.15161, -1515.20752, 13.05267,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1318.83142, -1518.64685, 13.05036,   0.00000, 0.00000, 55.98083);
    CreateDynamicObject(970, 1316.93274, -1522.32983, 13.07037,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1315.44812, -1526.21106, 13.07348,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1313.95825, -1530.11145, 13.06928,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1312.46387, -1534.00574, 13.06736,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1310.97913, -1537.88416, 13.06427,   0.00000, 0.00000, 68.98865);
    CreateDynamicObject(970, 1309.95044, -1541.88794, 13.06470,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1309.37280, -1545.99365, 13.06644,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1308.79907, -1550.10376, 13.06447,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1308.22522, -1554.22253, 13.06212,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1307.65784, -1558.34692, 13.05732,   0.00000, 0.00000, 81.99097);
    CreateDynamicObject(970, 1307.28894, -1562.44775, 12.98926,   0.00000, 0.00000, 88.24097);
    CreateDynamicObject(970, 1307.22742, -1566.58887, 13.01010,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22119, -1570.71509, 13.01221,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23120, -1574.84924, 13.00882,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24036, -1578.99133, 13.00572,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23975, -1583.16370, 13.00592,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23914, -1587.33142, 13.00613,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24170, -1591.47583, 13.00526,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24841, -1595.61938, 13.00299,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24524, -1599.76526, 13.00406,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24292, -1603.92029, 13.00485,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23889, -1608.07581, 13.00621,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23914, -1612.22095, 13.00613,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24255, -1616.37207, 13.00497,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23450, -1620.51172, 13.00770,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23926, -1624.65002, 13.00609,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23145, -1628.78101, 13.00874,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22949, -1632.92444, 13.00940,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23743, -1637.06201, 13.00671,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24011, -1641.19751, 13.00580,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24280, -1645.35168, 13.00489,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24548, -1649.52026, 13.00398,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24341, -1653.67822, 13.00568,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24231, -1657.82776, 13.00825,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24609, -1661.97729, 13.00901,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24866, -1666.13428, 13.00827,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25110, -1670.29224, 13.00737,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25488, -1674.44080, 13.00597,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25220, -1678.59888, 13.00696,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.25378, -1682.74341, 13.00638,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24951, -1686.88806, 13.00795,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24963, -1691.02490, 13.00791,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24866, -1695.18994, 13.00817,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24756, -1699.34534, 13.00968,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24426, -1703.50488, 13.00963,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24109, -1707.64600, 13.01085,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23718, -1711.80603, 13.01234,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23657, -1715.96448, 13.01257,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23914, -1720.12793, 13.01159,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24133, -1724.30554, 13.01205,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24487, -1728.46790, 13.01070,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23877, -1732.62000, 13.01303,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23779, -1736.75354, 13.01340,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23633, -1740.90149, 13.01396,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23096, -1745.03638, 13.01601,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22253, -1749.21069, 13.01923,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22021, -1753.36792, 13.02011,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22742, -1757.49268, 13.01736,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23145, -1761.64526, 13.01582,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23267, -1765.77051, 13.01536,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23743, -1769.92566, 13.01354,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24231, -1774.05005, 13.01168,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24561, -1778.18982, 13.01042,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23438, -1782.35669, 13.01471,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23755, -1786.49109, 13.01349,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23523, -1790.65234, 13.01438,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22937, -1794.79028, 13.01662,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22095, -1798.91577, 13.01983,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22449, -1803.05566, 13.01848,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.22595, -1807.21570, 13.01792,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23364, -1811.37158, 13.01499,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23730, -1815.51404, 13.01359,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23157, -1819.65942, 13.01578,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23584, -1823.78687, 13.01415,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.23132, -1827.92212, 13.01587,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24463, -1832.05457, 13.01079,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.24744, -1836.23267, 13.09836,   0.00000, 0.00000, 90.00000);
    CreateDynamicObject(970, 1307.26050, -1839.96045, 13.09836,   0.00000, 0.00000, 90.00000);



	//VipveLspd
	CreateDynamicObject(987,1283.0999800,-1366.6999500,12.4000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (1)
	CreateDynamicObject(987,1271.1000000,-1366.7000000,12.4000000,0.0000000,0.0000000,0.0000000); //object(elecfence_bar) (2)
	CreateDynamicObject(987,1271.2000000,-1354.7000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (3)
	CreateDynamicObject(987,1271.2000000,-1342.7000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (4)
	CreateDynamicObject(987,1271.2000000,-1330.7000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (5)
	CreateDynamicObject(987,1271.2000000,-1318.8000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (6)
	CreateDynamicObject(987,1271.2000000,-1306.8000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (7)
	CreateDynamicObject(987,1271.1999500,-1294.8000500,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (8)
	CreateDynamicObject(987,1271.2000000,-1291.9000000,12.5000000,0.0000000,0.0000000,270.0000000); //object(elecfence_bar) (9)
	CreateDynamicObject(987,1283.1000000,-1292.0000000,12.5000000,0.0000000,0.0000000,180.0000000); //object(elecfence_bar) (10)
	CreateDynamicObject(987,1286.1000000,-1292.0000000,12.5000000,0.0000000,0.0000000,180.0000000); //object(elecfence_bar) (11)
	CreateDynamicObject(987,1298.0123000,-1291.9999000,12.5000000,0.0000000,0.0000000,180.0000000); //object(elecfence_bar) (12)
	CreateDynamicObject(8644,1310.3000500,-1365.8000500,21.4000000,0.0000000,0.0000000,110.0000000); //object(exclbrsign03_lvs) (2)
	CreateDynamicObject(7073,1292.3000000,-1325.4000000,36.1000000,0.0000000,0.0000000,0.0000000); //object(vegascowboy1) (1)
	CreateDynamicObject(7392,1288.6000000,-1338.6000000,27.6000000,0.0000000,0.0000000,0.0000000); //object(vegcandysign1) (1)
	CreateDynamicObject(3877,1271.7000000,-1331.3000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,1271.7002000,-1344.0000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(1256,1293.5000000,-1383.0000000,13.4000000,0.0000000,0.0000000,179.9950000); //object(stonebench1) (1)
	CreateDynamicObject(1256,1293.4000000,-1377.2000000,13.4000000,0.0000000,0.0000000,179.9950000); //object(stonebench1) (3)
	CreateDynamicObject(1256,1296.5000000,-1377.2000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (4)
	CreateDynamicObject(970,1295.0000000,-1385.1000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1325.2000000,-1385.1000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(1256,1296.5996100,-1383.0000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (5)
	CreateDynamicObject(1256,1323.8000000,-1377.9000000,13.5000000,0.0000000,0.0000000,179.9950000); //object(stonebench1) (6)
	CreateDynamicObject(1256,1323.7000000,-1383.3000000,13.6000000,0.0000000,0.0000000,180.0000000); //object(stonebench1) (7)
	CreateDynamicObject(1256,1326.5996100,-1383.2998000,13.6000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (9)
	CreateDynamicObject(1256,1326.8000000,-1377.8000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (10)
	CreateDynamicObject(970,1331.1000000,-1369.3000000,13.2000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1305.0000000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1317.4004000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1315.2998000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1302.9004000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (8)
	CreateDynamicObject(13667,1291.2000000,-1313.7000000,33.7000000,0.0000000,0.0000000,180.0000000); //object(monkeyman) (1)
	CreateDynamicObject(3528,1309.5000000,-1367.8000000,20.8000000,0.0000000,0.0000000,270.0000000); //object(vgsedragon) (1)
	CreateDynamicObject(1549,1324.1000000,-1381.8000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (1)
	CreateDynamicObject(1549,1324.0996000,-1379.4004000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1326.4000000,-1379.3000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (3)
	CreateDynamicObject(1549,1326.3000000,-1381.8000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (4)
	CreateDynamicObject(3806,1321.5000000,-1367.5000000,13.8000000,0.0000000,0.0000000,270.0000000); //object(sfx_winplant07) (1)
	CreateDynamicObject(3806,1329.2000000,-1367.5000000,13.8000000,0.0000000,0.0000000,269.9950000); //object(sfx_winplant07) (2)
	CreateDynamicObject(3806,1299.0000000,-1367.6000000,13.8000000,0.0000000,0.0000000,269.9950000); //object(sfx_winplant07) (3)
	CreateDynamicObject(3810,1313.5000000,-1367.5000000,16.2000000,0.0000000,0.0000000,270.0000000); //object(sfx_plant04) (1)
	CreateDynamicObject(3810,1306.9004000,-1367.5996000,16.1000000,0.0000000,0.0000000,269.9950000); //object(sfx_plant04) (2)
	CreateDynamicObject(3877,2105.3999000,-1816.2000000,18.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (3)
	CreateDynamicObject(3877,2110.1001000,-1822.7000000,18.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (4)
	CreateDynamicObject(1237,1309.3000000,-1384.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (1)
	CreateDynamicObject(1237,1311.1000000,-1384.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (2)
	CreateDynamicObject(997,1534.3000000,-1681.3000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier3) (1)
	CreateDynamicObject(997,1534.2998000,-1664.0996000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier3) (2)
	CreateDynamicObject(1237,1537.9000000,-1681.3000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (3)
	CreateDynamicObject(1237,1537.9004000,-1664.0996000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (4)
	CreateDynamicObject(970,1537.8000000,-1666.7000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,1537.8000000,-1673.0000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1537.8000000,-1678.8000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (11)
	CreateDynamicObject(1549,1293.8000000,-1381.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1296.3000000,-1381.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1293.8000000,-1378.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1296.2000000,-1378.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(3851,1232.6000000,-1423.6000000,14.5000000,0.0000000,0.0000000,180.0000000); //object(carshowwin_sfsx) (3)
	CreateDynamicObject(970,1178.5000000,-1329.4000000,13.7000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1180.6000000,-1331.5000000,13.7000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1180.6000000,-1333.6000000,13.7000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (13)
	CreateDynamicObject(970,1178.5000000,-1335.6700000,13.7000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (14)
	CreateDynamicObject(970,1174.4000000,-1335.6700000,13.7000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (15)
	CreateDynamicObject(3877,1176.4000000,-1318.6000000,14.7000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(970,1178.5000000,-1318.2000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,1180.5996000,-1314.1000000,13.8000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (17)
	CreateDynamicObject(970,1178.5000000,-1312.0000000,13.6000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (18)
	CreateDynamicObject(970,1174.3000000,-1312.0000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (19)
	CreateDynamicObject(970,1180.5996000,-1316.2002000,13.8000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (20)
	CreateDynamicObject(3877,1176.5996000,-1329.0000000,14.7000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(3515,1178.0000000,-1332.5000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (1)
	CreateDynamicObject(3515,1177.8000000,-1314.9000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (2)
	//VipveLspd

	//Bowling
	CreateDynamicObject(19443, 571.38342, -1589.59546, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 571.38342, -1593.06885, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 572.66589, -1589.36169, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 572.65887, -1591.93896, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 572.65082, -1593.42053, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19443, 573.40308, -1593.06824, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 573.40308, -1589.61621, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 574.76093, -1593.40381, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 574.76880, -1590.66736, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 574.76703, -1589.33984, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19443, 575.47919, -1593.05774, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 575.47919, -1589.63879, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 571.38403, -1596.55615, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 573.40308, -1596.56030, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 575.47919, -1596.52478, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 572.72626, -1596.16650, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 572.88220, -1598.89612, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 575.25513, -1595.94519, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 575.25513, -1595.94519, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 575.18011, -1598.66077, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19443, 572.10181, -1589.60339, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 571.99994, -1592.01355, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 572.06836, -1595.36914, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 572.13025, -1598.62378, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 574.53607, -1598.56042, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 574.61157, -1595.74463, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 574.11310, -1593.10364, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 574.09399, -1589.77612, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 574.14923, -1589.59583, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 577.51947, -1589.70288, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 577.51947, -1593.18542, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 577.51947, -1596.66321, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 577.16284, -1598.57007, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 577.03857, -1595.98230, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 576.97699, -1593.33740, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 576.86926, -1590.83081, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 577.04468, -1589.31689, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19443, 576.41858, -1589.65808, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 576.19794, -1590.60583, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 576.35004, -1593.04761, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 576.30872, -1596.38721, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 576.52692, -1598.43665, 2000.85864,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 575.18011, -1598.66077, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19451, 574.65100, -1598.26318, 1999.33923,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19443, 575.50092, -1600.09131, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 573.90881, -1600.09778, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 572.29950, -1600.10083, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 570.69702, -1600.09241, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 577.09387, -1600.08887, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 578.69263, -1600.09558, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19446, 574.74023, -1603.57202, 2001.00183,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19446, 574.75427, -1606.75391, 2000.99280,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19446, 574.73712, -1609.96826, 2000.99182,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(1238, 577.56848, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 577.37592, -1588.35791, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 577.20111, -1588.24988, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 577.02679, -1588.13416, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 577.75592, -1588.35791, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 577.94110, -1588.24988, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 578.12677, -1588.13416, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 575.46851, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 575.64850, -1588.37402, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 575.26849, -1588.37402, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 575.06848, -1588.27405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 575.84851, -1588.27405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 576.06848, -1588.15405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 574.86853, -1588.15405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 573.40851, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 575.46851, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 573.60852, -1588.37402, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 573.82849, -1588.27405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 574.04852, -1588.15405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 573.20850, -1588.37402, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 572.98853, -1588.25403, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 572.76849, -1588.13403, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 571.38849, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 571.58850, -1588.37402, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 571.78851, -1588.25403, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 571.98853, -1588.15405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 571.16852, -1588.37402, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 570.94849, -1588.27405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 570.74847, -1588.15405, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 570.49951, -1607.05371, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 570.49951, -1597.43762, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 570.49951, -1587.81665, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2639, 578.06232, -1603.40771, 2001.70789,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2639, 578.72479, -1603.37769, 2001.70789,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2639, 574.84912, -1603.40771, 2001.70789,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2639, 571.05298, -1603.41357, 2001.70789,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2639, 574.19043, -1603.45764, 2001.70789,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2639, 581.87299, -1603.40771, 2001.70789,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14831, 568.31079, -1600.12146, 2002.63794,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14782, 579.22601, -1614.35205, 2002.07971,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1825, 578.85461, -1610.31702, 2001.08081,   0.00000, 0.00000, 98.00000);
	CreateDynamicObject(1825, 574.19611, -1607.45178, 2001.08081,   0.00000, 0.00000, 156.00000);
	CreateDynamicObject(19431, 570.50470, -1588.20349, 2002.16638,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19431, 570.50470, -1588.20349, 2002.16638,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 570.51721, -1588.20630, 2003.91187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 572.17133, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 571.34192, -1588.91931, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 571.37439, -1587.14807, 2000.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 571.37439, -1587.14807, 2002.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 570.51721, -1588.20630, 2000.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 571.34192, -1587.49927, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 572.57141, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 574.19128, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 573.37561, -1588.93469, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 573.36615, -1587.19971, 2002.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 573.44830, -1587.49890, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 574.65448, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 576.23822, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 575.44348, -1588.91785, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 575.43182, -1587.13660, 2002.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 575.42487, -1587.50073, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 578.54388, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 578.40167, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 577.53119, -1588.91528, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 577.39166, -1587.15491, 2002.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 577.60449, -1587.48474, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 576.51831, -1588.91431, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 574.45850, -1588.91528, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 572.29822, -1588.91528, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 574.35132, -1588.20105, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 574.53131, -1588.20105, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 572.45117, -1588.19849, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 572.31122, -1588.19751, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 576.41162, -1588.18689, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 576.57159, -1588.18787, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1532, 570.60352, -1608.20459, 2001.07019,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1532, 570.60449, -1606.77466, 2001.07019,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19446, 574.72980, -1613.11707, 2000.99084,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 578.75000, -1590.77466, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 578.75000, -1592.77466, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 578.75000, -1594.77466, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 578.74438, -1597.45190, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19443, 579.51202, -1589.44421, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 579.51196, -1592.93835, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 581.51202, -1596.39868, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3093, 579.04999, -1589.33325, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 580.70313, -1590.58459, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 580.70313, -1593.33569, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 580.70313, -1596.11609, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 580.70313, -1598.87756, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(3093, 580.79608, -1589.10449, 2000.90625,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(19443, 581.49213, -1589.41187, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 581.51202, -1592.91199, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 579.51392, -1596.43884, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 584.20343, -1598.26318, 1999.33923,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19451, 570.49951, -1616.67896, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19443, 580.25122, -1600.07458, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19443, 581.74371, -1600.08191, 2000.99866,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19446, 584.36310, -1603.58984, 2001.00183,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19446, 584.35779, -1606.74866, 2001.00085,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19446, 584.36578, -1609.96313, 2000.99988,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 582.39740, -1590.10718, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 582.39728, -1599.72510, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19451, 582.39728, -1609.34570, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1433, 580.29858, -1603.29626, 2001.26855,   0.00000, 0.00000, 40.00000);
	CreateDynamicObject(1433, 576.33948, -1603.12744, 2001.26855,   0.00000, 0.00000, -164.00000);
	CreateDynamicObject(1433, 572.66882, -1603.79346, 2001.26855,   0.00000, 0.00000, 244.00000);
	CreateDynamicObject(19446, 584.34937, -1613.11316, 2000.99084,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19451, 573.90002, -1614.81812, 2002.81726,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19451, 583.51208, -1614.81812, 2002.81726,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19451, 582.39728, -1618.91309, 2002.81726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 579.50848, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 579.32849, -1588.33398, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 579.12848, -1588.21399, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 578.90851, -1588.09399, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 579.70850, -1588.33398, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 579.92853, -1588.21399, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 580.14850, -1588.09399, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 578.70398, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 580.28809, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 580.72839, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 582.39221, -1588.20630, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 579.51367, -1588.91931, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 576.57159, -1588.18787, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 580.40808, -1588.20532, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 580.56842, -1588.20532, 2002.41187,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 581.56848, -1588.47400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 581.36853, -1588.35400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 581.76849, -1588.35400, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 581.96851, -1588.23401, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 581.12848, -1588.23401, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 580.92853, -1588.11401, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, 582.18848, -1588.11401, 2000.90698,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19435, 581.57379, -1588.92419, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 578.27948, -1588.91431, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 580.32599, -1588.91431, 2003.97192,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 579.50238, -1587.09106, 2002.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 581.49316, -1587.01843, 2002.31189,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19435, 577.20453, -1587.51477, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 579.45483, -1587.51892, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19435, 581.52087, -1587.49377, 2001.41187,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19449, 578.31561, -1609.94568, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 574.85004, -1609.96191, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 571.34540, -1609.95679, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 581.77997, -1609.94849, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 581.79993, -1600.33813, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 581.79993, -1590.76392, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 578.31561, -1600.35999, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 578.31561, -1590.75769, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 574.84998, -1600.35718, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 574.84998, -1590.79297, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 571.34540, -1600.28467, 2004.61694,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19449, 571.34540, -1590.69934, 2004.61694,   0.00000, 90.00000, 0.00000);
	//Bowling

	//Lspd=Kerem(Sequester)
	CreateDynamicObject(3470,2223.35,-1193.36,27.51,0.00,0.00,180.00);
	CreateDynamicObject(970,1544.12,-1672.44,13.09,0.00,0.00,0.00);
	CreateDynamicObject(970,1544.13,-1678.79,13.10,0.00,0.00,0.00);
	CreateDynamicObject(15038,1541.68,-1672.41,13.17,0.00,0.00,0.00);
	CreateDynamicObject(15038,1541.68,-1678.80,13.17,0.00,0.00,0.00);
	CreateDynamicObject(970,1537.87,-1661.59,13.14,0.00,0.00,90.00);
	CreateDynamicObject(970,1542.05,-1670.33,13.09,0.00,0.00,90.00);
	CreateDynamicObject(970,1542.06,-1666.16,13.09,0.00,0.00,90.00);
	CreateDynamicObject(970,1542.05,-1657.92,13.09,0.00,0.00,90.00);
	CreateDynamicObject(970,1542.05,-1662.09,13.09,0.00,0.00,90.00);
	CreateDynamicObject(970,1539.97,-1655.83,13.08,0.00,0.00,0.00);
	CreateDynamicObject(2253,1554.86,-1676.99,15.47,0.00,0.00,0.00);
	CreateDynamicObject(2253,1554.88,-1674.25,15.46,0.00,0.00,0.00);
	CreateDynamicObject(15038,1537.52,-1655.87,13.16,0.00,0.00,0.00);
	CreateDynamicObject(15038,1537.49,-1659.59,13.18,0.00,0.00,0.00);
	CreateDynamicObject(970,1542.06,-1680.87,13.11,0.00,0.00,90.00);
	CreateDynamicObject(970,1542.06,-1685.04,13.11,0.00,0.00,90.00);
	CreateDynamicObject(970,1537.92,-1683.78,13.14,0.00,0.00,90.00);
	CreateDynamicObject(970,1542.06,-1689.21,13.11,0.00,0.00,90.00);
	CreateDynamicObject(970,1539.98,-1691.30,13.11,0.00,0.00,0.00);
	CreateDynamicObject(970,1537.92,-1685.87,13.14,0.00,0.00,90.00);
	CreateDynamicObject(15038,1537.54,-1687.93,13.16,0.00,0.00,0.00);
	CreateDynamicObject(15038,1537.53,-1691.32,13.16,0.00,0.00,270.00);
	CreateDynamicObject(1360,1543.71,-1679.31,13.33,0.00,0.00,450.00);
	CreateDynamicObject(1360,1543.85,-1671.85,13.33,0.00,0.00,90.00);
	//Lspd=Kerem(Sequester)

	//Pizzacitaksici
	CreateDynamicObject(1215,1699.5000000,-1839.4000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (1)
	CreateDynamicObject(1215,1699.4004000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (2)
	CreateDynamicObject(1215,1726.3000000,-1839.3000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (3)
	CreateDynamicObject(1215,1713.8000000,-1837.6000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (4)
	CreateDynamicObject(1215,1713.7998000,-1839.2998000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (5)
	CreateDynamicObject(1215,1736.5000000,-1839.3000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (6)
	CreateDynamicObject(1215,1726.2002000,-1837.5996000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (7)
	CreateDynamicObject(1215,1736.5000000,-1837.5996000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (8)
	CreateDynamicObject(1215,1742.9000000,-1849.9000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (9)
	CreateDynamicObject(1215,1744.5000000,-1837.5996000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (10)
	CreateDynamicObject(1215,1744.5000000,-1849.8000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(bollardlight) (11)
	CreateDynamicObject(1557,1332.7000000,-1263.3000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(gen_doorext19) (1)
	CreateDynamicObject(1557,1332.7000000,-1260.3000000,12.6000000,0.0000000,0.0000000,270.0000000); //object(gen_doorext19) (2)
	CreateDynamicObject(12924,1323.2000000,-1257.4000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(sw_block06) (1)
	CreateDynamicObject(970,1700.5000000,-1860.0000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1700.5000000,-1864.1000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,1700.5000000,-1868.2000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1700.5000000,-1872.3000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1699.6000000,-1835.3000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1699.6000000,-1841.6000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1742.8000000,-1847.8000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1701.7000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (8)
	CreateDynamicObject(970,1705.8000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,1709.9000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1714.0000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (11)
	CreateDynamicObject(970,1718.1000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1722.2000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (13)
	CreateDynamicObject(970,1726.3000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (14)
	CreateDynamicObject(970,1730.4000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (15)
	CreateDynamicObject(970,1734.5000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,1738.6000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (17)
	CreateDynamicObject(970,1740.7000000,-1839.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (18)
	CreateDynamicObject(970,1742.8000000,-1845.7000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (19)
	CreateDynamicObject(970,1742.7998000,-1841.5996000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (20)
	CreateDynamicObject(970,1740.7000000,-1849.9000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (21)
	CreateDynamicObject(970,1738.5000000,-1837.4000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (23)
	CreateDynamicObject(970,1701.5996000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (24)
	CreateDynamicObject(970,1705.7002000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (25)
	CreateDynamicObject(970,1709.7998000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (26)
	CreateDynamicObject(970,1713.9003900,-1837.4003900,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (27)
	CreateDynamicObject(970,1718.0000000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (28)
	CreateDynamicObject(970,1722.0996000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (29)
	CreateDynamicObject(970,1726.2002000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (30)
	CreateDynamicObject(970,1730.2998000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (31)
	CreateDynamicObject(970,1734.4004000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (32)
	CreateDynamicObject(970,1744.7000000,-1839.5000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (33)
	CreateDynamicObject(970,1742.5996000,-1837.4004000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (34)
	CreateDynamicObject(970,1744.7000000,-1847.7000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (35)
	CreateDynamicObject(970,1744.7002000,-1843.5996000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (36)
	CreateDynamicObject(1878,1745.0000000,-1849.8000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(chip_stack03) (1)
	CreateDynamicObject(1878,1745.4000000,-1849.8000000,12.9000000,0.0000000,0.0000000,176.0000000); //object(chip_stack03) (2)
	CreateDynamicObject(1878,1745.8000000,-1849.8000000,12.9000000,0.0000000,0.0000000,175.9950000); //object(chip_stack03) (3)
	CreateDynamicObject(1878,1746.2000000,-1849.8000000,12.9000000,0.0000000,0.0000000,175.9950000); //object(chip_stack03) (4)
	CreateDynamicObject(1597,1704.8000000,-1836.1000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (1)
	CreateDynamicObject(1597,1716.8000000,-1836.1000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (2)
	CreateDynamicObject(1597,1728.3000000,-1836.1000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (3)
	CreateDynamicObject(1597,1740.1000000,-1836.1000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (4)
	CreateDynamicObject(1597,1725.9000000,-1841.2000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (5)
	CreateDynamicObject(1597,1715.8000000,-1841.2000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (6)
	CreateDynamicObject(1597,1704.8000000,-1841.1000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (7)
	CreateDynamicObject(1597,1735.9000000,-1841.2000000,15.2000000,0.0000000,0.0000000,90.0000000); //object(cntrlrsac1) (8)
	CreateDynamicObject(1597,1741.4000000,-1844.9000000,15.2000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (9)
	CreateDynamicObject(1597,1745.6000000,-1842.4000000,15.2000000,0.0000000,0.0000000,0.0000000); //object(cntrlrsac1) (10)
	//pizzacitaksicibitis.

	//Vip.LSPD
	CreateDynamicObject(987,1298.0123000,-1291.9999000,12.5000000,0.0000000,0.0000000,180.0000000); //object(elecfence_bar) (12)
	CreateDynamicObject(8644,1310.3000500,-1365.8000500,21.4000000,0.0000000,0.0000000,110.0000000); //object(exclbrsign03_lvs) (2)
	CreateDynamicObject(7073,1292.3000000,-1325.4000000,36.1000000,0.0000000,0.0000000,0.0000000); //object(vegascowboy1) (1)
	CreateDynamicObject(7392,1288.6000000,-1338.6000000,27.6000000,0.0000000,0.0000000,0.0000000); //object(vegcandysign1) (1)
	CreateDynamicObject(3877,1271.7000000,-1331.3000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (1)
	CreateDynamicObject(3877,1271.7002000,-1344.0000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(1256,1293.5000000,-1383.0000000,13.4000000,0.0000000,0.0000000,179.9950000); //object(stonebench1) (1)
	CreateDynamicObject(1256,1293.4000000,-1377.2000000,13.4000000,0.0000000,0.0000000,179.9950000); //object(stonebench1) (3)
	CreateDynamicObject(1256,1296.5000000,-1377.2000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (4)
	CreateDynamicObject(970,1295.0000000,-1385.1000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,1325.2000000,-1385.1000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(1256,1296.5996100,-1383.0000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (5)
	CreateDynamicObject(1256,1323.8000000,-1377.9000000,13.5000000,0.0000000,0.0000000,179.9950000); //object(stonebench1) (6)
	CreateDynamicObject(1256,1323.7000000,-1383.3000000,13.6000000,0.0000000,0.0000000,180.0000000); //object(stonebench1) (7)
	CreateDynamicObject(1256,1326.5996100,-1383.2998000,13.6000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (9)
	CreateDynamicObject(1256,1326.8000000,-1377.8000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(stonebench1) (10)
	CreateDynamicObject(970,1331.1000000,-1369.3000000,13.2000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (3)
	CreateDynamicObject(970,1305.0000000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (4)
	CreateDynamicObject(970,1317.4004000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (6)
	CreateDynamicObject(970,1315.2998000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (7)
	CreateDynamicObject(970,1302.9004000,-1385.0996000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (8)
	CreateDynamicObject(13667,1291.2000000,-1313.7000000,33.7000000,0.0000000,0.0000000,180.0000000); //object(monkeyman) (1)
	CreateDynamicObject(3528,1309.5000000,-1367.8000000,20.8000000,0.0000000,0.0000000,270.0000000); //object(vgsedragon) (1)
	CreateDynamicObject(1549,1324.1000000,-1381.8000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (1)
	CreateDynamicObject(1549,1324.0996000,-1379.4004000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1326.4000000,-1379.3000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (3)
	CreateDynamicObject(1549,1326.3000000,-1381.8000000,12.9000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (4)
	CreateDynamicObject(3806,1321.5000000,-1367.5000000,13.8000000,0.0000000,0.0000000,270.0000000); //object(sfx_winplant07) (1)
	CreateDynamicObject(3806,1329.2000000,-1367.5000000,13.8000000,0.0000000,0.0000000,269.9950000); //object(sfx_winplant07) (2)
	CreateDynamicObject(3806,1299.0000000,-1367.6000000,13.8000000,0.0000000,0.0000000,269.9950000); //object(sfx_winplant07) (3)
	CreateDynamicObject(3810,1313.5000000,-1367.5000000,16.2000000,0.0000000,0.0000000,270.0000000); //object(sfx_plant04) (1)
	CreateDynamicObject(3810,1306.9004000,-1367.5996000,16.1000000,0.0000000,0.0000000,269.9950000); //object(sfx_plant04) (2)
	CreateDynamicObject(3877,2105.3999000,-1816.2000000,18.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (3)
	CreateDynamicObject(3877,2110.1001000,-1822.7000000,18.9000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (4)
	CreateDynamicObject(1237,1309.3000000,-1384.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (1)
	CreateDynamicObject(1237,1311.1000000,-1384.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (2)
	CreateDynamicObject(997,1534.3000000,-1681.3000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier3) (1)
	CreateDynamicObject(997,1534.2998000,-1664.0996000,12.5000000,0.0000000,0.0000000,0.0000000); //object(lhouse_barrier3) (2)
	CreateDynamicObject(1237,1537.9000000,-1681.3000000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (3)
	CreateDynamicObject(1237,1537.9004000,-1664.0996000,12.5000000,0.0000000,0.0000000,0.0000000); //object(strtbarrier01) (4)
	CreateDynamicObject(970,1537.8000000,-1666.7000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (9)
	CreateDynamicObject(970,1537.8000000,-1673.0000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (10)
	CreateDynamicObject(970,1537.8000000,-1678.8000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (11)
	CreateDynamicObject(1549,1293.8000000,-1381.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1296.3000000,-1381.4000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1293.8000000,-1378.8000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(1549,1296.2000000,-1378.7000000,12.8000000,0.0000000,0.0000000,0.0000000); //object(cj_ashtray_b) (2)
	CreateDynamicObject(3851,1232.6000000,-1423.6000000,14.5000000,0.0000000,0.0000000,180.0000000); //object(carshowwin_sfsx) (3)
	CreateDynamicObject(970,1178.5000000,-1329.4000000,13.7000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (5)
	CreateDynamicObject(970,1180.6000000,-1331.5000000,13.7000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (12)
	CreateDynamicObject(970,1180.6000000,-1333.6000000,13.7000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (13)
	CreateDynamicObject(970,1178.5000000,-1335.6700000,13.7000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (14)
	CreateDynamicObject(970,1174.4000000,-1335.6700000,13.7000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (15)
	CreateDynamicObject(3877,1176.4000000,-1318.6000000,14.7000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(970,1178.5000000,-1318.2000000,13.8000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(970,1180.5996000,-1314.1000000,13.8000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (17)
	CreateDynamicObject(970,1178.5000000,-1312.0000000,13.6000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (18)
	CreateDynamicObject(970,1174.3000000,-1312.0000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (19)
	CreateDynamicObject(970,1180.5996000,-1316.2002000,13.8000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (20)
	CreateDynamicObject(3877,1176.5996000,-1329.0000000,14.7000000,0.0000000,0.0000000,0.0000000); //object(sf_rooflite) (2)
	CreateDynamicObject(3515,1178.0000000,-1332.5000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (1)
	CreateDynamicObject(3515,1177.8000000,-1314.9000000,14.0000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (2)
	//Vip.LSPD

	//Plamino
	CreateDynamicObject(8407,1757.8000000,-1906.0000000,14.0000000,0.0000000,0.0000000,90.0000000); //object(carparkhut01_lvs) (1)
	CreateDynamicObject(983,1752.3000000,-1910.9000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (1)
	CreateDynamicObject(983,1752.3000000,-1904.5000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (2)
	CreateDynamicObject(983,1755.5000000,-1901.3000500,13.2000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (3)
	CreateDynamicObject(983,1755.6000000,-1913.9000000,13.3000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (4)
	CreateDynamicObject(983,1752.4000000,-1917.1000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (5)
	CreateDynamicObject(983,1752.4000000,-1923.5000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (6)
	CreateDynamicObject(983,1752.4000000,-1929.9000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (7)
	CreateDynamicObject(983,1752.4000000,-1933.1000000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (8)
	CreateDynamicObject(16151,1753.5000000,-1929.2000000,12.6000000,0.0000000,0.0000000,180.0000000); //object(ufo_bar) (1)
	CreateDynamicObject(1775,1757.5000000,-1932.9000000,13.7000000,0.0000000,0.0000000,180.0000000); //object(cj_sprunk1) (1)
	CreateDynamicObject(1776,1752.9000000,-1922.1000000,13.7000000,0.0000000,0.0000000,90.0000000); //object(cj_candyvendor) (2)
	CreateDynamicObject(11431,1755.5000000,-1916.6000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(des_tepeoff01) (1)
	CreateDynamicObject(983,1755.6000000,-1920.3000000,13.3000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (10)
	CreateDynamicObject(1302,1752.8000000,-1920.9000000,12.6000000,0.0000000,0.0000000,90.0000000); //object(vendmachfd) (1)
	CreateDynamicObject(1723,1757.6000000,-1923.5000000,12.6000000,0.0000000,0.0000000,270.0000000); //object(mrk_seating1) (3)
	CreateDynamicObject(2438,1752.8000000,-1923.2000000,14.0000000,0.0000000,0.0000000,90.0000000); //object(cj_slush_mac) (1)
	CreateDynamicObject(3515,1766.1999500,-1910.3000500,13.6000000,0.0000000,0.0000000,0.0000000); //object(vgsfountain) (1)
	CreateDynamicObject(983,1758.7998000,-1920.2998000,13.3000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (11)
	CreateDynamicObject(970,1764.1000000,-1910.0000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fencesmallb) (15)
	CreateDynamicObject(970,1766.2002000,-1912.0996000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (16)
	CreateDynamicObject(15038,1759.1000000,-1901.3000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3_sv) (2)
	CreateDynamicObject(15038,1759.1000000,-1905.0000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3_sv) (3)
	CreateDynamicObject(14804,1757.3000000,-1922.6000000,13.5000000,0.0000000,0.0000000,0.0000000); //object(bdups_plant) (1)
	CreateDynamicObject(3811,1752.0000000,-1925.4000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(sfx_winplant08) (4)
	CreateDynamicObject(3811,1752.0000000,-1907.5000000,13.4000000,0.0000000,0.0000000,0.0000000); //object(sfx_winplant08) (5)
	CreateDynamicObject(1594,1766.6000000,-1932.6000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (1)
	CreateDynamicObject(1594,1766.5000000,-1919.6000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (2)
	CreateDynamicObject(1594,1766.5000000,-1926.1000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (3)
	CreateDynamicObject(1594,1761.3000000,-1923.0000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (4)
	CreateDynamicObject(1594,1761.8000000,-1929.7000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (5)
	//Plamino

	//Pizzacgaraj
	CreateDynamicObject(1346,2127.5000000,-1763.7000000,13.9000000,0.0000000,0.0000000,0.0000000); //object(cj_phone_kiosk2) (1)
	CreateDynamicObject(983,2123.5000000,-1782.8000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (1)
	CreateDynamicObject(983,2123.5000000,-1776.5000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (2)
	CreateDynamicObject(983,2123.3999000,-1789.2000000,13.2000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (3)
	CreateDynamicObject(983,2123.5000000,-1770.1000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (6)
	CreateDynamicObject(983,2123.5000000,-1763.6000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (7)
	CreateDynamicObject(984,2099.5000000,-1779.8000000,13.0000000,0.0000000,0.0000000,350.0000000); //object(fenceshit2) (1)
	CreateDynamicObject(983,2101.7000000,-1770.5000000,13.1000000,0.0000000,0.0000000,340.0000000); //object(fenceshit3) (8)
	CreateDynamicObject(983,2106.3000000,-1767.5000000,13.1000000,0.0000000,0.0000000,270.0000000); //object(fenceshit3) (9)
	CreateDynamicObject(983,2109.8999000,-1764.3000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (10)
	CreateDynamicObject(11431,2122.5000000,-1762.3000000,13.8000000,0.0000000,0.0000000,90.0000000); //object(des_tepeoff01) (1)
	CreateDynamicObject(1941,1498.9000000,-1664.5000000,31.2000000,0.0000000,0.0000000,0.0000000); //object(chip_stack17) (1)
	CreateDynamicObject(968,2119.2000000,-1763.5000000,12.4000000,0.0000000,0.0000000,0.0000000); //object(barrierturn) (1)
	CreateDynamicObject(8131,1478.1000000,-1675.0000000,23.7000000,0.0000000,0.0000000,0.0000000); //object(vgschurch02_lvs) (1)
	CreateDynamicObject(1258,2120.1001000,-1760.4000000,13.1000000,0.0000000,0.0000000,0.0000000); //object(mpostbox1) (1)
	CreateDynamicObject(983,2101.6001000,-1786.1000000,13.2000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (11)
	//Pizzacgaraj

	//Pizzacuustu
/*	CreateDynamicObject(13011,2110.1001000,-1823.8000500,14.3000000,0.0000000,0.0000000,90.0000000); //object(cos_sbanksteps04) (1)
	CreateDynamicObject(983,2104.8000000,-1820.0000000,18.0000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (1)
	CreateDynamicObject(983,2104.8000000,-1818.4000000,18.0000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (2)
	CreateDynamicObject(983,2110.3000000,-1823.1000000,18.0000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (3)
	CreateDynamicObject(12950,2109.8999000,-1818.8000000,17.8000000,0.0000000,0.0000000,0.0000000); //object(cos_sbanksteps03) (1)
	CreateDynamicObject(983,2104.6001000,-1810.0000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (4)
	CreateDynamicObject(983,2104.6001000,-1803.6000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (5)
	CreateDynamicObject(983,2107.7000000,-1799.7000000,21.9000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (6)
	CreateDynamicObject(983,2104.6001000,-1802.9000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (7)
	CreateDynamicObject(983,2104.6001000,-1809.3000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (8)
	CreateDynamicObject(983,2109.3000000,-1799.7000000,21.9000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (9)
	CreateDynamicObject(983,2112.5000000,-1796.5000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (10)
	CreateDynamicObject(983,2112.5000000,-1793.3000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (11)
	CreateDynamicObject(983,2117.0000000,-1793.3000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (13)
	CreateDynamicObject(983,2117.0000000,-1796.5000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (14)
	CreateDynamicObject(983,2120.2000000,-1799.7000000,21.9000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (15)
	CreateDynamicObject(983,2121.8000000,-1799.7000000,21.9000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (16)
	CreateDynamicObject(983,2124.8999000,-1802.9000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (17)
	CreateDynamicObject(983,2124.8999000,-1809.3000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (18)
	CreateDynamicObject(983,2124.8999000,-1810.0000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (19)
	CreateDynamicObject(983,2124.8999000,-1803.6000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (20)
	CreateDynamicObject(983,2121.6999500,-1813.1999500,21.9000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (21)
	CreateDynamicObject(983,2120.1001000,-1813.2000000,21.9000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (22)
	CreateDynamicObject(983,2116.8999000,-1816.4000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (23)
	CreateDynamicObject(983,2116.8999000,-1819.6000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (24)
	CreateDynamicObject(983,2112.3999000,-1819.6999500,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (25)
	CreateDynamicObject(983,2112.3999000,-1816.5000000,21.9000000,0.0000000,0.0000000,0.0000000); //object(fenceshit3) (26)
	CreateDynamicObject(983,2095.8999000,-1811.8000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (27)
	CreateDynamicObject(983,2095.8999000,-1817.4000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (28)
	CreateDynamicObject(983,2095.8999000,-1822.3000000,13.2000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (29)
	CreateDynamicObject(983,2095.8999000,-1791.1000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (30)
	CreateDynamicObject(983,2096.0000000,-1796.9000000,13.1000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (31)
	CreateDynamicObject(983,2095.8000000,-1802.3000000,13.2000000,0.0000000,0.0000000,90.0000000); //object(fenceshit3) (32)
	CreateDynamicObject(2253,2107.0000000,-1822.9000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_22) (1)
	CreateDynamicObject(2253,2104.8999000,-1823.0000000,17.6000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_22) (2)
	CreateDynamicObject(2195,2092.3999000,-1796.9000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3) (1)
	CreateDynamicObject(2195,2092.3999000,-1791.0000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3) (2)
	CreateDynamicObject(2195,2092.2000000,-1802.3000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3) (3)
	CreateDynamicObject(2195,2092.3000000,-1811.8000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3) (4)
	CreateDynamicObject(2195,2092.3000000,-1817.5000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3) (5)
	CreateDynamicObject(2195,2092.3000000,-1822.2000000,13.0000000,0.0000000,0.0000000,0.0000000); //object(plant_pot_3) (6)
	CreateDynamicObject(970,2114.7000000,-1790.0000000,21.8000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (1)
	CreateDynamicObject(970,2114.7000000,-1823.5000000,21.8000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (2)
	CreateDynamicObject(970,2106.7000000,-1813.2000000,21.8000000,0.0000000,0.0000000,0.0000000); //object(fencesmallb) (3)
	CreateDynamicObject(16151,2123.8000000,-1806.0000000,21.2000000,0.0000000,0.0000000,0.0000000); //object(ufo_bar) (1)
	CreateDynamicObject(1551,2122.8999000,-1803.4000000,22.0000000,0.0000000,0.0000000,0.0000000); //object(dyn_wine_big) (1)
	CreateDynamicObject(1668,2122.7000000,-1804.3000000,22.0000000,0.0000000,0.0000000,0.0000000); //object(propvodkabotl1) (1)
	CreateDynamicObject(1950,2123.3000000,-1802.7000000,22.0000000,0.0000000,0.0000000,0.0000000); //object(kb_beer) (1)
	CreateDynamicObject(1951,2122.7000000,-1806.0000000,22.0000000,0.0000000,0.0000000,0.0000000); //object(kb_beer01) (1)
	CreateDynamicObject(16152,2105.5000000,-1805.6000000,21.2000000,0.0000000,0.0000000,0.0000000); //object(ufo_booths) (1)
	CreateDynamicObject(1775,2124.3999000,-1812.6000000,22.3000000,0.0000000,0.0000000,270.0000000); //object(cj_sprunk1) (1)
	CreateDynamicObject(1776,2105.1001000,-1812.6000000,22.3000000,0.0000000,0.0000000,90.0000000); //object(cj_candyvendor) (1)
	CreateDynamicObject(1302,2105.1001000,-1811.4000000,21.2000000,0.0000000,0.0000000,90.0000000); //object(vendmachfd) (1)
	CreateDynamicObject(2438,2124.5000000,-1811.4000000,22.6000000,0.0000000,0.0000000,270.0000000); //object(cj_slush_mac) (1)
	CreateDynamicObject(1291,2124.3999000,-1810.5000000,21.7000000,0.0000000,0.0000000,270.0000000); //object(postbox1) (1)
	CreateDynamicObject(1594,2115.8000000,-1791.2000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (1)
	CreateDynamicObject(1594,2113.8000000,-1794.5000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (2)
	CreateDynamicObject(1594,2115.7000000,-1797.7000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (3)
	CreateDynamicObject(1594,2111.8000000,-1802.3000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (4)
	CreateDynamicObject(1594,2115.0000000,-1804.8000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (5)
	CreateDynamicObject(1594,2112.1001000,-1808.0000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (6)
	CreateDynamicObject(1594,2118.0000000,-1801.5000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (7)
	CreateDynamicObject(1594,2117.8999000,-1807.9000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (8)
	CreateDynamicObject(1594,2115.0000000,-1810.8000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (9)
	CreateDynamicObject(1594,2113.8999000,-1815.2000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (10)
	CreateDynamicObject(1594,2115.8000000,-1819.0000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (11)
	CreateDynamicObject(1594,2113.6001000,-1822.4000000,21.7000000,0.0000000,0.0000000,0.0000000); //object(chairsntable) (12)
	//Pizzacustuu */


	//SAH
	CreateDynamicObject(19446, 680.04, -1352.77, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19354, 676.92, -1346.38, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19354, 676.91, -1343.19, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1536, 676.98, -1346.52, 769.23,   0.00, 0.00, 90.00);
	CreateDynamicObject(19379, 681.91, -1346.41, 769.11,   0.00, 90.00, 0.00);
	CreateDynamicObject(1536, 676.94, -1343.52, 769.23,   0.00, 0.00, 270.00);
	CreateDynamicObject(19354, 678.42, -1348.04, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19446, 681.74, -1342.80, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19379, 681.89, -1356.01, 769.11,   0.00, 90.00, 0.00);
	CreateDynamicObject(1502, 683.42, -1353.14, 769.20,   0.00, 0.00, 270.00);
	CreateDynamicObject(19446, 683.45, -1347.54, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19354, 683.45, -1357.11, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19384, 683.45, -1353.92, 770.86,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 680.67, -1343.48, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(2001, 683.18, -1343.45, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(2001, 680.24, -1343.45, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(2001, 677.31, -1347.41, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 679.73, -1347.41, 769.20,   0.00, 0.00, 180.00);
	CreateDynamicObject(2001, 680.29, -1347.52, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(14455, 683.26, -1351.19, 770.82,   0.00, 0.00, 90.00);
	CreateDynamicObject(2001, 677.38, -1343.19, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 688.92, -1356.98, 769.10,   0.00, 90.00, 0.00);
	CreateDynamicObject(19446, 688.29, -1358.67, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19446, 692.03, -1353.92, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19446, 688.28, -1351.34, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(2172, 686.36, -1357.53, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 684.08, -1358.05, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 684.09, -1357.03, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 684.10, -1356.00, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(2001, 683.90, -1355.04, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(2172, 689.36, -1357.53, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(2172, 689.36, -1353.53, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(2172, 686.36, -1353.53, 769.19,   0.00, 0.00, 90.00);
	CreateDynamicObject(1714, 690.29, -1356.91, 769.19,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 690.29, -1352.91, 769.19,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 687.29, -1352.91, 769.19,   0.00, 0.00, 270.00);
	CreateDynamicObject(1714, 687.29, -1356.91, 769.19,   0.00, 0.00, 270.00);
	CreateDynamicObject(14455, 691.88, -1357.26, 770.69,   0.00, 0.00, 90.00);
	CreateDynamicObject(14393, 671.23, -1358.70, 771.44,   0.00, 0.00, 0.00);
	CreateDynamicObject(19384, 680.04, -1359.14, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1502, 680.05, -1359.90, 769.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(19353, 671.80, -1361.08, 768.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(19353, 671.80, -1358.06, 768.61,   0.00, 0.00, 0.00);
	CreateDynamicObject(14392, 671.34, -1358.68, 770.46,   0.00, 0.00, 0.00);
	CreateDynamicObject(19325, 671.25, -1359.93, 770.36,   0.00, 0.00, 0.00);
	CreateDynamicObject(1727, 665.64, -1355.00, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 663.09, -1359.45, 769.20,   0.00, 0.00, 90.00);
	CreateDynamicObject(1727, 667.50, -1362.43, 769.20,   0.00, 0.00, 180.00);
	CreateDynamicObject(1827, 664.73, -1358.35, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(19421, 664.95, -1358.68, 769.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(19418, 664.79, -1358.30, 769.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(19421, 665.05, -1358.62, 769.63,   0.00, 0.00, 0.00);
	CreateDynamicObject(19378, 663.46, -1358.97, 772.70,   0.00, 88.50, 0.00);
	CreateDynamicObject(14391, 672.83, -1359.69, 770.13,   0.00, 0.00, 0.00);
	CreateDynamicObject(19446, 680.04, -1365.55, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 692.15, -1353.74, 769.09,   0.00, 90.00, 0.00);
	CreateDynamicObject(19446, 684.78, -1361.88, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19354, 689.01, -1361.88, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19354, 694.01, -1363.04, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 695.79, -1356.64, 769.09,   0.00, 90.00, 0.00);
	CreateDynamicObject(19354, 693.10, -1365.68, 770.87,   0.00, 0.00, -40.00);
	CreateDynamicObject(19354, 691.56, -1365.68, 770.87,   0.00, 0.00, 40.00);
	CreateDynamicObject(19446, 698.79, -1361.52, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19446, 700.70, -1361.16, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 704.66, -1356.60, 769.09,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 701.81, -1347.29, 769.10,   0.00, 90.00, 0.00);
	CreateDynamicObject(19379, 692.00, -1346.39, 769.09,   0.00, 90.00, 0.00);
	CreateDynamicObject(19384, 694.68, -1358.66, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(1502, 693.89, -1358.67, 769.17,   0.00, 0.00, 0.00);
	CreateDynamicObject(19384, 700.71, -1354.75, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(1502, 700.72, -1355.49, 769.17,   0.00, 0.00, 90.00);
	CreateDynamicObject(19354, 690.58, -1363.40, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19379, 684.99, -1357.18, 769.10,   0.00, 90.00, 0.00);
	CreateDynamicObject(19446, 697.88, -1351.35, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19446, 707.52, -1351.35, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(19446, 705.49, -1356.01, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19446, 700.72, -1348.36, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19446, 705.95, -1360.72, 770.87,   0.00, 0.00, -80.00);
	CreateDynamicObject(19446, 698.56, -1353.95, 770.87,   0.00, 0.00, 0.00);
	CreateDynamicObject(19354, 697.03, -1358.68, 770.87,   0.00, 0.00, 90.00);
	CreateDynamicObject(14455, 690.38, -1358.90, 770.82,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 681.27, -1361.23, 769.18,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 682.31, -1361.23, 769.18,   0.00, 0.00, 180.00);
	CreateDynamicObject(2001, 680.49, -1361.44, 769.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(2002, 683.59, -1361.25, 769.18,   0.00, 0.00, 180.00);
	CreateDynamicObject(2007, 701.27, -1360.39, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 701.27, -1359.36, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 701.27, -1358.34, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 701.26, -1357.32, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2001, 701.15, -1356.45, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(2001, 701.14, -1361.23, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(14455, 705.41, -1360.00, 770.80,   0.00, 0.00, 90.00);
	CreateDynamicObject(2002, 699.68, -1351.98, 769.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(2172, 697.42, -1357.40, 769.19,   0.00, 0.00, 180.00);
	CreateDynamicObject(2172, 697.42, -1354.90, 769.19,   0.00, 0.00, 180.00);
	CreateDynamicObject(14455, 697.57, -1351.54, 770.74,   0.00, 0.00, 180.00);
	CreateDynamicObject(2172, 694.12, -1356.36, 769.19,   0.00, 0.00, 180.00);
	CreateDynamicObject(2172, 694.12, -1353.86, 769.19,   0.00, 0.00, 180.00);
	CreateDynamicObject(1714, 693.57, -1352.94, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 696.82, -1354.01, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 693.51, -1355.50, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1714, 696.81, -1356.49, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(2007, 692.98, -1358.05, 769.19,   0.00, 0.00, 180.00);
	CreateDynamicObject(2002, 698.02, -1352.85, 769.18,   0.00, 0.00, 270.00);
	CreateDynamicObject(14455, 695.17, -1361.33, 770.85,   0.00, 0.00, 0.00);
	CreateDynamicObject(2007, 702.45, -1360.34, 769.18,   0.00, 0.00, 270.00);
	CreateDynamicObject(2007, 702.46, -1359.30, 769.18,   0.00, 0.00, 270.00);
	CreateDynamicObject(2007, 702.46, -1358.25, 769.18,   0.00, 0.00, 270.00);
	CreateDynamicObject(2007, 702.46, -1357.21, 769.18,   0.00, 0.00, 270.00);
	CreateDynamicObject(2007, 703.49, -1357.22, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 703.50, -1358.26, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 703.50, -1359.30, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2007, 703.49, -1360.34, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2001, 703.00, -1356.30, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 701.67, -1351.97, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(1726, 704.85, -1352.51, 769.18,   0.00, 0.00, 270.00);
	CreateDynamicObject(1827, 702.73, -1353.84, 769.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(2894, 702.61, -1353.46, 769.61,   0.00, 0.00, 180.00);
	CreateDynamicObject(2894, 702.28, -1353.75, 769.61,   0.00, 0.00, 180.00);
	CreateDynamicObject(2894, 702.98, -1353.55, 769.61,   0.00, 0.00, 180.00);
	CreateDynamicObject(2894, 703.08, -1353.98, 769.61,   0.00, 0.00, 90.00);
	CreateDynamicObject(2894, 703.34, -1353.84, 769.61,   0.00, 0.00, 90.00);
	CreateDynamicObject(2894, 702.76, -1353.77, 769.61,   0.00, 0.00, 90.00);
	CreateDynamicObject(2001, 704.70, -1351.82, 769.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(2002, 701.24, -1353.27, 769.18,   0.00, 0.00, 90.00);
	CreateDynamicObject(2001, 701.16, -1351.99, 769.19,   0.00, 0.00, 0.00);
	CreateDynamicObject(1792, 698.41, -1358.54, 770.98,   0.00, 0.00, 220.00);
	
	//Pizza Stack imento Map
	CreateObject(970, 1832.61829, -1796.88843, 13.07653,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1832.63098, -1792.76819, 13.07653,   0.00000, 0.00000, 89.70000);
	CreateObject(970, 1902.22168, -1791.34912, 13.12661,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1906.31055, -1791.34338, 13.12661,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1902.22168, -1791.34912, 13.12661,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1909.71741, -1792.94604, 13.12660,   0.00000, 0.00000, -50.00000);
	CreateObject(970, 1912.38965, -1796.12463, 13.12660,   0.00000, 0.00000, -50.00000);
	CreateObject(970, 1915.78699, -1797.71753, 13.12661,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1919.91138, -1797.72009, 13.12661,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1924.02686, -1797.71826, 13.12661,   0.00000, 0.00000, -0.12000);
	CreateObject(970, 1919.91138, -1797.72009, 13.12661,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1928.16089, -1797.72998, 13.12661,   0.00000, 0.00000, -0.12000);
	CreateObject(970, 1932.28210, -1797.76929, 13.12661,   0.00000, 0.00000, -0.84000);
	CreateObject(970, 1928.16089, -1797.72998, 13.12661,   0.00000, 0.00000, -0.12000);
	CreateObject(970, 1936.39197, -1797.83643, 13.12661,   0.00000, 0.00000, -0.84000);
	CreateObject(970, 1940.53833, -1797.90625, 13.12661,   0.00000, 0.00000, -0.84000);
	CreateObject(970, 1936.39197, -1797.83643, 13.12661,   0.00000, 0.00000, -0.84000);
	CreateObject(970, 1944.61938, -1797.93274, 13.12660,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1948.72656, -1797.93298, 13.12660,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1951.62439, -1799.98950, 13.07653,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1949.55005, -1797.94482, 13.12660,   0.00000, 0.00000, 0.00000);
	CreateObject(970, 1951.61194, -1804.12659, 13.07653,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1951.70886, -1825.39612, 13.07650,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1951.71094, -1821.26147, 13.07650,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1951.71045, -1817.12268, 13.07650,   0.00000, 0.00000, 90.00000);
	CreateObject(966, 1951.49756, -1806.50867, 12.49445,   0.00000, 0.00000, 90.00000);
	CreateObject(968, 1951.51086, -1806.49390, 13.24400,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1951.71509, -1815.82153, 13.07650,   0.00000, 0.00000, 90.00000);
	CreateObject(970, 1949.65906, -1826.95166, 13.09815,   0.00000, 0.00000, -13.00000);
	CreateObject(970, 1945.65063, -1826.02319, 13.09815,   0.00000, 0.00000, -13.00000);
	CreateObject(970, 1941.61926, -1825.09436, 13.09815,   0.00000, 0.00000, -13.00000);
	CreateObject(970, 1945.65063, -1826.02319, 13.09815,   0.00000, 0.00000, -13.00000);
	CreateObject(970, 1937.57764, -1824.15552, 13.09815,   0.00000, 0.00000, -13.00000);
	CreateObject(970, 1933.54248, -1823.22571, 13.09815,   0.00000, 0.00000, -13.00000);
	CreateObject(970, 1929.50586, -1822.35437, 13.09810,   0.00000, 0.00000, -11.00000);
	CreateObject(970, 1925.42493, -1821.62915, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1921.34924, -1820.99158, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1917.27136, -1820.35266, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1913.18347, -1819.69666, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1909.09570, -1819.04858, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1905.02429, -1818.39758, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1909.09570, -1819.04858, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1900.91833, -1817.74963, 13.09810,   0.00000, 0.00000, -9.00000);
	CreateObject(970, 1896.86719, -1816.90796, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1892.88489, -1815.91956, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1888.87195, -1814.91443, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1884.83081, -1813.91406, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1880.83838, -1812.90955, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1876.84265, -1811.91321, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1872.84180, -1810.91980, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1868.80017, -1809.91882, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1864.78162, -1808.90515, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1860.76648, -1807.89563, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1856.74866, -1806.88794, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1852.74390, -1805.89355, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1848.72388, -1804.88196, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1844.72656, -1803.88232, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1840.74768, -1802.87793, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1836.73950, -1801.87915, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(970, 1834.70996, -1801.37109, 13.09810,   0.00000, 0.00000, -14.00000);
	CreateObject(3626, 1944.94934, -1821.88123, 13.84000,   0.00000, 0.00000, -193.00000);

	//LSPD - LSFMD - All Saints
    CreateDynamicObject(18030, 2092.279296875, 2817.1181640625, -14.807208061218, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(2951, 2109.0756835938, 2812.5268554688, -17.188125610352, 0.000000, 0.000000, 270.67498779297); //
    CreateDynamicObject(2951, 2087.53515625, 2803.2150878906, -17.674396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(3386, 2103.3381347656, 2830.3115234375, -17.174396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(3387, 2103.4313964844, 2826.3564453125, -17.174396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(3389, 2101.015625, 2830.6564941406, -17.174396514893, 0.000000, 0.000000, 91.894958496094); //
    CreateDynamicObject(1997, 2071.7292480469, 2806.0947265625, -17.174396514893, 0.000000, 0.000000, 93.295013427734); //
    CreateDynamicObject(1997, 2071.7165527344, 2807.8830566406, -17.174396514893, 0.000000, 0.000000, 91.310028076172); //
    CreateDynamicObject(1997, 2071.7561035156, 2809.45703125, -17.174396514893, 0.000000, 0.000000, 91.310028076172); //
    CreateDynamicObject(3384, 2103.1545410156, 2822.3237304688, -15.731789588928, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(3383, 2100.4477539063, 2827.2509765625, -17.174396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(3383, 2100.5051269531, 2822.8688964844, -17.174396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(3383, 2094.5844726563, 2825.0227050781, -17.174396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(1796, 2100.0754394531, 2808.0727539063, -17.174396514893, 0.000000, 0.000000, 179.28002929688); //
    CreateDynamicObject(1796, 2098.4482421875, 2808.1791992188, -17.174396514893, 0.000000, 0.000000, 178.9150390625); //
    CreateDynamicObject(1796, 2102.0798339844, 2807.9851074219, -17.174396514893, 0.000000, 0.000000, 179.05505371094); //
    CreateDynamicObject(2239, 2103.4404296875, 2804.8537597656, -17.174396514893, 0.000000, 0.000000, 218.75506591797); //
    CreateDynamicObject(2184, 2085.3012695313, 2828.1159667969, -17.174396514893, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(1671, 2086.1975097656, 2829.4157714844, -16.714181900024, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(2190, 2087.134765625, 2828.1010742188, -16.398658752441, 0.000000, 0.000000, 230.5249786377); //
    CreateDynamicObject(2854, 2085.673828125, 2828.6516113281, -16.398658752441, 0.000000, 0.000000, 133.07997131348); //
    CreateDynamicObject(2946, 2081.85546875, 2831.0966796875, -17.174396514893, 0.000000, 0.000000, 91.310028076172); //
    CreateDynamicObject(10182, 1145.3453369141, -1326.4350585938, 14.297383308411, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(16656, 1421.5529785156, -2445.5986328125, -9.6055564880371, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(1997, 1430.8905029297, -2437.8049316406, -12.598474502563, 0.000000, 0.000000, 269.9599609375); //
    CreateDynamicObject(3384, 1431.6123046875, -2441.9572753906, -11.155867576599, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(1886, 1426.7391357422, -2451.6730957031, -7.6691589355469, 0.000000, 358.01501464844, 182.52499389648); //
    CreateDynamicObject(2951, 1420.4285888672, -2442.7119140625, -13.105556488037, 0.000000, 0.000000, 270.44995117188); //
    CreateDynamicObject(2951, 1420.4750976563, -2450.1713867188, -13.098474502563, 0.000000, 0.000000, 270.53997802734); //
    CreateDynamicObject(2946, 1425.0671386719, -2436.9409179688, -12.605556488037, 0.000000, 0.000000, 268.69006347656); //
    CreateDynamicObject(2606, 1422.2109375, -2436.7719726563, -10.66157245636, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(1999, 1421.7412109375, -2437.5876464844, -12.605556488037, 0.000000, 0.000000, 0.000000); //
    CreateDynamicObject(2356, 1422.6676025391, -2438.5456542969, -12.605556488037, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(11008, 1530.6383056641, -2167.5698242188, 19.045516967773, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(8356, 1560.9700927734, -2091.2924804688, 12.568482398987, 0.000000, 0.000000, 180); //
	CreateDynamicObject(8356, 1600.9536132813, -2091.2219238281, 12.568482398987, 0.000000, 0.000000, 180); //
	CreateDynamicObject(8356, 1501.1728515625, -2091.2724609375, 12.568482398987, 0.000000, 0.000000, 180); //
	CreateDynamicObject(5711, 1581.1998291016, -2159.6352539063, 16.031856536865, 0.000000, 0.000000, 180); //
	CreateDynamicObject(16564, 1618.6606445313, -2164.0412597656, 12.494687080383, 0.000000, 0.000000, 90); //
	CreateDynamicObject(8356, 1640.9392089844, -2091.2358398438, 12.568482398987, 0.000000, 0.000000, 179.99450683594); //
	CreateDynamicObject(12839, 1604.3753662109, -2180.419921875, 16.050001144409, 0.000000, 0.000000, 0.000000); //
/*CreateDynamicObject(994, 2222.9479980469, -1707.8178710938, 12.554218292236, 0.000000, 0.000000, 83.25);
	CreateDynamicObject(994, 2222.2282714844, -1714.1044921875, 12.554218292236, 0.000000, 0.000000, 83.248901367188);
	CreateDynamicObject(994, 2221.666015625, -1720.4332275391, 12.554218292236, 0.000000, 0.000000, 84.998901367188);
	CreateDynamicObject(997, 2221.5944824219, -1720.4653320313, 12.554218292236, 0.000000, 0.000000, 270.39489746094);
	CreateDynamicObject(997, 2221.6120605469, -1723.6779785156, 12.554218292236, 0.000000, 0.000000, 308.13818359375);
	CreateDynamicObject(997, 2223.5490722656, -1726.2283935547, 12.554218292236, 0.000000, 0.000000, 343.46838378906);
	CreateDynamicObject(994, 2232.9912109375, -1727.2038574219, 12.554218292236, 0.000000, 0.000000, 179.2939453125);
	CreateDynamicObject(994, 2239.298828125, -1727.1459960938, 12.554218292236, 0.000000, 0.000000, 180.29138183594);
	CreateDynamicObject(994, 2245.6069335938, -1727.1053466797, 12.554218292236, 0.000000, 0.000000, 180.29113769531);
	CreateDynamicObject(994, 2230.0375976563, -1702.1334228516, 12.554218292236, 0.000000, 0.000000, 174.55895996094);
	CreateDynamicObject(994, 2245.8688964844, -1720.8118896484, 12.554218292236, 0.000000, 0.000000, 267.63110351563); */
	CreateDynamicObject(1495, 1582.6011962891, -1637.8992919922, 12.552812576294, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(11326,1604.98535156,-1623.68457031,14.71534920,0.00000000,0.00000000,90.00000000); //object(sfse_hublockup) (1)
	CreateDynamicObject(1886,1581.56628418,-1633.38085938,16.76438522,0.00000000,0.00000000,308.90148926); //object(shop_sec_cam) (1)
	CreateDynamicObject(983, 1544.6878662109, -1620.4252929688, 13.038116455078, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(983, 1544.7156982422, -1635.9808349609, 13.237470626831, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(1344, 1544.7709960938, -1617.0625, 13.191030502319, 0.000000, 0.000000, 180); //
	CreateDynamicObject(13644, 1582.6353759766, -1639.0125732422, 10.541254043579, 0.000000, 19.14501953125, 268.55499267578); //
	//CreateDynamicObject(969, 1635.2663574219, -1852.6921386719, 12.548987388611, 0.000000, 0.000000, 179.99450683594); //
	CreateDynamicObject(1496, 1564.2520751953, -1667.3739013672, 27.395606994629, 0.000000, 0.000000, 0.000000); //
	CreateDynamicObject(12814, 264.49127197266, 1882.6428222656, 16.587562561035, 0, 0, 0);
	CreateDynamicObject(991, 226.45503234863, 1872.4094238281, 13.949615478516, 0, 0, 270.27062988281);
	CreateDynamicObject(3029, 2175.6774902344, 1594.2722167969, 998.97888183594, 0, 0, 268.69067382813); // Drug Factory Doors
	CreateDynamicObject(10832, 296.68603515625, -1549.5653076172, 77.338836669922, 0.000000, 0.000000, 162.94946289063); //
	CreateDynamicObject(3029, 2223.58203125, 1598.2083740234, 998.9765625, 0, 0, 268.69067382813);
	CreateDynamicObject(3471,1564.04772949,-1881.44250488,13.82141495,0.00000000,0.00000000,90.00000000); // TRIADS object(vgschinalion1) (2)
	CreateDynamicObject(3471,1571.83093262,-1881.41430664,13.82141495,0.00000000,0.00000000,90.00000000); // TRIADS object(vgschinalion1) (3)
	CreateDynamicObject(9482,1567.88854980,-1882.18041992,19.17709923,0.00000000,0.00000000,90.00000000); // TRIADS object(chinagate) (2)

	CreateDynamicObject(2948,968.48669434,-53.18999100,1000.12457275,0.00000000,0.00000000,0.00000000, .interiorid = 3); //object(cr_door_02) (1)
	CreateDynamicObject(2948,968.48632812,-53.18945312,1000.12457275,0.00000000,0.00000000,180.00000000, .interiorid = 3); //object(cr_door_02) (5)
	CreateDynamicObject(2885,968.70294189,-56.50698090,1005.57806396,0.00000000,0.00000000,90.00000000, .interiorid = 3); //object(xref_garagedoor) (1)
	CreateDynamicObject(2714,968.44470215,-53.15001678,1003.11096191,0.00000000,0.00000000,270.00000000, .interiorid = 3); //object(cj_open_sign_2) (1)
	CreateDynamicObject(2885,963.42553711,-56.52644730,1003.82830811,270.00000000,180.69543457,270.69543457, .interiorid = 3); //object(xref_garagedoor) (3)
	CreateDynamicObject(10671,680.26983643,-444.72039795,-24.75238800,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(savehousegdoor_sfs) (1)
	CreateDynamicObject(10671,682.69573975,-444.75363159,-24.75238800,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(savehousegdoor_sfs) (2)
	CreateDynamicObject(10671,680.79193115,-447.47885132,-26.72739220,0.00000000,90.00000000,0.00000000, .interiorid = 1); //object(savehousegdoor_sfs) (3)
	CreateDynamicObject(11319,680.67449951,-443.91644287,-26.69394875,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(sprayshpdr2_sfse) (1)

	//--------------- Ocean Docks - Kamyoncu - Jobs - Meslek - Duvarlar - Emir -----------------//

	CreateDynamicObject(7191, 2254.3999, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(7191, 2209.69995, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(7191, 2164.69995, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(7191, 2120.6001, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(8229, 2276.30005, -2694.3999, 15.2, 0, 0, 269.75);
	CreateDynamicObject(8229, 2276.3999, -2682.30005, 15.2, 0, 0, 89.747);

	//----------------- GYM map GYM otopark emir park ------------------------/

	CreateDynamicObject(997, 2225.3999, -1699, 12.8, 0, 0, 0);
	CreateDynamicObject(997, 2223.6001, -1701.59998, 12.8, 0, 0, 54);
	CreateDynamicObject(997, 2223.30005, -1704.69995, 12.8, 0, 0, 82.498);
	CreateDynamicObject(997, 2222.8999, -1707.80005, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2222.5, -1710.90002, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2222.1001, -1714, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2221.69995, -1717.09998, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2221.30005, -1720.19995, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2221.30005, -1723.30005, 12.8, 0, 0, 89.996);
	CreateDynamicObject(997, 2223, -1726, 12.8, 0, 0, 121.995);
	CreateDynamicObject(997, 2225.8999, -1727.30005, 12.8, 0, 0, 155.992);
	CreateDynamicObject(997, 2229, -1727.59998, 12.8, 0, 0, 174.739);
	CreateDynamicObject(997, 2232.1001, -1727.5, 12.8, 0, 0, 180.488);
	CreateDynamicObject(997, 2235.19995, -1727.5, 12.8, 0, 0, 180.483);
	CreateDynamicObject(997, 2238.30005, -1727.40002, 12.8, 0, 0, 180.483);
	CreateDynamicObject(997, 2241.5, -1727.30005, 12.8, 0, 0, 180.483);
	CreateDynamicObject(997, 2241.69995, -1724.09998, 12.8, 0, 0, 266.483);
	CreateDynamicObject(997, 2241.8999, -1721, 12.8, 0, 0, 266.479);
	CreateDynamicObject(8375, 2287.80005, -1706.19995, 14.6, 0, 0, 359.5);
	CreateDynamicObject(984, 2287.30005, -1721.5, 17.2, 0, 0, 90.5);
	CreateDynamicObject(984, 2274.5, -1721.5, 17.2, 0, 0, 90.25);
	CreateDynamicObject(984, 2261.69995, -1721.5, 17.2, 0, 0, 90.247);
	CreateDynamicObject(984, 2248.8999, -1721.5, 17.2, 0, 0, 90.247);
	CreateDynamicObject(982, 2263.8999, -1701.40002, 17.3, 0, 0, 270);
	CreateDynamicObject(3881, 2280.8999, -1698.69995, 18.4, 0, 0, 90.25);
	CreateDynamicObject(984, 2287.30005, -1696, 17.2, 0, 0, 90.5);
	CreateDynamicObject(983, 2293.69995, -1718.30005, 17.3, 0, 0, 0);

	//---------------FBI HQ Interior--------------------//
 	CreateDynamicObject(1536,293.27246094,-1481.46582031,-34.53342056,0.00000000,0.00000000,179.99450684,1324123, .interiorid = 1); //object(gen_doorext15) (2)
	CreateDynamicObject(1536,290.27832031,-1481.50488281,-34.53342056,0.00000000,0.00000000,0.00000000,1324123, .interiorid = 1); //object(gen_doorext15) (2)
	CreateDynamicObject(1776,291.19232178,-1512.44006348,-45.03078842,0.00000000,0.00000000,90.00000000,1324123, .interiorid = 1); //object(cj_candyvendor) (2)
	FBILobbyLeftBTN[0] = CreateButton(297.66613770,-1498.67749023,-44.59006119,0.79565430); //Lobby Button Left
	FBILobbyLeftBTN[1] = CreateButton(297.24850464,-1498.23107910,-44.59006119,180); //Lobby Button Left
	FBILobbyRightBTN[0] = CreateButton(300.05300903,-1521.40747070,-44.59006119,180); //Lobby Button Right
	FBILobbyRightBTN[1] = CreateButton(300.16033936,-1521.84387207,-44.59006119,0); //Lobby Button Right
	FBIPrivateBTN[0] = CreateButton(298.87384033,-1495.87316895,-27.32773209,270); //Private Office Button
	FBIPrivateBTN[1] = CreateButton(300.49453735,-1495.33837891,-27.28091812,180.49487305); //Private Office Button

	CreateDynamicObject(2886,297.66613770,-1498.67749023,-44.59006119,0,0,0.79565430, 1324123); //Lobby Button Left
	CreateDynamicObject(2886,297.24850464,-1498.23107910,-44.59006119,0,0,180, 1324123); //Lobby Button Left
	CreateDynamicObject(2886,300.05300903,-1521.40747070,-44.59006119,0,0,180, 1324123); //Lobby Button Right
	CreateDynamicObject(2886,300.16033936,-1521.84387207,-44.59006119,0,0,0, 1324123); //Lobby Button Right
	CreateDynamicObject(2886,298.87384033,-1495.87316895,-27.32773209,0,0,270, 1324123); //Private Office Button
	CreateDynamicObject(2886,300.49453735,-1495.33837891,-27.28091812,0,0,180.49487305, 1324123); //Private Office Button

	FBIPrivate[0] = CreateDynamicObject(1536,299.29986572,-1492.82666016,-28.73300552,0.00000000,0.00000000,270.00000000,1324123, .interiorid = 1); //Private Office Door Left
	FBIPrivate[1] = CreateDynamicObject(1536,299.33737183,-1495.83911133,-28.73300552,0.00000000,0.00000000,90.00000000,1324123, .interiorid = 1); //Private Office Door Right
	FBILobbyLeft = CreateDynamicObject(1536,295.40136719,-1498.43457031,-46.13965225,0.00000000,0.00000000,0.00000000,1324123, .interiorid = 1); //Lobby Door Left
	FBILobbyRight = CreateDynamicObject(1536,302.39355469,-1521.62988281,-46.13965225,0.00000000,0.00000000,179.99450684,1324123, .interiorid = 1); //Lobby Door Right

	CreateDynamicObject(1536,281.51000977,-1513.26867676,23.89100075,0.00000000,0.00000000,55.00000000); // Door in FBI garage

	CreateDynamicObject(14858,309.24609375,-1498.32812500,-29.38235855,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(veg_pol_main1) (1)
	CreateDynamicObject(14596,294.02929688,-1490.56835938,-35.43539047,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(paperchase_stairs) (1)
	CreateDynamicObject(14602,291.64355469,-1505.73730469,-40.76299286,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(paperchase01) (1)
	CreateDynamicObject(14593,308.32128906,-1535.68750000,-43.80562592,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(paperchase04) (1)
	CreateDynamicObject(8231,308.96191406,-1496.32617188,-38.62692261,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(vgsbikeschl05) (1)
	CreateDynamicObject(2395,300.22045898,-1490.45019531,-40.34618378,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,300.22143555,-1495.39575195,-40.34618378,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (2)
	CreateDynamicObject(2395,300.21777344,-1492.38110352,-38.05657196,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (3)
	CreateDynamicObject(1523,300.42980957,-1495.13427734,-40.51028061,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(gen_doorext10) (2)
	CreateDynamicObject(1491,317.16406250,-1489.74243164,-40.33905029,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(gen_doorint01) (3)
	CreateDynamicObject(18001,300.45489502,-1489.20227051,-38.69902802,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(int_barbera07) (2)
	CreateDynamicObject(8169,300.41653442,-1489.28137207,-37.95204163,73.49853516,270.00000000,179.99450684, .interiorid = 1); //object(vgs_guardhseflr) (2)
	CreateDynamicObject(2197,300.78768921,-1490.73352051,-40.85678101,90.00000000,0.00000000,0.00000000, .interiorid = 1); //object(filling_cabinet) (1)
	CreateDynamicObject(2197,300.78659058,-1489.06945801,-40.85678101,90.00000000,0.00000000,0.00000000, .interiorid = 1); //object(filling_cabinet) (2)
	CreateDynamicObject(2197,300.78652954,-1487.39941406,-40.85678101,90.00000000,0.00000000,0.00000000, .interiorid = 1); //object(filling_cabinet) (3)
	CreateDynamicObject(2515,300.82122803,-1491.78662109,-39.25311279,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_bs_sink) (1)
	CreateDynamicObject(2515,300.81488037,-1490.82836914,-39.25311279,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_bs_sink) (1)
	CreateDynamicObject(2515,300.80892944,-1489.84216309,-39.25311279,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_bs_sink) (1)
	CreateDynamicObject(2515,300.80908203,-1488.83654785,-39.25311279,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_bs_sink) (1)
	CreateDynamicObject(2738,313.09997559,-1491.99609375,-39.72719574,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_toilet_bs) (2)
	CreateDynamicObject(2957,314.01480103,-1489.76110840,-38.71026230,0.00000000,90.00000000,0.31311035, .interiorid = 1); //object(chinatgaragedoor) (2)
	CreateDynamicObject(2957,312.46731567,-1491.96643066,-38.71386337,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(chinatgaragedoor) (3)
	CreateDynamicObject(2957,312.46868896,-1491.96606445,-38.47619247,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(chinatgaragedoor) (4)
	CreateDynamicObject(2957,318.77011108,-1489.75573730,-38.71026230,0.00000000,90.00000000,0.00000000, .interiorid = 1); //object(chinatgaragedoor) (5)
	CreateDynamicObject(2957,317.91894531,-1489.73242188,-36.22134018,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(chinatgaragedoor) (6)
	CreateDynamicObject(2602,310.02233887,-1498.55773926,-39.60855103,0.00000000,0.00000000,225.12634277, .interiorid = 1); //object(police_cell_toilet) (1)
	CreateDynamicObject(2602,311.27764893,-1498.55688477,-39.60855103,0.00000000,0.00000000,225.12084961, .interiorid = 1); //object(police_cell_toilet) (2)
	CreateDynamicObject(2602,312.52236938,-1498.55688477,-39.60855103,0.00000000,0.00000000,225.12084961, .interiorid = 1); //object(police_cell_toilet) (3)
	CreateDynamicObject(2741,300.51300049,-1487.71777344,-38.53912735,0.00000000,0.00000000,90.19226074, .interiorid = 1); //object(cj_soap_disp) (1)
	CreateDynamicObject(2742,300.63558960,-1493.05334473,-38.75522995,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_handdrier) (1)
	CreateDynamicObject(2685,300.49490356,-1495.37646484,-38.65332794,0.00000000,0.00000000,90.04394531, .interiorid = 1); //object(cj_food_post1) (1)
	CreateDynamicObject(1522,276.98992920,-1506.53881836,-46.13738251,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(gen_doorshop3) (1)
	CreateDynamicObject(3798,301.63208008,-1521.53662109,-48.13918304,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(acbox3_sfs) (1)
	CreateDynamicObject(14420,301.31414795,-1504.62548828,-25.47793198,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(madddoggs09) (1)
	CreateDynamicObject(2395,296.75616455,-1490.17004395,-28.86031342,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,299.82714844,-1492.76855469,-28.86031342,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2952,299.73284912,-1476.11962891,-28.81253433,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(kmb_gimpdoor) (1)
	CreateDynamicObject(2952,299.73013306,-1473.99279785,-28.81253433,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(kmb_gimpdoor) (2)
	CreateDynamicObject(10558,307.77490234,-1490.10229492,-26.71455383,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(tbnsfs) (4)
	CreateDynamicObject(10558,303.61007690,-1474.12097168,-26.71455383,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(tbnsfs) (5)
	CreateDynamicObject(12814,313.29492188,-1478.75097656,-28.73871231,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(cuntyeland04) (1)
	CreateDynamicObject(12814,313.79980469,-1473.21289062,-34.54065323,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cuntyeland04) (2)
	CreateDynamicObject(5066,310.43295288,-1484.74877930,-33.05167389,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(mondoshave_las) (1)
	CreateDynamicObject(14598,303.44128418,-1505.88110352,-30.57250977,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(paperchase_glass) (1)
	CreateDynamicObject(2395,305.25082397,-1489.78857422,-28.86031342,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,301.95947266,-1490.32165527,-28.86031342,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,301.95996094,-1494.03027344,-28.86031342,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,303.02163696,-1495.31762695,-28.86031342,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(10558,299.79708862,-1485.71166992,-26.71455383,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(tbnsfs) (5)
	CreateDynamicObject(10558,299.79199219,-1477.44433594,-26.71455383,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(tbnsfs) (5)
	CreateDynamicObject(10558,308.07742310,-1477.47680664,-26.71455383,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(tbnsfs) (5)
	CreateDynamicObject(10558,308.07962036,-1485.49145508,-26.71455383,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(tbnsfs) (5)
	CreateDynamicObject(2395,303.70001221,-1495.32324219,-34.54189301,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,303.47012329,-1481.95263672,-34.54189301,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,303.47064209,-1485.67785645,-34.54189301,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,303.47103882,-1489.40173340,-34.54189301,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,303.47222900,-1493.12512207,-34.54189301,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,300.50918579,-1485.34570312,-34.54189301,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,300.50698853,-1489.05407715,-34.54189301,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,300.50997925,-1492.77001953,-34.54189301,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(2395,300.50823975,-1484.68981934,-34.54189301,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (1)
	CreateDynamicObject(14782,309.60202026,-1543.15441895,-45.20714951,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(int3int_boxing30) (1)
	CreateDynamicObject(14782,309.58764648,-1536.19519043,-45.20714951,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(int3int_boxing30) (2)
	CreateDynamicObject(1827,305.07128906,-1533.61816406,-46.13375092,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(man_sdr_tables) (1)
	CreateDynamicObject(1811,304.16955566,-1531.93151855,-45.50744629,0.00000000,0.00000000,117.60995483, .interiorid = 1); //object(med_din_chair_5) (1)
	CreateDynamicObject(1811,305.66729736,-1531.85888672,-45.50744629,0.00000000,0.00000000,69.65365601, .interiorid = 1); //object(med_din_chair_5) (2)
	CreateDynamicObject(16000,309.58935547,-1500.71423340,-26.22244644,270.00000000,0.00000000,90.00000000, .interiorid = 1); //object(drvin_screen) (1)
	CreateDynamicObject(16000,310.02539062,-1492.14257812,-31.78104019,270.00000000,0.00000000,90.00000000, .interiorid = 1); //object(drvin_screen) (2)
	CreateDynamicObject(2395,309.09744263,-1546.07031250,-46.13375092,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (19)
	CreateDynamicObject(2395,309.09747314,-1542.33789062,-46.13375092,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (20)
	CreateDynamicObject(2395,309.09802246,-1538.61096191,-46.13375092,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (21)
	CreateDynamicObject(2395,309.09780884,-1534.87768555,-46.13375092,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (22)
	CreateDynamicObject(2395,309.09716797,-1534.07751465,-46.13375092,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_sports_wall) (23)
	CreateDynamicObject(2395,308.94421387,-1531.32495117,-46.13555145,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (24)
	CreateDynamicObject(2395,308.94485474,-1535.05346680,-46.13555145,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (25)
	CreateDynamicObject(2395,308.94528198,-1538.78503418,-46.13555145,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (26)
	CreateDynamicObject(2395,308.94180298,-1542.47778320,-46.13555145,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (27)
	CreateDynamicObject(2395,308.94659424,-1543.31518555,-46.13555145,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_sports_wall) (28)
	CreateDynamicObject(1432,307.47851562,-1544.94921875,-46.13375092,0.00000000,0.00000000,350.07385254, .interiorid = 1); //object(dyn_table_2) (1)
	CreateDynamicObject(1703,297.30395508,-1520.81726074,-46.12367630,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(kb_couch02) (1)
	CreateDynamicObject(1703,298.31497192,-1517.79614258,-46.12367630,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(kb_couch02) (2)
	CreateDynamicObject(2725,298.29296875,-1520.72167969,-45.69048691,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(lm_striptable) (1)
	CreateDynamicObject(1806,309.10546875,-1505.52636719,-46.12367630,0.00000000,0.00000000,105.87994385, .interiorid = 1); //object(med_office_chair) (1)
	CreateDynamicObject(2190,307.29687500,-1506.07812500,-45.40361786,0.00000000,0.00000000,104.99633789, .interiorid = 1); //object(pc_1) (1)
	CreateDynamicObject(1892,278.57611084,-1506.30029297,-46.13018036,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(security_gatsh) (1)
	CreateDynamicObject(2773,304.49935913,-1504.94628906,-45.61295319,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (1)
	CreateDynamicObject(2773,304.50588989,-1506.51086426,-45.61295319,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (2)
	CreateDynamicObject(2773,302.58798218,-1506.51135254,-45.61295319,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (3)
	CreateDynamicObject(2773,303.51632690,-1503.98291016,-45.61295319,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_airprt_bar) (4)
	CreateDynamicObject(2773,302.57733154,-1503.02441406,-45.61295319,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (5)
	CreateDynamicObject(2773,301.60446167,-1505.54931641,-45.61295319,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_airprt_bar) (6)
	CreateDynamicObject(2773,300.64788818,-1503.04052734,-45.61295319,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (7)
	CreateDynamicObject(2773,299.66088867,-1503.99853516,-45.61295319,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_airprt_bar) (8)
	CreateDynamicObject(2773,298.72500610,-1504.95776367,-45.61115265,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (9)
	CreateDynamicObject(2773,300.66802979,-1506.51232910,-45.61115265,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (10)
	CreateDynamicObject(2773,298.75299072,-1506.51000977,-45.61295319,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_airprt_bar) (11)
	CreateDynamicObject(12814,309.92465210,-1460.12158203,-34.53705215,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cuntyeland04) (2)
	CreateDynamicObject(8169,304.51583862,-1444.51806641,-32.52923965,107.00000000,90.00000000,180.00000000, .interiorid = 1); //object(vgs_guardhseflr) (1)
	CreateDynamicObject(8169,304.51293945,-1449.76049805,-32.52923965,106.99584961,90.00000000,179.99450684, .interiorid = 1); //object(vgs_guardhseflr) (3)
	CreateDynamicObject(8169,313.10473633,-1444.55773926,-32.52923965,106.99588013,90.00000000,0.00000000, .interiorid = 1); //object(vgs_guardhseflr) (4)
	CreateDynamicObject(8169,313.10540771,-1449.97326660,-32.52923965,106.99584961,90.00000000,0.00000000, .interiorid = 1); //object(vgs_guardhseflr) (5)
	CreateDynamicObject(8169,301.08428955,-1441.09985352,-32.52923965,106.99588013,90.00000000,270.00000000, .interiorid = 1); //object(vgs_guardhseflr) (7)
	CreateDynamicObject(8169,300.08203125,-1441.09960938,-32.52923965,106.99584961,90.00000000,270.00000000, .interiorid = 1); //object(vgs_guardhseflr) (8)
	CreateDynamicObject(8169,316.52737427,-1441.10034180,-32.52923965,106.99588013,90.00000000,270.00000000, .interiorid = 1); //object(vgs_guardhseflr) (9)
	CreateDynamicObject(8169,319.76895142,-1441.10217285,-32.52923965,106.99584961,90.00000000,270.00000000, .interiorid = 1); //object(vgs_guardhseflr) (10)
	CreateDynamicObject(8169,321.71502686,-1444.51538086,-32.52923965,106.99584961,90.00000000,179.99450684, .interiorid = 1); //object(vgs_guardhseflr) (11)
	CreateDynamicObject(8169,321.71609497,-1451.29589844,-32.52923965,106.99584961,90.00000000,179.99450684, .interiorid = 1); //object(vgs_guardhseflr) (12)
	CreateDynamicObject(8169,296.79656982,-1444.37243652,-32.52923965,106.99584961,90.00000000,0.00000000, .interiorid = 1); //object(vgs_guardhseflr) (13)
	CreateDynamicObject(8169,296.80148315,-1451.28527832,-32.52923965,106.99584961,90.00000000,0.00000000, .interiorid = 1); //object(vgs_guardhseflr) (14)
	CreateDynamicObject(14856,309.25753784,-1451.73974609,-32.65511322,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cellsa) (1)
	CreateDynamicObject(8169,314.25317383,-1444.62646484,-32.52923965,106.99588013,90.00000000,90.00000000, .interiorid = 1); //object(vgs_guardhseflr) (15)
	CreateDynamicObject(8169,304.31835938,-1444.62304688,-32.52923965,106.99584961,90.00000000,90.00000000, .interiorid = 1); //object(vgs_guardhseflr) (16)
	CreateDynamicObject(2957,308.80404663,-1453.56689453,-32.47067261,0.00000000,90.00000000,0.00000000, .interiorid = 1); //object(chinatgaragedoor) (1)
	CreateDynamicObject(2957,305.55273438,-1453.56542969,-30.41305542,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(chinatgaragedoor) (7)
	CreateDynamicObject(2957,311.57226562,-1453.56542969,-30.41333008,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(chinatgaragedoor) (8)
	CreateDynamicObject(1491,305.67440796,-1453.56250000,-34.52923965,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(gen_doorint01) (1)
	CreateDynamicObject(1491,310.42266846,-1453.56958008,-34.52923965,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(gen_doorint01) (2)
	CreateDynamicObject(2957,304.04525757,-1453.56958008,-32.47067261,0.00000000,90.00000000,0.00000000, .interiorid = 1); //object(chinatgaragedoor) (1)
	CreateDynamicObject(2957,313.55474854,-1453.56701660,-32.47067261,0.00000000,90.00000000,0.00000000, .interiorid = 1); //object(chinatgaragedoor) (1)
	CreateDynamicObject(1649,308.91375732,-1451.29418945,-32.86349869,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(wglasssmash) (1)
	CreateDynamicObject(1649,308.91308594,-1451.29394531,-32.86349869,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(wglasssmash) (2)
	CreateDynamicObject(8169,308.91879272,-1450.16955566,-32.52923965,106.99588013,90.00000000,180.00000000, .interiorid = 1); //object(vgs_guardhseflr) (8)
	CreateDynamicObject(1649,308.91668701,-1451.29418945,-29.60837173,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(wglasssmash) (3)
	CreateDynamicObject(1649,308.91128540,-1451.29431152,-29.60297012,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(wglasssmash) (4)
	CreateDynamicObject(14532,309.53399658,-1452.88830566,-33.54652023,0.00000000,0.00000000,315.00000000, .interiorid = 1); //object(tv_stand_driv) (1)
	CreateDynamicObject(1671,311.07064819,-1450.01330566,-34.06902695,0.00000000,0.00000000,311.60888672, .interiorid = 1); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,311.91442871,-1451.20056152,-34.06902695,0.00000000,0.00000000,282.31018066, .interiorid = 1); //object(swivelchair_a) (2)
	CreateDynamicObject(1810,305.47702026,-1450.94470215,-34.52923965,0.00000000,0.00000000,87.65490723, .interiorid = 1); //object(cj_foldchair) (1)
	CreateDynamicObject(1810,307.89422607,-1451.39428711,-34.52923965,0.00000000,0.00000000,273.15954590, .interiorid = 1); //object(cj_foldchair) (2)
	CreateDynamicObject(1827,306.67138672,-1451.28918457,-34.52923965,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(man_sdr_tables) (2)
	CreateDynamicObject(2009,290.45791626,-1468.11608887,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(officedesk2l) (1)
	CreateDynamicObject(2197,286.46551514,-1467.00256348,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(filling_cabinet) (4)
	CreateDynamicObject(2200,292.76733398,-1469.83776855,-34.52298355,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(med_office5_unit_1) (1)
	CreateDynamicObject(2204,287.41705322,-1471.50622559,-34.52298355,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(med_office8_cabinet) (1)
	CreateDynamicObject(1714,290.53604126,-1467.20202637,-34.52298355,0.00000000,0.00000000,289.61608887, .interiorid = 1); //object(kb_swivelchair1) (1)
	CreateDynamicObject(1778,329.46221924,-1474.47827148,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_mop_pail) (1)
	CreateDynamicObject(1771,328.46612549,-1476.94348145,-33.88931656,0.00000000,0.00000000,268.69885254, .interiorid = 1); //object(cj_bunk_bed1) (1)
	CreateDynamicObject(1337,322.30862427,-1474.60803223,-33.87375641,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(binnt07_la) (2)
	CreateDynamicObject(1338,326.28952026,-1476.88671875,-33.81167221,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(binnt08_la) (1)
	CreateDynamicObject(1440,324.06448364,-1476.95019531,-34.00386810,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(dyn_box_pile_3) (1)
	CreateDynamicObject(1265,325.22683716,-1476.19226074,-34.05393982,0.00000000,0.00000000,296.25524902, .interiorid = 1); //object(blackbag2) (1)
	CreateDynamicObject(1264,323.25726318,-1474.70031738,-34.05083847,0.00000000,0.00000000,279.02832031, .interiorid = 1); //object(blackbag1) (1)
	CreateDynamicObject(11631,329.22161865,-1468.77941895,-33.27708054,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(ranch_desk) (1)
	CreateDynamicObject(2607,325.18939209,-1468.12915039,-34.12730026,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(polce_desk2) (1)
	CreateDynamicObject(2356,328.48495483,-1469.47021484,-34.52298355,0.00000000,0.00000000,303.83496094, .interiorid = 1); //object(police_off_chair) (1)
	CreateDynamicObject(2207,303.88574219,-1480.73437500,-28.73089981,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(med_office7_desk_1) (1)
	CreateDynamicObject(1714,305.63839722,-1481.56811523,-28.75525284,0.00000000,0.00000000,286.04431152, .interiorid = 1); //object(kb_swivelchair1) (2)
	CreateDynamicObject(2190,303.95974731,-1482.46374512,-27.95352745,0.00000000,0.00000000,111.03887939, .interiorid = 1); //object(pc_1) (2)
	CreateDynamicObject(2311,304.88085938,-1489.10546875,-28.73089981,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_tv_table2) (2)
	CreateDynamicObject(2700,300.06005859,-1481.78222656,-25.16612434,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_sex_tv2) (1)
	CreateDynamicObject(1893,301.89276123,-1493.61791992,-31.40267563,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(shoplight1) (1)
	CreateDynamicObject(1893,301.88687134,-1486.12084961,-31.40267563,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(shoplight1) (2)
	CreateDynamicObject(1893,301.28695679,-1483.02026367,-31.40267563,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(shoplight1) (3)
	CreateDynamicObject(2007,285.47372437,-1461.86901855,-34.53079605,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(filing_cab_nu01) (1)
	CreateDynamicObject(2007,285.47827148,-1465.82226562,-34.53079605,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(filing_cab_nu01) (2)
	CreateDynamicObject(2008,289.19281006,-1463.93908691,-34.53079605,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(officedesk1) (1)
	CreateDynamicObject(1714,290.24304199,-1463.02392578,-34.52298355,0.00000000,0.00000000,289.61608887, .interiorid = 1); //object(kb_swivelchair1) (1)
	CreateDynamicObject(2608,292.67315674,-1465.32287598,-33.81932449,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(polce_shelf) (1)
	CreateDynamicObject(2609,292.52435303,-1461.60766602,-33.79908752,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_p_fileing1) (1)
	CreateDynamicObject(2191,292.37973022,-1462.93566895,-34.53079605,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(med_office2_cab) (1)
	CreateDynamicObject(16662,309.20010376,-1463.23413086,-24.77413940,63.39999390,90.00000000,270.00000000, .interiorid = 1); //object(a51_radar_stuff) (1)
	CreateDynamicObject(1668,304.25622559,-1480.90881348,-27.78682327,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(propvodkabotl1) (1)
	CreateDynamicObject(2855,303.82894897,-1481.18969727,-27.95352745,0.00000000,0.00000000,65.86511230, .interiorid = 1); //object(gb_bedmags05) (1)
	CreateDynamicObject(2852,303.61880493,-1482.01403809,-27.95352745,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(gb_bedmags02) (1)
	CreateDynamicObject(1736,307.49340820,-1481.78393555,-25.27207184,0.00000000,0.00000000,269.48693848, .interiorid = 1); //object(cj_stags_head) (1)
	CreateDynamicObject(2491,308.43945312,-1467.54589844,-35.16662979,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(model_stand) (1)
	CreateDynamicObject(1730,300.42053223,-1474.60668945,-28.73089981,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(swank_cabinet_3) (1)
	CreateDynamicObject(2204,301.84945679,-1474.26086426,-28.73089981,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(med_office8_cabinet) (2)
	CreateDynamicObject(2200,302.21353149,-1474.26831055,-26.94274521,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(med_office5_unit_1) (2)
	CreateDynamicObject(1703,304.62121582,-1474.67419434,-28.73089981,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(kb_couch02) (3)
	CreateDynamicObject(12814,313.29492188,-1478.75097656,-24.23483658,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(cuntyeland04) (1)
	CreateDynamicObject(2002,302.75833130,-1489.31335449,-28.73089981,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(water_coolnu) (1)
	CreateDynamicObject(2288,300.29425049,-1479.18029785,-26.33251381,0.00000000,0.00000000,90.09881592, .interiorid = 1); //object(frame_3) (1)
	CreateDynamicObject(2007,314.12896729,-1505.99865723,-46.13018036,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(filing_cab_nu01) (3)
	CreateDynamicObject(1806,312.65527344,-1512.03027344,-46.12367630,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(med_office_chair) (1)
	CreateDynamicObject(1806,312.62911987,-1518.00183105,-46.12367630,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(med_office_chair) (1)
	CreateDynamicObject(1806,312.64999390,-1499.31555176,-46.12367630,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(med_office_chair) (1)
	CreateDynamicObject(1806,312.67895508,-1493.98632812,-46.12367630,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(med_office_chair) (1)
	CreateDynamicObject(2190,310.62237549,-1512.26940918,-45.21636200,0.00000000,0.00000000,104.99630737, .interiorid = 1); //object(pc_1) (1)
	CreateDynamicObject(2190,310.59692383,-1518.19750977,-45.21636200,0.00000000,0.00000000,104.99630737, .interiorid = 1); //object(pc_1) (1)
	CreateDynamicObject(2190,310.74307251,-1499.55859375,-45.21636200,0.00000000,0.00000000,104.99630737, .interiorid = 1); //object(pc_1) (1)
	CreateDynamicObject(2190,310.70114136,-1494.10925293,-45.21636200,0.00000000,0.00000000,104.99633789, .interiorid = 1); //object(pc_1) (1)
	CreateDynamicObject(1886,308.70672607,-1467.93701172,-30.56187057,16.16790771,0.19573975,179.06506348, .interiorid = 1); //object(shop_sec_cam) (1)
	CreateDynamicObject(2747,308.48376465,-1472.51135254,-34.11668777,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_donut_table) (1)
	CreateDynamicObject(2747,310.08023071,-1472.51135254,-34.11668777,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_donut_table) (2)
	CreateDynamicObject(2747,306.88693237,-1472.51135254,-34.11668777,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_donut_table) (3)
	CreateDynamicObject(2747,306.88693237,-1473.50244141,-34.11668777,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_donut_table) (4)
	CreateDynamicObject(2747,308.48376465,-1473.50244141,-34.11668777,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_donut_table) (5)
	CreateDynamicObject(2747,310.08023071,-1473.50244141,-34.11668777,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(cj_donut_table) (6)
	CreateDynamicObject(1806,306.94726562,-1474.57141113,-34.52923965,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(med_office_chair) (6)
	CreateDynamicObject(1806,308.53701782,-1474.58837891,-34.52923965,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(med_office_chair) (7)
	CreateDynamicObject(1806,310.08981323,-1474.62011719,-34.52923965,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(med_office_chair) (8)
	CreateDynamicObject(1806,310.13595581,-1471.40625000,-34.52923965,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(med_office_chair) (9)
	CreateDynamicObject(1806,308.49731445,-1471.39831543,-34.52923965,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(med_office_chair) (10)
	CreateDynamicObject(1806,306.94650269,-1471.37988281,-34.52923965,0.00000000,0.00000000,179.99450684, .interiorid = 1); //object(med_office_chair) (11)
	CreateDynamicObject(1806,305.62155151,-1473.00012207,-34.52923965,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(med_office_chair) (12)
	CreateDynamicObject(1806,311.44116211,-1472.99316406,-34.52923965,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(med_office_chair) (13)
	CreateDynamicObject(16782,322.13433838,-1469.29296875,-32.56002808,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(a51_radar_scan) (1)
	CreateDynamicObject(2611,325.91857910,-1473.77783203,-32.58835220,0.00000000,0.00000000,179.93066406, .interiorid = 1); //object(police_nb1) (1)
	CreateDynamicObject(14527,304.30047607,-1480.94714355,-26.86861801,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(fannyfan) (1)
	CreateDynamicObject(2198,289.17578125,-1474.82629395,-34.53079605,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(med_office2_desk_3) (1)
	CreateDynamicObject(1714,290.23767090,-1474.06457520,-34.53079605,0.00000000,0.00000000,300.22509766, .interiorid = 1); //object(kb_swivelchair1) (4)
	CreateDynamicObject(2182,292.43322754,-1475.33679199,-34.53079605,0.00000000,0.00000000,180.00000000, .interiorid = 1); //object(med_office5_desk_1) (1)
	CreateDynamicObject(2000,285.47576904,-1472.12133789,-34.53079605,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(filing_cab_nu) (1)
	CreateDynamicObject(2000,285.47576904,-1472.64123535,-34.53079605,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(filing_cab_nu) (2)
	CreateDynamicObject(14632,321.33325195,-1475.83569336,-33.03472900,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(paperchase_bits2b) (1)
	CreateDynamicObject(2186,329.36141968,-1464.33728027,-34.52298355,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(photocopier_1) (1)
	CreateDynamicObject(2206,329.35076904,-1471.45605469,-34.52298355,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(med_office8_desk_02) (1)
	CreateDynamicObject(2606,329.50375366,-1472.36730957,-33.36120224,0.00000000,0.00000000,270.00000000, .interiorid = 1); //object(cj_police_counter2) (1)
	CreateDynamicObject(2612,304.02514648,-1463.07299805,-32.50022888,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(police_nb2) (1)
	CreateDynamicObject(2611,314.25363159,-1463.07299805,-32.39287949,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(police_nb1) (2)
	CreateDynamicObject(1722,323.52783203,-1485.03967285,-34.52298355,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(off_chairnu) (1)
	CreateDynamicObject(1722,322.35116577,-1485.02929688,-34.52298355,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(off_chairnu) (2)
	CreateDynamicObject(1722,321.10070801,-1485.05798340,-34.52298355,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(off_chairnu) (3)
	CreateDynamicObject(1722,325.25961304,-1481.93444824,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(off_chairnu) (4)
	CreateDynamicObject(1722,325.27322388,-1480.63781738,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(off_chairnu) (5)
	CreateDynamicObject(1722,325.24453735,-1479.48413086,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(off_chairnu) (6)
	CreateDynamicObject(1808,317.90686035,-1482.45349121,-34.52298355,0.00000000,0.00000000,90.00000000, .interiorid = 1); //object(cj_watercooler2) (1)
	CreateDynamicObject(15038,325.23391724,-1478.51025391,-33.90579605,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(plant_pot_3_sv) (1)
	CreateDynamicObject(1616,317.07241821,-1498.25427246,-37.11650085,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(nt_securecam1_01) (1)
	CreateDynamicObject(1616,281.14285278,-1481.05761719,-31.00306702,0.00000000,0.00000000,267.23352051, .interiorid = 1); //object(nt_securecam1_01) (2)
	CreateDynamicObject(1616,318.01690674,-1485.05334473,-31.00306702,0.00000000,0.00000000,267.23144531, .interiorid = 1); //object(nt_securecam1_01) (3)
	CreateDynamicObject(1616,277.92636108,-1509.63354492,-43.22993469,0.00000000,0.00000000,267.23144531, .interiorid = 1); //object(nt_securecam1_01) (4)

	// Emir Map am aac hediye aa

	CreateDynamicObject(19076, 2274.01, -1716.85, 16.55,   0.00, 0.00, 0.00);
	CreateDynamicObject(19055, 2273.18, -1716.82, 17.20,   0.00, 0.00, 0.00);
	CreateDynamicObject(19056, 2274.89, -1717.07, 17.18,   0.00, 0.00, 0.00);
	CreateDynamicObject(19058, 2274.07, -1718.61, 17.00,   0.00, 0.00, 0.00);
	CreateDynamicObject(19057, 2274.21, -1715.16, 17.16,   -0.02, 0.00, 0.00);


	// Emir Map TDM EVENT ETKNLK ETKINLIK MAP BORU BORULU
	CreateDynamicObject(7191, 2254.3999, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(7191, 2209.69995, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(7191, 2164.69995, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(7191, 2120.6001, -2705.3999, 14.5, 0, 0, 270);
	CreateDynamicObject(8229, 2276.30005, -2694.3999, 15.2, 0, 0, 269.75);
	CreateDynamicObject(8229, 2276.3999, -2682.30005, 15.2, 0, 0, 89.747);
	CreateDynamicObject(997, 2225.3999, -1699, 12.8, 0, 0, 0);
	CreateDynamicObject(997, 2223.6001, -1701.59998, 12.8, 0, 0, 54);
	CreateDynamicObject(997, 2223.30005, -1704.69995, 12.8, 0, 0, 82.498);
	CreateDynamicObject(997, 2222.8999, -1707.80005, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2222.5, -1710.90002, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2222.1001, -1714, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2221.69995, -1717.09998, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2221.30005, -1720.19995, 12.8, 0, 0, 82.496);
	CreateDynamicObject(997, 2221.30005, -1723.30005, 12.8, 0, 0, 89.996);
	CreateDynamicObject(997, 2223, -1726, 12.8, 0, 0, 121.995);
	CreateDynamicObject(997, 2225.8999, -1727.30005, 12.8, 0, 0, 155.992);
	CreateDynamicObject(997, 2229, -1727.59998, 12.8, 0, 0, 174.739);
	CreateDynamicObject(997, 2232.1001, -1727.5, 12.8, 0, 0, 180.488);
	CreateDynamicObject(997, 2235.19995, -1727.5, 12.8, 0, 0, 180.483);
	CreateDynamicObject(997, 2238.30005, -1727.40002, 12.8, 0, 0, 180.483);
	CreateDynamicObject(997, 2241.5, -1727.30005, 12.8, 0, 0, 180.483);
	CreateDynamicObject(997, 2241.69995, -1724.09998, 12.8, 0, 0, 266.483);
	CreateDynamicObject(997, 2241.8999, -1721, 12.8, 0, 0, 266.479);
	CreateDynamicObject(8375, 2287.80005, -1706.19995, 14.6, 0, 0, 359.5);
	CreateDynamicObject(984, 2287.30005, -1721.5, 17.2, 0, 0, 90.5);
	CreateDynamicObject(984, 2274.5, -1721.5, 17.2, 0, 0, 90.25);
	CreateDynamicObject(984, 2261.69995, -1721.5, 17.2, 0, 0, 90.247);
	CreateDynamicObject(984, 2248.8999, -1721.5, 17.2, 0, 0, 90.247);
	CreateDynamicObject(982, 2263.8999, -1701.40002, 17.3, 0, 0, 270);
	CreateDynamicObject(3881, 2280.8999, -1698.69995, 18.4, 0, 0, 90.25);
	CreateDynamicObject(984, 2287.30005, -1696, 17.2, 0, 0, 90.5);
	CreateDynamicObject(983, 2293.69995, -1718.30005, 17.3, 0, 0, 0);
	CreateDynamicObject(983, 2305.19995, -1695.80005, 13, 0, 0, 0);
	CreateDynamicObject(3887, -279.79999, 2171.69995, 112.4, 0, 0, 258);
	CreateDynamicObject(3887, -242.5, 2292, 110.2, 0, 0, 81.997);
	CreateDynamicObject(3865, -301.70001, 2178.30005, 112.6, 0, 0, 354.25);
	CreateDynamicObject(3865, -300.70001, 2187.3999, 112.6, 0, 0, 354.499);
	CreateDynamicObject(3865, -299.70001, 2196.5, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -298.70001, 2205.69995, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -297.70001, 2214.80005, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -296.70001, 2224, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -295.70001, 2233.1001, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -294.79999, 2242, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -293.79999, 2251.19995, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -292.89999, 2260, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -292, 2268.1001, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -291.10001, 2276.80005, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -290.10001, 2285.80005, 112.6, 0, 0, 354.496);
	CreateDynamicObject(3865, -289.10001, 2294.80005, 112.6, 0, 0, 354.996);
	CreateDynamicObject(3865, -288.20001, 2303.80005, 112.6, 0, 0, 354.996);
	CreateDynamicObject(3865, -287.29999, 2312.8999, 112.6, 0, 0, 354.996);
	CreateDynamicObject(3865, -286.39999, 2322.1001, 111.8, 350, 0, 354.996);
	CreateDynamicObject(16303, -291.20001, 2158.19995, 106.6, 0, 350, 96);
	CreateDynamicObject(16303, -277.70001, 2154.19995, 104.2, 0, 349.997, 95.999);
	CreateDynamicObject(16303, -261.20001, 2151.6001, 104.4, 0, 349.997, 95.999);
	CreateDynamicObject(3865, -255, 2178.19995, 117.4, 0, 0, 350.249);
	CreateDynamicObject(3865, -253.3, 2187.19995, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -251.89999, 2194.80005, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -250.3, 2203.6001, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -248.7, 2212.5, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -247.3, 2220.30005, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -245.60001, 2229.30005, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -244.10001, 2237.5, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -242.39999, 2246.6001, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -240.7, 2255.3999, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -239, 2264.6001, 117.4, 0, 0, 350.244);
	CreateDynamicObject(3865, -237.39999, 2273.5, 116.6, 350, 0, 350.244);
	CreateDynamicObject(3865, -236.3, 2282.1001, 115.3, 355, 0, 352.739);
	CreateDynamicObject(16303, -227.5, 2305.80005, 104, 0, 349.997, 271.999);
	CreateDynamicObject(16303, -245, 2308.8999, 102.1, 0, 349.991, 271.994);
	CreateDynamicObject(16303, -258, 2310.69995, 102.1, 0, 349.991, 271.994);

	// Hospital Interior
	CreateDynamicObject(18030, 1174.7900390625, -1343.57421875, 2424.4133300781, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(14466, 1214.5484619141, -1360.7130126953, 2432.2053222656, 0, 0, 270.5, .interiorid = 1);
	CreateDynamicObject(7191, 1191.828125, -1351.0107421875, 2421.6208496094, 0, 270, 0, .interiorid = 1);
	CreateDynamicObject(14782, 1187.7976074219, -1353.7375488281, 2423.0622558594, 0, 0, 90.5, .interiorid = 1);
	CreateDynamicObject(1523, 1190.55078125, -1350.01953125, 2422.2648925781, 0, 0, 180.24719238281, .interiorid = 1);
	CreateDynamicObject(18070, 1169.6414794922, -1345.1927490234, 2422.5458984375, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(4724, 1158.5886230469, -1353.6053466797, 2423.7512207031, 0, 0, 0.25, .interiorid = 1);
	CreateDynamicObject(2001, 1163.2530517578, -1355.927734375, 2422.0461425781, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(932, 1185.4672851563, -1355.8714599609, 2422.0461425781, 0, 0, 272.5, .interiorid = 1);
	CreateDynamicObject(932, 1183.7150878906, -1355.9479980469, 2422.0461425781, 0, 0, 272.49938964844, .interiorid = 1);
	CreateDynamicObject(932, 1182.11328125, -1355.9810791016, 2422.0461425781, 0, 0, 272.49938964844, .interiorid = 1);
	CreateDynamicObject(932, 1180.4866943359, -1355.9487304688, 2422.0461425781, 0, 0, 272.49938964844, .interiorid = 1);
	CreateDynamicObject(1557, 1168.1516113281, -1357.0413818359, 2422.0461425781, 0, 0, 359.5, .interiorid = 1);
	CreateDynamicObject(1557, 1171.1590576172, -1357.0489501953, 2422.0461425781, 0, 0, 180, .interiorid = 1);
	CreateDynamicObject(2596, 1156.7939453125, -1348.4765625, 2425.3452148438, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2596, 1163.4686279297, -1354.6719970703, 2425.3083496094, 0, 0, 270.25, .interiorid = 1);
	CreateDynamicObject(2773, 1185.4097900391, -1354.6234130859, 2422.5634765625, 0, 0, 90.25, .interiorid = 1);
	CreateDynamicObject(2773, 1183.4921875, -1354.6352539063, 2422.5634765625, 0, 0, 90.247192382813, .interiorid = 1);
	CreateDynamicObject(2773, 1181.576171875, -1354.6499023438, 2422.5634765625, 0, 0, 90.247192382813, .interiorid = 1);
	CreateDynamicObject(2190, 1168.4984130859, -1346.9685058594, 2423.0561523438, 0, 0.25, 182.75, .interiorid = 1);
	CreateDynamicObject(2190, 1170.7844238281, -1346.9844970703, 2423.0561523438, 0, 0.2471923828125, 182.74658203125, .interiorid = 1);
	CreateDynamicObject(1663, 1170.712890625, -1345.3366699219, 2422.5063476563, 0, 0, 17.25, .interiorid = 1);
	CreateDynamicObject(1663, 1168.3572998047, -1345.3454589844, 2422.5063476563, 0, 0, 355.99853515625, .interiorid = 1);
	CreateDynamicObject(2894, 1169.7390136719, -1347.2918701172, 2423.0561523438, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(7930, 1189.5693359375, -1345.9460449219, 2423.5441894531, 90, 180.0054931640600549316406, 269.98352050781, .interiorid = 1);
	CreateDynamicObject(3962, 1156.3192138672, -1357.0517578125, 2424.2602539063, 0, 0, 268.5, .interiorid = 1);
	CreateDynamicObject(2257, 1152.9465332031, -1351.5755615234, 2424.3505859375, 0, 180, 89.999969482422, .interiorid = 1);
	CreateDynamicObject(2243, 1166.4963378906, -1348.0822753906, 2422.3195800781, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2243, 1172.7916259766, -1347.9880371094, 2422.3195800781, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2954, 1190.2352294922, -1346.0294189453, 2422.0461425781, 0, 0, 270.5, .interiorid = 1);
	CreateDynamicObject(1726, 1155.638671875, -1348.72265625, 2422.0461425781, 0, 0, 0.25, .interiorid = 1);
	CreateDynamicObject(1726, 1153.4948730469, -1352.5561523438, 2422.0461425781, 0, 0, 89.997192382813, .interiorid = 1);
	CreateDynamicObject(1726, 1157.3165283203, -1355.7957763672, 2422.0461425781, 0, 0, 179.99450683594, .interiorid = 1);
	CreateDynamicObject(1727, 1154.0897216797, -1354.7977294922, 2422.0461425781, 0, 0, 123, .interiorid = 1);
	CreateDynamicObject(1727, 1153.9633789063, -1349.6390380859, 2422.0461425781, 0, 0, 44.997436523438, .interiorid = 1);
	CreateDynamicObject(1727, 1162.5498046875, -1354.5593261719, 2422.0461425781, 0, 0, 220.99743652344, .interiorid = 1);
	CreateDynamicObject(7191, 1157.6741943359, -1339.1177978516, 2424.0207519531, 0, 0, 270, .interiorid = 1);
	CreateDynamicObject(7191, 1157.6701660156, -1338.3753662109, 2424.0207519531, 0, 0, 270, .interiorid = 1);
	CreateDynamicObject(1776, 1153.2979736328, -1343.3521728516, 2423.1455078125, 0, 0, 90.75, .interiorid = 1);
	CreateDynamicObject(1209, 1153.2958984375, -1346.2855224609, 2422.0461425781, 0, 0, 90.5, .interiorid = 1);
	CreateDynamicObject(7191, 1167.7000732422, -1313.4320068359, 2427.9807128906, 0, 0, 180, .interiorid = 1);
	CreateDynamicObject(7191, 1191.1739501953, -1335.5490722656, 2424.0207519531, 0, 0, 90, .interiorid = 1);
	CreateDynamicObject(7191, 1167.69921875, -1313.431640625, 2424.0207519531, 0, 0, 179.99450683594, .interiorid = 1);
	CreateDynamicObject(7191, 1191.173828125, -1335.548828125, 2427.9807128906, 0, 0, 90, .interiorid = 1);
	CreateDynamicObject(2603, 1154.3084716797, -1331.0260009766, 2422.4995117188, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2603, 1157.8651123047, -1331.033203125, 2422.4995117188, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2603, 1162.1901855469, -1330.9475097656, 2422.4995117188, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2603, 1165.8120117188, -1330.8693847656, 2422.4995117188, 0, 0, 0, .interiorid = 1);
	CreateDynamicObject(2596, 1156.2908935547, -1337.9664306641, 2424.7763671875, 0, 0, 179.25, .interiorid = 1);
	CreateDynamicObject(2596, 1163.3677978516, -1337.9395751953, 2424.7763671875, 0, 0, 179.24743652344, .interiorid = 1);
	CreateDynamicObject(3383, 1175.9519042969, -1330.5677490234, 2422.0461425781, 0, 0, 179.75, .interiorid = 1);
	CreateDynamicObject(3383, 1183.3975830078, -1330.3992919922, 2422.0461425781, 0, 0, 179.74731445313, .interiorid = 1);
	CreateDynamicObject(3388, 1172.5631103516, -1329.8569335938, 2422.0461425781, 0, 0, 90.25, .interiorid = 1);
	CreateDynamicObject(3388, 1180.3153076172, -1329.8544921875, 2422.0461425781, 0, 0, 90.247192382813, .interiorid = 1);
	CreateDynamicObject(3394, 1184.6655273438, -1334.9022216797, 2422.0461425781, 0, 0, 269.75, .interiorid = 1);
	CreateDynamicObject(3394, 1175.7877197266, -1334.8275146484, 2422.0461425781, 0, 0, 269.74731445313, .interiorid = 1);

	// Fire Department
	CreateDynamicObject(14853, 233.17, 151.00, 2002.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(14855, 199.40, 146.71, 2000.94,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(8133, 222.43, 152.07, 2022.76,   90.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(14858, 213.01, 151.55, 2002.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(8133, 172.93, 150.34, 1997.00,   0.00, 90.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2206, 189.63, 132.41, 1996.78,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2206, 184.74, 132.63, 1996.84,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2737, 189.22, 135.20, 1999.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(1663, 188.62, 130.16, 1997.31,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1663, 189.68, 130.87, 1997.31,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1663, 187.74, 130.89, 1997.31,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1663, 184.92, 131.06, 1997.31,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1663, 183.72, 130.35, 1997.31,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1663, 182.57, 131.09, 1997.31,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1671, 188.75, 133.92, 1997.30,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(1671, 183.78, 133.49, 1997.30,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(16378, 178.77, 133.37, 1997.58,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(1721, 178.29, 132.04, 1997.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(1721, 176.43, 132.10, 1997.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2161, 175.98, 128.29, 1996.90,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2161, 175.98, 129.59, 1996.90,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2163, 181.20, 127.73, 1996.88,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2163, 181.20, 127.73, 1997.78,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(14455, 191.37, 128.10, 1998.53,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2002, 186.88, 135.02, 1997.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2002, 181.72, 134.96, 1997.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(644, 190.81, 134.36, 1997.00,   0.00, 0.00, 104.00, .interiorid = 73);
	CreateDynamicObject(2240, 185.72, 127.87, 1997.26,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(14782, 189.27, 167.67, 1997.86,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(14782, 192.03, 167.76, 1997.86,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(14401, 179.46, 171.55, 1997.00,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(14401, 185.46, 171.59, 1997.00,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(14401, 202.21, 176.02, 1997.00,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(14401, 197.28, 176.04, 1997.00,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(14401, 191.47, 176.12, 1997.00,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(14401, 195.93, 175.97, 1997.00,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(366, 189.03, 171.99, 1997.95,   0.00, 40.00, 0.00, .interiorid = 73);
	CreateDynamicObject(14397, 204.39, 172.34, 1996.37,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(366, 189.59, 172.00, 1997.95,   0.00, 40.00, 0.00, .interiorid = 73);
	CreateDynamicObject(366, 190.07, 172.02, 1997.95,   0.00, 40.00, 0.00, .interiorid = 73);
	CreateDynamicObject(366, 190.51, 172.01, 1997.95,   0.00, 40.00, 0.00, .interiorid = 73);
	CreateDynamicObject(366, 191.01, 172.03, 1997.95,   0.00, 40.00, 0.00, .interiorid = 73);
	CreateDynamicObject(366, 191.45, 172.01, 1997.95,   0.00, 40.00, 0.00, .interiorid = 73);
	CreateDynamicObject(366, 192.19, 172.26, 1997.94,   0.00, 40.00, 236.00, .interiorid = 73);
	CreateDynamicObject(2395, 193.89, 162.71, 1996.87,   0.00, 0.00, 309.00, .interiorid = 73);
	CreateDynamicObject(2395, 193.90, 162.70, 1999.58,   0.00, 0.00, 309.00, .interiorid = 73);
	CreateDynamicObject(1523, 193.71, 163.13, 1996.83,   0.00, 0.00, 129.00, .interiorid = 73);
	CreateDynamicObject(2395, 192.61, 164.30, 2002.55,   0.00, 90.00, 309.00, .interiorid = 73);
	CreateDynamicObject(2395, 195.92, 160.21, 2000.08,   0.00, 90.00, 309.00, .interiorid = 73);
	CreateDynamicObject(2395, 193.89, 162.71, 1996.87,   0.00, 180.00, 309.00, .interiorid = 73);
	CreateDynamicObject(2395, 195.81, 160.69, 1999.58,   0.00, 0.00, 129.00, .interiorid = 73);
	CreateDynamicObject(2395, 195.81, 160.69, 1996.87,   0.00, 0.00, 129.00, .interiorid = 73);
	CreateDynamicObject(2395, 197.83, 158.17, 2000.08,   0.00, 90.00, 129.00, .interiorid = 73);
	CreateDynamicObject(2395, 194.50, 162.28, 2002.55,   0.00, 90.00, 129.00, .interiorid = 73);
	CreateDynamicObject(2198, 187.40, 148.76, 1996.80,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2198, 188.44, 149.81, 1996.80,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2198, 189.37, 148.76, 1996.80,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2198, 186.49, 149.80, 1996.80,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2356, 187.91, 147.53, 1996.85,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2356, 187.76, 150.76, 1996.85,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2356, 190.04, 149.26, 1996.85,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2356, 185.33, 149.21, 1996.85,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2198, 180.87, 147.97, 1997.00,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2198, 179.89, 149.01, 1997.00,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2198, 179.86, 147.06, 1997.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2198, 180.88, 149.94, 1997.00,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2356, 180.23, 151.13, 1996.85,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2356, 180.45, 145.81, 1996.85,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2356, 181.97, 148.37, 1996.85,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2356, 178.87, 148.29, 1996.85,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2202, 184.09, 159.46, 1996.85,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2202, 178.75, 159.42, 1996.80,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2197, 190.60, 159.55, 1996.80,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2197, 190.62, 158.86, 1996.80,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2197, 190.62, 158.19, 1996.80,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2197, 190.63, 157.51, 1996.81,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2191, 191.16, 156.67, 1996.73,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2198, 183.86, 153.59, 1997.00,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2198, 184.94, 154.59, 1996.80,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2198, 185.87, 153.57, 1996.80,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2198, 182.97, 154.58, 1996.80,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2356, 182.00, 154.01, 1996.85,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2356, 184.37, 152.52, 1996.85,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2356, 186.76, 154.00, 1996.85,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2356, 184.40, 155.67, 1996.85,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2204, 191.66, 145.73, 1996.80,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2001, 191.50, 154.56, 1996.82,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2001, 191.50, 151.45, 1996.82,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2001, 191.55, 147.75, 1996.82,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2266, 184.69, 143.75, 1998.76,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(2258, 177.72, 154.14, 1999.00,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(638, 172.83, 157.38, 1997.53,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(638, 172.78, 144.98, 1997.53,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2013, 199.64, 164.01, 1996.70,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2014, 199.64, 162.03, 1996.70,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2014, 199.63, 165.00, 1996.70,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2017, 199.62, 166.01, 1996.71,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2016, 199.62, 167.00, 1996.71,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(2015, 199.65, 161.04, 1996.70,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1786, 195.53, 167.94, 1997.33,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2314, 194.92, 167.69, 1996.86,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(1769, 196.16, 165.31, 1996.59,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1769, 197.60, 166.14, 1996.59,   0.00, 0.00, 222.00, .interiorid = 73);
	CreateDynamicObject(1769, 193.80, 165.91, 1996.59,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(1594, 197.53, 161.01, 1997.28,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(1594, 195.60, 162.44, 1997.28,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2748, 201.20, 122.87, 1997.24,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1775, 198.92, 122.92, 1997.93,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(8133, 208.60, 141.42, 2013.00,   0.00, 90.00, 180.00, .interiorid = 73);
	CreateDynamicObject(637, 196.63, 131.45, 1997.03,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(860, 196.75, 132.35, 1997.27,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(860, 196.68, 130.50, 1997.27,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(861, 196.66, 131.45, 1997.20,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(3660, 208.64, 134.32, 1998.99,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(3660, 208.65, 153.92, 1998.99,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(2356, 200.61, 150.34, 1996.80,   0.00, 0.00, 265.00, .interiorid = 73);
	CreateDynamicObject(2356, 200.63, 147.43, 1996.80,   0.00, 0.00, 287.00, .interiorid = 73);
	CreateDynamicObject(2356, 200.10, 143.63, 1996.80,   0.00, 0.00, 229.00, .interiorid = 73);
	CreateDynamicObject(950, 186.46, 123.30, 1997.35,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(950, 191.70, 123.31, 1997.35,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(950, 181.10, 123.31, 1997.35,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(950, 175.87, 123.29, 1997.35,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2252, 199.55, 141.45, 1997.71,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2252, 201.91, 145.19, 1997.71,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2252, 202.09, 151.59, 1997.71,   0.00, 0.00, 0.00, .interiorid = 73);
	CreateDynamicObject(2190, 200.38, 141.99, 1997.40,   0.00, 0.00, 193.00, .interiorid = 73);
	CreateDynamicObject(2190, 202.09, 147.77, 1997.40,   0.00, 0.00, -91.00, .interiorid = 73);
	CreateDynamicObject(2190, 202.07, 150.05, 1997.40,   0.00, 0.00, -91.00, .interiorid = 73);
	CreateDynamicObject(1533, 208.12, 121.16, 1996.86,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1533, 206.63, 121.16, 1996.86,   0.00, 0.00, 180.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.49, 128.82, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.49, 128.20, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.50, 127.58, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.49, 126.97, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.47, 126.34, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.44, 125.08, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.45, 124.50, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.46, 123.93, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(1721, 196.47, 123.34, 1996.83,   0.00, 0.00, 270.00, .interiorid = 73);
	CreateDynamicObject(14397, 201.89, 161.46, 2000.14,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(14397, 201.89, 161.46, 2000.63,   0.00, 0.00, 90.00, .interiorid = 73);
	CreateDynamicObject(3117, 201.29, 142.76, 2002.69,   0.00, 90.00, 149.00, .interiorid = 73);
	CreateDynamicObject(2690, 201.43, 142.68, 2001.29,   0.00, 90.00, 55.00, .interiorid = 73);

	// Hitman interior
	CreateDynamicObject(14390, 1249.41, -775.23, 5083.00,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(14597, 1233.17, -751.84, 5081.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2395, 1246.36, -755.39, 5082.07,   0.00, 90.00, 90.00, .interiorid = 42);
	CreateDynamicObject(5056, 1246.25, -751.18, 5079.65,   0.00, 90.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1557, 1275.37, -760.01, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1557, 1278.39, -760.02, 5079.75,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(14399, 1257.84, -756.54, 5079.72,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2051, 1239.18, -738.26, 5082.22,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2051, 1241.72, -738.28, 5082.22,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2050, 1240.47, -738.27, 5082.10,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(18051, 1243.84, -739.91, 5081.25,   0.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(14397, 1252.44, -743.42, 5081.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(941, 1238.20, -747.91, 5080.19,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2041, 1239.44, -748.19, 5080.85,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2041, 1239.22, -748.19, 5080.85,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(348, 1238.59, -747.54, 5080.66,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(348, 1238.97, -747.50, 5080.66,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(352, 1237.44, -748.13, 5080.67,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2509, 1243.02, -765.45, 5081.59,   0.00, 90.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2509, 1241.14, -765.44, 5081.59,   0.00, 90.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2509, 1239.28, -765.44, 5081.59,   0.00, 90.00, 180.00, .interiorid = 42);
	CreateDynamicObject(352, 1238.59, -765.42, 5081.92,   0.00, 5.00, 1.00, .interiorid = 42);
	CreateDynamicObject(352, 1238.59, -765.42, 5081.44,   0.00, 5.00, 1.00, .interiorid = 42);
	CreateDynamicObject(356, 1239.29, -765.45, 5081.84,   0.00, 0.00, 8.00, .interiorid = 42);
	CreateDynamicObject(356, 1239.29, -765.45, 5081.38,   0.00, 0.00, 8.00, .interiorid = 42);
	CreateDynamicObject(355, 1240.87, -765.44, 5081.91,   0.00, 5.00, 5.00, .interiorid = 42);
	CreateDynamicObject(355, 1240.87, -765.44, 5081.45,   0.00, 5.00, 5.00, .interiorid = 42);
	CreateDynamicObject(351, 1242.02, -765.42, 5081.89,   0.00, 10.00, 3.00, .interiorid = 42);
	CreateDynamicObject(351, 1242.02, -765.42, 5081.42,   0.00, 10.00, 3.00, .interiorid = 42);
	CreateDynamicObject(358, 1243.56, -765.38, 5081.30,   -5.00, -40.00, 180.00, .interiorid = 42);
	CreateDynamicObject(3015, 1243.93, -765.21, 5079.83,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3015, 1243.47, -765.22, 5079.83,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(941, 1243.81, -762.82, 5080.16,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(941, 1243.80, -760.36, 5080.16,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(363, 1243.86, -758.95, 5080.69,   270.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(363, 1243.87, -759.23, 5080.69,   270.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(363, 1243.89, -759.54, 5080.69,   270.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(363, 1243.89, -759.85, 5080.69,   270.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(364, 1243.28, -759.35, 5080.62,   0.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(342, 1244.01, -760.72, 5080.63,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(342, 1243.83, -760.72, 5080.63,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(342, 1243.69, -760.73, 5080.63,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(342, 1243.55, -760.74, 5080.63,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(347, 1243.43, -761.88, 5080.70,   270.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(347, 1243.42, -762.60, 5080.70,   270.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(2043, 1244.12, -761.88, 5080.73,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2043, 1244.11, -762.62, 5080.73,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2358, 1237.18, -760.90, 5079.87,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2358, 1237.16, -760.22, 5079.87,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2358, 1237.17, -759.56, 5079.87,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2358, 1237.18, -758.90, 5079.87,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2358, 1237.15, -759.58, 5080.05,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2358, 1237.15, -760.30, 5080.05,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(942, 1232.92, -764.60, 5081.91,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3800, 1236.09, -761.58, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3800, 1236.15, -760.43, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3800, 1236.15, -759.28, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3800, 1236.19, -759.66, 5080.76,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3800, 1236.13, -760.89, 5080.76,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3793, 1229.77, -760.39, 5080.77,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(3788, 1229.99, -760.36, 5080.24,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(359, 1229.99, -760.15, 5080.22,   270.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(359, 1230.29, -760.16, 5080.22,   270.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2207, 1231.98, -742.15, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1714, 1233.03, -739.87, 5079.72,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1663, 1232.14, -743.12, 5080.17,   0.00, 0.00, 160.00, .interiorid = 42);
	CreateDynamicObject(1663, 1231.21, -742.56, 5080.17,   0.00, 0.00, 140.00, .interiorid = 42);
	CreateDynamicObject(1663, 1233.38, -743.18, 5080.17,   0.00, 0.00, 190.00, .interiorid = 42);
	CreateDynamicObject(1663, 1234.41, -742.64, 5080.17,   0.00, 0.00, 210.00, .interiorid = 42);
	CreateDynamicObject(18044, 1226.95, -762.62, 5081.44,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(18052, 1244.05, -761.95, 5082.21,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(11353, 1233.08, -737.75, 5079.75,   90.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(1736, 1233.00, -738.63, 5082.97,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2163, 1234.32, -737.90, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2163, 1232.56, -737.91, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2163, 1230.80, -737.90, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1665, 1233.18, -742.43, 5080.55,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1665, 1232.06, -742.18, 5080.55,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1665, 1232.34, -741.41, 5080.55,   0.00, 0.00, 55.00, .interiorid = 42);
	CreateDynamicObject(2894, 1233.51, -741.73, 5080.52,   0.00, 0.00, 207.00, .interiorid = 42);
	CreateDynamicObject(14455, 1236.64, -743.26, 5081.37,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(14455, 1236.65, -747.57, 5081.37,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(14455, 1229.36, -739.01, 5081.41,   0.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(14455, 1229.36, -743.34, 5081.41,   0.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(2737, 1223.06, -748.98, 5082.15,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2737, 1222.65, -754.68, 5082.15,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2737, 1226.06, -754.67, 5082.15,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(7294, 1226.08, -749.01, 5076.88,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(7294, 1220.08, -751.91, 5076.60,   0.00, 0.00, 270.00, .interiorid = 42);
	CreateDynamicObject(2953, 1233.43, -741.36, 5080.54,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1727, 1269.49, -754.55, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1726, 1271.47, -754.57, 5079.91,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1727, 1265.94, -757.02, 5079.88,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(1726, 1266.67, -754.61, 5079.91,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1651, 1270.53, -757.70, 5082.56,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2229, 1271.95, -758.16, 5080.96,   0.00, 90.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2229, 1269.05, -758.13, 5081.58,   0.00, 270.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2233, 1265.93, -758.23, 5079.90,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2233, 1266.68, -753.86, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2233, 1269.53, -753.79, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2233, 1271.39, -753.79, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2233, 1274.45, -753.90, 5079.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(335, 1243.37, -763.38, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(335, 1243.56, -763.38, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(335, 1243.73, -763.38, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(335, 1243.95, -763.39, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2001, 1263.06, -749.78, 5079.73,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2001, 1263.08, -755.89, 5079.73,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2001, 1273.10, -757.39, 5079.89,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2001, 1246.76, -749.64, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2001, 1246.67, -753.53, 5079.69,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2252, 1257.67, -754.83, 5081.39,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2252, 1258.00, -758.88, 5081.39,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2252, 1252.36, -754.62, 5081.39,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2257, 1267.86, -748.62, 5082.48,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3806, 1262.76, -753.09, 5083.84,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1249.39, -759.21, 5082.37,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1248.43, -759.25, 5082.37,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1247.09, -759.28, 5082.37,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1246.50, -758.11, 5082.37,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1246.50, -758.11, 5081.78,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1247.72, -759.30, 5081.78,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1249.20, -759.27, 5081.78,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1249.20, -759.27, 5081.18,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1248.33, -759.27, 5081.18,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1247.04, -759.32, 5081.18,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1668, 1246.54, -757.68, 5081.18,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1248.94, -759.27, 5082.24,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1247.92, -759.24, 5082.24,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1246.54, -758.36, 5082.24,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1246.54, -758.36, 5081.67,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1248.01, -759.28, 5081.67,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1248.01, -759.28, 5081.12,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1520, 1246.58, -758.48, 5081.06,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1248.66, -759.23, 5082.41,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1247.44, -759.27, 5082.41,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1246.48, -757.93, 5082.41,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1246.48, -757.93, 5081.74,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1246.48, -757.93, 5081.20,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1247.50, -759.35, 5081.20,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1247.29, -759.32, 5081.81,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1512, 1246.83, -759.23, 5081.81,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1665, 1250.68, -754.33, 5081.11,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1665, 1251.71, -754.35, 5081.11,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1665, 1253.47, -754.34, 5081.11,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1665, 1254.49, -754.26, 5081.11,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1665, 1255.60, -754.30, 5081.11,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1665, 1256.73, -754.28, 5081.11,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1541, 1247.90, -755.23, 5081.29,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1541, 1248.80, -755.23, 5081.29,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(1548, 1248.31, -754.75, 5081.09,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1547, 1249.64, -754.72, 5081.09,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2125, 1256.23, -753.59, 5080.06,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2125, 1254.90, -753.63, 5080.06,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2125, 1253.67, -753.62, 5080.06,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2125, 1251.27, -753.63, 5080.06,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2125, 1250.37, -753.55, 5080.06,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2271, 1251.02, -749.09, 5082.93,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2270, 1254.56, -749.09, 5082.94,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1246.53, -758.92, 5082.21,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1246.52, -757.55, 5081.60,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1248.93, -759.31, 5081.60,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1248.72, -759.29, 5081.60,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1248.72, -759.29, 5081.03,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1249.02, -759.28, 5081.03,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1544, 1246.56, -758.95, 5081.03,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3806, 1261.99, -753.12, 5083.84,   0.00, 0.00, 180.00, .interiorid = 42);
	CreateDynamicObject(2051, 1243.20, -738.25, 5082.22,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2050, 1238.27, -738.28, 5082.10,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2208, 1223.33, -751.86, 5079.76,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(367, 1226.13, -751.96, 5080.62,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(367, 1225.75, -751.96, 5080.62,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(367, 1225.36, -751.96, 5080.62,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(369, 1224.43, -751.85, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(369, 1224.23, -751.85, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(369, 1224.01, -751.83, 5080.62,   90.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(367, 1223.42, -751.96, 5080.62,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(18766, 1279.89, -760.49, 5081.79,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(2847, 1276.39, -759.68, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(3462, 1278.68, -750.33, 5081.26,   0.00, 0.00, 47.00, .interiorid = 42);
	CreateDynamicObject(18652, 1279.88, -750.04, 5079.78,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(18652, 1278.83, -749.02, 5079.78,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(2258, 1274.97, -755.53, 5081.91,   0.00, 0.00, 90.00, .interiorid = 42);
	CreateDynamicObject(1892, 1278.68, -759.08, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(1892, 1274.09, -759.06, 5079.75,   0.00, 0.00, 0.00, .interiorid = 42);
	CreateDynamicObject(644, 1273.94, -749.60, 5079.91,   0.00, 0.00, 0.00, .interiorid = 42);

	// Door fix for Denise's house and covered pilot area for Shamal interior
	CreateDynamicObject(1498,2401.75927734,-1714.56994629,13.13000011,0.00000000,0.00000000,0.00000000); //object(gen_doorext03) (1)
	CreateDynamicObject(2634,1.74394608,31.97999954,1199.72998047,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(ab_vaultdoor) (3)
	CreateDynamicObject(2634,1.74316406,31.97949219,1202.69995117,0.00000000,0.00000000,0.00000000, .interiorid = 1); //object(ab_vaultdoor) (4)

	// Mall Interior
	CreateDynamicObject(3989,455.68774400,-2404.30932600,5.33563600,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(7493,523.24963400,-2413.61035200,13.25608600,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(7493,419.32476800,-2425.11035200,13.25608600,0.00000000,0.00000000,180.48182006, .interiorid = 18);
	CreateDynamicObject(7493,489.72479200,-2484.48779300,13.25608600,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(7493,487.52450600,-2329.01171900,13.25608600,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(7493,489.69986000,-2484.63720700,16.78107800,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(7493,487.59942600,-2328.79052700,17.20606800,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(1560,474.51272600,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,476.01260400,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,477.48742700,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,478.98742700,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,486.41214000,-2377.77294900,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,484.91226200,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,483.38751200,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1560,481.86264000,-2377.74804700,9.80654800,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(3530,481.18234300,-2376.96899400,15.60875100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(3530,481.15734900,-2377.16821300,20.78376000,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(994,480.82080100,-2390.36132800,9.89794700,0.00000000,0.00000000,88.52197935, .interiorid = 18);
	CreateDynamicObject(1984,478.56616200,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,475.49148600,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,472.39157100,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,469.24166900,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,466.06658900,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,462.91674800,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,459.76684600,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1984,456.71698000,-2389.01904300,9.78588800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1663,479.69928000,-2386.61132800,10.24607800,0.00000000,0.00000000,-73.91155557, .interiorid = 18);
	CreateDynamicObject(1663,476.47433500,-2386.66113300,10.24607800,0.00000000,0.00000000,-73.91155557, .interiorid = 18);
	CreateDynamicObject(1663,473.39917000,-2386.63623000,10.24607800,0.00000000,0.00000000,-73.91155557, .interiorid = 18);
	CreateDynamicObject(1663,470.32437100,-2386.63623000,10.24607800,0.00000000,0.00000000,-73.91155557, .interiorid = 18);
	CreateDynamicObject(1843,487.57012900,-2392.18725600,9.78098000,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1843,487.62011700,-2395.16137700,9.78098000,0.00000000,0.00000000,-88.52197935, .interiorid = 18);
	CreateDynamicObject(1843,487.77008100,-2401.03686500,9.78098000,0.00000000,0.00000000,-88.52197935, .interiorid = 18);
	CreateDynamicObject(1844,487.70239300,-2398.10913100,9.78064700,0.00000000,0.00000000,-88.52197935, .interiorid = 18);
	CreateDynamicObject(1844,487.90234400,-2408.15502900,9.78064700,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1844,487.92733800,-2411.10522500,9.78064700,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1887,487.97479200,-2414.06201200,9.78038000,0.00000000,0.00000000,-88.52197935, .interiorid = 18);
	CreateDynamicObject(1887,488.07476800,-2419.93847700,9.78038000,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1843,488.04068000,-2416.99829100,9.78043200,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1890,483.91915900,-2392.20166000,9.78272600,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,480.01214600,-2395.14526400,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,483.91198700,-2395.12036100,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,483.91915900,-2398.05224600,9.78272600,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,483.91915900,-2400.97949200,9.78272600,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,483.91287200,-2403.88818400,9.78243600,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,479.99008200,-2398.14819300,9.78434000,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1884,479.94009400,-2401.07348600,9.78434000,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1884,479.91510000,-2404.02465800,9.78434000,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1890,476.08337400,-2395.20532200,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,472.43722500,-2395.14526400,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(2365,481.95449800,-2381.40698200,9.78423100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(2365,481.95449800,-2381.38208000,10.07572000,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1349,481.83047500,-2384.01928700,10.35518100,0.00000000,1.71887339,-90.24079544, .interiorid = 18);
	CreateDynamicObject(1349,481.83047500,-2384.51733400,10.35518100,0.00000000,1.71887339,-90.24079544, .interiorid = 18);
	CreateDynamicObject(1349,481.83047500,-2386.24243200,10.35518100,0.00000000,1.71887339,-51.56614427, .interiorid = 18);
	CreateDynamicObject(1349,487.19693000,-2386.69409200,10.35294000,0.00000000,1.71887339,260.40943248, .interiorid = 18);
	CreateDynamicObject(2365,483.75006100,-2389.97168000,9.78319500,0.00000000,0.00000000,94.53803620, .interiorid = 18);
	CreateDynamicObject(2365,475.91857900,-2393.15820300,9.78712900,0.00000000,0.00000000,94.53803620, .interiorid = 18);
	CreateDynamicObject(1890,476.08337400,-2398.15454100,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,476.08337400,-2401.10668900,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,476.06506300,-2404.04956100,9.78434000,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1889,472.43722500,-2398.09448200,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,472.45840500,-2401.05688500,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,472.45840500,-2404.00708000,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,483.92062400,-2406.87548800,9.78221300,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,479.91510000,-2406.97387700,9.78434000,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1884,476.06506300,-2407.02465800,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1848,485.17611700,-2421.95288100,9.78149000,0.00000000,0.00000000,-178.76300397, .interiorid = 18);
	CreateDynamicObject(1890,483.92062400,-2412.79882800,9.78221300,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,483.92062400,-2415.79785200,9.78221300,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1845,482.43237300,-2424.07226600,9.78731700,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1845,482.45736700,-2427.02246100,9.78731700,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(1845,482.45736700,-2429.94873000,9.78731700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1848,485.32608000,-2431.95092800,9.78149000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1848,485.31097400,-2426.82568400,9.78730800,0.00000000,0.00000000,269.00351293, .interiorid = 18);
	CreateDynamicObject(1842,478.89740000,-2424.58203100,10.25606400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,478.87240600,-2429.21142600,10.25606400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1889,479.88073700,-2412.85937500,9.78417300,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,479.89468400,-2415.85253900,9.78445900,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,476.06506300,-2412.79760700,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,476.06506300,-2415.74487300,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1991,454.33581500,-2397.91992200,9.81896800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2394.97680700,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1996,454.32177700,-2393.97998000,9.81063400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1889,472.43722500,-2406.94409200,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2395.95092800,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2396.92407200,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,472.43722500,-2409.87036100,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,472.43722500,-2412.82153300,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,472.44009400,-2415.74487300,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,472.44009400,-2418.69409200,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,472.45260600,-2421.62524400,9.78730800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,472.45260600,-2424.57348600,9.78730800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,472.45260600,-2427.52172900,9.78730800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,472.46508800,-2430.46997100,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(2412,479.30438200,-2378.38232400,9.80765400,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(2412,476.35424800,-2378.30761700,9.80765400,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2400.86743200,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2403.84057600,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,468.43347200,-2406.80395500,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,468.43347200,-2409.75317400,9.78643000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,468.44015500,-2412.67797900,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,468.44015500,-2415.65307600,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,468.44015500,-2418.57641600,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2421.51293900,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2424.45922900,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1848,488.30081200,-2434.88085900,9.78730800,0.00000000,0.00000000,-89.38147334, .interiorid = 18);
	CreateDynamicObject(1890,484.38366700,-2437.15112300,9.78730800,0.00000000,0.00000000,179.62232607, .interiorid = 18);
	CreateDynamicObject(1848,488.35080000,-2439.83203100,9.78730800,0.00000000,0.00000000,-90.24091003, .interiorid = 18);
	CreateDynamicObject(1890,481.43377700,-2437.12622100,9.78730800,0.00000000,0.00000000,179.62232607, .interiorid = 18);
	CreateDynamicObject(1890,478.50869800,-2437.12622100,9.78730800,0.00000000,0.00000000,179.62232607, .interiorid = 18);
	CreateDynamicObject(1884,475.58224500,-2437.13354500,9.77759300,0.00000000,0.00000000,179.62238337, .interiorid = 18);
	CreateDynamicObject(1889,469.69757100,-2437.13232400,9.76570700,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2427.38549800,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2430.33569300,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,466.73388700,-2437.12622100,9.78730800,0.00000000,0.00000000,179.62232607, .interiorid = 18);
	CreateDynamicObject(1890,463.68402100,-2436.25659200,9.78730800,0.00000000,0.00000000,147.82316844, .interiorid = 18);
	CreateDynamicObject(1890,461.40927100,-2434.00659200,9.78730800,0.00000000,0.00000000,122.89938976, .interiorid = 18);
	CreateDynamicObject(1890,460.53448500,-2430.87915000,9.78730800,0.00000000,0.00000000,90.24073814, .interiorid = 18);
	CreateDynamicObject(1889,460.51226800,-2427.88354500,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1842,476.09741200,-2424.58203100,10.25606400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,476.09741200,-2429.20654300,10.25606400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,460.56561300,-2424.89941400,10.25791500,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,460.59060700,-2422.02685500,10.25791500,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1889,464.56225600,-2427.38549800,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,464.57769800,-2424.44897500,9.78730800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1890,464.57769800,-2421.49877900,9.78730800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,464.56524700,-2418.55151400,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,464.56524700,-2415.60229500,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,464.56524700,-2412.62915000,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,463.88546800,-2409.50683600,9.79196000,0.00000000,0.00000000,-66.17662534, .interiorid = 18);
	CreateDynamicObject(1889,461.83560200,-2407.03662100,9.79196000,0.00000000,0.00000000,-34.37752500, .interiorid = 18);
	CreateDynamicObject(1889,458.78555300,-2406.06250000,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1889,458.78555300,-2411.01074200,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1889,458.78555300,-2415.23584000,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1842,464.43753100,-2400.77929700,10.26877400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,461.36248800,-2400.77929700,10.26877400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,458.18759200,-2400.77929700,10.26877400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,476.07522600,-2429.21582000,9.73732100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,476.07522600,-2424.56933600,9.73732100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,478.90008500,-2424.56933600,9.73732100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,478.87509200,-2429.21679700,9.73732100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,458.17645300,-2400.77343800,9.75003100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,461.35122700,-2400.77343800,9.75003100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,464.42614700,-2400.77343800,9.75003100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1890,478.50869800,-2441.45092800,9.78730800,0.00000000,0.00000000,179.62232607, .interiorid = 18);
	CreateDynamicObject(1890,475.55880700,-2441.45092800,9.78730800,0.00000000,0.00000000,179.62232607, .interiorid = 18);
	CreateDynamicObject(1889,472.61200000,-2441.41967800,9.76514600,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1889,469.66204800,-2441.41967800,9.76514600,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1987,464.92349200,-2441.61425800,9.75987100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1988,465.89694200,-2441.59741200,9.75503300,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(1987,461.59832800,-2441.61425800,9.75987100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1988,462.57202100,-2441.59741200,9.75503300,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(1884,481.45620700,-2441.46118200,9.77500600,0.00000000,0.00000000,179.62238337, .interiorid = 18);
	CreateDynamicObject(1884,484.40597500,-2441.46118200,9.77500600,0.00000000,0.00000000,179.62238337, .interiorid = 18);
	CreateDynamicObject(1889,476.54007000,-2420.37280300,9.78541500,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1889,455.48580900,-2419.48388700,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1889,455.53579700,-2423.52880900,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1889,455.56079100,-2427.32470700,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1889,455.61077900,-2431.07373000,9.79196000,0.00000000,0.00000000,-0.00005730, .interiorid = 18);
	CreateDynamicObject(1991,454.33581500,-2408.24560500,9.81896800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2407.27465800,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2406.27563500,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2405.29858400,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2404.30053700,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2403.30444300,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1981,454.32482900,-2402.30835000,9.81466500,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1996,454.32177700,-2401.32666000,9.81063400,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1989,454.67102100,-2437.37011700,9.75281800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1989,454.67102100,-2438.31640600,9.75281800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1989,454.67102100,-2439.29052700,9.75281800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1989,454.67102100,-2440.23681600,9.75281800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1989,454.67102100,-2441.15820300,9.75281800,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(1846,460.54464700,-2424.89379900,9.73917100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1846,460.56964100,-2422.01831100,9.73917100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(1842,459.08441200,-2437.38598600,10.22056800,0.00000000,0.00000000,131.49392857, .interiorid = 18);
	CreateDynamicObject(1846,459.06817600,-2437.37939500,9.70182400,0.00000000,0.00000000,-48.98789148, .interiorid = 18);
	CreateDynamicObject(1987,458.49835200,-2441.61425800,9.75987100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1988,459.47222900,-2441.59741200,9.75503300,0.00000000,0.00000000,0.85943669, .interiorid = 18);
	CreateDynamicObject(1889,468.41217000,-2433.28393600,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1889,464.56225600,-2430.30688500,9.78414700,0.00000000,0.00000000,-90.24085273, .interiorid = 18);
	CreateDynamicObject(1884,472.46508800,-2433.42016600,9.78434000,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(2541,454.43652300,-2410.16333000,9.80253900,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(2541,454.48651100,-2417.21020500,9.80253900,0.00000000,0.00000000,90.24085273, .interiorid = 18);
	CreateDynamicObject(2541,480.01019300,-2393.15820300,9.78999900,0.00000000,0.00000000,180.48176276, .interiorid = 18);
	CreateDynamicObject(2541,487.65844700,-2390.20800800,9.78641000,0.00000000,0.00000000,180.48176276, .interiorid = 18);
	CreateDynamicObject(2541,472.45776400,-2393.13549800,9.79382200,0.00000000,0.00000000,180.48176276, .interiorid = 18);
	CreateDynamicObject(2542,454.30514500,-2392.00537100,9.83844100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(2542,454.30514500,-2391.03222700,9.83844100,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(2542,454.36703500,-2399.57348600,9.84879000,0.00000000,0.00000000,89.38141604, .interiorid = 18);
	CreateDynamicObject(2871,457.48605300,-2446.50805700,9.74788400,0.00000000,0.00000000,179.62238337, .interiorid = 18);
	CreateDynamicObject(2871,458.43594400,-2446.50805700,9.74788400,0.00000000,0.00000000,179.62238337, .interiorid = 18);
	CreateDynamicObject(2871,459.41070600,-2446.50805700,9.74788400,0.00000000,0.00000000,179.62238337, .interiorid = 18);
	CreateDynamicObject(2543,461.85641500,-2446.40673800,9.51721200,0.00000000,0.00000000,180.48187735, .interiorid = 18);
	CreateDynamicObject(2543,462.83136000,-2446.40673800,9.51721200,0.00000000,0.00000000,180.48187735, .interiorid = 18);
	CreateDynamicObject(2543,463.80636600,-2446.40673800,9.51721200,0.00000000,0.00000000,180.48187735, .interiorid = 18);
	CreateDynamicObject(2542,466.05529800,-2446.38793900,9.75391500,0.00000000,0.00000000,180.48176276, .interiorid = 18);
	CreateDynamicObject(2542,467.03018200,-2446.38793900,9.75391500,0.00000000,0.00000000,180.48176276, .interiorid = 18);
	CreateDynamicObject(2542,468.00500500,-2446.38793900,9.75391500,0.00000000,0.00000000,180.48176276, .interiorid = 18);
	CreateDynamicObject(2541,474.92309600,-2446.23535200,9.70359800,0.00000000,0.00000000,180.48187735, .interiorid = 18);
	CreateDynamicObject(2541,475.92303500,-2446.23535200,9.70359800,0.00000000,0.00000000,180.48187735, .interiorid = 18);
	CreateDynamicObject(2541,476.89804100,-2446.23535200,9.70359800,0.00000000,0.00000000,180.48187735, .interiorid = 18);
	CreateDynamicObject(2583,479.35000600,-2446.36889600,10.59204000,0.00000000,0.00000000,180.48182006, .interiorid = 18);
	CreateDynamicObject(2582,483.32833900,-2446.33325200,10.62340500,0.00000000,0.00000000,180.48193465, .interiorid = 18);
	CreateDynamicObject(2582,484.80322300,-2446.33325200,10.62340500,0.00000000,0.00000000,180.48193465, .interiorid = 18);
	CreateDynamicObject(2942,487.70999100,-2383.75439500,10.42487400,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(2942,487.70999100,-2382.95752000,10.42487400,0.00000000,0.00000000,-89.38141604, .interiorid = 18);
	CreateDynamicObject(2412,483.72915600,-2378.35742200,9.80765400,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(2412,486.75384500,-2378.35742200,9.80765400,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(14439,475.54144300,-2385.82763700,18.92340100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(14439,475.54144300,-2401.75097700,18.92340100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(14439,475.54144300,-2418.64746100,18.92340100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(14439,475.54144300,-2435.27002000,18.92340100,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(2583,480.82501200,-2446.36889600,10.59204000,0.00000000,0.00000000,180.48182006, .interiorid = 18);
	CreateDynamicObject(7493,488.62420700,-2424.43994100,23.43117500,0.00000000,-180.48210654,180.48182006, .interiorid = 18);
	CreateDynamicObject(994,480.97076400,-2384.01464800,9.89794700,0.00000000,0.00000000,88.52197935, .interiorid = 18);
	CreateDynamicObject(1889,459.35699500,-2393.92797900,9.79353900,0.00000000,0.00000000,0.00000000, .interiorid = 18);
	CreateDynamicObject(1889,463.85675000,-2393.95288100,9.79353900,0.00000000,0.00000000,0.00000000, .interiorid = 18);

	// ATMs
	CreateDynamicObject(2942, 2065.439453125, -1897.5510253906, 13.19670009613, 0, 0, 0);
   	CreateDynamicObject(2942, 1497.7467041016, -1749.8747558594, 15.088212013245, 0, 0, 177.38134765625);
	CreateDynamicObject(2942, 2093.5124511719, -1359.5474853516, 23.62727355957, 0, 0, 0);
	CreateDynamicObject(2942, 1155.6235351563, -1464.9141845703, 15.44321346283, 0, 0, 290.21020507813);
	CreateDynamicObject(2942, 2139.4487304688, -1164.0811767578, 23.63508605957, 0, 0, 91.309509277344);
	CreateDynamicObject(2942, 387.16552734375, -1816.0512695313, 7.4834146499634, 0, 0, 272.48046875);
	CreateDynamicObject(2942, -24.385023117065, -92.001075744629, 1003.1897583008, 0, 0, 180.54052734375);
	CreateDynamicObject(2942, -31.811220169067, -58.106018066406, 1003.1897583008, 0, 0, 181.21594238281);
	CreateDynamicObject(2942, 1212.7785644531, 2.451762676239, 1000.5647583008, 0, 0, 0);
	CreateDynamicObject(2942, 2324.4028320313, -1644.9445800781, 14.469946861267, 0, 0, 0);
	CreateDynamicObject(2942, 2228.39, -1707.78, 13.25, 0.000000, 0.000000, 270.000000); // Ganton Gym ATM
	CreateDynamicObject(2942, 651.19305419922, -520.48815917969, 15.978837013245, 0, 0, 0);
	CreateDynamicObject(2942, 45.78035736084, -291.80926513672, 1.5024013519287, 0, 0, 182.93444824219);
	CreateDynamicObject(2942, 1275.7958984375, 368.31481933594, 19.19758605957, 0, 0, 73.759948730469);
	CreateDynamicObject(2942, 2303.4577636719, -13.539554595947, 26.12727355957, 0, 0, 272.43542480469);
	CreateDynamicObject(2942, 691.08215332031, -618.5625, 15.978837013245, 0, 0, 268.69067382813);
	CreateDynamicObject(2942, 173.23471069336, -155.07606506348, 1.2210245132446, 0, 0, 89.730041503906);
	CreateDynamicObject(2942, 1260.8796386719, 209.30152893066, 19.19758605957, 0, 0, 65.504638671875);
	CreateDynamicObject(2942, 2316.1015625, -88.522567749023, 26.12727355957, 0, 0, 0);

	// Job Pickups
	CreatePickup(1239, 23, 240.4528,112.8529,1003.2188, -1); // Detective job (LS)
	CreatePickup(1239, 23, 1215.1304, -11.8431, 1000.9219, -1); //Whore Registration (LS)
 //	CreatePickup(1239, 23, 378.58, -114.26, 1001.49, -1); // Pizza Boy job (Interior) (LS)
 	CreatePickup(1239, 23, 2166.3772, -1675.3829, 15.0859, -1); // Drug Dealer job
 	CreatePickup(1239, 23, 2354.2808, -1169.2959, 28.0066, -1); //Drug Smuggler (LS)
 	CreatePickup(1239, 23, 1380.8955, -1088.6808, 27.3844, -1); //Lawyer Registration
 	CreatePickup(1239, 23, 2226.1716, -1718.1792, 13.5165, -1); //BodyGuard Registration (LS)
 	CreatePickup(1239, 23, 1099.73, -1504.67, 15.800, -1); //Bodyguard (All Saints Mall) Registration
 	CreatePickup(1239, 23, 1366.4325, -1275.2096, 13.5469, -1); //ArmsDealer Registration (LS)
	CreatePickup(1239, 23, 766.0804, 14.5133, 1000.7004, -1); //Boxer Registration (LS)
	CreatePickup(1239, 23, 758.98, -60.32, 1000.78, -1); //Boxer Registration2 (LS)
    CreatePickup(1239, 23, 502.6696, -11.6603, 1000.6797, -1); //Bartender Registration
    CreatePickup(1239, 23, 2195.8335, -1973.0638, 13.5589, -1); //Craftsman Registration
	CreatePickup(1239, 23, 2330.117675, -2315.346435, 13.546875, -1); //arac Mechanic Registration
 	CreatePickup(1239, 23, 2214.979736, -2661.346923, 13.546875, -1); //Trucker registration
 	CreatePickup(1239, 23, 1679.0898,2340.3586,10.0411, -1); //Tr registion
 	CreatePickup(1239, 23, 1726.8732,2314.3066,10.8203, -1); //tir yukle
	CreateDynamic3DTextLabel("Yk Ykleme Alan\n/tiryukle",COLOR_YELLOW,1726.8732,2314.3066,10.8203+0.5,4.0);// TIR Job (LV)
	CreatePickup(1239, 23, 1942.6814,-1821.7446,13.7095, -1); //imento ie Girme
 	CreatePickup(1239, 23, 1949.4131,-1810.0487,13.7095, -1); //imento yukleme
	CreateDynamic3DTextLabel("Yk Ykleme Alan\n/cimentoyuke",COLOR_YELLOW,1949.4131,-1810.0487,13.7095+0.5,4.0);// imento Job (LS)

 	// Other job pickups
//	CreatePickup(1239, 23, 2104.1999511719, -1787.5999755859, 13.60000038147, -1); // Pizza /pizzaal

	// Job 3D text labels
	CreateDynamic3DTextLabel("{26BFE5}[Dedektiflik Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,240.4528,112.8529,1003.2188+0.5,4.0);// Detective Job (LS)
	CreateDynamic3DTextLabel("{26BFE5}[Hayat Kadn Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,1215.1304,-11.8431,1000.9219+0.5,4.0);// Whore (LS)
	/* CreateDynamic3DTextLabel("{26BFE5}[Pizzaclk Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,378.58, -114.26, 1001.49+0.5,4.0);// Pizza Boy Job (LS)*/
	CreateDynamic3DTextLabel("{26BFE5}[Uyuturucu Satcs Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,2166.3772,-1675.3829,15.0859+0.5,4.0);// Drug Dealer (LS)
	CreateDynamic3DTextLabel("{26BFE5}[Uyuturucu Kaaks Meslei]\ne girmek iin /isegir yazn.",COLOR_WHITE,2354.2808,-1169.2959,28.0066+0.5,4.0);// Drug Smuggler (LS)
    CreateDynamic3DTextLabel("{26BFE5}[Avukatlk Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,1380.8955,-1088.6808,27.3844+0.5,4.0);// Lawyer (LS)
    CreateDynamic3DTextLabel("{26BFE5}[Bodyguard Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,2226.1716,-1718.1792,13.5165+0.5,4.0);// Bodyguard (LS)
    CreateDynamic3DTextLabel("{26BFE5}[Bodyguard Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,1099.73,-1504.67,15.800+0.5,4.0);// Bodyguard (All Saints Mall)
    CreateDynamic3DTextLabel("{26BFE5}[Silah Satcs Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,1366.4325,-1275.2096,13.5469+0.5,4.0);// Gun Job (LS)
    CreateDynamic3DTextLabel("{26BFE5}[Boksr Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,766.0804,14.5133,1000.7004+0.5,4.0);// Boxer
    CreateDynamic3DTextLabel("{26BFE5}[Boksr Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,758.98,-60.32,1000.78+0.5,4.0);// Boxer2
    CreateDynamic3DTextLabel("{26BFE5}[Barmen Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,502.6696,-11.6603,1000.6797+0.5,4.0);// Bartender (Alhambra)
    CreateDynamic3DTextLabel("{26BFE5}[Zanaatkar Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,2195.8335,-1973.0638,13.5589+0.5,4.0);// Craftsman (JUNKYARD LS)
    CreateDynamic3DTextLabel("{26BFE5}[Tamirci Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,2330.117675, -2315.346435, 13.546875+0.5,4.0);// Mechanic (LS)
	CreateDynamic3DTextLabel("{26BFE5}[Kamyonculuk Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,2214.979736, -2661.346923, 13.546875+0.5,4.0);// Trucker Job (LS)
	CreateDynamic3DTextLabel("{26BFE5}[Trci Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,1679.0898,2340.3586,10.0411+0.5,4.0);// TIR Job (LV)
	CreateDynamic3DTextLabel("{26BFE5}[imentocu Meslei]\n{ffffff}e girmek iin /isegir yazn.",COLOR_WHITE,1942.6814,-1821.7446,13.7095+0.5,4.0);// imento Job (LS)

	// Other job 3D text labels
/*	CreateDynamic3DTextLabel("Pizza ve gtrlcek adres iin\n/pizzaal.",COLOR_YELLOW,2104.1999511719, -1787.5999755859, 13.60000038147, 4.0); //pizzaal */
	CreateDynamic3DTextLabel("Dv stilini deitirmek iin \n/egitim yaz.",COLOR_YELLOW,758.43,-78.0,1000.65+0.5,4.0);
	CreateDynamic3DTextLabel("Dv stilini deitirmek iin \n/egitim yaz.",COLOR_YELLOW,756.229125, 5.614504, 1000.698608+0.5,4.0);

	// General 3D text labels
 	CreateDynamic3DTextLabel("Kyafet satn almak iin \n/kiyafetal yaz.",COLOR_YELLOW,208.8970,-100.3289,1005.2578,8.0);
    CreateDynamic3DTextLabel("Kyafet satn almak iin \n/kiyafetal yaz.",COLOR_YELLOW,206.5429,-41.2313,1001.8047,8.0);
    CreateDynamic3DTextLabel("Kyafet satn almak iin \n/kiyafetal yaz.",COLOR_YELLOW,209.3064,-8.3033,1005.2109,8.0);
    CreateDynamic3DTextLabel("Kyafet satn almak iin \n/kiyafetal yaz.",COLOR_YELLOW,159.6771,-83.2866,1001.8120,8.0);
    CreateDynamic3DTextLabel("Kyafet satn almak iin \n/kiyafetal yaz.",COLOR_YELLOW,206.4552,-163.0903,1000.5234,8.0);
    CreateDynamic3DTextLabel("Oyuncak satn almak iin \n/oyuncakal yaz.",COLOR_YELLOW,206.3253,-100.3268,1005.2578,8.0);
    CreateDynamic3DTextLabel("Oyuncak satn almak iin \n/oyuncakal yaz.",COLOR_YELLOW,201.0413,-40.1616,1001.8047,8.0);
    CreateDynamic3DTextLabel("Oyuncak satn almak iin \n/oyuncakal yaz.",COLOR_YELLOW,206.3963,-8.2122,1001.2109,8.0);
    CreateDynamic3DTextLabel("Oyuncak satn almak iin \n/oyuncakal yaz.",COLOR_YELLOW,162.7706,-83.2726,1001.8047,8.0);
    CreateDynamic3DTextLabel("Oyuncak satn almak iin \n/oyuncakal yaz.",COLOR_YELLOW,202.6777,-163.0623,1000.5306,8.0);

	// DMV
 	CreateDynamic3DTextLabel("Cezalarn demek yada balanm\naracn karmak iin\n/dmvmenu",COLOR_YELLOW,833.60, 3.23, 1004.17+0.6,4.0);//

 	//belgeal
 	CreateDynamic3DTextLabel("Belge satn almak iin \n/belgeal yaz.",COLOR_YELLOW,429.070556,128.319992,1008.382812+0.5,8.0);// Licenses.
    CreatePickup(1239, 23, 429.070556,128.319992,1008.382812, -1);

    // The Lubu Gentlemen's Club (pickup + text label)
    CreateDynamic3DTextLabel("Scylla Bar",COLOR_YELLOW,511.817230, -1510.971679, 14.566996+0.7,10.0);
    CreatePickup(1318, 23, 511.817230, -1510.971679, 14.566996, -1);
    // The Tableau Club (pickup + text label)
    CreateDynamic3DTextLabel("Scylla Bar",COLOR_YELLOW,561.802795, -1506.722412, 14.548986+0.7,10.0);
    CreatePickup(1318, 23, 561.802795, -1506.722412, 14.548986, -1);
    CreateDynamic3DTextLabel("Scylla Kulp VIP Odas\nGiri creti:$100",COLOR_YELLOW,307.904296, 1025.602294, 1098.540039+0.7,10.0);
    CreatePickup(1318, 23, 307.904296, 1025.602294, 1098.540039, -1);
    // Santa Maria Surfer's Lounge
    CreateDynamic3DTextLabel("Santa Maria Sorfculerin Yeri",COLOR_YELLOW,387.958374, -1870.688110, 7.835937+0.7,10.0);
    CreatePickup(1318, 23, 387.958374, -1870.688110, 7.835937, -1);

    // Parachute at Startower
    CreateDynamic3DTextLabel("/parasutal",COLOR_YELLOW,1544.2,-1353.4,329.4+0.6,10.0);
   	CreatePickup(371, 23, 1544.2, -1353.4, 329.4); //LS towertop
	CreatePickup(371, 23, 1536.0, -1360.0, 1150.0); //LS towertop

	// Changename
	CreateDynamic3DTextLabel("sim Deitirme Yeri \nsim deitirmek iin /isimdegistir yaz",COLOR_YELLOW,1154.7295,-1440.2323,15.7969+0.6,18.0); // Namechange at mall
	CreatePickup(1239, 23, 1154.7295, -1440.2323, 15.7969); //isimdegistir


    AddStaticVehicleEx(487, -146.6659, 1043.2775, 20.1435, 10.6522, 256, 6, VEHICLE_RESPAWN); // hel

	// Taxi vehicles
	AddStaticVehicleEx(420,1775.6141,-1860.0100,13.2745,269.2006,6,6, VEHICLE_RESPAWN);
	AddStaticVehicleEx(420,1763.0121,-1860.0037,13.2723,271.2998,6,6, VEHICLE_RESPAWN);
	AddStaticVehicleEx(420,1748.9358,-1859.9502,13.2721,270.3943,6,6, VEHICLE_RESPAWN);
	AddStaticVehicleEx(420,1734.6754,-1859.9305,13.2740,270.5646,6,6, VEHICLE_RESPAWN);
	AddStaticVehicleEx(438,1807.70861816,-1866.13635254,13.78153229,0.00000000,6,6,VEHICLE_RESPAWN); //Cabbie
	AddStaticVehicleEx(438,1802.05126953,-1866.05419922,13.78153229,0.00000000,6,6,VEHICLE_RESPAWN); //Cabbie
	AddStaticVehicleEx(438,1797.65332031,-1866.18798828,13.78153229,0.00000000,6,6,VEHICLE_RESPAWN); //Cabbie
	AddStaticVehicleEx(438,1792.40527344,-1866.47851562,13.78153229,0.00000000,6,6,VEHICLE_RESPAWN); //Cabbie

	// Removal of hell hole (VIP Lounge)
	CreateDynamicObject(5397, 1782.96, -1563.40, 20.57,   0.00, 0.00, -4.00);
	CreateDynamicObject(3623, 1756.68, -1578.90, 16.63,   0.00, 0.00, 171.00);
	CreateDynamicObject(9946, 1777.26, -1581.90, 12.23,   0.00, 0.00, 0.00);
	CreateDynamicObject(9946, 1787.87, -1555.69, 12.23,   0.00, 0.00, 0.00);
	CreateDynamicObject(1557, 1781.43, -1564.99, 12.29,   0.00, 0.00, -4.00);
	CreateDynamicObject(1557, 1784.42, -1565.20, 12.29,   0.00, 0.00, 176.00);
	CreateDynamicObject(6057, 1766.17, -1540.20, 13.28,   0.00, 0.00, 180.00);
	CreateDynamicObject(6057, 1798.54, -1541.37, 13.24,   0.00, 0.00, 178.00);
	CreateDynamicObject(9339, 1765.43, -1593.55, 12.08,   0.00, 0.00, 84.00);
	CreateDynamicObject(3660, 1773.95, -1593.39, 14.19,   0.00, 0.00, -4.00);
	CreateDynamicObject(18766, 1821.13, -1537.24, 17.44,   90.00, 0.00, 73.00);
	CreateDynamicObject(18766, 1819.97, -1540.89, 17.44,   90.00, 0.00, 73.00);
	CreateDynamicObject(3623, 1761.02, -1551.50, 16.63,   0.00, 0.00, 171.00);
	/* Temporary tombstone joke
	CreateDynamicObject(5777, 1767.33, -1578.64, 12.99,   0.00, 0.00, -11.00);
	CreateDynamicObject(325, 1767.82, -1578.75, 12.53,   0.00, 76.00, 91.00);
	CreateDynamicObject(325, 1767.73, -1578.79, 12.57,   0.00, 76.00, 271.00);
	CreateDynamicObject(1080, 1767.38, -1579.73, 12.85,   0.00, -25.00, 295.00);
	CreateDynamicObject(971, 1766.63, -1578.56, 12.47,   0.00, 0.00, 80.00);
	CreateDynamic3DTextLabel("Here lays gates, gold rims\nand outrageous advantages\nMay they all rest in HELL",COLOR_BLACK,1767.881835, -1578.757446, 13.347187+0.1,6.0);*/

	// Crack Lab Fixes
	CreateDynamicObject(7191,2338.39135742,-1182.56323242,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(1)
	CreateDynamicObject(13656,2292.93872070,-1132.04724121,1017.29772949,0.00000000,0.00000000,0.00000000, -1, 5); //object(fuckknows)(1)
	CreateDynamicObject(7191,2337.95458984,-1182.54309082,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(2)
	CreateDynamicObject(7191,2338.43408203,-1182.39440918,1032.95129395,90.00000000,180.00000000,90.24850464, -1, 5); //object(vegasnnewfence2b)(3)
	CreateDynamicObject(7191,2337.97314453,-1182.39111328,1032.95129395,90.00000000,179.99450684,90.24719238, -1, 5); //object(vegasnnewfence2b)(4)
	CreateDynamicObject(7191,2328.80346680,-1180.43066406,1034.70544434,0.00000000,270.00000000,88.50006104, -1, 5); //object(vegasnnewfence2b)(5)
	CreateDynamicObject(3055,2319.78198242,-1184.82641602,1032.36450195,63.75003052,269.99996948,178.5001220, -1, 5); //object(kmb_shutter)(1)
	CreateDynamicObject(7191,2328.83715820,-1186.81262207,1030.70446777,0.00000000,90.74990845,359.99481201, -1, 5); //object(vegasnnewfence2b)(6)
	CreateDynamicObject(7191,2326.84863281,-1187.03125000,1030.70446777,0.00000000,90.74707031,359.99450684, -1, 5); //object(vegasnnewfence2b)(8)
	CreateDynamicObject(7191,2337.31689453,-1186.55639648,1030.70446777,0.00000000,90.74707031,359.99450684, -1, 5); //object(vegasnnewfence2b)(9)
	CreateDynamicObject(7191,2339.06689453,-1186.13159180,1030.70446777,0.00000000,91.24694824,359.99453735, -1, 5); //object(vegasnnewfence2b)(10)
	CreateDynamicObject(7191,2338.39062500,-1182.56250000,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(11)
	CreateDynamicObject(7191,2337.95947266,-1179.38879395,1032.95129395,90.00000000,180.00000000,270.00000000, -1, 5); //object(vegasnnewfence2b)(12)
	CreateDynamicObject(7191,2338.38476562,-1179.43066406,1032.95129395,90.00000000,0.00000000,90.00000000, -1, 5); //object(vegasnnewfence2b)(13)
	CreateDynamicObject(7191,2337.96630859,-1179.23559570,1032.95129395,90.00000000,179.99450684,90.24719238, -1, 5); //object(vegasnnewfence2b)(14)

	// Gas station fix
	CreateDynamicObject(970,1942.49000000,-1766.66000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1942.49000000,-1770.81000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1942.49000000,-1774.95000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1942.49000000,-1779.11000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1940.77000000,-1766.66000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1940.77000000,-1770.81000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1940.77000000,-1774.95000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(970,1940.77000000,-1779.11000000,12.90000000,0.00000000,0.00000000,90.00000000);
	CreateDynamicObject(19121,1941.63000000,-1781.03000000,13.16000000,0.00000000,0.00000000,0.00000000);
	CreateDynamicObject(19121,1941.64000000,-1764.87000000,13.16000000,0.00000000,0.00000000,0.00000000);

	// Points
	CreateDynamicObject(970, 2294.1489257813, -1119.072265625, 37.5280418396, 0.000000, 0.000000, 89.559997558594);
	CreateDynamicObject(970, 2294.1589355469, -1114.8975830078, 37.5280418396, 0.000000, 0.000000, 90.0576171875);
	CreateDynamicObject(970, 2294.1552734375, -1110.7277832031, 37.5280418396, 0.000000, 0.000000, 90.054931640625);
	CreateDynamicObject(970, 2294.1496582031, -1106.5516357422, 37.5280418396, 0.000000, 0.000000, 90.054931640625);
	CreateDynamicObject(970, 2293.8994140625, -1102.4005126953, 37.5280418396, 0.000000, 0.000000, 96.804931640625);
	CreateDynamicObject(944, 2290.7561035156, -1103.4783935547, 37.861351013184, 0.000000, 0.000000, 171);
	CreateDynamicObject(3265, 2268.6408691406, -1135.2796630859, 27.531494140625, 0.000000, 0.000000, 346);
	CreateDynamicObject(944, 2386.1618652344, -2008.1566162109, 13.43848991394, 0.000000, 0.000000, 0.000000);
	CreateDynamicObject(1635, 2396.1938476563, -2008.0467529297, 16.3014087677, 0.000000, 0.000000, 90);
	CreateDynamicObject(1522, 2389.7197265625, -2007.4593505859, 12.553703308105, 0.000000, 0.000000, 0.000000);

	// FIX - Stability Glitch for the Welcome
	CreateDynamicObject(4729, 682.85186767578, -446.04205322266, -26.629999160767, 20, 90, 0.000000, -1, 1, -1, 200.0);

	// Admin prison
	CreateDynamicObject(5706,201.06250000,1798.30761719,1605.14282227,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(studiobld03_law) (1)
	CreateDynamicObject(5706,200.97360229,1800.69091797,1624.89306641,0.00000000,180.00000000,180.00000000, .interiorid = 69); //object(studiobld03_law) (2)
	CreateDynamicObject(5706,201.04508972,1785.34130859,1616.89306641,90.00000000,180.00000000,0.00000000, .interiorid = 69); //object(studiobld03_law) (3)
	CreateDynamicObject(5706,187.49099731,1798.58190918,1616.89306641,270.00000000,167.22003174,77.22552490, .interiorid = 69); //object(studiobld03_law) (5)
	CreateDynamicObject(5706,221.26737976,1796.82397461,1616.89306641,270.00000000,0.00000000,90.00000000, .interiorid = 69); //object(studiobld03_law) (6)
	CreateDynamicObject(10974,185.34759521,1795.66455078,1623.84826660,180.00000000,0.00000000,0.00000000, .interiorid = 69); //object(mall_01_sfs) (1)
	CreateDynamicObject(14856,216.09912109,1811.63830566,1610.83496094,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(cellsa) (1)
	CreateDynamicObject(3095,213.05435181,1806.09997559,1612.68823242,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (2)
	CreateDynamicObject(3095,204.07275391,1806.09997559,1612.68823242,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (3)
	CreateDynamicObject(3095,195.12341309,1806.09997559,1612.68823242,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (4)
	CreateDynamicObject(3095,213.12713623,1806.10498047,1613.26379395,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (6)
	CreateDynamicObject(3095,204.15332031,1806.10498047,1613.26379395,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (7)
	CreateDynamicObject(3095,195.16894531,1806.10498047,1613.26379395,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (8)
	CreateDynamicObject(3095,213.20382690,1807.67150879,1608.71374512,90.00000000,180.00549316,269.98904419, .interiorid = 69); //object(a51_jetdoor) (10)
	CreateDynamicObject(3095,213.95382690,1807.67102051,1608.71374512,270.00000000,179.99963379,269.98315430, .interiorid = 69); //object(a51_jetdoor) (11)
	CreateDynamicObject(3095,208.95237732,1807.66687012,1608.71374512,90.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (12)
	CreateDynamicObject(3095,209.71374512,1807.66662598,1608.71374512,270.00000000,180.00041199,269.98388672, .interiorid = 69); //object(a51_jetdoor) (13)
	CreateDynamicObject(3095,205.46282959,1807.69738770,1608.71374512,270.00000000,180.00152588,269.98498535, .interiorid = 69); //object(a51_jetdoor) (15)
	CreateDynamicObject(3095,204.15332031,1807.69628906,1608.98876953,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (16)
	CreateDynamicObject(3095,213.12890625,1807.69628906,1608.98779297,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (17)
	CreateDynamicObject(3095,204.16938782,1809.18554688,1613.41516113,90.00000000,180.00549316,0.00000000, .interiorid = 69); //object(a51_jetdoor) (18)
	CreateDynamicObject(3095,213.16665649,1809.18652344,1613.41442871,90.00000000,180.00549316,0.00000000, .interiorid = 69); //object(a51_jetdoor) (19)
	CreateDynamicObject(1508,217.57765198,1795.53601074,1610.62158203,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(dyn_garage_door) (1)
	CreateDynamicObject(3095,213.95312500,1807.67089844,1617.71423340,270.00000000,179.99450684,269.97802734, .interiorid = 69); //object(a51_jetdoor) (22)
	CreateDynamicObject(3095,213.20312500,1807.67089844,1617.66418457,90.00000000,180.00549316,269.98901367, .interiorid = 69); //object(a51_jetdoor) (23)
	CreateDynamicObject(3095,209.71289062,1807.66601562,1617.38842773,270.00000000,179.99450684,269.97802734, .interiorid = 69); //object(a51_jetdoor) (24)
	CreateDynamicObject(3095,208.95214844,1807.66601562,1617.19018555,90.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (25)
	CreateDynamicObject(3095,205.46191406,1807.67187500,1617.19042969,270.00000000,179.99853516,269.98202515, .interiorid = 69); //object(a51_jetdoor) (26)
	CreateDynamicObject(3095,204.82421875,1807.67285156,1617.76354980,90.00000000,180.00549316,269.98904419, .interiorid = 69); //object(a51_jetdoor) (27)
	CreateDynamicObject(14856,216.09863281,1811.63769531,1615.11096191,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(cellsa) (2)
	CreateDynamicObject(3095,213.12890625,1806.10498047,1617.53784180,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (28)
	CreateDynamicObject(3095,213.05371094,1806.11840820,1616.96350098,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (29)
	CreateDynamicObject(3095,204.17089844,1806.10498047,1616.96374512,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (30)
	CreateDynamicObject(3095,204.14634705,1806.12365723,1617.53930664,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (31)
	CreateDynamicObject(14856,216.09863281,1811.63769531,1619.23608398,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(cellsa) (3)
	CreateDynamicObject(3095,204.16894531,1809.18554688,1622.41491699,90.00000000,179.99450684,0.00549316, .interiorid = 69); //object(a51_jetdoor) (32)
	CreateDynamicObject(3095,213.16601562,1809.18652344,1622.41271973,90.00000000,180.00549316,0.00000000, .interiorid = 69); //object(a51_jetdoor) (33)
	CreateDynamicObject(3095,217.44302368,1806.10583496,1621.96374512,90.00000000,180.00549316,269.98904419, .interiorid = 69); //object(a51_jetdoor) (34)
	CreateDynamicObject(1508,191.36837769,1795.14965820,1610.62158203,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(dyn_garage_door) (2)
	CreateDynamicObject(3095,204.14608765,1806.11840820,1621.06384277,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (35)
	CreateDynamicObject(3095,213.05371094,1806.09960938,1621.06481934,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (36)
	CreateDynamicObject(3095,195.18051147,1807.69628906,1608.98876953,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (37)
	CreateDynamicObject(3095,195.21980286,1809.17871094,1613.41516113,90.00000000,179.99450684,0.01098633, .interiorid = 69); //object(a51_jetdoor) (38)
	CreateDynamicObject(3095,195.21972656,1809.17871094,1622.41491699,90.00000000,179.99450684,0.00549316, .interiorid = 69); //object(a51_jetdoor) (39)
	CreateDynamicObject(3095,199.09042358,1807.69812012,1617.76354980,90.00000000,180.00549316,269.98901367, .interiorid = 69); //object(a51_jetdoor) (40)
	CreateDynamicObject(3095,199.87951660,1807.70117188,1617.19042969,270.00000000,179.99450684,269.98352051, .interiorid = 69); //object(a51_jetdoor) (41)
	CreateDynamicObject(970,211.04483032,1801.64660645,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (1)
	CreateDynamicObject(970,215.34765625,1801.64648438,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (2)
	CreateDynamicObject(970,206.81762695,1801.64660645,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (3)
	CreateDynamicObject(970,202.59719849,1801.64660645,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (4)
	CreateDynamicObject(970,202.59667969,1801.64648438,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (5)
	CreateDynamicObject(970,206.81738281,1801.64648438,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (6)
	CreateDynamicObject(970,211.04394531,1801.64648438,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (7)
	CreateDynamicObject(970,215.34765625,1801.64648438,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (8)
	CreateDynamicObject(970,198.36755371,1801.64660645,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (9)
	CreateDynamicObject(14856,192.71429443,1811.66918945,1610.82006836,0.00000000,0.00000000,180.00000000, .interiorid = 69); //object(cellsa) (4)
	CreateDynamicObject(14856,192.71386719,1811.66894531,1615.09558105,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(cellsa) (5)
	CreateDynamicObject(14856,192.71386719,1811.66894531,1619.24499512,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(cellsa) (6)
	CreateDynamicObject(3095,203.34902954,1807.69787598,1608.71374512,90.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (47)
	CreateDynamicObject(3095,203.34912109,1807.70043945,1616.81311035,90.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (49)
	CreateDynamicObject(3095,199.85475159,1807.69226074,1608.44140625,270.00000000,179.99450684,269.97802734, .interiorid = 69); //object(a51_jetdoor) (52)
	CreateDynamicObject(3095,199.11541748,1807.69702148,1608.26379395,90.00000000,180.00549316,269.98901367, .interiorid = 69); //object(a51_jetdoor) (53)
	CreateDynamicObject(3095,194.85942078,1807.69738770,1617.76354980,90.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (54)
	CreateDynamicObject(3095,195.61764526,1807.69738770,1617.19042969,270.00000000,180.00036621,269.98388672, .interiorid = 69); //object(a51_jetdoor) (55)
	CreateDynamicObject(3095,195.61718750,1807.69726562,1608.51403809,270.00000000,179.99853516,269.98202515, .interiorid = 69); //object(a51_jetdoor) (56)
	CreateDynamicObject(3095,194.85937500,1807.69726562,1608.28735352,90.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (57)
	CreateDynamicObject(3095,195.14624023,1806.11840820,1621.06384277,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (58)
	CreateDynamicObject(3095,195.18821716,1806.10400391,1616.96374512,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(a51_jetdoor) (59)
	CreateDynamicObject(3095,195.15039062,1806.10498047,1617.53930664,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (60)
	CreateDynamicObject(3095,191.34226990,1806.09716797,1617.19042969,270.00000000,179.99853516,269.98205566, .interiorid = 69); //object(a51_jetdoor) (61)
	CreateDynamicObject(3095,191.34179688,1806.09667969,1608.31457520,270.00000000,179.99450684,269.97802734, .interiorid = 69); //object(a51_jetdoor) (62)
	CreateDynamicObject(3095,217.42178345,1806.11962891,1613.11291504,90.00000000,180.00549316,270.00000000, .interiorid = 69); //object(a51_jetdoor) (63)
	CreateDynamicObject(3095,188.47315979,1797.14782715,1613.26379395,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (64)
	CreateDynamicObject(3095,188.47315979,1788.17077637,1613.26379395,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (65)
	CreateDynamicObject(3095,188.47265625,1797.14746094,1617.53979492,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (66)
	CreateDynamicObject(3095,188.47265625,1788.16992188,1617.53881836,0.00000000,179.99450684,270.00000000, .interiorid = 69); //object(a51_jetdoor) (67)
	CreateDynamicObject(3095,188.48295593,1797.18103027,1612.68823242,0.00000000,0.00000000,180.00000000, .interiorid = 69); //object(a51_jetdoor) (68)
	CreateDynamicObject(3095,188.48242188,1797.18066406,1616.96374512,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(a51_jetdoor) (69)
	CreateDynamicObject(3095,188.47740173,1788.21972656,1616.96374512,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(a51_jetdoor) (70)
	CreateDynamicObject(3095,188.47656250,1788.21972656,1612.68920898,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(a51_jetdoor) (71)
	CreateDynamicObject(970,195.12841797,1801.67028809,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (10)
	CreateDynamicObject(970,198.36718750,1801.64648438,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (12)
	CreateDynamicObject(970,195.12792969,1801.66992188,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (13)
	CreateDynamicObject(970,192.93154907,1799.55737305,1613.81237793,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(fencesmallb) (14)
	CreateDynamicObject(970,192.93154907,1795.31909180,1613.81237793,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(fencesmallb) (15)
	CreateDynamicObject(970,192.93066406,1799.55664062,1618.06286621,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(fencesmallb) (17)
	CreateDynamicObject(970,192.93066406,1795.31835938,1618.06286621,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(fencesmallb) (18)
	CreateDynamicObject(3095,197.45889282,1786.73498535,1612.68823242,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(a51_jetdoor) (72)
	CreateDynamicObject(970,192.90052795,1793.24084473,1613.81237793,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(fencesmallb) (19)
	CreateDynamicObject(3095,197.48855591,1786.73596191,1613.26379395,0.00000000,180.00000000,0.00000000, .interiorid = 69); //object(a51_jetdoor) (73)
	CreateDynamicObject(3095,197.48828125,1786.73535156,1617.53601074,0.00000000,179.99450684,0.00000000, .interiorid = 69); //object(a51_jetdoor) (74)
	CreateDynamicObject(3095,197.45800781,1786.73437500,1616.96301270,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(a51_jetdoor) (76)
	CreateDynamicObject(3095,206.43820190,1786.73596191,1613.26379395,0.00000000,179.99450684,0.00000000, .interiorid = 69); //object(a51_jetdoor) (77)
	CreateDynamicObject(3095,206.42300415,1786.73400879,1612.68823242,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(a51_jetdoor) (78)
	CreateDynamicObject(970,192.90039062,1793.24023438,1618.06286621,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(fencesmallb) (20)
	CreateDynamicObject(970,195.08341980,1791.18090820,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (21)
	CreateDynamicObject(970,199.35119629,1791.18090820,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (22)
	CreateDynamicObject(970,203.61909485,1791.18090820,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (23)
	CreateDynamicObject(970,207.91763306,1791.18090820,1613.81237793,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (24)
	CreateDynamicObject(970,195.08300781,1791.18066406,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (25)
	CreateDynamicObject(970,199.35058594,1791.18066406,1618.06286621,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(fencesmallb) (26)
	CreateDynamicObject(12950,214.32031250,1789.71875000,1609.79418945,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(cos_sbanksteps03) (1)
	CreateDynamicObject(12950,205.98063660,1789.62817383,1614.14453125,0.00000000,0.00000000,90.00000000, .interiorid = 69); //object(cos_sbanksteps03) (2)
	CreateDynamicObject(3095,206.42285156,1786.73339844,1612.46301270,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(a51_jetdoor) (80)
	CreateDynamicObject(3095,206.44000244,1786.72985840,1613.03833008,0.00000000,179.99450684,0.00000000, .interiorid = 69); //object(a51_jetdoor) (82)
	CreateDynamicObject(3095,206.40036011,1789.18249512,1607.96301270,90.00000000,180.00000000,180.00000000, .interiorid = 69); //object(a51_jetdoor) (83)
	CreateDynamicObject(3095,210.93899536,1786.74987793,1608.16320801,90.00000000,179.99450684,90.01101685, .interiorid = 69); //object(a51_jetdoor) (84)
	CreateDynamicObject(3095,210.35997009,1786.72998047,1608.18823242,90.00000000,180.00549316,269.98904419, .interiorid = 69); //object(a51_jetdoor) (85)
	CreateDynamicObject(3095,206.40390015,1791.20959473,1605.71276855,90.00000000,179.99450684,179.99450684, .interiorid = 69); //object(a51_jetdoor) (86)
	CreateDynamicObject(3095,202.45399475,1786.74548340,1608.16320801,90.00000000,179.99450684,90.01098633, .interiorid = 69); //object(a51_jetdoor) (87)
	CreateDynamicObject(3095,201.88999939,1786.72998047,1608.18823242,90.00000000,180.00549316,269.98901367, .interiorid = 69); //object(a51_jetdoor) (88)
	CreateDynamicObject(1779,209.17303467,1789.21142578,1610.04138184,0.00000000,0.00000000,180.00000000, .interiorid = 69); //object(cj_ticketmachine) (1)
	CreateDynamicObject(1779,208.34777832,1789.21301270,1610.04138184,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(cj_ticketmachine) (2)
	CreateDynamicObject(1649,208.50978088,1790.75683594,1610.97937012,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(wglasssmash) (1)
	CreateDynamicObject(1649,208.68554688,1790.97949219,1610.97937012,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(wglasssmash) (2)
	CreateDynamicObject(1649,204.25000000,1790.98034668,1610.97937012,0.00000000,0.00000000,179.99450684, .interiorid = 69); //object(wglasssmash) (4)
	CreateDynamicObject(1649,204.12200928,1790.77050781,1610.97937012,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(wglasssmash) (5)
	CreateDynamicObject(1671,207.08955383,1789.63757324,1609.42346191,0.00000000,0.00000000,170.00000000, .interiorid = 69); //object(swivelchair_a) (1)
	CreateDynamicObject(1671,204.79295349,1789.67260742,1609.42346191,0.00000000,0.00000000,181.99694824, .interiorid = 69); //object(swivelchair_a) (2)
	CreateDynamicObject(1886,192.97596741,1791.22827148,1612.89184570,0.00000000,0.00000000,122.00000000, .interiorid = 69); //object(shop_sec_cam) (1)
	CreateDynamicObject(1886,192.97558594,1791.22753906,1617.09228516,0.00000000,0.00000000,149.99768066, .interiorid = 69); //object(shop_sec_cam) (2)
	CreateDynamicObject(1886,191.98481750,1789.51403809,1621.04223633,30.00000000,0.00000000,119.99633789, .interiorid = 69); //object(shop_sec_cam) (3)
	CreateDynamicObject(1886,216.65586853,1790.06823730,1621.04223633,29.99816895,0.00000000,219.99270630, .interiorid = 69); //object(shop_sec_cam) (4)
	CreateDynamicObject(1886,191.82667542,1802.56311035,1621.16735840,11.00000000,0.00000000,82.26770020, .interiorid = 69); //object(shop_sec_cam) (5)
	CreateDynamicObject(1886,191.82617188,1802.56250000,1617.04248047,10.99731445,0.00000000,82.26562500, .interiorid = 69); //object(shop_sec_cam) (6)
	CreateDynamicObject(1886,191.82617188,1802.56250000,1612.81799316,10.99731445,0.00000000,82.26562500, .interiorid = 69); //object(shop_sec_cam) (7)
	CreateDynamicObject(2163,203.82183838,1791.07727051,1609.16345215,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(med_office_unit_2) (1)
	CreateDynamicObject(2163,206.70214844,1791.09375000,1609.16345215,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(med_office_unit_2) (2)
	CreateDynamicObject(2949,201.87556458,1790.66833496,1608.96325684,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(kmb_lockeddoor) (1)
	CreateDynamicObject(2949,202.47567749,1789.17675781,1608.96325684,0.00000000,0.00000000,179.99993896, .interiorid = 69); //object(kmb_lockeddoor) (2)
	CreateDynamicObject(2611,205.84300232,1789.22143555,1610.90124512,0.00000000,0.00000000,180.00000000, .interiorid = 69); //object(police_nb1) (1)
	CreateDynamicObject(2606,210.55937195,1789.67712402,1611.38903809,0.00000000,0.00000000,270.00000000, .interiorid = 69); //object(cj_police_counter2) (1)
	CreateDynamicObject(2606,210.55859375,1789.67675781,1611.86450195,0.00000000,0.00000000,269.99450684, .interiorid = 69); //object(cj_police_counter2) (2)
	CreateDynamicObject(1800,214.45210266,1805.61340332,1617.53454590,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (3)
	CreateDynamicObject(1800,210.21595764,1805.59899902,1617.53454590,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (4)
	CreateDynamicObject(1800,205.95664978,1805.66284180,1617.53454590,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (5)
	CreateDynamicObject(1800,200.50657654,1805.64892578,1617.53454590,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (6)
	CreateDynamicObject(1800,196.11277771,1805.65185547,1617.53454590,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (7)
	CreateDynamicObject(1800,191.83377075,1805.65478516,1617.53454590,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (8)
	CreateDynamicObject(1800,214.45761108,1805.68225098,1613.26037598,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (9)
	CreateDynamicObject(1800,210.19975281,1805.67297363,1613.26037598,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (10)
	CreateDynamicObject(1800,205.95896912,1805.70129395,1613.26037598,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (11)
	CreateDynamicObject(1800,200.48924255,1805.69775391,1613.26037598,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (12)
	CreateDynamicObject(1800,196.09724426,1805.65148926,1613.26037598,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (13)
	CreateDynamicObject(1800,191.82055664,1805.65979004,1613.26037598,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (14)
	CreateDynamicObject(1800,214.42187500,1805.65441895,1608.98449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (15)
	CreateDynamicObject(1800,210.21253967,1805.68786621,1608.98449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (16)
	CreateDynamicObject(1800,205.94084167,1805.60290527,1608.98449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (17)
	CreateDynamicObject(1800,205.94042969,1805.60253906,1609.93542480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (18)
	CreateDynamicObject(1800,210.21191406,1805.68750000,1609.93542480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (19)
	CreateDynamicObject(1800,200.50958252,1805.69555664,1608.98449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (20)
	CreateDynamicObject(1800,200.50878906,1805.69531250,1609.96044922,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (21)
	CreateDynamicObject(1800,196.10487366,1805.67517090,1608.98449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (22)
	CreateDynamicObject(1800,196.10449219,1805.67480469,1609.96044922,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (23)
	CreateDynamicObject(1800,191.86831665,1805.67456055,1608.98449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (24)
	CreateDynamicObject(1800,191.86816406,1805.67382812,1609.93542480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (25)
	CreateDynamicObject(1800,214.42187500,1805.65429688,1609.93542480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (26)
	CreateDynamicObject(1800,214.45703125,1805.68164062,1614.23632812,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (27)
	CreateDynamicObject(1800,210.19921875,1805.67285156,1614.23632812,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (28)
	CreateDynamicObject(1800,205.95800781,1805.70117188,1614.21130371,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (29)
	CreateDynamicObject(1800,200.48828125,1805.69726562,1614.23535156,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (30)
	CreateDynamicObject(1800,196.09667969,1805.65136719,1614.18627930,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (31)
	CreateDynamicObject(1800,191.82031250,1805.65917969,1614.23632812,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (32)
	CreateDynamicObject(1800,191.83300781,1805.65429688,1618.50952148,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (33)
	CreateDynamicObject(1800,196.11230469,1805.65136719,1618.48498535,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (34)
	CreateDynamicObject(1800,200.50585938,1805.64843750,1618.51049805,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (35)
	CreateDynamicObject(1800,205.95605469,1805.66210938,1618.48449707,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (36)
	CreateDynamicObject(1800,210.21582031,1805.59863281,1618.51049805,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (37)
	CreateDynamicObject(1800,214.45117188,1805.61328125,1618.48547363,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(low_bed_1) (38)
	CreateDynamicObject(2774,204.40760803,1803.95361328,1619.56640625,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(cj_airp_pillars) (1)
	CreateDynamicObject(2602,194.12474060,1808.81152344,1613.78393555,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (1)
	CreateDynamicObject(2602,198.33770752,1808.81555176,1613.78393555,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (2)
	CreateDynamicObject(2602,202.66923523,1808.81469727,1613.78393555,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (3)
	CreateDynamicObject(2602,208.20339966,1808.82031250,1613.78393555,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (4)
	CreateDynamicObject(2602,212.51039124,1808.82153320,1613.78393555,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (5)
	CreateDynamicObject(2602,216.61041260,1808.82446289,1613.78393555,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (7)
	CreateDynamicObject(2602,216.61035156,1808.82421875,1618.06042480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (8)
	CreateDynamicObject(2602,212.43417358,1808.79223633,1618.06042480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (9)
	CreateDynamicObject(2602,208.18164062,1808.78283691,1618.06042480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (10)
	CreateDynamicObject(2602,202.55258179,1808.80847168,1618.06042480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (11)
	CreateDynamicObject(2602,198.22427368,1808.81884766,1618.06042480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (12)
	CreateDynamicObject(2602,194.07098389,1808.83593750,1618.06042480,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (13)
	CreateDynamicObject(2602,194.07031250,1808.83593750,1609.50891113,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (15)
	CreateDynamicObject(2602,198.34811401,1808.82019043,1609.50891113,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (16)
	CreateDynamicObject(2602,202.64959717,1808.82995605,1609.50891113,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (17)
	CreateDynamicObject(2602,208.22689819,1808.85144043,1609.50891113,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (18)
	CreateDynamicObject(2602,212.45510864,1808.80895996,1609.50891113,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (19)
	CreateDynamicObject(2602,216.65698242,1808.81689453,1609.50891113,0.00000000,0.00000000,0.00000000, .interiorid = 69); //object(police_cell_toilet) (20)
	CreateDynamicObject(3388,204.12251282,1788.69470215,1608.96325684,0.00000000,0.00000000,270.00000000, .interiorid = 69); //object(a51_srack4_) (1)

	//Anim stopper message
txtAnimHelper = TextDrawCreate(163.411926, 379.000061, "~y~Animasyonu durdurmak icin ~r~~k~~PED_SPRINT~ ~y~tusuna basiniz.");
TextDrawLetterSize(txtAnimHelper, 0.400000, 1.600000);
TextDrawAlignment(txtAnimHelper, 0);
TextDrawColor(txtAnimHelper, -5373697);
TextDrawSetShadow(txtAnimHelper, 1);
TextDrawSetOutline(txtAnimHelper, 0);
TextDrawBackgroundColor(txtAnimHelper, 255);
TextDrawFont(txtAnimHelper, 1);
TextDrawSetProportional(txtAnimHelper, 1);
TextDrawSetShadow(txtAnimHelper, 1);


	// -----------------------------------------------------------------------
	//                                         SA ALT TEXTDRAW
	// ----------------------------------------------------------------------
	

TDEditor_TD[0] = TextDrawCreate(564.823364, 416.916473, "MASTER");
TextDrawLetterSize(TDEditor_TD[0], 0.237647, 2.130832);
TextDrawAlignment(TDEditor_TD[0], 2);
TextDrawColor(TDEditor_TD[0], -5373697);
TextDrawSetShadow(TDEditor_TD[0], 0);
TextDrawSetOutline(TDEditor_TD[0], 0);
TextDrawBackgroundColor(TDEditor_TD[0], 255);
TextDrawFont(TDEditor_TD[0], 2);
TextDrawSetProportional(TDEditor_TD[0], 1);
TextDrawSetShadow(TDEditor_TD[0], 0);
TextDrawSetSelectable(TDEditor_TD[0], true);

TDEditor_TD[1] = TextDrawCreate(602.470825, 416.333374, "ROLEPLAY");
TextDrawLetterSize(TDEditor_TD[1], 0.208470, 2.276666);
TextDrawAlignment(TDEditor_TD[1], 2);
TextDrawColor(TDEditor_TD[1], 1023);
TextDrawSetShadow(TDEditor_TD[1], 0);
TextDrawSetOutline(TDEditor_TD[1], 0);
TextDrawBackgroundColor(TDEditor_TD[1], 255);
TextDrawFont(TDEditor_TD[1], 2);
TextDrawSetProportional(TDEditor_TD[1], 1);
TextDrawSetShadow(TDEditor_TD[1], 0);
TextDrawSetSelectable(TDEditor_TD[1], true);

TDEditor_TD[2] = TextDrawCreate(552.117614, 433.833312, "WWW.SR-RP.NET");
TextDrawLetterSize(TDEditor_TD[2], 0.228705, 1.232500);
TextDrawAlignment(TDEditor_TD[2], 1);
TextDrawColor(TDEditor_TD[2], -1);
TextDrawSetShadow(TDEditor_TD[2], 0);
TextDrawSetOutline(TDEditor_TD[2], 0);
TextDrawBackgroundColor(TDEditor_TD[2], 255);
TextDrawFont(TDEditor_TD[2], 2);
TextDrawSetProportional(TDEditor_TD[2], 1);
TextDrawSetShadow(TDEditor_TD[2], 0);
TextDrawSetSelectable(TDEditor_TD[2], true);
	

	
	
	// -----------------------------------[SA ALT TEXTDRAW BT]-------------------------------------

// giri textdraw

//Global TextDraws:



giristxt[0] = TextDrawCreate(-0.352944, 332.333160, "box");
TextDrawLetterSize(giristxt[0], 0.000000, 12.211766);
TextDrawTextSize(giristxt[0], 646.000000, 0.000000);
TextDrawAlignment(giristxt[0], 1);
TextDrawColor(giristxt[0], -186);
TextDrawUseBox(giristxt[0], 1);
TextDrawBoxColor(giristxt[0], 183);
TextDrawSetShadow(giristxt[0], 2);
TextDrawSetOutline(giristxt[0], 0);
TextDrawBackgroundColor(giristxt[0], 86);
TextDrawFont(giristxt[0], 1);
TextDrawSetProportional(giristxt[0], 1);
TextDrawSetShadow(giristxt[0], 2);
TextDrawSetSelectable(giristxt[0], true);

giristxt[1] = TextDrawCreate(0.588234, 2.166484, "box");
TextDrawLetterSize(giristxt[1], 0.000000, 12.211766);
TextDrawTextSize(giristxt[1], 646.000000, 0.000000);
TextDrawAlignment(giristxt[1], 1);
TextDrawColor(giristxt[1], -186);
TextDrawUseBox(giristxt[1], 1);
TextDrawBoxColor(giristxt[1], 145);
TextDrawSetShadow(giristxt[1], 2);
TextDrawSetOutline(giristxt[1], 0);
TextDrawBackgroundColor(giristxt[1], 86);
TextDrawFont(giristxt[1], 1);
TextDrawSetProportional(giristxt[1], 1);
TextDrawSetShadow(giristxt[1], 2);
TextDrawSetSelectable(giristxt[1], true);

giristxt[2] = TextDrawCreate(306.317657, 12.083314, "Master");
TextDrawLetterSize(giristxt[2], 0.470586, 4.557497);
TextDrawAlignment(giristxt[2], 2);
TextDrawColor(giristxt[2], 16777215);
TextDrawSetShadow(giristxt[2], 1);
TextDrawSetOutline(giristxt[2], 0);
TextDrawBackgroundColor(giristxt[2], 255);
TextDrawFont(giristxt[2], 3);
TextDrawSetProportional(giristxt[2], 1);
TextDrawSetShadow(giristxt[2], 1);

giristxt[3] = TextDrawCreate(313.829284, 70.233253, "2017");
TextDrawLetterSize(giristxt[3], 0.417410, 3.425832);
TextDrawAlignment(giristxt[3], 1);
TextDrawColor(giristxt[3], 16763647);
TextDrawSetShadow(giristxt[3], 0);
TextDrawSetOutline(giristxt[3], 0);
TextDrawBackgroundColor(giristxt[3], 255);
TextDrawFont(giristxt[3], 2);
TextDrawSetProportional(giristxt[3], 1);
TextDrawSetShadow(giristxt[3], 0);

giristxt[4] = TextDrawCreate(-13.999997, 114.750015, "box");
TextDrawLetterSize(giristxt[4], 0.000000, -0.164706);
TextDrawTextSize(giristxt[4], 795.000000, 0.000000);
TextDrawAlignment(giristxt[4], 1);
TextDrawColor(giristxt[4], -1);
TextDrawUseBox(giristxt[4], 1);
TextDrawBoxColor(giristxt[4], -12779265);
TextDrawSetShadow(giristxt[4], 0);
TextDrawSetOutline(giristxt[4], 0);
TextDrawBackgroundColor(giristxt[4], 255);
TextDrawFont(giristxt[4], 1);
TextDrawSetProportional(giristxt[4], 1);
TextDrawSetShadow(giristxt[4], 0);

giristxt[5] = TextDrawCreate(-6.941173, 332.333343, "box");
TextDrawLetterSize(giristxt[5], 0.000000, -0.164706);
TextDrawTextSize(giristxt[5], 800.000000, 0.000000);
TextDrawAlignment(giristxt[5], 1);
TextDrawColor(giristxt[5], -1);
TextDrawUseBox(giristxt[5], 1);
TextDrawBoxColor(giristxt[5], -12779265);
TextDrawSetShadow(giristxt[5], 0);
TextDrawSetOutline(giristxt[5], 0);
TextDrawBackgroundColor(giristxt[5], 255);
TextDrawFont(giristxt[5], 1);
TextDrawSetProportional(giristxt[5], 1);
TextDrawSetShadow(giristxt[5], 0);

giristxt[6] = TextDrawCreate(70.133735, 373.066772, "Teamspeak3:");
TextDrawLetterSize(giristxt[6], 0.400000, 1.600000);
TextDrawAlignment(giristxt[6], 1);
TextDrawColor(giristxt[6], 402653183);
TextDrawSetShadow(giristxt[6], 1);
TextDrawSetOutline(giristxt[6], 0);
TextDrawBackgroundColor(giristxt[6], 255);
TextDrawFont(giristxt[6], 1);
TextDrawSetProportional(giristxt[6], 1);
TextDrawSetShadow(giristxt[6], 1);

giristxt[7] = TextDrawCreate(159.927444, 373.066680, "185.169.52.193");
TextDrawLetterSize(giristxt[7], 0.400000, 1.600000);
TextDrawAlignment(giristxt[7], 1);
TextDrawColor(giristxt[7], -1);
TextDrawSetShadow(giristxt[7], 0);
TextDrawSetOutline(giristxt[7], 0);
TextDrawBackgroundColor(giristxt[7], 255);
TextDrawFont(giristxt[7], 1);
TextDrawSetProportional(giristxt[7], 1);
TextDrawSetShadow(giristxt[7], 0);

giristxt[8] = TextDrawCreate(394.851867, 370.833282, "Website:");
TextDrawLetterSize(giristxt[8], 0.400000, 1.600000);
TextDrawAlignment(giristxt[8], 1);
TextDrawColor(giristxt[8], 402653183);
TextDrawSetShadow(giristxt[8], 1);
TextDrawSetOutline(giristxt[8], 0);
TextDrawBackgroundColor(giristxt[8], 255);
TextDrawFont(giristxt[8], 1);
TextDrawSetProportional(giristxt[8], 1);
TextDrawSetShadow(giristxt[8], 1);

giristxt[9] = TextDrawCreate(454.469665, 370.916687, "www.sr-roleplay.net(DEAKTIF)");
TextDrawLetterSize(giristxt[9], 0.400000, 1.600000);
TextDrawAlignment(giristxt[9], 1);
TextDrawColor(giristxt[9], -1);
TextDrawSetShadow(giristxt[9], 0);
TextDrawSetOutline(giristxt[9], 0);
TextDrawBackgroundColor(giristxt[9], 255);
TextDrawFont(giristxt[9], 1);
TextDrawSetProportional(giristxt[9], 1);
TextDrawSetShadow(giristxt[9], 0);

giristxt[10] = TextDrawCreate(368.099731, 26.966667, "Roleplay");
TextDrawLetterSize(giristxt[10], 0.470586, 4.557497);
TextDrawAlignment(giristxt[10], 2);
TextDrawColor(giristxt[10], -167772161);
TextDrawSetShadow(giristxt[10], 1);
TextDrawSetOutline(giristxt[10], 0);
TextDrawBackgroundColor(giristxt[10], 255);
TextDrawFont(giristxt[10], 3);
TextDrawSetProportional(giristxt[10], 1);
TextDrawSetShadow(giristxt[10], 1);


	//------------------------------------------------------------------------------------------------------------
	// Tutorial text draws
    //------------------------------------------------------------------------------------------------------------


	TutTxtDraw[0] = TextDrawCreate(487.000000, 303.000000, "'");
	TextDrawBackgroundColor(TutTxtDraw[0], 255);
	TextDrawFont(TutTxtDraw[0], 2);
	TextDrawLetterSize(TutTxtDraw[0], 0.000000, 12.800003);
	TextDrawColor(TutTxtDraw[0], -1061109505);
	TextDrawSetOutline(TutTxtDraw[0], 0);
	TextDrawSetProportional(TutTxtDraw[0], 1);
	TextDrawSetShadow(TutTxtDraw[0], 1);
	TextDrawUseBox(TutTxtDraw[0], 1);
	TextDrawBoxColor(TutTxtDraw[0], 170);
	TextDrawTextSize(TutTxtDraw[0], 146.000000, 45.000000);

	TutTxtDraw[1] = TextDrawCreate(487.000000, 303.000000, "'");
	TextDrawBackgroundColor(TutTxtDraw[1], 255);
	TextDrawFont(TutTxtDraw[1], 1);
	TextDrawLetterSize(TutTxtDraw[1], 0.000000, -1.000000);
	TextDrawColor(TutTxtDraw[1], -1);
	TextDrawSetOutline(TutTxtDraw[1], 0);
	TextDrawSetProportional(TutTxtDraw[1], 1);
	TextDrawSetShadow(TutTxtDraw[1], 1);
	TextDrawUseBox(TutTxtDraw[1], 1);
	TextDrawBoxColor(TutTxtDraw[1], 255);
	TextDrawTextSize(TutTxtDraw[1], 146.000000, -2.000000);

	TutTxtDraw[2] = TextDrawCreate(487.000000, 427.000000, "'");
	TextDrawBackgroundColor(TutTxtDraw[2], 255);
	TextDrawFont(TutTxtDraw[2], 1);
	TextDrawLetterSize(TutTxtDraw[2], 0.000000, -1.000000);
	TextDrawColor(TutTxtDraw[2], -1);
	TextDrawSetOutline(TutTxtDraw[2], 0);
	TextDrawSetProportional(TutTxtDraw[2], 1);
	TextDrawSetShadow(TutTxtDraw[2], 1);
	TextDrawUseBox(TutTxtDraw[2], 1);
	TextDrawBoxColor(TutTxtDraw[2], 255);
	TextDrawTextSize(TutTxtDraw[2], 146.000000, -2.000000);

	TutTxtDraw[3] = TextDrawCreate(147.000000, 299.000000, "'");
	TextDrawBackgroundColor(TutTxtDraw[3], 255);
	TextDrawFont(TutTxtDraw[3], 1);
	TextDrawLetterSize(TutTxtDraw[3], 0.000000, 13.600002);
	TextDrawColor(TutTxtDraw[3], -1);
	TextDrawSetOutline(TutTxtDraw[3], 0);
	TextDrawSetProportional(TutTxtDraw[3], 1);
	TextDrawSetShadow(TutTxtDraw[3], 1);
	TextDrawUseBox(TutTxtDraw[3], 1);
	TextDrawBoxColor(TutTxtDraw[3], 255);
	TextDrawTextSize(TutTxtDraw[3], 146.000000, 28.000000);

	TutTxtDraw[4] = TextDrawCreate(487.000000, 299.000000, "'");
	TextDrawBackgroundColor(TutTxtDraw[4], 255);
	TextDrawFont(TutTxtDraw[4], 1);
	TextDrawLetterSize(TutTxtDraw[4], 0.000000, 13.600002);
	TextDrawColor(TutTxtDraw[4], -1);
	TextDrawSetOutline(TutTxtDraw[4], 0);
	TextDrawSetProportional(TutTxtDraw[4], 1);
	TextDrawSetShadow(TutTxtDraw[4], 1);
	TextDrawUseBox(TutTxtDraw[4], 1);
	TextDrawBoxColor(TutTxtDraw[4], 255);
	TextDrawTextSize(TutTxtDraw[4], 486.000000, 34.000000);

	TutTxtDraw[5] = TextDrawCreate(165.000000, 301.000000, "~b~~h~~h~~h~Master RPG Tanitim");
	TextDrawBackgroundColor(TutTxtDraw[5], 255);
	TextDrawFont(TutTxtDraw[5], 2);
	TextDrawLetterSize(TutTxtDraw[5], 0.500000, 2.200000);
	TextDrawColor(TutTxtDraw[5], -5963521);
	TextDrawSetOutline(TutTxtDraw[5], 0);
	TextDrawSetProportional(TutTxtDraw[5], 1);
	TextDrawSetShadow(TutTxtDraw[5], 3);

	//
	// FIRST TUTORIAL TEXT
	//

	TutTxtDraw[6] = TextDrawCreate(166.000000, 331.000000, "Master Roleplay ' a hosgeldiniz. Burasi bir Roleplay serveridir.");
	TextDrawBackgroundColor(TutTxtDraw[6], 255);
	TextDrawFont(TutTxtDraw[6], 1);
	TextDrawLetterSize(TutTxtDraw[6], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[6], -1);
	TextDrawSetOutline(TutTxtDraw[6], 0);
	TextDrawSetProportional(TutTxtDraw[6], 1);
	TextDrawSetShadow(TutTxtDraw[6], 2);

	TutTxtDraw[7] = TextDrawCreate(166.000000, 344.000000, "Kendinize bir karakter belirlemeniz gerekmektedir. Polis, devlet adami normal bir insan,");
	TextDrawBackgroundColor(TutTxtDraw[7], 255);
	TextDrawFont(TutTxtDraw[7], 1);
	TextDrawLetterSize(TutTxtDraw[7], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[7], -1);
	TextDrawSetOutline(TutTxtDraw[7], 0);
	TextDrawSetProportional(TutTxtDraw[7], 1);
	TextDrawSetShadow(TutTxtDraw[7], 2);

	TutTxtDraw[8] = TextDrawCreate(166.000000, 368.000000, "cete uyesi bile olabilirsin. Ayrica rol karakterini gercek hayattan ayirmalisin,");
	TextDrawBackgroundColor(TutTxtDraw[8], 255);
	TextDrawFont(TutTxtDraw[8], 1);
	TextDrawLetterSize(TutTxtDraw[8], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[8], -1);
	TextDrawSetOutline(TutTxtDraw[8], 0);
	TextDrawSetProportional(TutTxtDraw[8], 1);
	TextDrawSetShadow(TutTxtDraw[8], 2);

	TutTxtDraw[9] = TextDrawCreate(166.000000, 381.000000, "biz bunu IC (Karakter ici) ve OOC(karakter disi) olarak,");
	TextDrawBackgroundColor(TutTxtDraw[9], 255);
	TextDrawFont(TutTxtDraw[9], 1);
	TextDrawLetterSize(TutTxtDraw[9], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[9], -1);
	TextDrawSetOutline(TutTxtDraw[9], 0);
	TextDrawSetProportional(TutTxtDraw[9], 1);
	TextDrawSetShadow(TutTxtDraw[9], 2);

	TutTxtDraw[10] = TextDrawCreate(166.000000, 394.000000, "ikiye ayiriyoruz, bu cok onemlidir, o yuzden ikisini bir tutmayin.");
	TextDrawBackgroundColor(TutTxtDraw[10], 255);
	TextDrawFont(TutTxtDraw[10], 1);
	TextDrawLetterSize(TutTxtDraw[10], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[10], -1);
	TextDrawSetOutline(TutTxtDraw[10], 0);
	TextDrawSetProportional(TutTxtDraw[10], 1);
	TextDrawSetShadow(TutTxtDraw[10], 2);

	//
	// SECOND TUTORIAL TEXT
	//

	TutTxtDraw[11] = TextDrawCreate(166.000000, 331.000000, "Master RP'de para kazanilabilecek bir suru meslek bulunmaktadir,");
	TextDrawBackgroundColor(TutTxtDraw[11], 255);
	TextDrawFont(TutTxtDraw[11], 1);
	TextDrawLetterSize(TutTxtDraw[11], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[11], -1);
	TextDrawSetOutline(TutTxtDraw[11], 0);
	TextDrawSetProportional(TutTxtDraw[11], 1);
	TextDrawSetShadow(TutTxtDraw[11], 2);

	TutTxtDraw[12] = TextDrawCreate(166.000000, 344.000000, "hizli ancak az para icin pizzacilik, yavas ama cok para icin ise kamyoncu olmanizi oneririz.");
	TextDrawBackgroundColor(TutTxtDraw[12], 255);
	TextDrawFont(TutTxtDraw[12], 1);
	TextDrawLetterSize(TutTxtDraw[12], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[12], -1);
	TextDrawSetOutline(TutTxtDraw[12], 0);
	TextDrawSetProportional(TutTxtDraw[12], 1);
	TextDrawSetShadow(TutTxtDraw[12], 2);

	TutTxtDraw[13] = TextDrawCreate(166.000000, 357.000000, "Mesleklerin yerlerini ~r~/meslekbul~w~ komutuyla ogrenebilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[13], 255);
	TextDrawFont(TutTxtDraw[13], 1);
	TextDrawLetterSize(TutTxtDraw[13], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[13], -1);
	TextDrawSetOutline(TutTxtDraw[13], 0);
	TextDrawSetProportional(TutTxtDraw[13], 1);
	TextDrawSetShadow(TutTxtDraw[13], 2);

	TutTxtDraw[14] = TextDrawCreate(166.000000, 381.000000, "Ayrica meslekler hakkinada bilgi almak icin ~r~/isyardim~w~ komutunu kullanabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[14], 255);
	TextDrawFont(TutTxtDraw[14], 1);
	TextDrawLetterSize(TutTxtDraw[14], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[14], -1);
	TextDrawSetOutline(TutTxtDraw[14], 0);
	TextDrawSetProportional(TutTxtDraw[14], 1);
	TextDrawSetShadow(TutTxtDraw[14], 2);

	TutTxtDraw[15] = TextDrawCreate(166.000000, 394.000000, "Istedigin zaman bankadan ~r~/paracek~w~'ebilir ~w~ yada ~r~/parayatir~w~'abilirsin.~w~");
	TextDrawBackgroundColor(TutTxtDraw[15], 255);
	TextDrawFont(TutTxtDraw[15], 1);
	TextDrawLetterSize(TutTxtDraw[15], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[15], -1);
	TextDrawSetOutline(TutTxtDraw[15], 0);
	TextDrawSetProportional(TutTxtDraw[15], 1);
	TextDrawSetShadow(TutTxtDraw[15], 2);

	//
	// THIRD TUTORIAL TEXT
	//

	TutTxtDraw[16] = TextDrawCreate(166.000000, 331.000000, "L.S. sinirlari icerisinde ~b~LSPD~w~ ve ~b~FBI~w~  gibi devlet birimleri bulunmaktadir.");
	TextDrawBackgroundColor(TutTxtDraw[16], 255);
	TextDrawFont(TutTxtDraw[16], 1);
	TextDrawLetterSize(TutTxtDraw[16], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[16], -1);
	TextDrawSetOutline(TutTxtDraw[16], 0);
	TextDrawSetProportional(TutTxtDraw[16], 1);
	TextDrawSetShadow(TutTxtDraw[16], 2);

	TutTxtDraw[17] = TextDrawCreate(166.000000, 344.000000, "Eger suc islersen seni hapse atacaklardir ve bu senin icin buyuk bela demek.");
	TextDrawBackgroundColor(TutTxtDraw[17], 255);
	TextDrawFont(TutTxtDraw[17], 1);
	TextDrawLetterSize(TutTxtDraw[17], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[17], -1);
	TextDrawSetOutline(TutTxtDraw[17], 0);
	TextDrawSetProportional(TutTxtDraw[17], 1);
	TextDrawSetShadow(TutTxtDraw[17], 2);

	TutTxtDraw[18] = TextDrawCreate(166.000000, 357.000000, "Most Wanted(en cok aranan suclu) olabilirsin. (haritada kirmizi olarak gozukurler)");
	TextDrawBackgroundColor(TutTxtDraw[18], 255);
	TextDrawFont(TutTxtDraw[18], 1);
	TextDrawLetterSize(TutTxtDraw[18], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[18], -1);
	TextDrawSetOutline(TutTxtDraw[18], 0);
	TextDrawSetProportional(TutTxtDraw[18], 1);
	TextDrawSetShadow(TutTxtDraw[18], 2);

	TutTxtDraw[19] = TextDrawCreate(166.000000, 371.000000, "Eger Most Wanted olarak yakalanirsan, seni 45 dakika hapse atabilirler.");
	TextDrawBackgroundColor(TutTxtDraw[19], 255);
	TextDrawFont(TutTxtDraw[19], 1);
	TextDrawLetterSize(TutTxtDraw[19], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[19], -1);
	TextDrawSetOutline(TutTxtDraw[19], 0);
	TextDrawSetProportional(TutTxtDraw[19], 1);
	TextDrawSetShadow(TutTxtDraw[19], 2);

	TutTxtDraw[20] = TextDrawCreate(166.000000, 385.000000, "Eger hapiste yatamayacaksan, ozaman suc isleme.");
	TextDrawBackgroundColor(TutTxtDraw[20], 255);
	TextDrawFont(TutTxtDraw[20], 1);
	TextDrawLetterSize(TutTxtDraw[20], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[20], -1);
	TextDrawSetOutline(TutTxtDraw[20], 0);
	TextDrawSetProportional(TutTxtDraw[20], 1);
	TextDrawSetShadow(TutTxtDraw[20], 2);

	TutTxtDraw[21] = TextDrawCreate(166.000000, 398.000000, "Bu olusumlara katilmak icin Master RP forumlarindan basvuru yapabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[21], 255);
	TextDrawFont(TutTxtDraw[21], 1);
	TextDrawLetterSize(TutTxtDraw[21], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[21], -1);
	TextDrawSetOutline(TutTxtDraw[21], 0);
	TextDrawSetProportional(TutTxtDraw[21], 1);
	TextDrawSetShadow(TutTxtDraw[21], 2);

	//
	// FOURTH TUTORIAL TEXT
	//

	TutTxtDraw[22] = TextDrawCreate(166.000000, 331.000000, "Eger yaralanirsan ~r~/olum kabul~w~ yada ~r~/cagir ambulans~w~ yazabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[22], 255);
	TextDrawFont(TutTxtDraw[22], 1);
	TextDrawLetterSize(TutTxtDraw[22], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[22], -1);
	TextDrawSetOutline(TutTxtDraw[22], 0);
	TextDrawSetProportional(TutTxtDraw[22], 1);
	TextDrawSetShadow(TutTxtDraw[22], 2);

	TutTxtDraw[23] = TextDrawCreate(166.000000, 344.000000, "Ambulans beklemen silahlarini kaybetmemeni saglayacaktir.");
	TextDrawBackgroundColor(TutTxtDraw[23], 255);
	TextDrawFont(TutTxtDraw[23], 1);
	TextDrawLetterSize(TutTxtDraw[23], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[23], -1);
	TextDrawSetOutline(TutTxtDraw[23], 0);
	TextDrawSetProportional(TutTxtDraw[23], 1);
	TextDrawSetShadow(TutTxtDraw[23], 2);

	TutTxtDraw[24] = TextDrawCreate(166.000000, 357.000000, "Ayrica LSFMD olusumuna katilmak icin basvurabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[24], 255);
	TextDrawFont(TutTxtDraw[24], 1);
	TextDrawLetterSize(TutTxtDraw[24], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[24], -1);
	TextDrawSetOutline(TutTxtDraw[24], 0);
	TextDrawSetProportional(TutTxtDraw[24], 1);
	TextDrawSetShadow(TutTxtDraw[24], 2);

	TutTxtDraw[25] = TextDrawCreate(166.000000, 371.000000, "Tum olusum basvurulari forum uzerinden yapilmaktadir.");
	TextDrawBackgroundColor(TutTxtDraw[25], 255);
	TextDrawFont(TutTxtDraw[25], 1);
	TextDrawLetterSize(TutTxtDraw[25], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[25], -1);
	TextDrawSetOutline(TutTxtDraw[25], 0);
	TextDrawSetProportional(TutTxtDraw[25], 1);
	TextDrawSetShadow(TutTxtDraw[25], 2);

	TutTxtDraw[26] = TextDrawCreate(166.000000, 394.000000, "Ayrica bir hastsalik kaparsan, hastane icerisinde kendini  ~r~/iyilestir~w~'ebilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[26], 255);
	TextDrawFont(TutTxtDraw[26], 1);
	TextDrawLetterSize(TutTxtDraw[26], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[26], -1);
	TextDrawSetOutline(TutTxtDraw[26], 0);
	TextDrawSetProportional(TutTxtDraw[26], 1);
	TextDrawSetShadow(TutTxtDraw[26], 2);

	//
	// FIFTH TUTORIAL TEXT
	//

	TutTxtDraw[27] = TextDrawCreate(166.000000, 331.000000, "Bu sunucuda ayrica ~r~/aileler~w~ yani bir nevi suc orgutleri bulunur.");
	TextDrawBackgroundColor(TutTxtDraw[27], 255);
	TextDrawFont(TutTxtDraw[27], 1);
	TextDrawLetterSize(TutTxtDraw[27], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[27], -1);
	TextDrawSetOutline(TutTxtDraw[27], 0);
	TextDrawSetProportional(TutTxtDraw[27], 1);
	TextDrawSetShadow(TutTxtDraw[27], 2);

	TutTxtDraw[28] = TextDrawCreate(166.000000, 344.000000, "Bu orgutler sokak ceteleri ve organize olmus mafyalar olarak ikiye ayrilir.");
	TextDrawBackgroundColor(TutTxtDraw[28], 255);
	TextDrawFont(TutTxtDraw[28], 1);
	TextDrawLetterSize(TutTxtDraw[28], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[28], -1);
	TextDrawSetOutline(TutTxtDraw[28], 0);
	TextDrawSetProportional(TutTxtDraw[28], 1);
	TextDrawSetShadow(TutTxtDraw[28], 2);

	TutTxtDraw[29] = TextDrawCreate(166.000000, 357.000000, "Bu ceteler/aileler ayrica bazi mekanlari ele gecirmek icin savasirlar ~r~/pointler~w~.");
	TextDrawBackgroundColor(TutTxtDraw[29], 255);
	TextDrawFont(TutTxtDraw[29], 1);
	TextDrawLetterSize(TutTxtDraw[29], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[29], -1);
	TextDrawSetOutline(TutTxtDraw[29], 0);
	TextDrawSetProportional(TutTxtDraw[29], 1);
	TextDrawSetShadow(TutTxtDraw[29], 2);

	TutTxtDraw[30] = TextDrawCreate(166.000000, 381.000000, "Oyun icerisinde bu ailelere yaklasip, bag kurup katilabilirsiniz");
	TextDrawBackgroundColor(TutTxtDraw[30], 255);
	TextDrawFont(TutTxtDraw[30], 1);
	TextDrawLetterSize(TutTxtDraw[30], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[30], -1);
	TextDrawSetOutline(TutTxtDraw[30], 0);
	TextDrawSetProportional(TutTxtDraw[30], 1);
	TextDrawSetShadow(TutTxtDraw[30], 2);

	TutTxtDraw[31] = TextDrawCreate(166.000000, 394.000000, "Bu aileler/ceteler genellikle kendi mekanlarinda, kuluplerinde, barlarinda bulunurlar.");
	TextDrawBackgroundColor(TutTxtDraw[31], 255);
	TextDrawFont(TutTxtDraw[31], 1);
	TextDrawLetterSize(TutTxtDraw[31], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[31], -1);
	TextDrawSetOutline(TutTxtDraw[31], 0);
	TextDrawSetProportional(TutTxtDraw[31], 1);
	TextDrawSetShadow(TutTxtDraw[31], 2);

	//
	// SIXTH TUTORIAL TEXT
	//

	TutTxtDraw[32] = TextDrawCreate(166.000000, 331.000000, "Kendine materyal kasarak, bu materyallerle bazi esyalar yapabilirsin.(silahlar dahil)");
	TextDrawBackgroundColor(TutTxtDraw[32], 255);
	TextDrawFont(TutTxtDraw[32], 1);
	TextDrawLetterSize(TutTxtDraw[32], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[32], -1);
	TextDrawSetOutline(TutTxtDraw[32], 0);
	TextDrawSetProportional(TutTxtDraw[32], 1);
	TextDrawSetShadow(TutTxtDraw[32], 2);

	TutTxtDraw[33] = TextDrawCreate(166.000000, 344.000000, "Materyal kasmak ve esya yapmak icin zanaatkar yada, silah saticisi olman gerekmektedir.");
	TextDrawBackgroundColor(TutTxtDraw[33], 255);
	TextDrawFont(TutTxtDraw[33], 1);
	TextDrawLetterSize(TutTxtDraw[33], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[33], -1);
	TextDrawSetOutline(TutTxtDraw[33], 0);
	TextDrawSetProportional(TutTxtDraw[33], 1);
	TextDrawSetShadow(TutTxtDraw[33], 2);

	TutTxtDraw[34] = TextDrawCreate(166.000000, 357.000000, "Materyal pakedi alma noktalarinda ~r~/paketal~w~ yazarak mallari adreslere teslim etmen gerek.");
	TextDrawBackgroundColor(TutTxtDraw[34], 255);
	TextDrawFont(TutTxtDraw[34], 1);
	TextDrawLetterSize(TutTxtDraw[34], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[34], -1);
	TextDrawSetOutline(TutTxtDraw[34], 0);
	TextDrawSetProportional(TutTxtDraw[34], 1);
	TextDrawSetShadow(TutTxtDraw[34], 2);

	TutTxtDraw[35] = TextDrawCreate(166.000000, 371.000000, "Yeterli materyalin olunca ~r~/silahsat~w~ yada ~r~/zanaat~w~ komutlarini kullanabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[35], 255);
	TextDrawFont(TutTxtDraw[35], 1);
	TextDrawLetterSize(TutTxtDraw[35], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[35], -1);
	TextDrawSetOutline(TutTxtDraw[35], 0);
	TextDrawSetProportional(TutTxtDraw[35], 1);
	TextDrawSetShadow(TutTxtDraw[35], 2);

	TutTxtDraw[36] = TextDrawCreate(166.000000, 391.000000, "Daha fazla bilgi almak icin ~r~/isyardim~w~ komutunu yazabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[36], 255);
	TextDrawFont(TutTxtDraw[36], 1);
	TextDrawLetterSize(TutTxtDraw[36], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[36], -1);
	TextDrawSetOutline(TutTxtDraw[36], 0);
	TextDrawSetProportional(TutTxtDraw[36], 1);
	TextDrawSetShadow(TutTxtDraw[36], 2);

	//
	// SEVENTH TUTORIAL TEXT
	//

	TutTxtDraw[37] = TextDrawCreate(166.000000, 331.000000, "Ayrica Los Santos'a Blueberry'den uyusturucu kacirabilirsin. Uyusturucu kacakcisi meslegini,");
	TextDrawBackgroundColor(TutTxtDraw[37], 255);
	TextDrawFont(TutTxtDraw[37], 1);
	TextDrawLetterSize(TutTxtDraw[37], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[37], -1);
	TextDrawSetOutline(TutTxtDraw[37], 0);
	TextDrawSetProportional(TutTxtDraw[37], 1);
	TextDrawSetShadow(TutTxtDraw[37], 2);

	TutTxtDraw[38] = TextDrawCreate(166.000000, 344.000000, "aldiktan sonra  ~r~/kasaal~w~ komutunu kullanarak crack yada pot kacirabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[38], 255);
	TextDrawFont(TutTxtDraw[38], 1);
	TextDrawLetterSize(TutTxtDraw[38], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[38], -1);
	TextDrawSetOutline(TutTxtDraw[38], 0);
	TextDrawSetProportional(TutTxtDraw[38], 1);
	TextDrawSetShadow(TutTxtDraw[38], 2);

	TutTxtDraw[39] = TextDrawCreate(166.000000, 367.000000, "Uyusturucu saticisi meslegini alarak uyusturucu yetistirip,");
	TextDrawBackgroundColor(TutTxtDraw[39], 255);
	TextDrawFont(TutTxtDraw[39], 1);
	TextDrawLetterSize(TutTxtDraw[39], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[39], -1);
	TextDrawSetOutline(TutTxtDraw[39], 0);
	TextDrawSetProportional(TutTxtDraw[39], 1);
	TextDrawSetShadow(TutTxtDraw[39], 2);

	TutTxtDraw[40] = TextDrawCreate(166.000000, 381.000000, "- ~r~/potsat~w~ ve ~r~/cracksat~w~ komutlariyla oyunculara satabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[40], 255);
	TextDrawFont(TutTxtDraw[40], 1);
	TextDrawLetterSize(TutTxtDraw[40], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[40], -1);
	TextDrawSetOutline(TutTxtDraw[40], 0);
	TextDrawSetProportional(TutTxtDraw[40], 1);
	TextDrawSetShadow(TutTxtDraw[40], 2);

	TutTxtDraw[41] = TextDrawCreate(166.000000, 394.000000, "- ~r~/tohumdik ~w~komutuyla tohum dikip, kendine pot uretebilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[41], 255);
	TextDrawFont(TutTxtDraw[41], 1);
	TextDrawLetterSize(TutTxtDraw[41], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[41], -1);
	TextDrawSetOutline(TutTxtDraw[41], 0);
	TextDrawSetProportional(TutTxtDraw[41], 1);
	TextDrawSetShadow(TutTxtDraw[41], 2);

	//
	// EIGHT TUTORIAL TEXT
	//

	TutTxtDraw[42] = TextDrawCreate(166.000000, 331.000000, "Burasi arac saticisidir. Sehir icerisinde birden fazla bulunmaktadir,");
	TextDrawBackgroundColor(TutTxtDraw[42], 255);
	TextDrawFont(TutTxtDraw[42], 1);
	TextDrawLetterSize(TutTxtDraw[42], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[42], -1);
	TextDrawSetOutline(TutTxtDraw[42], 0);
	TextDrawSetProportional(TutTxtDraw[42], 1);
	TextDrawSetShadow(TutTxtDraw[42], 2);

	TutTxtDraw[43] = TextDrawCreate(166.000000, 344.000000, "buradan kisisel aracinizi satin alabilirsiniz. VIP olmadan 5 arac sahibi olabilirsiniz.");
	TextDrawBackgroundColor(TutTxtDraw[43], 255);
	TextDrawFont(TutTxtDraw[43], 1);
	TextDrawLetterSize(TutTxtDraw[43], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[43], -1);
	TextDrawSetOutline(TutTxtDraw[43], 0);
	TextDrawSetProportional(TutTxtDraw[43], 1);
	TextDrawSetShadow(TutTxtDraw[43], 2);

	TutTxtDraw[44] = TextDrawCreate(166.000000, 357.000000, "ve ayni anda yalnizca birtanesini cikarabilrisiniz.");
	TextDrawBackgroundColor(TutTxtDraw[44], 255);
	TextDrawFont(TutTxtDraw[44], 1);
	TextDrawLetterSize(TutTxtDraw[44], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[44], -1);
	TextDrawSetOutline(TutTxtDraw[44], 0);
	TextDrawSetProportional(TutTxtDraw[44], 1);
	TextDrawSetShadow(TutTxtDraw[44], 2);

	TutTxtDraw[45] = TextDrawCreate(166.000000, 371.000000, "Daha fazla bilgi icin ~r~/aracyardim~w~ yazabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[45], 255);
	TextDrawFont(TutTxtDraw[45], 1);
	TextDrawLetterSize(TutTxtDraw[45], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[45], -1);
	TextDrawSetOutline(TutTxtDraw[45], 0);
	TextDrawSetProportional(TutTxtDraw[45], 1);
	TextDrawSetShadow(TutTxtDraw[45], 2);

	TutTxtDraw[46] = TextDrawCreate(166.000000, 385.000000, "Bu bir evdir. Eger bir eve sahip olursan, evinin icerisinde bazi esyalari saklayabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[46], 255);
	TextDrawFont(TutTxtDraw[46], 1);
	TextDrawLetterSize(TutTxtDraw[46], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[46], -1);
	TextDrawSetOutline(TutTxtDraw[46], 0);
	TextDrawSetProportional(TutTxtDraw[46], 1);
	TextDrawSetShadow(TutTxtDraw[46], 2);

	TutTxtDraw[47] = TextDrawCreate(166.000000, 397.000000, "Ayrica ev de kiralayabilirsin.Bilgi icin ~r~/evyardim~w~ ve ~r~/kirayardim~w~ yazabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[47], 255);
	TextDrawFont(TutTxtDraw[47], 1);
	TextDrawLetterSize(TutTxtDraw[47], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[47], -1);
	TextDrawSetOutline(TutTxtDraw[47], 0);
	TextDrawSetProportional(TutTxtDraw[47], 1);
	TextDrawSetShadow(TutTxtDraw[47], 2);

	//
	// NINTH TUTORIAL TEXT
	//

	TutTxtDraw[48] = TextDrawCreate(166.000000, 331.000000, "Biran once oyuna baslamak istedigini biliyoruz, tanitim bitmek uzere!");
	TextDrawBackgroundColor(TutTxtDraw[48], 255);
	TextDrawFont(TutTxtDraw[48], 1);
	TextDrawLetterSize(TutTxtDraw[48], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[48], -1);
	TextDrawSetOutline(TutTxtDraw[48], 0);
	TextDrawSetProportional(TutTxtDraw[48], 1);
	TextDrawSetShadow(TutTxtDraw[48], 2);

	TutTxtDraw[49] = TextDrawCreate(166.000000, 344.000000, "- Burasi genel bir markettir. ~r~/satinal~w~ komutuyla esya satin alabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[49], 255);
	TextDrawFont(TutTxtDraw[49], 1);
	TextDrawLetterSize(TutTxtDraw[49], 0.209999, 1.399999);
	TextDrawColor(TutTxtDraw[49], -1);
	TextDrawSetOutline(TutTxtDraw[49], 0);
	TextDrawSetProportional(TutTxtDraw[49], 1);
	TextDrawSetShadow(TutTxtDraw[49], 2);

	TutTxtDraw[50] = TextDrawCreate(166.000000, 357.000000, "- Burasi kiyafet dukkanidir. ~r~/kiyafetal ~w~yazarak kiyafet alabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[50], 255);
	TextDrawFont(TutTxtDraw[50], 1);
	TextDrawLetterSize(TutTxtDraw[50], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[50], -1);
	TextDrawSetOutline(TutTxtDraw[50], 0);
	TextDrawSetProportional(TutTxtDraw[50], 1);
	TextDrawSetShadow(TutTxtDraw[50], 2);

	TutTxtDraw[51] = TextDrawCreate(172.000000, 371.000000, "~r~/oyuncakal ~w~yazarak karakterine oyuncak alabilirsin.");
	TextDrawBackgroundColor(TutTxtDraw[51], 255);
	TextDrawFont(TutTxtDraw[51], 1);
	TextDrawLetterSize(TutTxtDraw[51], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[51], -1);
	TextDrawSetOutline(TutTxtDraw[51], 0);
	TextDrawSetProportional(TutTxtDraw[51], 1);
	TextDrawSetShadow(TutTxtDraw[51], 2);

	TutTxtDraw[52] = TextDrawCreate(166.000000, 384.000000, "- ~r~/kurallar ~w~ve ~r~/yardim~w~ komutlarini yazmayi unutmayin.");
	TextDrawBackgroundColor(TutTxtDraw[48], 255);
	TextDrawFont(TutTxtDraw[52], 1);
	TextDrawLetterSize(TutTxtDraw[52], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[52], -1);
	TextDrawSetOutline(TutTxtDraw[52], 0);
	TextDrawSetProportional(TutTxtDraw[52], 1);
	TextDrawSetShadow(TutTxtDraw[52], 2);

	TutTxtDraw[53] = TextDrawCreate(166.000000, 398.000000, "- Oynadigin ilk iki saat boyunca silah kullanamayacaksin.");
	TextDrawBackgroundColor(TutTxtDraw[53], 255);
	TextDrawFont(TutTxtDraw[53], 1);
	TextDrawLetterSize(TutTxtDraw[53], 0.209998, 1.399999);
	TextDrawColor(TutTxtDraw[53], -1);
	TextDrawSetOutline(TutTxtDraw[48], 0);
	TextDrawSetProportional(TutTxtDraw[48], 1);
	TextDrawSetShadow(TutTxtDraw[48], 2);


	//------------------------------------------------------------------------------------------------------------
	// Objects loading text draws
	//------------------------------------------------------------------------------------------------------------

ObjectsLoadingTD[0] = TextDrawCreate(206.235290, 175.999969, "box");
TextDrawLetterSize(ObjectsLoadingTD[0], 0.000000, 5.717647);
TextDrawTextSize(ObjectsLoadingTD[0], 433.000000, 0.000000);
TextDrawAlignment(ObjectsLoadingTD[0], 1);
TextDrawColor(ObjectsLoadingTD[0], -1);
TextDrawUseBox(ObjectsLoadingTD[0], 1);
TextDrawBoxColor(ObjectsLoadingTD[0], 85);
TextDrawSetShadow(ObjectsLoadingTD[0], 0);
TextDrawSetOutline(ObjectsLoadingTD[0], 0);
TextDrawBackgroundColor(ObjectsLoadingTD[0], 255);
TextDrawFont(ObjectsLoadingTD[0], 1);
TextDrawSetProportional(ObjectsLoadingTD[0], 1);
TextDrawSetShadow(ObjectsLoadingTD[0], 0);

ObjectsLoadingTD[1] = TextDrawCreate(206.235382, 174.250030, "box");
TextDrawLetterSize(ObjectsLoadingTD[1], 0.000000, -0.305883);
TextDrawTextSize(ObjectsLoadingTD[1], 433.000000, 0.000000);
TextDrawAlignment(ObjectsLoadingTD[1], 1);
TextDrawColor(ObjectsLoadingTD[1], -1);
TextDrawUseBox(ObjectsLoadingTD[1], 1);
TextDrawBoxColor(ObjectsLoadingTD[1], 255);
TextDrawSetShadow(ObjectsLoadingTD[1], 0);
TextDrawSetOutline(ObjectsLoadingTD[1], 0);
TextDrawBackgroundColor(ObjectsLoadingTD[1], 255);
TextDrawFont(ObjectsLoadingTD[1], 1);
TextDrawSetProportional(ObjectsLoadingTD[1], 1);
TextDrawSetShadow(ObjectsLoadingTD[1], 0);

ObjectsLoadingTD[2] = TextDrawCreate(206.705947, 230.833358, "box");
TextDrawLetterSize(ObjectsLoadingTD[2], 0.000000, -0.305883);
TextDrawTextSize(ObjectsLoadingTD[2], 432.000000, 0.000000);
TextDrawAlignment(ObjectsLoadingTD[2], 1);
TextDrawColor(ObjectsLoadingTD[2], -1);
TextDrawUseBox(ObjectsLoadingTD[2], 1);
TextDrawBoxColor(ObjectsLoadingTD[2], 255);
TextDrawSetShadow(ObjectsLoadingTD[2], 0);
TextDrawSetOutline(ObjectsLoadingTD[2], 0);
TextDrawBackgroundColor(ObjectsLoadingTD[2], 255);
TextDrawFont(ObjectsLoadingTD[2], 1);
TextDrawSetProportional(ObjectsLoadingTD[2], 1);
TextDrawSetShadow(ObjectsLoadingTD[2], 0);

ObjectsLoadingTD[3] = TextDrawCreate(437.293914, 174.250045, "box");
TextDrawLetterSize(ObjectsLoadingTD[3], 0.000000, 5.952930);
TextDrawTextSize(ObjectsLoadingTD[3], 432.000000, 0.000000);
TextDrawAlignment(ObjectsLoadingTD[3], 1);
TextDrawColor(ObjectsLoadingTD[3], -1);
TextDrawUseBox(ObjectsLoadingTD[3], 1);
TextDrawBoxColor(ObjectsLoadingTD[3], 255);
TextDrawSetShadow(ObjectsLoadingTD[3], 0);
TextDrawSetOutline(ObjectsLoadingTD[3], 0);
TextDrawBackgroundColor(ObjectsLoadingTD[3], 255);
TextDrawFont(ObjectsLoadingTD[3], 1);
TextDrawSetProportional(ObjectsLoadingTD[3], 1);
TextDrawSetShadow(ObjectsLoadingTD[3], 0);

ObjectsLoadingTD[4] = TextDrawCreate(206.705657, 174.249954, "box");
TextDrawLetterSize(ObjectsLoadingTD[4], 0.000000, 5.952930);
TextDrawTextSize(ObjectsLoadingTD[4], 201.000000, 0.000000);
TextDrawAlignment(ObjectsLoadingTD[4], 1);
TextDrawColor(ObjectsLoadingTD[4], -1);
TextDrawUseBox(ObjectsLoadingTD[4], 1);
TextDrawBoxColor(ObjectsLoadingTD[4], 255);
TextDrawSetShadow(ObjectsLoadingTD[4], 0);
TextDrawSetOutline(ObjectsLoadingTD[4], 0);
TextDrawBackgroundColor(ObjectsLoadingTD[4], 255);
TextDrawFont(ObjectsLoadingTD[4], 1);
TextDrawSetProportional(ObjectsLoadingTD[4], 1);
TextDrawSetShadow(ObjectsLoadingTD[4], 0);

ObjectsLoadingTD[5] = TextDrawCreate(217.200119, 185.716629, "OBJELER_YUKLENIYOR..");
TextDrawLetterSize(ObjectsLoadingTD[5], 0.435294, 2.860000);
TextDrawAlignment(ObjectsLoadingTD[5], 1);
TextDrawColor(ObjectsLoadingTD[5], 2029678335);
TextDrawSetShadow(ObjectsLoadingTD[5], 0);
TextDrawSetOutline(ObjectsLoadingTD[5], 1);
TextDrawBackgroundColor(ObjectsLoadingTD[5], 21);
TextDrawFont(ObjectsLoadingTD[5], 2);
TextDrawSetProportional(ObjectsLoadingTD[5], 1);
TextDrawSetShadow(ObjectsLoadingTD[5], 0);

ObjectsLoadingTD[6] = TextDrawCreate(287.647094, 211.000045, "I_SR-RP_I");
TextDrawLetterSize(ObjectsLoadingTD[6], 0.352941, 1.839167);
TextDrawAlignment(ObjectsLoadingTD[6], 1);
TextDrawColor(ObjectsLoadingTD[6], -183);
TextDrawSetShadow(ObjectsLoadingTD[6], 0);
TextDrawSetOutline(ObjectsLoadingTD[6], 0);
TextDrawBackgroundColor(ObjectsLoadingTD[6], 255);
TextDrawFont(ObjectsLoadingTD[6], 2);
TextDrawSetProportional(ObjectsLoadingTD[6], 1);
TextDrawSetShadow(ObjectsLoadingTD[6], 0);

ObjectsLoadingTD[7] = TextDrawCreate(227.552978, 185.716629, "OBJELER_YUKLENDI");
TextDrawLetterSize(ObjectsLoadingTD[7], 0.435294, 2.860000);
TextDrawAlignment(ObjectsLoadingTD[7], 1);
TextDrawColor(ObjectsLoadingTD[7], -16776961);
TextDrawSetShadow(ObjectsLoadingTD[7], 0);
TextDrawSetOutline(ObjectsLoadingTD[7], 1);
TextDrawBackgroundColor(ObjectsLoadingTD[7], 21);
TextDrawFont(ObjectsLoadingTD[7], 2);
TextDrawSetProportional(ObjectsLoadingTD[7], 1);
TextDrawSetShadow(ObjectsLoadingTD[7], 0);

/*	PizzaVehicles[0] = AddStaticVehicleEx(448,2121.60009766,-1788.00000000,13.19999981,0.00000000,3,6,300); //Pizzaboy
	PizzaVehicles[1] = AddStaticVehicleEx(448,2120.30004883,-1788.00000000,13.19999981,0.00000000,3,6,300); //Pizzaboy
	PizzaVehicles[2] = AddStaticVehicleEx(448,2119.10009766,-1788.00000000,13.19999981,358.00000000,3,6,300); //Pizzaboy
	PizzaVehicles[3] = AddStaticVehicleEx(448,2117.80004883,-1788.00000000,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[4] = AddStaticVehicleEx(448,2116.30004883,-1788.00000000,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[5] = AddStaticVehicleEx(448,2122.80004883,-1788.00000000,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[6] = AddStaticVehicleEx(448,2113.69995117,-1788.09997559,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[7] = AddStaticVehicleEx(448,2112.39990234,-1788.09997559,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[8] = AddStaticVehicleEx(448,2111.10009766,-1788.09997559,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[9] = AddStaticVehicleEx(448,2109.60009766,-1788.09997559,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[10] = AddStaticVehicleEx(448,2108.30004883,-1788.09997559,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[11] = AddStaticVehicleEx(448,2107.00000000,-1788.09997559,13.19999981,357.99499512,3,6,300); //Pizzaboy
	PizzaVehicles[12] = AddStaticVehicleEx(448,2125.72778320,-1821.16296387,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[13] = AddStaticVehicleEx(448,2125.58886719,-1819.16699219,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[14] = AddStaticVehicleEx(448,2125.53417969,-1817.41784668,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[15] = AddStaticVehicleEx(448,2125.59228516,-1815.41772461,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[16] = AddStaticVehicleEx(448,2125.63085938,-1813.41699219,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[17] = AddStaticVehicleEx(448,2125.65161133,-1811.47399902,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[18] = AddStaticVehicleEx(448,2125.63940430,-1809.86132812,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[19] = AddStaticVehicleEx(448,2125.61669922,-1807.59777832,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[20] = AddStaticVehicleEx(448,2125.77197266,-1805.30444336,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[21] = AddStaticVehicleEx(448,2125.79687500,-1802.72937012,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[22] = AddStaticVehicleEx(448,2125.77929688,-1799.91442871,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[23] = AddStaticVehicleEx(448,2125.85205078,-1797.00598145,13.22481918,270.00000000,-1,-1,300); //Pizzaboy
	PizzaVehicles[24] = AddStaticVehicleEx(448,2125.74169922,-1794.25805664,13.22481918,270.00000000,-1,-1,300); //Pizzaboy */


	EventInfo[EventFamily] = 255;
	vehicleMods[0][4] = {1013, 1024, 0, 0};
	vehicleMods[0][6] = {1018, 1019, 1020, 1021};
	vehicleMods[1][0] = {1001, 1003, 0, 0};
	vehicleMods[1][1] = {1004, 1005, 0, 0};
	vehicleMods[1][2] = {1006, 0, 0, 0};
	vehicleMods[1][3] = {1007, 0, 0, 0};
	vehicleMods[1][4] = {1013, 0, 0, 0};
	vehicleMods[1][6] = {1019, 1020, 0, 0};
	vehicleMods[1][12] = {1143, 1145, 0, 0};
	vehicleMods[4][0] = {1002, 1016, 1000, 0};
	vehicleMods[4][3] = {1007, 0, 0, 0};
	vehicleMods[4][4] = {1013, 0, 0, 0};
	vehicleMods[4][6] = {1019, 1020, 1021, 0};
	vehicleMods[5][0] = {1000, 1001, 1014, 1023};
	vehicleMods[5][6] = {1018, 1019, 1020, 1021};
	vehicleMods[10][0] = {1001, 1003, 1023, 0};
	vehicleMods[10][3] = {1007, 0, 0, 0};
	vehicleMods[10][4] = {1013, 1024, 0, 0};
	vehicleMods[10][6] = {1019, 1020, 1021, 0};
	vehicleMods[15][0] = {1001, 1003, 1023, 0};
	vehicleMods[15][6] = {1018, 1019, 0, 0};
	vehicleMods[15][3] = {1007, 0, 0, 0};
	vehicleMods[18][0] = {1002, 1016, 0, 0};
	vehicleMods[18][2] = {1006, 0, 0, 0};
	vehicleMods[18][6] = {1020, 1021, 0, 0};
	vehicleMods[20][0] = {1001, 1003, 0, 0};
	vehicleMods[20][1] = {1004, 1005, 0, 0};
	vehicleMods[20][6] = {1019, 1021, 0, 0};
	vehicleMods[21][0] = {1000, 1014, 1016, 1023};
	vehicleMods[21][6] = {1018, 1019, 1020, 1021};
	vehicleMods[22][3] = {1007, 0, 0, 0};
	vehicleMods[22][4] = {1013, 0, 0, 0};
	vehicleMods[22][6] = {1019, 1020, 1021, 0};
	vehicleMods[26][0] = {1001, 1003, 0, 0};
	vehicleMods[26][1] = {1004, 1005, 0, 0};
	vehicleMods[26][2] = {1006, 0, 0, 0};
	vehicleMods[26][6] = {1019, 1021, 0, 0};
	vehicleMods[36][0] = {1001, 1003, 0, 0};
	vehicleMods[36][2] = {1006, 0, 0, 0};
	vehicleMods[36][3] = {1007, 0, 0, 0};
	vehicleMods[36][4] = {1013, 0, 0, 0};
	vehicleMods[36][6] = {1019, 1020, 1021, 1022};
	vehicleMods[39][0] = {1001, 1003, 1023, 0};
	vehicleMods[39][3] = {1007, 0, 0, 0};
	vehicleMods[39][4] = {1013, 0, 0, 0};
	vehicleMods[39][12] = {1143, 1145, 0, 0};
	vehicleMods[77][2] = {1006, 0, 0, 0};
	vehicleMods[77][3] = {1007, 0, 0, 0};
	vehicleMods[77][6] = {1018, 1019, 1020, 1021};
	vehicleMods[78][1] = {1004, 1005, 1012, 0};
	vehicleMods[78][4] = {1013, 1024, 0, 0};
	vehicleMods[78][6] = {1020, 1021, 1022, 0};
	vehicleMods[89][0] = {1000, 1002, 1016, 0};
	vehicleMods[89][1] = {1004, 1005, 0, 0};
	vehicleMods[89][2] = {1006, 0, 0, 0};
	vehicleMods[89][4] = {1013, 1024, 0, 0};
	vehicleMods[89][6] = {1018, 1019, 1020, 0};
	vehicleMods[91][0] = {1003, 1014, 1023, 0};
	vehicleMods[91][3] = {1007, 0, 0, 0};
	vehicleMods[91][6] = {1018, 1019, 1020, 1021};
	vehicleMods[91][12] = {1143, 1145, 0, 0};
	vehicleMods[92][0] = {1000, 1016, 0, 0};
	vehicleMods[92][1] = {1004, 1005, 0, 0};
	vehicleMods[92][2] = {1006, 0, 0, 0};
	vehicleMods[96][0] = {1001, 1002, 1003, 1023};
	vehicleMods[96][1] = {1011, 0, 0, 0};
	vehicleMods[96][2] = {1006, 0, 0, 0};
	vehicleMods[96][6] = {1019, 1020, 0, 0};
	vehicleMods[96][12] = {1143, 0, 0, 0};
	vehicleMods[100][4] = {1013, 1024, 0, 0};
	vehicleMods[100][6] = {1019, 1020, 1021, 0};
	vehicleMods[116][0] = {1000, 1002, 1015, 1016};
	vehicleMods[116][1] = {1004, 0, 0, 0};
	vehicleMods[116][3] = {1007, 0, 0, 0};
	vehicleMods[116][6] = {1018, 1019, 1020, 1021};
	vehicleMods[117][0] = {1002, 1003, 1016, 1023};
	vehicleMods[117][3] = {1007, 0, 0, 0};
	vehicleMods[117][6] = {1018, 1019, 1020, 0};
	vehicleMods[117][12] = {1143, 1145, 0, 0};
	vehicleMods[118][0] = {1001, 1003, 1023, 0};
	vehicleMods[118][1] = {1005, 0, 0, 0};
	vehicleMods[118][2] = {1006, 0, 0, 0};
	vehicleMods[118][3] = {1007, 0, 0, 0};
	vehicleMods[118][4] = {1013, 0, 0, 0};
	vehicleMods[118][6] = {1018, 1020, 0, 0};
	vehicleMods[118][12] = {1143, 1145, 0, 0};
	vehicleMods[127][0] = {1001, 1014, 1015, 0};
	vehicleMods[127][3] = {1007, 0, 0, 0};
	vehicleMods[127][6] = {1018, 1020, 1021, 0};
	vehicleMods[129][0] = {1001, 1003, 1023, 0};
	vehicleMods[129][1] = {1011, 1012, 0, 0};
	vehicleMods[129][2] = {1006, 0, 0, 0};
	vehicleMods[129][3] = {1007, 0, 0, 0};
	vehicleMods[129][6] = {1018, 1019, 1020, 0};
	vehicleMods[134][1] = {1100, 1123, 1125, 0};
	vehicleMods[134][3] = {1101, 1106, 0, 0};
	vehicleMods[134][6] = {1126, 1127, 0, 0};
	vehicleMods[134][10] = {1179, 1185, 0, 0};
	vehicleMods[134][11] = {1178, 1180, 0, 0};
	vehicleMods[135][3] = {1118, 1119, 0, 0};
	vehicleMods[135][6] = {1113, 1114, 0, 0};
	vehicleMods[135][10] = {1115, 1116, 1117, 0};
	vehicleMods[135][11] = {1109, 1110, 0, 0};
	vehicleMods[136][2] = {1103, 1128, 0, 0};
	vehicleMods[136][3] = {1108, 0, 0, 0};
	vehicleMods[136][6] = {1104, 1105, 0, 0};
	vehicleMods[136][10] = {1181, 1182, 0, 0};
	vehicleMods[136][11] = {1183, 1184, 0, 0};
	vehicleMods[140][0] = {1001, 1023, 0, 0};
	vehicleMods[140][1] = {1004, 0, 0, 0};
	vehicleMods[140][2] = {1006, 0, 0, 0};
	vehicleMods[140][3] = {1007, 0, 0, 0};
	vehicleMods[140][4] = {1024, 0, 0, 0};
	vehicleMods[140][6] = {1018, 1019, 1020, 0};
	vehicleMods[140][12] = {1143, 1145, 0, 0};
	vehicleMods[142][0] = {1014, 1015, 0, 0};
	vehicleMods[142][6] = {1018, 1019, 1020, 1021};
	vehicleMods[142][12] = {1145, 0, 0, 0};
	vehicleMods[146][0] = {1001, 1002, 1023, 0};
	vehicleMods[146][1] = {1004, 0, 0, 0};
	vehicleMods[146][2] = {1006, 0, 0, 0};
	vehicleMods[146][3] = {1007, 0, 0, 0};
	vehicleMods[146][4] = {1024, 0, 0, 0};
	vehicleMods[146][6] = {1018, 1019, 0, 0};
	vehicleMods[146][12] = {1143, 1145, 0, 0};
	vehicleMods[147][0] = {1000, 1003, 1016, 0};
	vehicleMods[147][6] = {1018, 1019, 1020, 1021};
	vehicleMods[147][12] = {1143, 0, 0, 0};
	vehicleMods[149][0] = {1001, 1003, 1023, 0};
	vehicleMods[149][1] = {1011, 1012, 0, 0};
	vehicleMods[149][3] = {1007, 0, 0, 0};
	vehicleMods[149][6] = {1018, 1019, 1020, 0};
	vehicleMods[149][12] = {1143, 1145, 0, 0};
	vehicleMods[150][0] = {1001, 1003, 1023, 0};
	vehicleMods[150][1] = {1004, 1005, 0, 0};
	vehicleMods[150][2] = {1006, 0, 0, 0};
	vehicleMods[150][6] = {1018, 1019, 1020, 0};
	vehicleMods[150][12] = {1143, 1145, 0, 0};
	vehicleMods[151][0] = {1002, 1003, 1016, 1023};
	vehicleMods[151][1] = {1005, 0, 0, 0};
	vehicleMods[151][2] = {1006, 0, 0, 0};
	vehicleMods[151][6] = {1018, 1019, 1020, 1021};
	vehicleMods[158][0] = {1164, 1163, 0, 0};
	vehicleMods[158][2] = {1088, 1091, 0, 0};
	vehicleMods[158][3] = {1090, 1093, 0, 0};
	vehicleMods[158][6] = {1092, 1089, 0, 0};
	vehicleMods[158][10] = {1166, 1165, 0, 0};
	vehicleMods[158][11] = {1168, 1167, 0, 0};
	vehicleMods[159][0] = {1162, 1158, 0, 0};
	vehicleMods[159][2] = {1067, 1068, 0, 0};
	vehicleMods[159][3] = {1069, 1070, 0, 0};
	vehicleMods[159][6] = {1065, 1066, 0, 0};
	vehicleMods[159][10] = {1160, 1173, 0, 0};
	vehicleMods[159][11] = {1159, 1161, 0, 0};
	vehicleMods[160][0] = {1138, 1139, 0, 0};
	vehicleMods[160][2] = {1032, 1033, 0, 0};
	vehicleMods[160][3] = {1026, 1031, 0, 0};
	vehicleMods[160][6] = {1028, 1029, 0, 0};
	vehicleMods[160][10] = {1169, 1170, 0, 0};
	vehicleMods[160][11] = {1141, 1140, 0, 0};
	vehicleMods[161][0] = {1058, 1060, 0, 0};
	vehicleMods[161][2] = {1055, 1061, 0, 0};
	vehicleMods[161][3] = {1056, 1057, 0, 0};
	vehicleMods[161][6] = {1064, 1059, 0, 0};
	vehicleMods[161][10] = {1155, 1157, 0, 0};
	vehicleMods[161][11] = {1154, 1156, 0, 0};
	vehicleMods[162][0] = {1147, 1146, 0, 0};
	vehicleMods[162][2] = {1035, 1038, 0, 0};
	vehicleMods[162][3] = {1036, 1039, 0, 0};
	vehicleMods[162][6] = {1034, 1037, 0, 0};
	vehicleMods[162][10] = {1171, 1172, 0, 0};
	vehicleMods[162][11] = {1149, 1148, 0, 0};
	vehicleMods[165][0] = {1049, 1050, 0, 0};
	vehicleMods[165][2] = {1054, 1053, 0, 0};
	vehicleMods[165][3] = {1047, 1048, 0, 0};
	vehicleMods[165][6] = {1046, 1045, 0, 0};
	vehicleMods[165][10] = {1153, 1152, 0, 0};
	vehicleMods[165][11] = {1150, 1151, 0, 0};
	vehicleMods[167][2] = {1130, 1131, 0, 0};
	vehicleMods[167][3] = {1133, 0, 0, 0};
	vehicleMods[167][6] = {1129, 1132, 0, 0};
	vehicleMods[167][10] = {1189, 1188, 0, 0};
	vehicleMods[167][11] = {1187, 1186, 0, 0};
	vehicleMods[175][3] = {1042, 0, 0, 0};
	vehicleMods[175][6] = {1044, 1043, 0, 0};
	vehicleMods[175][10] = {1174, 1175, 0, 0};
	vehicleMods[175][11] = {1176, 1177, 0, 0};
	vehicleMods[176][3] = {1137, 1134, 0, 0};
	vehicleMods[176][6] = {1136, 1135, 0, 0};
	vehicleMods[176][10] = {1191, 1190, 0, 0};
	vehicleMods[176][11] = {1192, 1193, 0, 0};
	vehicleMods[180][0] = {1001, 1023, 0, 0};
	vehicleMods[180][2] = {1006, 0, 0, 0};
	vehicleMods[180][3] = {1007, 0, 0, 0};
	vehicleMods[180][6] = {1018, 1020, 0, 0};
	vehicleMods[185][0] = {1001, 1003, 1023, 0};
	vehicleMods[185][2] = {1006, 0, 0, 0};
	vehicleMods[185][3] = {1007, 0, 0, 0};
	vehicleMods[185][4] = {1013, 0, 0, 0};
	vehicleMods[185][6] = {1018, 1019, 1020, 0};
	vehicleMods[185][12] = {1143, 1145, 0, 0};
	vehicleMods[189][0] = {1000, 1016, 0, 0};
	vehicleMods[189][1] = {1005, 1004, 0, 0};
	vehicleMods[189][2] = {1006, 0, 0, 0};
	vehicleMods[189][3] = {1007, 0, 0, 0};
	vehicleMods[189][4] = {1013, 1024, 0, 0};
	vehicleMods[189][6] = {1018, 1020, 0, 0};
	vehicleMods[189][12] = {1145, 0, 0, 0};
	vehicleMods[200][1] = {1004, 1005, 0, 0};
	vehicleMods[200][2] = {1006, 0, 0, 0};
	vehicleMods[200][3] = {1007, 0, 0, 0};
	vehicleMods[200][4] = {1013, 0, 0, 0};
	vehicleMods[200][6] = {1018, 1020, 1022, 0};
	vehicleMods[203][0] = {1001, 1023, 0, 0};
	vehicleMods[203][2] = {1006, 0, 0, 0};
	vehicleMods[203][3] = {1007, 0, 0, 0};
	vehicleMods[203][4] = {1024, 0, 0, 0};
	vehicleMods[203][6] = {1019, 1020, 0, 0};
	vehicleMods[203][12] = {1143, 1145, 0, 0};

	EventInfo[EventRequest] = 999;
	EventInfo[EventCreator] = 999;
	for(new x; x < sizeof(EventInfo[EventStaff]); x++) {
		EventInfo[EventStaff][x] = 999;
	}
	SetVehicleHealth(LSPDVehicles[33], 2500.0);
	SetVehicleHealth(FBIVehicles[12], 2500.0);
	SetVehicleHealth(LSPDVehicles[19], 2500.0);
	SetVehicleHealth(LSPDVehicles[20], 2500.0);
	SetVehicleHealth(LSPDVehicles[21], 2500.0);
	SetVehicleHealth(LSPDVehicles[22], 2500.0);

	//mysql_query("TRUNCATE TABLE connections", THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	return 1;
}

public OnGameModeExit()
{
	SaveHouses();
	SaveDynamicMapIcons();
	SaveFamilies();
	SaveGates();
	SaveFamiliesHQ();
	SaveDynamicDoors();
	return 1;
}

forward FixHour(hour);
public FixHour(hour)
{
	hour = timeshift + hour;
	if(hour < 0)
	{
		hour = hour+24;
	}
	else if(hour > 23)
	{
		hour = hour-24;
	}
	shifthour = hour;
	return 1;
}

//----------------------[Remove Bomb]-----------------------
forward PickUpC4(playerid);
public PickUpC4(playerid)
{
   	DestroyDynamicObject(PlayerInfo[playerid][pC4]);
   	PlayerInfo[playerid][pC4] = 0;
	return 1;
}

forward SetPlayerFree(playerid,declare,reason[]);
public SetPlayerFree(playerid,declare,reason[])
{
	if(IsPlayerConnected(playerid))
	{
		ClearCrime(playerid);
		new turned[MAX_PLAYER_NAME];
		new turner[MAX_PLAYER_NAME];
		new crbjstore[128];
		if(declare == INVALID_PLAYER_ID)
		{
			format(turner, sizeof(turner), "911");
		}
		else
		{
			if(IsPlayerConnected(declare))
			{
				GetPlayerName(declare, turner, sizeof(turner));
			}
		}
		GetPlayerName(playerid, turned, sizeof(turned));
		foreach(Player, i)
		{
			if(IsACop(i))
			{
				format(crbjstore, sizeof(crbjstore), "Merkez: Tm birimler, memur %s grevini baaryla tamamlad.",turner);
				SendClientMessage(i, COLOR_DBLUE, crbjstore);
				format(crbjstore, sizeof(crbjstore), "Merkez: %s adl sulu veritabanna ilendi, %s.",turned,reason);
				SendClientMessage(i, COLOR_DBLUE, crbjstore);
			}
		}
	}
}

public OnPlayerRequestClass(playerid, classid)
{
	/*SetPlayerPos(playerid, 1958.3783, 1343.1572, 15.3746);
	SetPlayerCameraPos(playerid, 1958.3783, 1343.1572, 15.3746);
	SetPlayerCameraLookAt(playerid, 1958.3783, 1343.1572, 15.3746);*/
	SpawnPlayer(playerid);
	return 1;
}

stock IsStringAlphaNumeric(string[]) {
	new
	    i;

	static const
 		szAppropriateCharacters[] = { "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_" };

	for(new c = 0; c < strlen(string); c++) {
	    for(new f = 0; f < sizeof(szAppropriateCharacters); f++) {
            if(string[c] == szAppropriateCharacters[f])
                i++;
		}
	}

	if(i < strlen(string)) return 0;

	return 1;
}

stock ResetPlayerVariables(playerid) {
	ResetPlayerWeapons(playerid);
	if(AdminDuty[playerid] != 0) {
		TogglePlayerControllable(playerid, 1);
        ClearAnimations(playerid, 1);

		SetPVarInt(playerid, "washereforpaycheck", WasHereForPaycheck[playerid]);
		SetPVarInt(playerid, "signedpaycheck", SignedPaycheck[playerid]);
		SetPVarInt(playerid, "missedpaychecks", MissedPaychecks[playerid]);
		SetPVarInt(playerid, "paycheckcode", PayCheckCode[playerid]);
		SetPVarInt(playerid, "payready", PlayerInfo[playerid][pPayReady]);
		SetPVarInt(playerid, "paycheck", PlayerInfo[playerid][pPayCheck]);
		AdminLoggedInBefore[playerid] = 1;
		AdminDuty[playerid] = 0;
		DeletePVar(playerid, "AdminUndercover");

		new username[MAX_PLAYER_NAME];
		GetPVarString(playerid, "TempNameName", username, sizeof(username));
		SetPVarInt(playerid, "TempName", 0);

		SetPlayerName(playerid, username);
	} else {
		AdminRelogPassword[playerid][0] = 0;
		AdminLoggedInBefore[playerid] = 0;
		for(new i = 0; i < 3; i++)
		{
			TeleportDest[playerid][i] = 0;
		}
		for(new i = 0; i < 3; i++)
		{
			TeleportDest2[playerid][i] = 0;
		}
		IsBoundsShowingFFC[playerid] = 0;
		IsBoundsShowingMP1[playerid] = 0;
		IsBoundsShowingMF1[playerid] = 0;
		IsBoundsShowingMP2[playerid] = 0;
		IsBoundsShowingMF2[playerid] = 0;
		IsBoundsShowingAEC[playerid] = 0;
		IsBoundsShowingDH[playerid] = 0;
		IsBoundsShowingCL[playerid] = 0;
		IsBoundsShowingDF[playerid] = 0;
		GlobalChat[playerid] = 0;
		GlobalChatTimer[playerid] = 0;
		// Start of boombox
		BoomBoxSet[playerid] = 0;
		BoomboxInfo[playerid][bbPosX] = 0.0;
		BoomboxInfo[playerid][bbPosY] = 0.0;
		BoomboxInfo[playerid][bbPosZ] = 0.0;
		BoomboxInfo[playerid][bbInt] = 0;
		BoomboxInfo[playerid][bbVW] = 0;
		BoomboxInfo[playerid][bbStation] = 0;
		BoomboxInfo[playerid][bbSetBy] = 999;
		BoomboxInfo[playerid][bbObject] = 0;
		// End of boombox
		ValidArmor[playerid] = 0;
		ResetPlayerWeapons(playerid);
		// Weapons
		for(new s = 0; s < 12; s++)
		{
			PlayerInfo[playerid][pAGuns][s] = 0; // Admin spawned, non-saved
			PlayerInfo[playerid][pGuns][s] = 0;
		}
		for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
		{
			PlayerVehicleInfo[playerid][v][pvId] = INVALID_PLAYER_VEHICLE_ID;
			PlayerVehicleInfo[playerid][v][pvRealID] = 0;
			PlayerVehicleInfo[playerid][v][pvModelId] = 0;
			PlayerVehicleInfo[playerid][v][pvPosX] = 0.0;
			PlayerVehicleInfo[playerid][v][pvPosY] = 0.0;
			PlayerVehicleInfo[playerid][v][pvPosZ] = 0.0;
			PlayerVehicleInfo[playerid][v][pvPosAngle] = 0.0;
			PlayerVehicleInfo[playerid][v][pvLock] = 0;
			PlayerVehicleInfo[playerid][v][pvLocked] = 0;
			PlayerVehicleInfo[playerid][v][pvPaintJob] = -1;
			PlayerVehicleInfo[playerid][v][pvColor1] = 0;
			PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
			PlayerVehicleInfo[playerid][v][pvSpawned] = 0;
			PlayerVehicleInfo[playerid][v][pvColor2] = 0;
			PlayerVehicleInfo[playerid][v][pvPrice] = 0;
			PlayerVehicleInfo[playerid][v][pvTicket] = 0;
			PlayerVehicleInfo[playerid][v][pvWeapons][0] = 0;
			PlayerVehicleInfo[playerid][v][pvWeapons][1] = 0;
			PlayerVehicleInfo[playerid][v][pvWeapons][2] = 0;
			PlayerVehicleInfo[playerid][v][pvWepUpgrade] = 0;
			PlayerVehicleInfo[playerid][v][pvFuel] = 100.0;
			PlayerVehicleInfo[playerid][v][pvAllowedplayerid] = INVALID_PLAYER_ID;
			PlayerVehicleInfo[playerid][v][pvPark] = 0;
			ListItemReleaseId[playerid][v] = -1;
			PlayerVehicleInfo[playerid][v][pvDisabled] = 0;
			PlayerVehicleInfo[playerid][v][pvSpawned] = 0;
			format(PlayerVehicleInfo[playerid][v][pvNumberPlate], 32, "");
			ListItemTrackId[playerid][v] = -1;
			for(new m = 0; m < MAX_MODS; m++)
			{
				PlayerVehicleInfo[playerid][v][pvMods][m] = 0;
			}
		}
		for(new v = 0; v < MAX_PLAYERVEHICLES; v++) {
			PlayerVehicleInfo[playerid][v][pvAllowedplayerid] = INVALID_PLAYER_ID;
		}
	}
	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);

	DeletePVar(playerid, "PBM");
	DeletePVar(playerid, "PBMK");
	DeletePVar(playerid, "PBMD");
	DeletePVar(playerid, "PBMS");
	DeletePVar(playerid, "Injured");
	DeletePVar(playerid, "EventToken");
	DeletePVar(playerid, "EventAnims");
	SetPVarInt(playerid, "IsInArena", -1);
	SetPVarInt(playerid, "MovingStretcher", -1);
	SetPVarInt(playerid, "editingcd", -1);
	SetPVarInt(playerid, "editingcdveh", -1);

	SetPVarInt(playerid, "AdminUndercover", 0);

	SetPlayerColor(playerid,TEAM_HIT_COLOR);

	if(IsValidDynamic3DTextLabel(Helper[playerid])) DestroyDynamic3DTextLabel(Helper[playerid]);

	// Player file variables (kayitseg)
	if(GetPVarInt(playerid, "attemptLoginAfter") == 0)
		PlayerInfo[playerid][pKey] = 0;

	PlayerInfo[playerid][pID] = 0;
	PlayerInfo[playerid][pLiveBanned] = 0;
	PlayerInfo[playerid][pLevel] = 1;
	PlayerInfo[playerid][pAdmin] = 0;
	format(PlayerInfo[playerid][pAdminName], 32, "0");
	PlayerInfo[playerid][pBanAppealer] = 0;
	PlayerInfo[playerid][pBanned] = 0;
	PlayerInfo[playerid][pPermaBanned] = 0;
	PlayerInfo[playerid][pDisabled] = 0;
	PlayerInfo[playerid][pIP] = 0;
	PlayerInfo[playerid][pReg] = 0;
	PlayerInfo[playerid][pTut] = 0;
	PlayerInfo[playerid][pSex] = 1;
	PlayerInfo[playerid][pGangMod] = 0;
	PlayerInfo[playerid][pAge] = 0;
	PlayerInfo[playerid][pSkin] = 311;
	PlayerInfo[playerid][pPos_x] = 0;
	PlayerInfo[playerid][pPos_y] = 0;
	PlayerInfo[playerid][pPos_z] = 3.14;
	PlayerInfo[playerid][pPos_r] = 0;
	PlayerInfo[playerid][pConnectTime] = 0;
	PlayerInfo[playerid][pRespect] = 0;
	PlayerInfo[playerid][pNumber] = 0;
	PlayerInfo[playerid][pWarns] = 0;
	PlayerInfo[playerid][pGang] = 255;
	PlayerInfo[playerid][pTriageTime] = 0;
	PlayerInfo[playerid][pFaction] = 0;
	PlayerInfo[playerid][pLeader] = 0;
	PlayerInfo[playerid][pRank] = 0;
	PlayerInfo[playerid][pJob] = 0;
	PlayerInfo[playerid][pJob2] = 0;
	PlayerInfo[playerid][pDonator] = 0;
	PlayerInfo[playerid][gPupgrade] = 0;
	PlayerInfo[playerid][pSarmor] = 0;
	PlayerInfo[playerid][pCash] = 3000;
	TalkingLive[playerid] = INVALID_PLAYER_ID;
	PlayerInfo[playerid][pBank] = 0;
	PlayerInfo[playerid][pInsurance] = 0;
	PlayerInfo[playerid][pCrimes] = 0;
	PlayerInfo[playerid][pArrested] = 0;
	PlayerInfo[playerid][pWantedLevel] = 0;
	PlayerInfo[playerid][pHealth] = 100;
	PlayerInfo[playerid][pArmor] = 0;
	PlayerInfo[playerid][pPot] = 0;
	PlayerInfo[playerid][pCrack] = 0;
	PlayerInfo[playerid][pPackages] = 0;
	PlayerInfo[playerid][pCrates] = 0;
	PlayerInfo[playerid][pRadio] = 0;
	PlayerInfo[playerid][pRadioFreq] = 0;
	PlayerInfo[playerid][pMats] = 0;
	PlayerInfo[playerid][pRope] = 0;
	PlayerInfo[playerid][pCigar] = 0;
	PlayerInfo[playerid][pSprunk] = 0;
	PlayerInfo[playerid][pSpraycan] = 0;
	PlayerInfo[playerid][pHouse] = INVALID_HOUSE_ID;
	PlayerInfo[playerid][pHouse2] = INVALID_HOUSE_ID;
	PlayerInfo[playerid][pRenting] = INVALID_HOUSE_ID;
	PlayerInfo[playerid][pInt] = 0;
	PlayerInfo[playerid][pVW] = 0;
	PlayerInfo[playerid][pJailed] = 0;
	PlayerInfo[playerid][pJailTime] = 0;
	PlayerInfo[playerid][pPayCheck] = 0;
	PlayerInfo[playerid][pPayReady] = 0;
	PlayerInfo[playerid][pDetSkill] = 0;
	PlayerInfo[playerid][pLawSkill] = 0;
	PlayerInfo[playerid][pSexSkill] = 0;
	PlayerInfo[playerid][pDrugsSkill] = 0;
	PlayerInfo[playerid][pSmugSkill] = 0;
	PlayerInfo[playerid][pArmsSkill] = 0;
	PlayerInfo[playerid][pMechSkill] = 0;
	PlayerInfo[playerid][pBoxSkill] = 0;
	PlayerInfo[playerid][pTruckSkill] = 0;
	PlayerInfo[playerid][pCarSkill] = 0;
	PlayerInfo[playerid][pLawyerTime] = 0;
	PlayerInfo[playerid][pLawyerFreeTime] = 0;
	PlayerInfo[playerid][pDrugsTime] = 0;
	PlayerInfo[playerid][pMechTime] = 0;
	PlayerInfo[playerid][pSexTime] = 0;
	PlayerInfo[playerid][pCarTime] = 0;
	PlayerInfo[playerid][pWeedObject] = 0;
	PlayerInfo[playerid][pWeedPos][0] = 0;
	PlayerInfo[playerid][pWeedPos][1] = 0;
	PlayerInfo[playerid][pWeedPos][2] = 0;
	PlayerInfo[playerid][pWeedVW] = 0;
	PlayerInfo[playerid][pWeedInt] = 0;
	PlayerInfo[playerid][pWeedGrowth] = -1;
	PlayerInfo[playerid][pWSeeds] = 0;
	PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_NORMAL;
	PlayerInfo[playerid][pScrewdriver] = 0;
	PlayerInfo[playerid][pSmslog] = 0;
	PlayerInfo[playerid][pTire] = 0;
	PlayerInfo[playerid][pFirstaid] = 0;
	PlayerInfo[playerid][pRccam] = 0;
	PlayerInfo[playerid][pReceiver] = 0;
	PlayerInfo[playerid][pGPS] = 0;
	PlayerInfo[playerid][pSweep] = 0;
	PlayerInfo[playerid][pSweepLeft] = 0;
	PlayerInfo[playerid][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID; // non-saved
	PlayerInfo[playerid][pVehicleKeysFrom] = INVALID_PLAYER_ID; // non-saved
	PlayerInfo[playerid][pCarLic] = 1;
	PlayerInfo[playerid][pFlyLic] = 0;
	PlayerInfo[playerid][pBoatLic] = 1;
	PlayerInfo[playerid][pGunLic] = 1;
	PlayerInfo[playerid][pDivision] = 0;
	PlayerInfo[playerid][pTicketTime] = 0;
	PlayerInfo[playerid][pHeadValue] = 0;
	strcpy(PlayerInfo[playerid][pContractBy], "Nobody", 64);
	strcpy(PlayerInfo[playerid][pContractDetail], "Yok", 64);
	PlayerInfo[playerid][pC4] = 0;
	PlayerInfo[playerid][pC4Used] = 0;
	PlayerInfo[playerid][pBombs] = 0;
	PlayerInfo[playerid][pCHits] = 0;
	PlayerInfo[playerid][pFHits] = 0;
	strcpy(PlayerInfo[playerid][pPrisonedBy], "Nobody", 64);
	strcpy(PlayerInfo[playerid][pPrisonReason], "Yok", 64);
	PlayerInfo[playerid][pAcceptReport] = 0;
	format(HelperKanal[playerid][kName], 32, "Yok");
	format(HelperKanal[playerid][kAcceptName], 32, "Yok");
	HelperKanal[playerid][kCount] = false;
	PlayerInfo[playerid][pTrashReport] = 0;
	PlayerInfo[playerid][pAccent] = 0;
	PlayerInfo[playerid][pNMute] = 0;
	PlayerInfo[playerid][pNMuteTotal] = 0;
	PlayerInfo[playerid][pADMute] = 0;
	PlayerInfo[playerid][pADMuteTotal] = 0;
	PlayerInfo[playerid][pRMuted] = 0;
	PlayerInfo[playerid][pRMutedTotal] = 0;
	PlayerInfo[playerid][pRMutedTime] = 0;
	PlayerInfo[playerid][pSpeedo] = 0;
	PlayerInfo[playerid][pGCMuted] = 0;
	PlayerInfo[playerid][pGCMutedTime] = 0;
	PlayerInfo[playerid][pCallsAccepted] = 0;
	PlayerInfo[playerid][pPatientsDelivered] = 0;
	PlayerInfo[playerid][pTriageTime] = 0;
	for(new v = 0; v < MAX_PLAYERTOYS; v++)
	{
		PlayerToyInfo[playerid][v][ptModelID] = 0;
		PlayerToyInfo[playerid][v][ptBone] = 1;
        PlayerToyInfo[playerid][v][ptRealID] = 0;
		PlayerToyInfo[playerid][v][ptPosX] = 0.0;
		PlayerToyInfo[playerid][v][ptPosY] = 0.0;
		PlayerToyInfo[playerid][v][ptPosZ] = 0.0;
		PlayerToyInfo[playerid][v][ptRotX] = 0.0;
		PlayerToyInfo[playerid][v][ptRotY] = 0.0;
		PlayerToyInfo[playerid][v][ptRotZ] = 0.0;
		PlayerToyInfo[playerid][v][ptScaleX] = 1.0;
		PlayerToyInfo[playerid][v][ptScaleY] = 1.0;
		PlayerToyInfo[playerid][v][ptScaleZ] = 1.0;
	}
	PlayerInfo[playerid][pKillLog0][0] = 0;
	PlayerInfo[playerid][pKillLog1][0] = 0;
	PlayerInfo[playerid][pKillLog2][0] = 0;
	PlayerInfo[playerid][pKillLog3][0] = 0;
	PlayerInfo[playerid][pKillLog4][0] = 0;
	PlayerInfo[playerid][pKillLog5][0] = 0;
	PlayerInfo[playerid][pKillLog6][0] = 0;
	PlayerInfo[playerid][pKillLog7][0] = 0;
	PlayerInfo[playerid][pKillLog8][0] = 0;
	PlayerInfo[playerid][pRMutedTime] = 0;
	PlayerInfo[playerid][pRMutedTotal] = 0;
	PlayerInfo[playerid][pPatientsDelivered] = 0;
	PlayerInfo[playerid][pKillLog9][0] = 0;
	strcpy(PlayerInfo[playerid][pFlag], "", 128);
	strcpy(PlayerInfo[playerid][pReferredBy], "0", 32);
	PlayerInfo[playerid][pRefTokens] = 0;
    PlayerInfo[playerid][pRefTokensOffline] = 0;
    PlayerInfo[playerid][pHelper] = 0;
	PlayerInfo[playerid][pWalkStyle] = 0;
	PlayerInfo[playerid][pGate1] = 0;
	PlayerInfo[playerid][pGate2] = 0;
	PlayerInfo[playerid][pGate3] = 0;
	PlayerInfo[playerid][pBlindfold] = 0;
    PlayerInfo[playerid][pGas] = 0;

	// Other player variables (non-saving)
	for(new s = 0; s < 40; s++)
	{
		ListItemReportId[playerid][s] = -1;
	}
	for(new i = 0; i < 6; i++)
	{
		HHcheckFloats[playerid][i] = 0;
	}
	HHcheckInt[playerid] = 0;
	HHcheckVW[playerid] = 0;
	for(new i = 0; i < 3; i++) {
		StopaniFloats[playerid][i] = 0;
	}
	SetPVarInt(playerid, "NameChangeCost", 0);
	JustSuicided[playerid] = 0;
	FuelBar[playerid] = INVALID_BAR_ID;
	HelperPM[playerid] = INVALID_PLAYER_ID;
	SpeakerPhone[playerid] = 0;
	LastSMS[playerid] = 0;
	PlayerDragged[playerid] = 0;
	PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
	IsCopDragging[playerid] = INVALID_PLAYER_ID;
	PaintballTeam[playerid] = 0;
	EventTeam[playerid] = -1;
	TeleportDestInt[playerid] = 0;
	TeleportDestInt2[playerid] = 0;
	gPlayerAccount[playerid] = 0;
	gPlayerLogTries[playerid] = 0;
	gPlayerLogged[playerid] = 0;
	InsideMainMenu[playerid] = 1;
	InsideTut[playerid] = 1;
	ActiveChatbox[playerid] =  0;
	PlayerCuffed[playerid] = 0;
	Spectate[playerid] = 999;
	Spectating[playerid] = 0;
	GettingSpectated[playerid] = 999;
	InsideShamal[playerid]= INVALID_VEHICLE_ID;
	HouseOffer[playerid] = 999;
	House[playerid] = 0;
	HousePrice[playerid] = 0;
	hInviteHouse[playerid]=INVALID_HOUSE_ID;
	hInviteOffer[playerid]=999;
	playerTabbed[playerid] = 0;
 	playerTabbedTime[playerid] = 0;
	playerAFK[playerid] = 0;
	playerAFKTime[playerid] = 0;
	playerLastTyped[playerid] = 0;
	pCurrentWeapon[playerid] = 0;
	JetPack[playerid] = 0;
	TextSpamTimes[playerid] = 0;
	TextSpamUnmute[playerid] = 0;
 	CommandSpamTimes[playerid] = 0;
	CommandSpamUnmute[playerid] = 0;
	gLastCar[playerid] = 0;
	LiveOffer[playerid] = INVALID_PLAYER_ID;
	IsTheReporter[playerid] = 0;
	GettingJob[playerid] = 0;
	GettingJob2[playerid] = 0;
	PayCheckCode[playerid] = 0;
	AdminDuty[playerid] = 0;
	FindTimePoints[playerid] = 0;
	FindingPlayer[playerid] = 0;
	FindTime[playerid] = 0;
	UsedFind[playerid] = 0;
	Condom[playerid] = 0;
	SexOffer[playerid] = 999;
	SexPrice[playerid] = 0;
	gFam[playerid] = 0;
	InviteOffer[playerid]=999;
	InviteFaction[playerid]=0;
	InviteFamily[playerid]=255;
	PotOffer[playerid] = 999;
	CrackOffer[playerid] = 999;
	PotPrice[playerid]=0;
	CrackPrice[playerid]=0;
	PotGram[playerid]=0;
	CrackGram[playerid]=0;
	JobDuty[playerid]=0;
	WantLawyer[playerid]=0;
	CallLawyer[playerid]=0;
	JailPrice[playerid]=0;
	DefendOffer[playerid] = 999;
	DefendPrice[playerid] = 0;
	CP[playerid] = 0;
	GuardOffer[playerid] = 999;
 	GuardPrice[playerid]=0;
 	GunOffer[playerid] = 999;
  	GunId[playerid] = 0;
   	GunMats[playerid] = 0;
	MatsOffer[playerid] = 999;
	MatsPrice[playerid] = 0;
	MatsAmount[playerid] = 0;
	PlayerBoxing[playerid]=0;
	BoxOffer[playerid] = 999;
	BoxWaitTime[playerid]=0;
	UsedCrack[playerid] = 0;
	UsedWeed[playerid] = 0;
	PlayerStoned[playerid] = 0;
	TransportDuty[playerid]=0;
	TransportValue[playerid] = 0;
	TransportMoney[playerid] = 0;
	TransportTime[playerid] = 0;
	TransportCost[playerid] = 0;
	TransportDriver[playerid] = 999;
	ConsumingMoney[playerid] = 0;
	BusCallTime[playerid]=0;
	BusAccepted[playerid] = 999;
	TaxiCallTime[playerid]=0;
	TaxiAccepted[playerid] = 999;
	DrinkOffer[playerid] =  INVALID_PLAYER_ID;
	CraftOffer[playerid] = 999;
	CraftId[playerid]=0;
	CraftMats[playerid]=0;
	VehicleSpawned[playerid] = 0;
	VehicleOffer[playerid] = 999;
	VehiclePrice[playerid] = 0;
	VehicleId[playerid] = -1;
	GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	HouseKey[playerid] = INVALID_HOUSE_ID;
	RepairCar[playerid]=0;
	OnDuty[playerid]=0;
	ConnectedToPC[playerid]=0;
	PlayerCuffedTime[playerid]=0;
	PhoneOnline[playerid] = 0;
	pTazer[playerid] = 0;
	pTazerReplace[playerid] = 0;
	TazerTimeout[playerid] = 0;
	TicketOffer[playerid] = 999;
	TicketMoney[playerid] = 0;
	arr_Towing[playerid] = INVALID_VEHICLE_ID;
	Fixr[playerid] = 0;
	gBug[playerid] = 1;
	GotHit[playerid]=0;
	GoChase[playerid]=999;
	GetChased[playerid]=999;
	HitOffer[playerid]=999;
	HitToGet[playerid]=999;
	JustReported[playerid] = -1;
	CancelReport[playerid] = -1;
	NewbieTimer[playerid] = 0;
	gNewbie[playerid] = 0;
	for(new i = 0; i < 6; i++) {
	    EventFloats[playerid][i] = 0.0;
	}
	EventLastInt[playerid] = 0; EventLastVW[playerid] = 0;
	Mobile[playerid]=INVALID_PLAYER_ID;
	CellTime[playerid] = 0;
	CalledCops[playerid]=0;
	CopsCallTime[playerid]=0;
	CalledMedics[playerid]=0;
	MedicsCallTime[playerid]=0;
	Music[playerid]=0;
	PlayerTied[playerid]=0;
	gRadio[playerid] = 1;
	CallCost[playerid] = 0;
    szAdvert[playerid][0] = 0;
	LoadTruckBar[playerid] = INVALID_BAR_ID;
	LoadTruckTime[playerid] = 0;
	TruckDeliver[playerid] = 0;
	TruckUsed[playerid] = INVALID_VEHICLE_ID;
	EMSCallTime[playerid]=0;
	EMSAccepted[playerid]=INVALID_PLAYER_ID;
	MedicCallTime[playerid]=0;
	MedicAccepted[playerid] = 999;
	MechanicCallTime[playerid]=0;
	DivorceOffer[playerid] = 999;
	MarryWitness[playerid] = 999;
	MarryWitnessOffer[playerid] = 999;
	MarriageCeremoney[playerid] = 0;
	ProposeOffer[playerid] = 999;
	ProposedTo[playerid] = 999;
	GotProposedBy[playerid] = 999;
	slotselection[playerid] = 0;
	ServiceTime[playerid] = 0;
	WasHereForPaycheck[playerid] = 0;
	SignedPaycheck[playerid] = 0;
	MissedPaychecks[playerid] = 0;
	HidePM[playerid] = 0;
	Backup[playerid] = 0;
	RadarActive[playerid] = 0;
	RadarWarning[playerid] = 0;
	FindingJob[playerid] = 0;
	FindingDealership[playerid] = 0;
	ShakeHandRequest[playerid] = 999;
	ShakeHandStyle[playerid] = 0;
	TutorialProgress[playerid] = 0;
	PhonePrivacy[playerid] = 0;
	MP3Station[playerid] = 0;

 	ClearCrime(playerid);
	ClearMarriage(playerid);

	if(AdminLoggedInBefore[playerid] == 1) {
		WasHereForPaycheck[playerid] = GetPVarInt(playerid, "washereforpaycheck");
		SignedPaycheck[playerid] = GetPVarInt(playerid, "signedpaycheck");
		MissedPaychecks[playerid] = GetPVarInt(playerid, "missedpaychecks");
		PayCheckCode[playerid] = GetPVarInt(playerid, "paycheckcode");
		PlayerInfo[playerid][pPayReady] = GetPVarInt(playerid, "payready");
		PlayerInfo[playerid][pPayCheck] = GetPVarInt(playerid, "paycheck");
	}

	DeletePVar(playerid, "washereforpaycheck");
	DeletePVar(playerid, "signedpaycheck");
	DeletePVar(playerid, "missedpaychecks");
	DeletePVar(playerid, "paycheckcode");
	DeletePVar(playerid, "payready");
	DeletePVar(playerid, "paycheck");


	// Removal of hell hole (VIP Lounge)
	RemoveBuildingForPlayer(playerid, 3999, 1785.9766, -1564.8594, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 4079, 1785.9766, -1564.8594, 25.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 4189, 1794.6172, -1576.7344, 17.7578, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1822.1563, -1543.7891, 12.6328, 0.25);
	
	// LSPD EXTERIOR
RemoveBuildingForPlayer(playerid, 4064, 1571.6016, -1675.7500, 35.6797, 0.25);
RemoveBuildingForPlayer(playerid, 3976, 1571.6016, -1675.7500, 35.6797, 0.25);

// VINEWOOD SIGN VINEWOOD TABELA

RemoveBuildingForPlayer(playerid, 13831, 1413.410, -804.742, 83.437, 0.250);
RemoveBuildingForPlayer(playerid, 13759, 1413.410, -804.742, 83.437, 0.250);
RemoveBuildingForPlayer(playerid, 13722, 1413.410, -804.742, 83.437, 0.250);
RemoveBuildingForPlayer(playerid, 13759, 1413.410, -804.742, 83.437, 0.250);


	
	// SAN News
	RemoveBuildingForPlayer(playerid, 6516, 717.687, -1357.280, 18.046, 0.250);
    RemoveBuildingForPlayer(playerid, 6490, 717.484, -1357.300, 20.296, 0.250);
    RemoveBuildingForPlayer(playerid, 6491, 717.484, -1357.300, 20.296, 0.250);


	
	//Seguel Mekan
	RemoveBuildingForPlayer(playerid, 3778, 337.4531, -1875.0000, 3.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 3615, 337.4531, -1875.0000, 3.4063, 0.25);


	
	// ------------------ ABD BAYRAKLAR ----------------------------------------
	
	RemoveBuildingForPlayer(playerid, 4003, 1481.0781, -1747.0313, 33.5234, 0.25); //TBMM
	RemoveBuildingForPlayer(playerid, 4192, 1591.6953, -1674.8516, 20.4922, 0.25); //LSPD

	
	// ---------------- OGUZHAN MAP CATI -----------------------------------------
	
	RemoveBuildingForPlayer(playerid, 1691, 1354.2109, -661.2656, 113.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1691, 1350.1719, -650.5547, 113.4063, 0.25);
    RemoveBuildingForPlayer(playerid, 1688, 1348.0547, -644.2969, 113.9922, 0.25);
    RemoveBuildingForPlayer(playerid, 1687, 1327.5625, -641.8672, 113.8125, 0.25);
    RemoveBuildingForPlayer(playerid, 1690, 1339.1094, -637.1094, 113.6641, 0.25);
    
    //------------------------------------------------------------------------------
	
    //----------------------------------------------------------------------------
	
	//Pizza Stack imento Mesle
	RemoveBuildingForPlayer(playerid, 1412, 1917.3203, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1912.0547, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1906.7734, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1927.8516, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1922.5859, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1938.3906, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1933.1250, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1821.1250, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1815.8594, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1810.5938, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1805.3281, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1948.9844, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1943.6875, -1797.4219, 13.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1412, 1951.6094, -1800.0625, 13.8125, 0.25);

	//kakal
	RemoveBuildingForPlayer(playerid, 5324, 2240.9375, -2590.6797, 18.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2114.5547, -1928.1875, 5.0313, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2113.3984, -1925.0391, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2115.6719, -1922.7656, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2123.3594, -1928.0703, 6.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2122.6563, -1916.7891, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2116.9297, -1916.0781, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2121.5078, -1909.5313, 10.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 2110.2734, -1906.5859, 5.0313, 0.25);
	
	//Beyaz Hastane Removeleri
	RemoveBuildingForPlayer(playerid, 4985, 1394.9453, -2286.1563, 17.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 615, 1328.0859, -1419.7578, 12.5859, 0.25);
	RemoveBuildingForPlayer(playerid, 5929, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1341.8516, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1328.0938, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 739, 1231.1406, -1356.2109, 12.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1374.6094, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1356.5547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 5812, 1230.8906, -1337.9844, 12.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1335.0547, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1317.7422, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1222.6641, -1300.9219, 12.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1240.9219, -1300.9219, 12.2969, 0.25);

	
	//LSPD Removebuilding
	RemoveBuildingForPlayer(playerid, 4057, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 4210, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1457.9375, -1620.6953, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 713, 1496.8672, -1707.8203, 13.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1467.9844, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1485.1719, -1727.6719, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1713.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1716.7031, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1713.7031, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1289, 1504.7500, -1711.8828, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1704.7656, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1702.3594, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1676.6875, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1445.0078, -1692.2344, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1656.2500, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1636.2344, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1445.8125, -1650.0234, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1433.7109, -1619.0547, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.7266, -1710.0625, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.6563, -1707.6875, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1704.6406, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1701.5703, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.6953, -1702.5313, 15.6250, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1457.5547, -1697.2891, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1694.0469, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1692.3906, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 4186, 1479.5547, -1693.1406, 19.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1461.1250, -1687.5625, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1463.0625, -1690.6484, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1458.6172, -1684.1328, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.2734, -1666.2969, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1468.9844, -1682.7188, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1471.4063, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1479.3828, -1682.3125, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1458.2578, -1659.2578, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1449.8516, -1655.9375, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1477.9375, -1652.7266, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.6094, -1653.2500, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1457.3516, -1650.5703, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1454.4219, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.8516, -1646.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.8984, -1651.5078, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1465.9375, -1639.8203, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1231, 1466.4688, -1637.9609, 15.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1449.5938, -1635.0469, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1467.7109, -1632.8906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8906, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1472.6641, -1627.8828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1479.4688, -1626.0234, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 3985, 1479.5625, -1631.4531, 12.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 4206, 1479.5547, -1639.6094, 13.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1465.8359, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1466.4844, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1451.3359, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1471.3516, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1704.5938, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 700, 1494.2109, -1694.4375, 13.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1693.7344, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1496.9766, -1686.8516, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 641, 1494.1406, -1689.2344, 11.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1488.7656, -1682.6719, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1480.6094, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1488.2266, -1666.1797, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.4063, -1651.3906, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.3672, -1646.3828, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1493.1328, -1639.4531, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1486.1797, -1627.7656, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1491.2188, -1632.6797, 13.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.4141, -1629.9766, 15.5313, 0.25);
	RemoveBuildingForPlayer(playerid, 1232, 1494.3594, -1608.3750, 15.3750, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1488.5313, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1498.0547, -1598.0938, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1288, 1504.7500, -1705.4063, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1287, 1504.7500, -1704.4688, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1286, 1504.7500, -1695.0547, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 1285, 1504.7500, -1694.0391, 13.5938, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.9609, -1684.6094, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.1641, -1662.0156, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1504.7188, -1670.9219, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 620, 1503.1875, -1621.1250, 11.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1501.2813, -1624.5781, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 673, 1498.3594, -1616.9688, 12.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1504.8906, -1596.7031, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 712, 1508.4453, -1668.7422, 22.2578, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1505.6953, -1654.8359, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1508.5156, -1647.8594, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 625, 1513.2734, -1642.4922, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1258, 1510.8906, -1607.3125, 13.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1721.6328, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1705.2734, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1693.9688, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1688.0859, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1229, 1524.2188, -1673.7109, 14.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1668.0781, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1524.8281, -1647.6406, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1226, 1525.3828, -1611.1563, 16.4219, 0.25);
	RemoveBuildingForPlayer(playerid, 1283, 1528.9531, -1605.8594, 15.6250, 0.25);

	SetSpawnInfo(playerid, 0, 299,  1970.506103, -1201.447143, -25.074676, 1.0, -1, -1, -1, -1, -1, -1);
	SpawnPlayer(playerid); // The player doesn't actually spawn before logging in, this is just to get rid of the annoying "<<", ">>" and "Spawn" buttons.
   	TogglePlayerControllable(playerid, 0);
	return 1;
}

public OnPlayerConnect(playerid) {
	new
	    szPlayerIP[16];

	// Code to patch a SA-MP exploit where you can connect to a SA-MP server multiple times with a bunch of names and completely rape the logs
	// We don't receive attacks like this very often, but I have produced the code so if we ever need it, we have it right in front of us. It requires testing though...
	/*new
	    szPlayerName[MAX_PLAYER_NAME],
	    szPlayerIP[16],
	    szPlayerIPs[16],
		szPlayerNames[MAX_PLAYER_NAME];

	GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME);
	GetPlayerIp(playerid, szPlayerIP, sizeof(szPlayerIP));

	foreach(Player, x) {
        GetPlayerName(x, szPlayerNames, MAX_PLAYER_NAME);
        GetPlayerIp(playerid, szPlayerIPs, sizeof(szPlayerIPs));
        if(strfind(szPlayerName, szPlayerNames, true) != -1 && !strcmp(szPlayerIPs, szPlayerIP, true) && IsStringAlphaNumeric(szPlayerNames) == 0)
			return BanEx(playerid, "NieXrlaM client spam attack attempt");
	}*/

	TotalConnect++;
	if(Iter_Count(Player) > MaxPlayersConnected)
	{
		MaxPlayersConnected = Iter_Count(Player);
		getdate(MPYear,MPMonth,MPDay);
	}

	GetPlayerIp(playerid, szPlayerIP, sizeof(szPlayerIP));
	GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 16);

	// Boombox Sistemi
    Boombox[playerid] = 0;
    BoomboxPlayer[playerid] = -1;
    BoomboxStream[playerid] = 0;
    bpos[playerid][0] = 0; bpos[playerid][1] = 0; bpos[playerid][2] = 0; bpos[playerid][3] = 0;
    format(BoomboxURL[playerid], 256, "");
    if(IsValidDynamicObject(BoomboxObject[playerid])) DestroyDynamicObject(BoomboxObject[playerid]);
	// Benzin
	isrefuelling[playerid] = 0;
	FuelBar[playerid] = INVALID_BAR_ID;

    if(!InvalidNameCheck(playerid)) return 1;
	if(CheckBan(szPlayerIP) == 1) {
	    SetPlayerName(playerid, "BannedPlayer");
	    SendClientMessage(playerid, COLOR_NEWS, "Master RPG'den banlandn. Forum sitesinden ban temyizi aabilirsin.");
		Kick(playerid);
		return 1;
	}
        SendClientMessage(playerid, COLOR_NEWS, "{000000}(({0077A3} Karakteriniz Veritabaninda Araniyor Ltfen Bekleyin.. {000000}))");
       PlayAudioStreamForPlayer(playerid, "http://k003.kiwi6.com/hotlink/0zity11qjo/Master_RPG.mp3");

	for(new i = 0; i < 11; i++) TextDrawShowForPlayer(playerid, giristxt[i]);
    KontrolEdildi[playerid] = 0;
	ResetPlayerVariables(playerid);
    SyncPlayerTime(playerid);
	SetTimerEx("Login", 1000, 0, "d", playerid);
	GameTextForPlayer(playerid, "",5000, 5);
	return 1;
}


// Zaman
forward SyncPlayerTime(playerid);
public SyncPlayerTime(playerid)
{
	new hour, minute, second;
	gettime(hour, minute, second);
	SetPlayerTime(playerid, hour, minute);
	return 1;
}


//-----------------[Get color code by name]----------------------
forward GetColorCode(clr[]);
public GetColorCode(clr[])
{
	new color = -1;

	if(IsNumeric(clr)) {
		color = strval(clr);
		return color;
	}

	if(strcmp(clr, "black", true)==0) color=0;
	if(strcmp(clr, "white", true)==0) color=1;
	if(strcmp(clr, "blue", true)==0) color=2;
	if(strcmp(clr, "red", true)==0) color=3;
	if(strcmp(clr, "green", true)==0) color=16;
	if(strcmp(clr, "purple", true)==0) color=5;
	if(strcmp(clr, "yellow", true)==0) color=6;
	if(strcmp(clr, "lightblue", true)==0) color=7;
	if(strcmp(clr, "navy", true)==0) color=94;
	if(strcmp(clr, "beige", true)==0) color=102;
	if(strcmp(clr, "darkgreen", true)==0) color=51;
	if(strcmp(clr, "darkblue", true)==0) color=103;
	if(strcmp(clr, "darkgrey", true)==0) color=13;
	if(strcmp(clr, "gold", true)==0) color=99;
	if(strcmp(clr, "brown", true)==0 || strcmp(clr, "dennell", true)==0) color=55;
	if(strcmp(clr, "darkbrown", true)==0) color=84;
	if(strcmp(clr, "darkred", true)==0) color=74;
	if(strcmp(clr, "maroon", true)==0) color=115;
	if(strcmp(clr, "pink", true)==0) color=126;
	return color;
}

stock HospitalSpawn(playerid)
{
	if(GetPVarInt(playerid, "DoktorMasrafi") == 1 && PlayerInfo[playerid][pJailed] == 0) {
		if(GetPVarInt(playerid, "Hospital") == 1 && PlayerInfo[playerid][pInsurance] == 0) {
			SetPlayerArmourEx(playerid, PlayerInfo[playerid][pSarmor]);

			if(PlayerInfo[playerid][pDonator] >= 2) SetPlayerHealth(playerid, 100.0);
				else SetPlayerHealth(playerid, 50.0);

			DeletePVar(playerid, "DoktorMasrafi");

			if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pFaction] != 3 && PlayerInfo[playerid][pLeader] != 3 && PlayerInfo[playerid][pLeader] != 5 && PlayerInfo[playerid][pFaction] != 5 && PlayerInfo[playerid][pFaction] != 2 && PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pConnectTime] > 8) {
				GivePlayerCash(playerid, -200);
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturas $200 geldi. yi gnler.");
			}
			else if(PlayerInfo[playerid][pConnectTime] < 9) SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan devlet tarafndan dendi. (8 saatten az oynadn iin)");
			else SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan oluum sigortan tarafndan dendi.");

			GameTextForPlayer(playerid, "~w~Sigortan yok, ~n~sigorta al!", 5000, 6);
			SendClientMessage(playerid, COLOR_WHITE, "(( Hastane ierisindeki sigorta alma noktasna bak. ))");

			SetPlayerPos(playerid, 1175.0586,-1324.2463,14.5938);
			SetPlayerFacingAngle(playerid, 268.9748);
            DeletePVar(playerid, "Hospital");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else if(GetPVarInt(playerid, "Hospital") == 2 && PlayerInfo[playerid][pInsurance] == 0) {
			SetPlayerArmourEx(playerid, PlayerInfo[playerid][pSarmor]);

			if(PlayerInfo[playerid][pDonator] >= 2) SetPlayerHealth(playerid, 100.0);
			else SetPlayerHealth(playerid, 50.0);

			DeletePVar(playerid, "DoktorMasrafi");

			if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pFaction] != 3 && PlayerInfo[playerid][pLeader] != 3 && PlayerInfo[playerid][pLeader] != 5 && PlayerInfo[playerid][pFaction] != 5 && PlayerInfo[playerid][pFaction] != 2 && PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pConnectTime] > 8) {
				GivePlayerCash(playerid, -200);
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturas $200 geldi. yi gnler.");
			}
			else if(PlayerInfo[playerid][pConnectTime] < 9) SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan devlet tarafndan dendi. (8 saatten az oynadn iin)");
			else SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan oluum sigortan tarafndan dendi.");

			GameTextForPlayer(playerid, "~w~Sigortan yok, ~n~sigorta al!", 5000, 6);
			SendClientMessage(playerid, COLOR_WHITE, "(( Hastane ierisindeki sigorta alma noktasna bak. ))");

			SetPlayerPos(playerid, 2034.2269,-1404.3459,17.2617);
			SetPlayerFacingAngle(playerid, 179.4258);
			DeletePVar(playerid, "Hospital");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);

		}
		if(GetPVarInt(playerid, "Hospital") == 1 && PlayerInfo[playerid][pInsurance] == 1) {
			SetPlayerArmourEx(playerid, PlayerInfo[playerid][pSarmor]);

			if(PlayerInfo[playerid][pDonator] >= 2) SetPlayerHealth(playerid, 100.0);
			else SetPlayerHealth(playerid, 50.0);

			DeletePVar(playerid, "DoktorMasrafi");

			if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pFaction] != 3 && PlayerInfo[playerid][pLeader] != 3 && PlayerInfo[playerid][pLeader] != 5 && PlayerInfo[playerid][pFaction] != 5 && PlayerInfo[playerid][pFaction] != 2 && PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pConnectTime] > 8) {
				GivePlayerCash(playerid, -150);
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturas $150 geldi. yi gnler.");
			}
			else if(PlayerInfo[playerid][pConnectTime] < 9) SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan devlet tarafndan dendi. (8 saatten az oynadn iin)");
			else SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan oluum sigortan tarafndan dendi.");

			SetPlayerPos(playerid, 1175.0586,-1324.2463,14.5938);
			SetPlayerFacingAngle(playerid, 268.9748);
            DeletePVar(playerid, "Hospital");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		} else if(GetPVarInt(playerid, "Hospital") == 2 && PlayerInfo[playerid][pInsurance] == 2) {
			SetPlayerArmourEx(playerid, PlayerInfo[playerid][pSarmor]);

			if(PlayerInfo[playerid][pDonator] >= 2) SetPlayerHealth(playerid, 100.0);
			else SetPlayerHealth(playerid, 50.0);

			DeletePVar(playerid, "DoktorMasrafi");

			if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pLeader] != 1 && PlayerInfo[playerid][pFaction] != 3 && PlayerInfo[playerid][pLeader] != 3 && PlayerInfo[playerid][pLeader] != 5 && PlayerInfo[playerid][pFaction] != 5 && PlayerInfo[playerid][pFaction] != 2 && PlayerInfo[playerid][pLeader] != 2 && PlayerInfo[playerid][pConnectTime] > 8) {
				GivePlayerCash(playerid, -150);
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturas $150 geldi. yi gnler.");
			}
			else if(PlayerInfo[playerid][pConnectTime] < 9) SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan devlet tarafndan dendi. (8 saatten az oynadn iin)");
			else SendClientMessage(playerid, TEAM_CYAN_COLOR, "Hastane faturan oluum sigortan tarafndan dendi.");

			SetPlayerPos(playerid, 2034.2269,-1404.3459,17.2617);
			SetPlayerFacingAngle(playerid, 179.4258);
			DeletePVar(playerid, "Hospital");
			SetCameraBehindPlayer(playerid);
			TogglePlayerControllable(playerid, 1);
		}
	}
}
stock GetPlayerID(playername[])
{
  for(new i = 0; i <= MAX_PLAYERS; i++)
  {
    if(IsPlayerConnected(i))
    {
      new playername2[MAX_PLAYER_NAME];
      GetPlayerName(i, playername2, sizeof(playername2));
      if(strcmp(playername2, playername, false))
      {
        return i;
      }
    }
  }
  return INVALID_PLAYER_ID;
}
stock HelperKontrol(playerid)
{
foreach(new i: Player)
{
if(!strcmp(HelperKanal[i][kName], nPlayerName(playerid), false))
{
playerid = GetPlayerID(HelperKanal[i][kAcceptName]);
SendClientMessage(playerid, -1, "Size yardm eden helper oyundan k yapt!");
format(HelperKanal[playerid][kName], 32, "Yok");
format(HelperKanal[i][kAcceptName], 32, "Yok");
HelperKanal[playerid][kCount] = false;
HelperKanal[i][kCount] = false;
return 1;
}
else if(!strcmp(HelperKanal[i][kAcceptName], nPlayerName(playerid), false))
{
playerid = GetPlayerID(HelperKanal[i][kName]);
SendClientMessage(i, -1, "Yardm ettiiniz oyuncu oyundan kt!");
format(HelperKanal[i][kName], 32, "Yok");
format(HelperKanal[playerid][kAcceptName], 32, "Yok");
HelperKanal[i][kCount] = false;
HelperKanal[playerid][kCount] = false;
return 1;
}
}
return -1;
}
public OnPlayerDisconnect(playerid, reason)
{
	HelperKontrol(playerid);
    // Crash Fix
	new name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	if(!strcmp(name, "InvalidNick", true)) return 1;
	if(!strcmp(name, "BannedPlayer", true)) return 1;
	if(playerid == MAX_PLAYERS) return 1;

	if(AdminDuty[playerid] == 1) {
		WasHereForPaycheck[playerid] = GetPVarInt(playerid, "washereforpaycheck");
		SignedPaycheck[playerid] = GetPVarInt(playerid, "signedpaycheck");
		MissedPaychecks[playerid] = GetPVarInt(playerid, "missedpaychecks");
		PayCheckCode[playerid] = GetPVarInt(playerid, "paycheckcode");
		PlayerInfo[playerid][pPayReady] = GetPVarInt(playerid, "payready");
		PlayerInfo[playerid][pPayCheck] = GetPVarInt(playerid, "paycheck");
	}
	AdminDuty[playerid] = 0;
	AdminLoggedInBefore[playerid] = 0;
	DeletePVar(playerid, "washereforpaycheck");
	DeletePVar(playerid, "signedpaycheck");
	DeletePVar(playerid, "missedpaychecks");
	DeletePVar(playerid, "paycheckcode");
	DeletePVar(playerid, "payready");
	DeletePVar(playerid, "paycheck");

	if(GetPVarInt(playerid, "PBM") > 0) {
		new
		    szMessage[64];
		format(szMessage, sizeof(szMessage), "%s adl oyuncu paintballdan ayrld(dt).", GetPlayerNameEx(playerid));
		foreach(Player, i) {
			if(GetPVarInt(i, "PBM") > 0 && GetPVarInt(i, "PBM") == GetPVarInt(playerid, "PBM") && i != playerid)
			    SendClientMessage(i, COLOR_RED, szMessage);
		}
		DeletePVar(playerid, "PBMK");
		DeletePVar(playerid, "PBMD");
		DeletePVar(playerid, "PBMS");
		DeletePVar(playerid, "IsFrozen");
		PaintballTeam[playerid] = 0;
		SetPlayerHealth(playerid, GetPVarFloat(playerid, "pbhealth"));
		SetPlayerArmourEx(playerid, GetPVarFloat(playerid, "pbarmour"));
		DeletePVar(playerid, "pbhealth");
		DeletePVar(playerid, "pbarmour");
    }
    // Boombox Sistemi
	Boombox[playerid] = 0;
    BoomboxPlayer[playerid] = -1;
    BoomboxStream[playerid] = 0;
    bpos[playerid][0] = 0; bpos[playerid][1] = 0; bpos[playerid][2] = 0; bpos[playerid][3] = 0;
    format(BoomboxURL[playerid], 256, "");
    if(IsValidDynamicObject(BoomboxObject[playerid])) DestroyDynamicObject(BoomboxObject[playerid]);
    for(new i=0; i<MAX_PLAYERS; i++)
    {
        if(IsPlayerConnected(i))
        {
            if(BoomboxPlayer[i] == playerid)
            {
                BoomboxStream[i] = 0;
                BoomboxPlayer[i] = -1;
                StopAudioStreamForPlayer(i);
                SendClientMessage(i, COLOR_WHITE, "Boombox kaldrld!");
            }
        }
    }
 	if(GetPVarInt(playerid, "fuelonoff") == 1)
 	{
 	    HideProgressBarForPlayer(playerid, FuelBar[playerid]);
		SetPVarInt(playerid, "fuelonoff", 0);
		DestroyProgressBar(FuelBar[playerid]);
		FuelBar[playerid] = INVALID_BAR_ID;
	}

	if(pTazer[playerid] == 1) GivePlayerValidWeapon(playerid,pTazerReplace[playerid],60000);
	if(GetPVarInt(playerid, "Hiz Radari") == 1) GivePlayerValidWeapon(playerid, GetPVarInt(playerid, "RadarReplacement"), 60000);

	if(GetPVarInt(playerid, "PBM") == 0 && GetPVarInt(playerid, "EventToken") == 0 && AdminDuty[playerid] == 0) {
		new Float: fArmour;
		if(GetPlayerArmour(playerid, fArmour) < ValidArmor[playerid]) GetPlayerArmour(playerid, PlayerInfo[playerid][pArmor]);
		else PlayerInfo[playerid][pArmor] = ValidArmor[playerid];
		GetPlayerHealth(playerid, PlayerInfo[playerid][pHealth]);
	}

	if(IsCopDragging[playerid] != INVALID_PLAYER_ID)
	{
		PlayerDraggedBy[IsCopDragging[playerid]] = INVALID_PLAYER_ID;
		PlayerDragged[IsCopDragging[playerid]] = 0;
	}

	// print("[debug] step #2");

	if(GetPVarInt(playerid, "MovingStretcher") != -1) {
	    KillTimer(GetPVarInt(playerid, "TickEMSMove"));
	    DeletePVar(GetPVarInt(playerid, "MovingStretcher"), "OnStretcher");
	    SetPVarInt(playerid, "MovingStretcher", -1);
	}

	// print("[debug] step #3");

	if(IsValidDynamic3DTextLabel(Helper[playerid])) DestroyDynamic3DTextLabel(Helper[playerid]);

	if(IsValidDynamicObject(PlayerInfo[playerid][pWeedObject]))
	{
		DestroyDynamicObject(PlayerInfo[playerid][pWeedObject]);
	}

	if(IsValidDynamicObject(GetPVarInt(playerid, "SirenO")) && GetPVarInt(playerid, "SirenO") > 0) {
		DestroyDynamicObject(GetPVarInt(playerid, "SirenO"));
		DeletePVar(playerid, "SirenO");
	}

	// print("[debug] step #4");

	if(IsValidDynamicObject(BoomboxInfo[playerid][bbObject]))
	{
	    DestroyDynamicObject(BoomboxInfo[playerid][bbObject]);

   		foreach(Player, i)
		{
			if(IsPlayerInRangeOfPoint(i,150.0,BoomboxInfo[playerid][bbPosX],BoomboxInfo[playerid][bbPosY],BoomboxInfo[playerid][bbPosZ]) && GetPlayerInterior(i) == BoomboxInfo[playerid][bbInt] && GetPlayerVirtualWorld(i) == BoomboxInfo[playerid][bbVW])
			{
				StopAudioStreamForPlayer(i);
			}
		}
	}
    KontrolEdildi[playerid] = 0;
	// print("[debug] step #5");

	IsCopDragging[playerid] = INVALID_PLAYER_ID;
	PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
	PlayerDragged[playerid] = 0;

	// print("[debug] step #6");

	if(GetPVarInt(playerid, "PBM") < 1) {
		if(GetPVarInt(playerid, "Hospital") > 0) {
		    PlayerInfo[playerid][pHospital] = 1;
		}

		if(GetPVarInt(playerid, "Injured") == 1) {
		    PlayerInfo[playerid][pHospital] = 1;
		    KillEMSQueue(playerid);
	        ResetPlayerWeaponsEx(playerid);
		}
		PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
		GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
		GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
	}

	// print("[debug] step #7");

	if(PlayerInfo[playerid][pLockCar] != INVALID_VEHICLE_ID)
		vehicle_unlock_doors(PlayerInfo[playerid][pLockCar]);

	if(PlayerInfo[playerid][pVehicleKeysFrom] != INVALID_PLAYER_ID)
        PlayerVehicleInfo[PlayerInfo[playerid][pVehicleKeysFrom]][PlayerInfo[playerid][pVehicleKeys]][pvAllowedplayerid] = INVALID_PLAYER_ID;

 	InsideShamal[playerid] = INVALID_VEHICLE_ID;

	// print("[debug] step #9");

	if(GetPlayerSkin(playerid) == 155)
	    PlayerInfo[playerid][pSkin] = GetPVarInt(playerid, "NPS");

	if(InsideShamal[playerid] != INVALID_VEHICLE_ID) {
		if(InsideShamal[playerid] == INVALID_VEHICLE_ID || GetVehicleModel(InsideShamal[playerid]) != 519)
		{
			GivePlayerValidWeapon(playerid, 46, 60000);
			PlayerInfo[playerid][pPos_x] = 0.000000;
			PlayerInfo[playerid][pPos_y] = 0.000000;
			PlayerInfo[playerid][pPos_z] = 420.000000;
		}
		else
		{
			new Float:X, Float:Y, Float:Z;
			GetVehiclePos(InsideShamal[playerid], X, Y, Z);
			PlayerInfo[playerid][pPos_x] = X;
			PlayerInfo[playerid][pPos_y] = Y;
			PlayerInfo[playerid][pPos_z] = Z;

			new Float:XB, Float:YB, Float:ZB;
			GetVehiclePos(InsideShamal[playerid], XB, YB, ZB);
			if(ZB > 50.0)
			{
				GivePlayerValidWeapon(playerid, 46, 60000);
			}
		}
		PlayerInfo[playerid][pVW] = 0;
		SetPlayerVirtualWorld(playerid, 0);
		PlayerInfo[playerid][pInt] = 0;
		SetPlayerInterior(playerid, 0);
		InsideShamal[playerid] = INVALID_VEHICLE_ID;
	}

    // print("[debug] step #10");

	// Impound the vehicle if it is currently being towed...
    for(new x = 0; x < MAX_PLAYERVEHICLES; x++) {
		foreach(Player, i) {
		    if(arr_Towing[i] == PlayerVehicleInfo[playerid][x][pvId] && arr_Towing[i] != INVALID_VEHICLE_ID) {
		        PlayerVehicleInfo[playerid][x][pvImpounded] = 1;
		        arr_Towing[i] = INVALID_VEHICLE_ID;
		        DestroyVehicle(PlayerVehicleInfo[playerid][x][pvId]);
			}
		}
	}

	// print("[debug] step #11");

	// If the player (prior to leaving) is in range of any of their own player vehicles, the position will save without having to use /park
	if(reason == 0) {
	    new
	        Float: fPlayerVehiclePos[3];

	    for(new x = 0; x < MAX_PLAYERVEHICLES; x++) {
	        GetVehiclePos(PlayerVehicleInfo[playerid][x][pvId], fPlayerVehiclePos[0], fPlayerVehiclePos[1], fPlayerVehiclePos[2]);
	        if(IsPlayerInRangeOfPoint(playerid, 50, fPlayerVehiclePos[0], fPlayerVehiclePos[1], fPlayerVehiclePos[2])) {
	            PlayerVehicleInfo[playerid][x][pvPosX] = fPlayerVehiclePos[0];
	            PlayerVehicleInfo[playerid][x][pvPosY] = fPlayerVehiclePos[1];
	            PlayerVehicleInfo[playerid][x][pvPosZ] = fPlayerVehiclePos[2];
	            GetVehicleZAngle(playerid, PlayerVehicleInfo[playerid][x][pvPosAngle]);
	        }
	    }
	}

	// print("[debug] step #12");

	UnloadPlayerVehicles(playerid);
	ResetPlayerWeapons(playerid);

	// print("[debug] step #13");

	for(new i = 0; i < MAX_REPORTS; i++) {
	    if(Reports[i][ReportFrom] == playerid) {
	        Reports[i][ReportFrom] = 999;
			Reports[i][BeingUsed] = 0;
			Reports[i][TimeToExpire] = 0;
		}
	}

	// print("[debug] step #14");

	foreach(Player, i)
	{
		if(TaxiAccepted[i] == playerid)
		{
			TaxiAccepted[i] = 999;
			GameTextForPlayer(i, "~w~Taksi cagiran kisi~n~~r~oyundan cikti", 5000, 1);
			TaxiCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
		if(EMSAccepted[i] == playerid)
		{
			EMSAccepted[i] = INVALID_PLAYER_ID;
			GameTextForPlayer(i, "~w~Ambulans cagiran kisi~n~~r~oyundan cikti", 5000, 1);
			EMSCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
		if(BusAccepted[i] == playerid)
		{
			BusAccepted[i] = 999;
			GameTextForPlayer(i, "~w~Otobus cagiran kisi~n~~r~oyundan cikti", 5000, 1);
			BusCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
		if(MedicAccepted[i] == playerid)
		{
			TaxiAccepted[playerid] = 999; BusAccepted[playerid] = 999; MedicAccepted[playerid] = 999;
			GameTextForPlayer(i, "~w~Doktor cagiran kisi~n~~r~oyundan cikti", 5000, 1);
			MedicCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
	}

	// print("[debug] step #14");

	if(Spectate[playerid] < 553)
	{
        PlayerInfo[playerid][pInt] = GetPVarInt(playerid, "SpecInt");
		PlayerInfo[playerid][pVW] = GetPVarInt(playerid, "SpecVW");
		PlayerInfo[playerid][pPos_x] = GetPVarFloat(playerid, "SpecPosX");
		PlayerInfo[playerid][pPos_y] = GetPVarFloat(playerid, "SpecPosY");
		PlayerInfo[playerid][pPos_z] = GetPVarFloat(playerid, "SpecPosZ");
	    GettingSpectated[Spectate[playerid]] = 999;
	    Spectate[playerid] = 999;
	}

	// print("[debug] step #15");

/*	if(GetPVarInt(playerid, "gpsonoff") == 1) TextDrawDestroy(GPS[playerid]);
	if(RadarActive[playerid] == 1) {
		TextDrawDestroy(RadarTitle[playerid]);
		TextDrawDestroy(RadarContext[playerid]);
	} */

	// print("[debug] step #16");

	if(PlayerBoxing[playerid] > 0)
	{
		if(Boxer1 == playerid)
		{
			if(IsPlayerConnected(Boxer2))
			{
				if(IsPlayerInRangeOfPoint(PlayerBoxing[Boxer2], 25.0, 765.952270, 4.167977, 1000.719238))
				{
					PlayerBoxing[Boxer2] = 0;
					SetPlayerPos(Boxer2, 765.952270, 4.167977, 1000.719238);
					SetPlayerInterior(Boxer2, 5);
					GameTextForPlayer(Boxer2, "~r~Macta aksaklik oldu", 5000, 1);
					return 1;
				}
			}
		}
		else if(Boxer2 == playerid)
		{
			if(IsPlayerConnected(Boxer1))
			{
				if(IsPlayerInRangeOfPoint(PlayerBoxing[Boxer1],25.0,765.952270, 4.167977, 1000.719238))
				{
					PlayerBoxing[Boxer1] = 0;
					SetPlayerPos(Boxer1, 765.952270, 4.167977, 1000.719238);
					SetPlayerInterior(Boxer1, 5);
					GameTextForPlayer(Boxer1, "~r~Macta aksaklik oldu", 5000, 1);
					return 1;
				}
			}
		}
		InRing = 0;
	 	RoundStarted = 0;
		Boxer1 = INVALID_PLAYER_ID;
		Boxer2 = INVALID_PLAYER_ID;
	}

	// print("[debug] step #16");

	new string[128];

	if(Spectating[playerid] == 0 && AdminDuty[playerid] == 0) {
		switch(reason) {
	 	   	case 0: {
			   	format(string, sizeof(string), "%s adl oyuncu oyundan dt(balants koptu).", GetPlayerNameEx(playerid));
			   	ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

			   	if(PlayerCuffed[playerid] != 0) {
		    		strcpy(PlayerInfo[playerid][pPrisonedBy], "Server", 64);
					strcpy(PlayerInfo[playerid][pPrisonReason], "Kelepeliyken oyundan dt(balants koptu).", 64);

	                PlayerInfo[playerid][pJailed] = 3;
					PlayerInfo[playerid][pJailTime] += 55*60;
				}
		   	}
		   	case 1: {
			   	format(string, sizeof(string), "%s adl oyuncu oyundan kt(kendi isteiyle)", GetPlayerNameEx(playerid));
			   	ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);

			   	if(PlayerCuffed[playerid] != 0) {
	    			strcpy(PlayerInfo[playerid][pPrisonedBy], "Server", 64);
					strcpy(PlayerInfo[playerid][pPrisonReason], "Kelepeliyken oyundan kt(kendi isteiyle).", 64);

	                PlayerInfo[playerid][pJailed] = 3;
					PlayerInfo[playerid][pJailTime] += 60*60;
				}
			}
			case 2: {
				format(string, sizeof(string), "%s adl oyuncu oyundan kt(kicklendi/banland).", GetPlayerNameEx(playerid));
				ProxDetector(30.0, playerid, string, COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW,COLOR_YELLOW);
		   	}
		}
	}

	// print("[debug] step #17");

	for(new x; x < sizeof(EventInfo[EventStaff]); x++) {
		if(EventInfo[EventStaff][x] == playerid) {
			EventInfo[EventStaff][x] = 999;
			break;
		}
	}

	// print("[debug] step #18");

	if(GetPVarInt(playerid, "EventToken") == 0 && !GetPVarType(playerid, "LoadingObjects") && GetPVarInt(playerid, "PBM") == 0)
	{
		new Float: x, Float: y, Float: z;
		PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
		PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
		GetPlayerPos(playerid, x, y, z);
		GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
		PlayerInfo[playerid][pPos_x] = x;
		PlayerInfo[playerid][pPos_y] = y;
		PlayerInfo[playerid][pPos_z] = z;
	}
	if(GetPVarInt(playerid, "EventToken") != 0 && GetPVarInt(playerid, "PBM") == 0)
	{
	    PlayerInfo[playerid][pInt] = EventLastInt[playerid];
		PlayerInfo[playerid][pVW] = EventLastVW[playerid];
		PlayerInfo[playerid][pPos_r] = EventFloats[playerid][0];
		PlayerInfo[playerid][pPos_x] = EventFloats[playerid][1];
		PlayerInfo[playerid][pPos_y] = EventFloats[playerid][2];
		PlayerInfo[playerid][pPos_z] = EventFloats[playerid][3];
	}

	// print("[debug] step #19");

	if(TransportCost[playerid] > 0 && TransportDriver[playerid] < 999 && AdminDuty[playerid] == 0)
	{
		if(IsPlayerConnected(TransportDriver[playerid]))
		{
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			format(string, sizeof(string), "~w~Musteri ayrildi~n~~g~$%d kazanildi",TransportCost[playerid]);
			GameTextForPlayer(TransportDriver[playerid], string, 5000, 1);
			TransportDriver[playerid] = 999;
		}
	}

	// print("[debug] step #20");

	if(GotHit[playerid] > 0)
	{
		if(GetChased[playerid] < 999)
		{
			if(IsPlayerConnected(GetChased[playerid]))
			{
				SendClientMessage(GetChased[playerid], COLOR_YELLOW, "Eylem yapacan kii oyundan kt.");
				GoChase[GetChased[playerid]] = 999;
			}
		}
	}
 	if(GoChase[playerid] < 999)
 	{
      GetChased[GoChase[playerid]] = 999;
      GotHit[GoChase[playerid]] = 999;
 	}

 	// print("[debug] step #21");

	if(TransportDuty[playerid] == 1)
	{
		TaxiDrivers -= 1;
	}
	else if(TransportDuty[playerid] == 2)
	{
		BusDrivers -= 1;
	}
	if(PlayerInfo[playerid][pJob] == 11 || PlayerInfo[playerid][pJob2] == 11)
	{
		if(JobDuty[playerid] == 1) { Medics -= 1; }
	}
	if(PlayerInfo[playerid][pJob] == 7 || PlayerInfo[playerid][pJob2] == 7)
	{
		if(JobDuty[playerid] == 1) { Mechanics -= 1; }
	}

	// print("[debug] step #22");

	if(GetPVarType(playerid, "tabbedVW") != 0) {
		PlayerInfo[playerid][pVW] = GetPVarInt(playerid, "tabbedVW");
	} else PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);

	// print("[debug] step #23");

	if(GetPVarInt(playerid, "PBM") > 0) {
		PlayerInfo[playerid][pPos_x] = 1782.8229;
		PlayerInfo[playerid][pPos_y] = -1565.8177;
		PlayerInfo[playerid][pPos_z] = 13.3472;
		PlayerInfo[playerid][pInt] = 0;
		PlayerInfo[playerid][pVW] = 0;
		PlayerInfo[playerid][pPos_r] = 0;
		DeletePVar(playerid, "PBM");
	}

	SaveAccount(playerid);

	// print("[debug] step #24");

	if(PlayerInfo[playerid][pHelper] >= 1) {
        if(GetPVarType(playerid, "posX") != 0) {
			PlayerInfo[playerid][pInt] = GetPVarInt(playerid, "posInt");
			PlayerInfo[playerid][pVW] = GetPVarInt(playerid, "posVW");
			PlayerInfo[playerid][pPos_x] = GetPVarFloat(playerid, "posX");
			PlayerInfo[playerid][pPos_y] = GetPVarFloat(playerid, "posY");
			PlayerInfo[playerid][pPos_z] = GetPVarFloat(playerid, "posZ");
			PlayerInfo[playerid][pHealth] = GetPVarFloat(playerid, "HelpHealth");
			PlayerInfo[playerid][pArmor] = GetPVarFloat(playerid, "HelpArmour");


	        SetPlayerInterior(playerid, GetPVarInt(playerid, "posInt"));
	        SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "posVW"));
	        SetPlayerArmourEx(playerid, GetPVarFloat(playerid, "HelpArmour"));
	        SetPlayerHealth(playerid, GetPVarFloat(playerid, "HelpHealth"));
	        SetPlayerPos(playerid, GetPVarFloat(playerid, "posX"), GetPVarFloat(playerid, "posY"), GetPVarFloat(playerid, "posZ"));

	        DeletePVar(playerid, "posX");
	        DeletePVar(playerid, "posY");
	        DeletePVar(playerid, "posZ");
	        DeletePVar(playerid, "posInt");
	        DeletePVar(playerid, "posVW");
	        DeletePVar(playerid, "HelpHealth");
	        DeletePVar(playerid, "HelpArmour");
        }
    }

	// print("[debug] step #25");

    gPlayerLogged[playerid] = 0;
	return 1;
}

stock AttemptPlayerLogin(playerid, passbuffer[]) {
	new
	    szQuery[225],
	    szPlayerName[MAX_PLAYER_NAME],
		szPlayerName2[MAX_PLAYER_NAME];

	GetPlayerName(playerid, szPlayerName, sizeof(szPlayerName));

	mysql_real_escape_string(szPlayerName, szPlayerName2, g_MySQLConnections[0]);

	format(szQuery, sizeof(szQuery), "SELECT * FROM players WHERE Username = '%s' AND Password = '%s'", szPlayerName2, passbuffer);
	mysql_query(szQuery, THREAD_LOGIN_ATTEMPT, playerid, g_MySQLConnections[0]);
	return 1;
}

stock LoadPlayerDynamicItems(playerid) {
	new
	    szString[128];

	format(szString, sizeof(szString), "SELECT toys.* FROM toys INNER JOIN players ON toys.Owner = players.ID WHERE players.ID = '%d' ORDER BY toys.ID ASC LIMIT %d", PlayerInfo[playerid][pID], MAX_PLAYERTOYS);
	mysql_query(szString, THREAD_LOAD_P_ITEMS_CHAIN_1, playerid, g_MySQLConnections[0]);
	return 1;
}

stock SaveAccount(playerid) {
    // The query threads continue in the callback for finished queries.
	if(GetPVarInt(playerid, "TempName") != 1 && gPlayerLogged[playerid] && AdminDuty[playerid] == 0) {

		new
			szPlayerName[MAX_PLAYER_NAME],
			szPlayerName2[MAX_PLAYER_NAME],
			szAdminName[MAX_PLAYER_NAME],
		    szQuery[2048];

		GetPlayerName(playerid, szPlayerName, MAX_PLAYER_NAME);

		mysql_real_escape_string(szPlayerName, szPlayerName2, g_MySQLConnections[0]);
		mysql_real_escape_string(PlayerInfo[playerid][pAdminName], szAdminName, g_MySQLConnections[0]);

		format(szQuery, sizeof(szQuery), "UPDATE players SET Username = '%s', Password = '%s', Level = %d, AdminLevel = %d, AdminName = '%s', BanAppealer = %d, Donator = %d, Banned = %d, Permabanned = %d, Disabled = %d, LastIP = '%s', Registered = %d, \
		Tutorial = %d, Sex = %d, Age = %d, Skin = %d, PosX = '%f', PosY = '%f', PosZ = '%f', PosR = '%f', ConnectTime = %d, Respect = %d, PhoneNumber = %d, Warnings = %d, Gang = %d, Faction = %d, Leader = %d, Rank = %d WHERE ID = %d",
		szPlayerName, PlayerInfo[playerid][pKey], PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pAdmin], szAdminName, PlayerInfo[playerid][pBanAppealer], PlayerInfo[playerid][pDonator], PlayerInfo[playerid][pBanned],
		PlayerInfo[playerid][pPermaBanned], PlayerInfo[playerid][pDisabled], PlayerInfo[playerid][pIP], PlayerInfo[playerid][pReg], PlayerInfo[playerid][pTut], PlayerInfo[playerid][pSex], PlayerInfo[playerid][pAge], PlayerInfo[playerid][pSkin], PlayerInfo[playerid][pPos_x],
		PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z], PlayerInfo[playerid][pPos_r], PlayerInfo[playerid][pConnectTime], PlayerInfo[playerid][pRespect], PlayerInfo[playerid][pNumber], PlayerInfo[playerid][pWarns], PlayerInfo[playerid][pGang],
		PlayerInfo[playerid][pFaction], PlayerInfo[playerid][pLeader], PlayerInfo[playerid][pRank], PlayerInfo[playerid][pID]);

		mysql_query(szQuery, THREAD_SAVE_ACCOUNT_CHAIN_1, playerid, g_MySQLConnections[0]);
	}
	return 1;
}

stock timec(timestamp, compare = -1) {
    if (compare == -1) {
        compare = gettime();
    }
    new
        n,
        // on the following line, I have removed the need for the diff() function.
        // if you want to use the diff() function in pawn, replace the following with:
        // Float:d = diff(timestamp, compare),
        Float:d = (timestamp > compare) ? timestamp - compare : compare - timestamp,
        returnstr[32];
    if (d < 60) {
        format(returnstr, sizeof(returnstr), "< 1 minute");
        return returnstr;
    } else if (d < 3600) { // 3600 = 1 hour
        n = floatround(floatdiv(d, 60.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "minute");
    } else if (d < 86400) { // 86400 = 1 day
        n = floatround(floatdiv(d, 3600.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "hour");
    } else if (d < 2592000) { // 2592000 = 1 month
        n = floatround(floatdiv(d, 86400.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "day");
    } else if (d < 31536000) { // 31536000 = 1 year
        n = floatround(floatdiv(d, 2592000.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "month");
    } else {
        n = floatround(floatdiv(d, 31536000.0), floatround_floor);
        format(returnstr, sizeof(returnstr), "year");
    }
    if (n == 1) {
        format(returnstr, sizeof(returnstr), "1 %s", returnstr);
    } else {
        format(returnstr, sizeof(returnstr), "%d %ss", n, returnstr);
    }
    return returnstr;
}

public OnQueryError(errorid, error[], resultid, extraid, callback[], query[], connectionHandle) {
	printf("errorid: %d | Hata: %s | callback: %s | query: %s | connection handle: %d | resultid: %d | extraid: %d", errorid, error, callback, query, connectionHandle, resultid, extraid);
	return 1;
}

public OnQueryFinish(query[], resultid, extraid, connectionHandle) {
	new
	    szQuery[2048];

	switch(resultid) {
	    case THREAD_CONFIRM_USERNAME: {
	        mysql_store_result(g_MySQLConnections[0]);

	        if(mysql_fetch_int(g_MySQLConnections[0]) == 0) { // MySQL confirmed the COUNT(*) result is 0; no account with that username exists yet.
	            mysql_free_result(g_MySQLConnections[0]);
	            ShowMainMenuDialog(extraid, 2);
	            for(new i = 0; i < MAX_HOUSES; i++)
	            {
	                if(HouseInfo[i][hOwned] == 0)
	                {
	                    if(PlayerInfo[extraid][pHouse] == i)
	                    {
	                        PlayerInfo[extraid][pHouse] = -1;
	                    }
	                    else if(PlayerInfo[extraid][pHouse2] == i)
	                    {
	                        PlayerInfo[extraid][pHouse2] = -1;
	                    }
	                }
	            }

	            gPlayerAccount[extraid] = 0;
	        } else {
	            mysql_free_result(g_MySQLConnections[0]);
	            ShowMainMenuDialog(extraid, 1);
	            gPlayerAccount[extraid] = 1;
		  	}
	    }
	    case THREAD_CHECK_NAME_PASSWORD: {
	        mysql_store_result(g_MySQLConnections[0]);

	        if(mysql_num_rows(g_MySQLConnections[0]) > 0) {
	            new
	                szPassword[64],
	                szTarget[MAX_PLAYER_NAME],
					szBuffer[129];

				GetPVarString(extraid, "opasschange", szPassword, sizeof(szPassword));
				GetPVarString(extraid, "opasschangetarget", szTarget, sizeof(szTarget));

				WP_Hash(szBuffer, sizeof(szBuffer), szPassword);

		        format(szQuery, sizeof(szQuery), "UPDATE players SET Password = '%s' WHERE Username = '%s'", szBuffer, szTarget);
		        mysql_query(szQuery, THREAD_FULLY_CHANGE_PASSWORD, extraid, g_MySQLConnections[0]);
	        } else {
				DeletePVar(extraid, "opasschange");
				DeletePVar(extraid, "opasschangetarget");
				SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu karakteri yok yada oyuncu admin.");
			}

	        mysql_free_result(g_MySQLConnections[0]);
	    }
		case THREAD_LIST_NAMECHANGES: {
		    mysql_store_result(g_MySQLConnections[0]);

		    if(mysql_num_rows(g_MySQLConnections[0]) > 0) {
		        // Use 'szQuery' because of the large size of the string at our disposal
		        format(szQuery, sizeof(szQuery), "");

		        new
		            szPlayerName[MAX_PLAYER_NAME],
		            szPlayerOldName[MAX_PLAYER_NAME],
		            szPlayerAdminName[MAX_PLAYER_NAME],
					szMessage[1000],
					iUnixTS;

		        format(szMessage, sizeof(szMessage), "%s adl oyuncunun son 10 isim deiiklikleri:\n", GetPlayerNameEx(GetPVarInt(extraid, "namechanges_target")));

	        	while(mysql_fetch_row_format(szQuery, "|", g_MySQLConnections[0])) {
					sscanf(szQuery, "p<|>s[MAX_PLAYER_NAME]ds[MAX_PLAYER_NAME]s[MAX_PLAYER_NAME]", szPlayerOldName, iUnixTS, szPlayerName, szPlayerAdminName);

					format(szMessage, sizeof(szMessage), "%s\n%s artk %s (%s'dan itibaren) olarak biliniyor. sim deiiklii %s tarafndan kabul edildi", szMessage, szPlayerOldName, szPlayerName, timec(iUnixTS), szPlayerAdminName);
				}

				DeletePVar(extraid, "namechanges_target");

				ShowPlayerDialogEx(extraid, DIALOG_SHOW_NAMECHANGES, DIALOG_STYLE_MSGBOX, "sim deiiklikleri", szMessage, "Tamam", "");
		    } else {
				SendClientMessage(extraid, COLOR_GREY, "Bu oyuncunun isim deitirme istei yok.");
				DeletePVar(extraid, "namechanges_target");
		    }

		    mysql_free_result(g_MySQLConnections[0]);
		}
	    case THREAD_FULLY_CHANGE_PASSWORD: {
	        new
	            szMessage[128],
				szTarget[MAX_PLAYER_NAME];

            GetPVarString(extraid, "opasschangetarget", szTarget, sizeof(szTarget));

     		format(szMessage, sizeof(szMessage), "%s adl oyuncunun ifresini deitirdin.", szTarget);
	        SendClientMessage(extraid, COLOR_YELLOW, szMessage);

	        format(szMessage, sizeof(szMessage), "AdminKomutu: %s adl oyuncunun ifresi %s tarafndan deitirildi.", szTarget, GetPlayerNameEx(extraid));
	        Log("logs/password.log", szMessage);
	        ABroadCast(COLOR_LIGHTRED, szMessage, 1);

	        DeletePVar(extraid, "opasschange");
	        DeletePVar(extraid, "opasschangetarget");
		}
	    case THREAD_CHECK_NEW_NAME: {
			mysql_store_result(g_MySQLConnections[0]);

			if(mysql_num_rows(g_MySQLConnections[0]) > 0) {
			    SendClientMessage(GetPVarInt(extraid, "requestby"), COLOR_GREY, "Yapmak istediin isim bakas tarafndan alnm.");
			    if(GetPVarInt(extraid, "requestpath") == 1) {
					SendClientMessage(extraid, COLOR_GREY, "Setiiniz isim bakas tarafndan kullanlyor, baka isim sein.");
					ShowPlayerDialogEx(extraid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "cretsiz isim deitirme","Buras bir roleplay serveridir. sminizin u formatta olmas gerekir: sim_Soyisim.\nrnein: James_Bond\n\nBir admin size cretsiz isim deiiklii teklif etti. stediiniz ismi aaya girin.\n\nUyar: Eer iptale basarsanz, otomatik olarak kickleneceksiniz.", "Deitir", "Iptal");
				} else if(GetPVarInt(extraid, "requestpath") == 2) {
				    SendClientMessage(extraid, COLOR_GREY, "Yapmak istediin isim bakas tarafndan alnm. Tekrar deneyin.");

					DeletePVar(extraid, "requestpath");
					DeletePVar(extraid, "NewNameRequest");
					DeletePVar(extraid, "NameChangeCost");
					DeletePVar(extraid, "requestby");
					DeletePVar(extraid, "requestedname");
					DeletePVar(extraid, "RequestingNameChange");
				} else if(GetPVarInt(extraid, "requestpath") == 3) {
					SendClientMessage(GetPVarInt(extraid, "requestby"), COLOR_GREY, "Bu isim bakas tarafndan alnm.");
					DeletePVar(extraid, "requestedname");
					DeletePVar(extraid, "requestpath");
					DeletePVar(extraid, "requestby");
				}
			} else {
			    new
			        szPlayerName[MAX_PLAYER_NAME];

				GetPVarString(extraid, "requestedname", szPlayerName, MAX_PLAYER_NAME);

				format(szQuery, sizeof(szQuery), "UPDATE players SET Username = '%s' WHERE ID = %d", szPlayerName, PlayerInfo[extraid][pID]);
				mysql_query(szQuery, THREAD_CONFIRMED_NAMECHANGE, extraid, g_MySQLConnections[0]);
			}

			mysql_free_result(g_MySQLConnections[0]);
		}
		case THREAD_CONFIRMED_NAMECHANGE: {
  			new
				szPlayerName[MAX_PLAYER_NAME],
				szOriginalPlayerName[MAX_PLAYER_NAME],
				string[128];

			GetPVarString(extraid, "requestedname", szPlayerName, MAX_PLAYER_NAME);
			GetPlayerName(extraid, "szOriginalPlayerName", MAX_PLAYER_NAME);

            if(GetPVarInt(extraid, "requestpath") == 1) {
				format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s, %s adl oyuncunun isminin %s olarak deitirme isteini kabul etti.", GetPlayerNameEx(GetPVarInt(extraid, "requestby")), GetPlayerNameEx(extraid), szPlayerName);
				ABroadCast(COLOR_YELLOW, string, 2);
				format(PlayerInfo[extraid][pFlag], 128, "");
			} else if(GetPVarInt(extraid, "requestpath") == 2) {
				format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s, %s adl oyuncunun isminin %s olarak deitirme isteini kabul etti.", GetPlayerNameEx(GetPVarInt(extraid, "requestby")), GetPlayerNameEx(extraid), szPlayerName);
				ABroadCast(COLOR_YELLOW, string, 2);
			} else {
				format(string, sizeof(string), "%s, %s adl oyuncunun ismini %s olarak deitirdi.",GetPlayerNameEx(GetPVarInt(extraid, "requestby")), GetPlayerNameEx(extraid), szPlayerName);
                Log("logs/isimdegistir.log", string);
				ABroadCast(COLOR_YELLOW, string, 1);
			}

			if(PlayerInfo[extraid][pHouse] != INVALID_HOUSE_ID && strcmp(szOriginalPlayerName, HouseInfo[PlayerInfo[extraid][pHouse]][hOwner], true) == 0) {
				strmid(HouseInfo[PlayerInfo[extraid][pHouse]][hOwner], szPlayerName, 0, strlen(szPlayerName), 255);
     			format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[PlayerInfo[extraid][pHouse]][hOwner],HouseInfo[PlayerInfo[extraid][pHouse]][hLevel],PlayerInfo[extraid][pHouse]);
         		UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[extraid][pHouse]][hTextID], COLOR_HOUSEGREEN, string);
			}

			if(PlayerInfo[extraid][pHouse2] != INVALID_HOUSE_ID && strcmp(szOriginalPlayerName, HouseInfo[PlayerInfo[extraid][pHouse2]][hOwner], true) == 0) {
				strmid(HouseInfo[PlayerInfo[extraid][pHouse2]][hOwner], szPlayerName, 0, strlen(szPlayerName), 255);
    			format(string, sizeof(string), "{E3BF1E}Ev sahibi: {FFFFFF}%s\n{E3BF1E}Level: {FFFFFF}%d\n{E3BF1E}ID: {FFFFFF}%d",HouseInfo[PlayerInfo[extraid][pHouse]][hOwner],HouseInfo[PlayerInfo[extraid][pHouse]][hLevel],PlayerInfo[extraid][pHouse]);
     			UpdateDynamic3DTextLabelText(HouseInfo[PlayerInfo[extraid][pHouse2]][hTextID], COLOR_HOUSEGREEN, string);
			}

			if(PlayerInfo[extraid][pDonator] >= 1) {
				format(string, sizeof(string), "[VIP SM DEKLKLER] %s ismini % olarak deitirdi.", GetPlayerNameEx(extraid), szPlayerName);
				Log("logs/donatornames.log", string);
			}

			format(string, sizeof(string), "smin %s'ken %s olarak deitirildi.", GetPlayerNameEx(extraid), szPlayerName);
			SendClientMessage(extraid, COLOR_YELLOW, string);

			format(string, sizeof(string), "%s, %s adl oyuncunun ismini %s olarak deitirdi.",GetPlayerNameEx(GetPVarInt(extraid, "requestby")), GetPlayerNameEx(extraid), szPlayerName);
			Log("logs/stats.log", string);

			if(AdminDuty[extraid] == 0) {
				format(szQuery, sizeof(szQuery), "INSERT INTO namechanges (dbid, oldname, newname, approvedbyid, approvedbyname, unixts) VALUES(%d, '%s', '%s', %d, '%s', %d)", PlayerInfo[extraid][pID], GetPlayerNameEx(extraid), szPlayerName, PlayerInfo[GetPVarInt(extraid, "requestby")][pID], GetPlayerNameEx(GetPVarInt(extraid, "requestby")), gettime());
				mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
			}

			SetPlayerName(extraid, szPlayerName);

			if(GetPVarInt(extraid, "NameChangeCost") > 0)
				PlayerInfo[extraid][pCash] -= GetPVarInt(extraid, "NameChangeCost");

			PlayerInfo[extraid][pInt] = GetPlayerInterior(extraid);

			if(GetPVarType(extraid, "tabbedVW") != 0) {
				PlayerInfo[extraid][pVW] = GetPVarInt(extraid, "tabbedVW");
			} else PlayerInfo[extraid][pVW] = GetPlayerVirtualWorld(extraid);

			GetPlayerIp(extraid, PlayerInfo[extraid][pIP], 32);
			GetPlayerPos(extraid, PlayerInfo[extraid][pPos_x], PlayerInfo[extraid][pPos_y], PlayerInfo[extraid][pPos_z]);
			GetPlayerFacingAngle(extraid, PlayerInfo[extraid][pPos_r]);
			SaveAccount(extraid);

			DeletePVar(extraid, "requestby");
			DeletePVar(extraid, "requestedname");
			DeletePVar(extraid, "requestpath");
			DeletePVar(extraid, "NewNameRequest");
			DeletePVar(extraid, "NameChangeCost");
			DeletePVar(extraid, "RequestingNameChange");
		}
	    case THREAD_GIVE_REF_TOKENS: {
	        mysql_store_result(g_MySQLConnections[0]);

	        if(mysql_num_rows(g_MySQLConnections[0]) == 0)
	            return SendClientMessage(extraid, COLOR_YELLOW, "Seni neren oyuncunun karakteri durmadndan dolay ona neri jetonu verilemedi.");

			new
			    iTokens = mysql_fetch_int(g_MySQLConnections[0]) + 1;

			format(szQuery, sizeof(szQuery), "UPDATE players SET RefTokensOffline = %d WHERE Username = '%s'", iTokens, PlayerInfo[extraid][pReferredBy]);
			mysql_query(szQuery, THREAD_LITERALLY_GIVE_REFTOKEN, extraid, g_MySQLConnections[0]);

            mysql_free_result(g_MySQLConnections[0]);
		}
		case THREAD_OFFLINE_FLAG: {
	        mysql_store_result(g_MySQLConnections[0]);

	        if(mysql_num_rows(g_MySQLConnections[0]) == 0)
	            return SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu yok!");

			new
			    szFlag[128],
			    szFormattedFlag[128],
			    szPlayerName[MAX_PLAYER_NAME];

			GetPVarString(extraid, "offline_flag", szFlag, sizeof(szFlag));
			GetPVarString(extraid, "offline_flag_target", szPlayerName, sizeof(szPlayerName));

			new month,day,year;
			getdate(year,month,day);
			format(szFormattedFlag, sizeof(szFormattedFlag), "%s - %s (%d/%d/%d)", szFlag, GetPlayerNameEx(extraid), day, month, year);

			format(szQuery, sizeof(szQuery), "UPDATE players SET Flag = '%s' WHERE Username = '%s'", szFormattedFlag, szPlayerName);
			mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);

			// Avoid defining a new string, use one that's already clear to go.
			format(szFormattedFlag, sizeof(szFormattedFlag), "AdminKomutu: %s, %s adl oyuncuya bayrak koydu, sebep: %s.", GetPlayerNameEx(extraid), szPlayerName, szFlag);
			ABroadCast(COLOR_LIGHTRED, szFormattedFlag, 1);

			DeletePVar(extraid, "offline_flag");
			DeletePVar(extraid, "offline_flag_target");

    		mysql_free_result(g_MySQLConnections[0]);
		}
		case THREAD_OFFLINE_UNINVITE: {
		    mysql_store_result(g_MySQLConnections[0]);

	        if(mysql_num_rows(g_MySQLConnections[0]) == 0)
	            return SendClientMessage(extraid, COLOR_YELLOW, "Byle bir oyuncu yok!");

			if(mysql_retrieve_row()) {
			    new
			        szReturn[6];

            	mysql_fetch_field_row(szReturn, "AdminLevel", g_MySQLConnections[0]);

            	if(strval(szReturn) >= 5)
            	    return SendClientMessage(extraid, COLOR_YELLOW, "Bu oyuncu senin tarafndan atlamaz.");

                mysql_fetch_field_row(szReturn, "Faction", g_MySQLConnections[0]);

                if(strval(szReturn) != PlayerInfo[extraid][pFaction])
                	return SendClientMessage(extraid, COLOR_YELLOW, "Bu oyuncu seninle ayn oluumda deil.");

				new
				    szPlayerName[MAX_PLAYER_NAME];

				GetPVarString(extraid, "uninvite_target", szPlayerName, MAX_PLAYER_NAME);
				format(szQuery, sizeof(szQuery), "UPDATE players SET Faction = 0, Rank = 0, OnDuty = 0, Leader = 0, Skin = 311 WHERE Username = '%s'", szPlayerName);
				mysql_query(szQuery, THREAD_FULLY_UNINVITE, extraid, g_MySQLConnections[0]);

				mysql_free_result(g_MySQLConnections[0]);
            }

		}
		case THREAD_FULLY_UNINVITE: {
			new
			    szPlayerName[MAX_PLAYER_NAME],
			    szMessage[128];

			GetPVarString(extraid, "uninvite_target", szPlayerName, MAX_PLAYER_NAME);

			format(szMessage, sizeof(szMessage), "%s adl oyuncuyu oluumdan attn.", szPlayerName);
			SendClientMessage(extraid, COLOR_LIGHTBLUE, szMessage);

            format(szMessage, sizeof(szMessage), "%s, %s adl oyuncuyu %s'dan att.", GetPlayerNameEx(extraid), szPlayerName, GetFactionName(PlayerInfo[extraid][pFaction]));
			Log("logs/faction.log", szMessage);

			DeletePVar(extraid, "uninvite_target");
		}
		case THREAD_LITERALLY_GIVE_REFTOKEN: {
		    new
		        string[123];

			format(string, sizeof(string), "8 saat oynama sresine olutuundan ve neren kiiye %s yazdndan dolay, kendisi 1 neri jetonu kazand.", PlayerInfo[extraid][pReferredBy]);
   			SendClientMessage(extraid, COLOR_YELLOW, string);
		}
	    case THREAD_REFERRAL_MENU: {
	        mysql_store_result(g_MySQLConnections[0]);

	        if(mysql_num_rows(g_MySQLConnections[0]) == 0) {
	            format(PlayerInfo[extraid][pReferredBy], MAX_PLAYER_NAME, "");
                ShowPlayerDialogEx(extraid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: Bu isimde kaytl oyuncu yok.\n\nSana bu sunucuyu neren oyuncunun ad ne?\n\nUyar: Oyuncunun tam ismini girmelisin ('_') eklemeyi unutma. rnek: James_Bond", "Tamam", "Iptal");
	        } else {
	            mysql_free_result(g_MySQLConnections[0]);

				new
				    string[128];

	            format(string, sizeof(string), "{FFFFFF}%s tarafndan bu sunucuya nerildiinize emin misiniz?", PlayerInfo[extraid][pReferredBy]);
	            ShowPlayerDialogEx(extraid, REGISTRATION_MENU_FIVE, DIALOG_STYLE_MSGBOX, "{AD00D3}Master RPG - Kayt", string, "Evet", "Hayr");
	        }
		}
		case THREAD_MDC_CHECK: {
			if(mysql_num_rows(g_MySQLConnections[0]) == 0) { // No rows exist with the specified criteria, so, wrong password!
				mysql_free_result(g_MySQLConnections[0]);
				ShowPlayerDialogEx(extraid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | HATA ", "Bu kiinin bir kayd yok.", "Tamam", "Iptal");
			} else {
				mysql_store_result(g_MySQLConnections[0]);
				new
					crimeDescription[128],
					crimeIssuerName[MAX_PLAYER_NAME],
					crimeIssuedToName[MAX_PLAYER_NAME],
					szFullMessage[1028],
					iSlot = 0;

				while(mysql_retrieve_row()) {
					iSlot++;
					switch(iSlot) {
						case 1: {
							mysql_fetch_field_row(crimeDescription, "crimeDescription", g_MySQLConnections[0]);
							mysql_fetch_field_row(crimeIssuerName, "crimeIssuerName", g_MySQLConnections[0]);
							mysql_fetch_field_row(crimeIssuedToName, "crimeIssuedToName", g_MySQLConnections[0]);
							if(!isnull(crimeDescription)) {
								format(szFullMessage, sizeof(szFullMessage), "sim: %s", crimeIssuedToName);
								format(szFullMessage, sizeof(szFullMessage), "%s\n %s - %s", szFullMessage, crimeDescription, crimeIssuerName);
							}
						}
						case 2, 3, 4, 5, 6: {
							mysql_fetch_field_row(crimeDescription, "crimeDescription", g_MySQLConnections[0]);
							mysql_fetch_field_row(crimeIssuerName, "crimeIssuerName", g_MySQLConnections[0]);
							if(!isnull(szFullMessage) && !isnull(crimeDescription)) {
								format(szFullMessage, sizeof(szFullMessage), "%s\n %s - %s", szFullMessage, crimeDescription, crimeIssuerName);
							}
						}
					}
				}
				for(new i=0; i < MAX_PLAYERVEHICLES; i++) {
					if(PlayerVehicleInfo[GetPVarInt(extraid, "MVBKONTROL")][i][pvTicket] != 0)
					{
						format(szFullMessage, sizeof(szFullMessage), "%s\n Ara kayd: %d | Ara modeli: %s | Ceza: $%d.\n",szFullMessage, PlayerVehicleInfo[GetPVarInt(extraid, "MVBKONTROL")][i][pvId],GetVehicleName(PlayerVehicleInfo[GetPVarInt(extraid, "MVBKONTROL")][i][pvId]),PlayerVehicleInfo[GetPVarInt(extraid, "MVBKONTROL")][i][pvTicket]);
					}
				}
				ShowPlayerDialogEx(extraid, MDC_END_ID, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Su Gemii", szFullMessage, "Tamam", "Iptal");
				DeletePVar(extraid, "MVBKONTROL");
				mysql_free_result(g_MySQLConnections[0]);
			}
		}
	    case THREAD_OFFLINE_KILLS: {
			mysql_store_result(g_MySQLConnections[0]);
			if(IsPlayerConnected(extraid)) {
				if(mysql_num_rows(g_MySQLConnections[0]) == 0) { // No rows exist with the specified criteria, so, wrong password!
		            mysql_free_result(g_MySQLConnections[0]);
					SendClientMessage(extraid, COLOR_GREY, "Girilen karakter geersiz.");
		        } else {
					mysql_retrieve_row();

					new
					    szPlayerName[MAX_PLAYER_NAME],
						szReturn[128],
						iplayerid;

                    mysql_fetch_field_row(szPlayerName, "Username", g_MySQLConnections[0]);
					mysql_fetch_field_row(szReturn, "ID", g_MySQLConnections[0]);
				    iplayerid = strval(szReturn);
					mysql_free_result(g_MySQLConnections[0]);

					SendClientMessage(extraid, COLOR_GREEN, "________________________________________________");
					format(szReturn, sizeof(szReturn), "<< %s adl oyuncunun ldrd son 10 kii >>", szPlayerName);
					SendClientMessage(extraid, COLOR_YELLOW, szReturn);

					format(szQuery, sizeof(szQuery), "SELECT kills.* FROM kills INNER JOIN players ON kills.killerID = players.ID OR kills.killedID = players.ID WHERE players.ID = '%d' ORDER BY kills.killTS ASC LIMIT 10", iplayerid);
					mysql_query(szQuery, THREAD_OFFLINE_KILLS_2, extraid, g_MySQLConnections[0]);
				}
			}
	    }
	    case THREAD_OFFLINE_KILLS_2: {
			mysql_store_result(g_MySQLConnections[0]);
			new
				KillLog[128],
				iSlot = 0;

			while(mysql_retrieve_row()) {
				iSlot++;
				switch(iSlot) {
					case 9: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 8: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 7: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 6: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 5: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 4: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 3: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 2: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 1: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
					case 0: {
						mysql_fetch_field_row(KillLog, "killText", g_MySQLConnections[0]);
						if(!isnull(KillLog)) SendClientMessage(extraid, COLOR_YELLOW, KillLog);
					}
				}
			}
			mysql_free_result(g_MySQLConnections[0]);
		}
	    case THREAD_GET_STATS: {
	        mysql_store_result(g_MySQLConnections[0]);
			if(IsPlayerConnected(extraid)) {
			    new
			        szReturn[128];

		        if(mysql_num_rows(g_MySQLConnections[0]) == 0) { // No rows exist with the specified criteria, so, wrong password!
		            mysql_free_result(g_MySQLConnections[0]);
					SendClientMessage(extraid, COLOR_GREY, "Girilen karakter geersiz.");
		        } else {
		            mysql_retrieve_row();

					new facgang[20], employer[64], rank[64], division[64], jtext[20], jtext2[20];

					mysql_fetch_field_row(szReturn, "Level", g_MySQLConnections[0]);
				    new level = strval(szReturn);

				    mysql_fetch_field_row(szReturn, "ConnectTime", g_MySQLConnections[0]);
				    new phours = strval(szReturn);

				    mysql_fetch_field_row(szReturn, "Respect", g_MySQLConnections[0]);
					new respect = strval(szReturn);

					new nxtlevel = level + 1;
					new expamount = nxtlevel*levelexp;
					new costlevel = nxtlevel*2500;

					mysql_fetch_field_row(szReturn, "PhoneNumber", g_MySQLConnections[0]);
					new pnumber = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Warnings", g_MySQLConnections[0]);
					new warns = strval(szReturn);

					facgang = "Faction";
					employer = "Yok";
					rank = "Yok";

					mysql_fetch_field_row(szReturn, "Gang", g_MySQLConnections[0]);
					new iGang = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Rank", g_MySQLConnections[0]);
					new iRank = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Division", g_MySQLConnections[0]);
					new iDivision = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Faction", g_MySQLConnections[0]);
					new iFaction = strval(szReturn);

					if(iGang < 255) {
					    facgang = "Family";
						division = "Yok";

						format(employer, sizeof(employer), "%s", FamilyInfo[iGang][FamilyName]);
						switch(iRank) {
							case 1: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank1]);
							case 2: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank2]);
							case 3: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank3]);
							case 4: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank4]);
							case 5: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank5]);
				  			case 6: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank6]);
							default: format(rank, sizeof(rank), "%s", FamilyInfo[iGang][FamilyRank1]);
						}
					}
					else {
					    PlayerInfo[MAX_PLAYERS][pDivision] = iDivision;
					    PlayerInfo[MAX_PLAYERS][pRank] = iRank;
					    PlayerInfo[MAX_PLAYERS][pFaction] = iFaction;

			            GetPlayerFactionInfo(MAX_PLAYERS, rank, division, employer);
					}

					mysql_fetch_field_row(szReturn, "Job", g_MySQLConnections[0]);
					new iJob = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Job2", g_MySQLConnections[0]);
					new iJob2 = strval(szReturn);

					switch(iJob)
					{
						case 1: jtext = "Dedektif";
						case 2: jtext = "Avukat";
						case 3: jtext = "Hayat Kadn";
						case 4: jtext = "Uyuturucu Satcs";
						case 5: jtext = "Araba Hrsz";
						//case 6: jtext = "News Reporter";
						case 7: jtext = "Tamirci";
						case 8: jtext = "Bodyguard";
						case 9: jtext = "Silah Satcs";
						//case 10: jtext = "Car Dealer";
						case 12: jtext = "Boksr";
						case 14: jtext = "UyuturucuKaaks";
						//case 15: jtext = "Paper Boy";
						//case 16: jtext = "Kamyon ofr";
						//case 17: jtext = "Taksici";
						case 18: jtext = "Zanaatkar";
						case 19: jtext = "Barmen";
						case 20: jtext = "Kamyon ofr";
						case 21: jtext = "Pizzac";
						default: jtext = "Yok";
					}
					switch(iJob2)
					{
						case 1: jtext2 = "Dedektif";
						case 2: jtext2 = "Avukat";
						case 3: jtext2 = "Hayat Kadn";
						case 4: jtext2 = "Uyuturucu Satcs";
						case 5: jtext2 = "Araba Hrsz";
						//case 6: jtext2 = "News Reporter";
						case 7: jtext2 = "Tamirci";
						case 8: jtext2 = "Bodyguard";
						case 9: jtext2 = "Silah Satcs";
						//case 10: jtext2 = "Car Dealer";
						case 12: jtext2 = "Boksr";
						case 14: jtext2 = "UyuturucuKaaks";
						//case 15: jtext2 = "Paper Boy";
						//case 16: jtext2 = "Kamyon ofr";
						//case 17: jtext2 = "Taksici";
						case 18: jtext2 = "Zanaatkar";
						case 19: jtext2 = "Barmen";
						case 20: jtext2 = "Kamyon ofr";
						case 21: jtext2 = "Pizzac";
						default: jtext2 = "Yok";
					}

					new jlevel;
					switch(iJob)
					{
						case 1:
						{
								mysql_fetch_field_row(szReturn, "DetSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 2:
						{
								mysql_fetch_field_row(szReturn, "LawSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 3:
						{
								mysql_fetch_field_row(szReturn, "SexSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 4:
						{
								mysql_fetch_field_row(szReturn, "DrugsSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 5:
						{
								mysql_fetch_field_row(szReturn, "CarSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
				  		case 7:
						{
								mysql_fetch_field_row(szReturn, "MechSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 9:
						{
								mysql_fetch_field_row(szReturn, "ArmsSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel < 50) { jlevel = 1; }
								else if(skilllevel >= 50 && skilllevel < 100) { jlevel = 2; }
								else if(skilllevel >= 100 && skilllevel < 200) { jlevel = 3; }
								else if(skilllevel >= 200 && skilllevel < 400) { jlevel = 4; }
								else if(skilllevel >= 400) { jlevel = 5; }
						}
						case 12:
						{
								mysql_fetch_field_row(szReturn, "BoxSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 14:
						{
								mysql_fetch_field_row(szReturn, "SmugSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						case 20:
						{
								mysql_fetch_field_row(szReturn, "TruckSkill", g_MySQLConnections[0]);
								new skilllevel = strval(szReturn);
								if(skilllevel >= 0 && skilllevel <= 50) { jlevel = 1; }
								else if(skilllevel >= 51 && skilllevel <= 100) { jlevel = 2; }
								else if(skilllevel >= 101 && skilllevel <= 200) { jlevel = 3; }
								else if(skilllevel >= 201 && skilllevel <= 400) { jlevel = 4; }
								else if(skilllevel >= 401) { jlevel = 5; }
						}
						default: jlevel = 0;
					}

                    mysql_fetch_field_row(szReturn, "UpgradePoints", g_MySQLConnections[0]);
					new upgrade = strval(szReturn);

					mysql_fetch_field_row(szReturn, "SpawnArmor", g_MySQLConnections[0]);
					new Float:sarmor = floatstr(szReturn);

                    mysql_fetch_field_row(szReturn, "Cash", g_MySQLConnections[0]);
					new cash = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Bank", g_MySQLConnections[0]);
					new bank = strval(szReturn);

					new totalwealth = cash + bank;

					mysql_fetch_field_row(szReturn, "Insurance", g_MySQLConnections[0]);
					new iInsurance = strval(szReturn);

					new insur[20];
					switch(iInsurance)
					{
						case 1: insur = "County General";
						case 2: insur = "All Saints";
						default: insur = "Yok";
					}

                    mysql_fetch_field_row(szReturn, "Crimes", g_MySQLConnections[0]);
					new crimes = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Arrested", g_MySQLConnections[0]);
					new arrests = strval(szReturn);

					mysql_fetch_field_row(szReturn, "WantedLevel", g_MySQLConnections[0]);
					new wanted = strval(szReturn);

					new Float:health, Float:armor;

					mysql_fetch_field_row(szReturn, "Health", g_MySQLConnections[0]);
					health = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "Armor", g_MySQLConnections[0]);
					armor = floatstr(szReturn);

                    mysql_fetch_field_row(szReturn, "Pot", g_MySQLConnections[0]);
					new pot = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Crack", g_MySQLConnections[0]);
					new crack = strval(szReturn);

                    mysql_fetch_field_row(szReturn, "RadioFreq", g_MySQLConnections[0]);
					new radiofreq = strval(szReturn);

                    mysql_fetch_field_row(szReturn, "Materials", g_MySQLConnections[0]);
					new mats = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Rope", g_MySQLConnections[0]);
					new rope = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Cigars", g_MySQLConnections[0]);
					new cigars = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Sprunk", g_MySQLConnections[0]);
					new sprunk = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Spraycan", g_MySQLConnections[0]);
					new spray = strval(szReturn);

					// Eight line (admin only)
					mysql_fetch_field_row(szReturn, "House", g_MySQLConnections[0]);
					new house = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Renting", g_MySQLConnections[0]);
					new rent = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Interior", g_MySQLConnections[0]);
					new interior = strval(szReturn);

					mysql_fetch_field_row(szReturn, "VirtualWorld", g_MySQLConnections[0]);
					new vw = strval(szReturn);
					new realvw = vw;

					mysql_fetch_field_row(szReturn, "JailTime", g_MySQLConnections[0]);
					new jtime = strval(szReturn);

					new
					    szPlayerName[MAX_PLAYER_NAME];

                    mysql_fetch_field_row(szPlayerName, "Username", g_MySQLConnections[0]);

					// Added
					new married[20];
					mysql_fetch_field_row(married, "MarriedTo", g_MySQLConnections[0]);

                    mysql_fetch_field_row(szReturn, "RefTokens", g_MySQLConnections[0]);
					new reftokens = strval(szReturn);

					new sext[16];
					mysql_fetch_field_row(szReturn, "Sex", g_MySQLConnections[0]);

					if(strval(szReturn) == 1) { sext = "Male"; } else { sext = "Female"; }

					mysql_fetch_field_row(szReturn, "Age", g_MySQLConnections[0]);
					new age = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Donator", g_MySQLConnections[0]);
					new donator = strval(szReturn);

					new donatortxt[16];
					if(donator == 0) { donatortxt = "no"; }
					else if(donator == 1) { donatortxt = "Ruby"; }
					else if(donator == 2) { donatortxt = "Sapphire"; }
					else if(donator == 3) { donatortxt = "Diamond"; }
					else { donatortxt = "no"; }

                    mysql_fetch_field_row(szReturn, "NewMutedTotal", g_MySQLConnections[0]);
					new nmutes = strval(szReturn);

					mysql_fetch_field_row(szReturn, "AdMutedTotal", g_MySQLConnections[0]);
			        new admutes = strval(szReturn);

			        mysql_fetch_field_row(szReturn, "ReportMutedTotal", g_MySQLConnections[0]);
			        new rmutes = strval(szReturn);

                    mysql_fetch_field_row(szReturn, "AdminLevel", g_MySQLConnections[0]);
					new adminlevel = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Banned", g_MySQLConnections[0]);
					new banned = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Permabanned", g_MySQLConnections[0]);
					new permabanned = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Disabled", g_MySQLConnections[0]);
					new disabled = strval(szReturn);

				    SendClientMessage(extraid, COLOR_NEWS,"___________________________________________________________________________________________________");
				    new coordsstring[128];
				    format(coordsstring, sizeof(coordsstring),"%s - (Level: %d) - (Oynama saati: %d) - (Cinsiyet: %s) - (Ya: %d) - (Telefon Numaras: %d) - (Uyarlar: %d)", szPlayerName, level, phours, sext, age, pnumber, warns);
				    SendClientMessage(extraid, COLOR_WHITE, coordsstring);
					format(coordsstring, sizeof(coordsstring),"(%s: %s) - (Rtbe: %s [%d]) - (Birim: %s) - (Meslek: %s [lvl: %d]) - (Radio frekans: %d kHz)", facgang, employer, rank, PlayerInfo[MAX_PLAYERS][pRank], division, jtext, jlevel, radiofreq);
					SendClientMessage(extraid, COLOR_FORSTATS, coordsstring);
			   		format(coordsstring, sizeof(coordsstring),"(Toplam para: $%d) - (Nakit: $%d) - (Banka hesab: $%d) - (Sigorta: %s) - (Evli: %s)", totalwealth, cash, bank, insur, married);
			   		SendClientMessage(extraid, COLOR_WHITE, coordsstring);
					format(coordsstring, sizeof(coordsstring),"(Sayg puan: %d/%d [$%d]) - (Geliim puan: %d) - (Balang zrh: %.1f) - (Can: %.1f) - (Zrh: %.1f)", respect, expamount, costlevel, upgrade, sarmor, health, armor);
					SendClientMessage(extraid, COLOR_FORSTATS, coordsstring);
			   		format(coordsstring, sizeof(coordsstring),"(Sular: %d) - (Yakalanmalar: %d) - (Aranma seviyesi: %d) - (Materyal: %d) - (Pot: %d) - (Crack: %d)", crimes, arrests, wanted, mats, pot, crack);
			   		SendClientMessage(extraid, COLOR_WHITE, coordsstring);
			   		format(coordsstring, sizeof(coordsstring),"(p: %d) - (Sigara: %d) - (Gazoz: %d) - (Sprey: %d) - (neri Jetonu: %d) - (VIP: %s)", rope, cigars, sprunk, spray, reftokens, donatortxt);
			        SendClientMessage(extraid, COLOR_FORSTATS, coordsstring);
					format(coordsstring, sizeof(coordsstring), "(Admin Level: %d) - (Banlanma: %d) - (Sresiz ban: %d) - (Hesap kullanm d: %d)", adminlevel, banned, permabanned, disabled);
			  		SendClientMessage(extraid, COLOR_WHITE,coordsstring);
				    format(coordsstring, sizeof(coordsstring), "(Ev: %d) - (Kiralama: %d) - (Int: %d) - (VW: %d) - (Real VW: %d) - (Hapis: %d secs) - (Muteler: [N: %d] [AD: %d] [R: %d])", house, rent, interior, vw, realvw, jtime, nmutes, admutes, rmutes);
				    SendClientMessage(extraid, COLOR_FORSTATS,coordsstring);
					SendClientMessage(extraid, COLOR_NEWS,"___________________________________________________________________________________________________");
				}
			}

	        mysql_free_result(g_MySQLConnections[0]);
	    }
		case THREAD_OFFLINE_FINE: {
	        mysql_store_result(g_MySQLConnections[0]);

	        new
	            szMessage[128],
	            szPlayerIP[20],
	            iPlayerAdminLevel,
	            iPlayerBanned,
	            szReason[128],
	            iPlayerPermabanned,
	            iCash,
	            iBankAccount,
	            iFinedAmount,
	            szPlayerName[MAX_PLAYER_NAME],
	            szResult[256],
				iTotalCashAfterFine;

	        if(mysql_fetch_row_format(szResult, "|", g_MySQLConnections[0])) {
				sscanf(szResult, "p<|>dddssdd", iPlayerPermabanned, iPlayerBanned, iPlayerAdminLevel, szPlayerName, szPlayerIP, iBankAccount, iCash);

				if(iPlayerPermabanned > 0)
				    return SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu zaten sresiz banlanm.");

				if(iPlayerAdminLevel > 0)
				    return SendClientMessage(extraid, COLOR_GREY, "Admine ceza kesemezsin.");

				GetPVarString(extraid, "ofinereason", szReason, sizeof(szReason));
				mysql_real_escape_string(szReason, szReason, g_MySQLConnections[0]);

				iFinedAmount = GetPVarInt(extraid, "ofineamount");

				iTotalCashAfterFine = iCash - iFinedAmount;
				format(szQuery, sizeof(szQuery), "UPDATE players SET Cash = %d WHERE Username = '%s'", iTotalCashAfterFine, szPlayerName);
				mysql_query(szQuery, THREAD_NO_RESULT, extraid, g_MySQLConnections[0]);

				format(szMessage, sizeof(szMessage), "Adminkomutu: %s adl oyuncuya %s tarafndan offline olarak $%d ceza kesildi, sebep: %s", szPlayerName, GetPlayerNameEx(extraid), iFinedAmount, szReason);
				Log("logs/admin.log", szMessage);
				format(szMessage, sizeof(szMessage), "Adminkomutu: %s adl oyuncuya %s tarafndan offline olarak $%d ceza kesildi, sebep: %s", szPlayerName, GetPlayerNameEx(extraid), iFinedAmount, szReason);
				ABroadCast(COLOR_LIGHTRED,szMessage,1);
	        } else SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu yok.");

	        mysql_free_result(g_MySQLConnections[0]);
	    }
	    case THREAD_OFFLINE_BAN: {
	        mysql_store_result(g_MySQLConnections[0]);

	        new
	            szMessage[128],
	            szPlayerIP[20],
	            iPlayerAdminLevel,
	            iPlayerBanned,
	            szReason[128],
	            iPlayerPermabanned,
	            szPlayerName[MAX_PLAYER_NAME],
	            iAccountID,
	            szResult[256];

	        if(mysql_fetch_row_format(szResult, "|", g_MySQLConnections[0])) {
				sscanf(szResult, "p<|>ddds[MAX_PLAYER_NAME]s[20]d", iPlayerPermabanned, iPlayerBanned, iPlayerAdminLevel, szPlayerName, szPlayerIP, iAccountID);

				if(iPlayerPermabanned > 0)
				    return SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu zaten sresiz banlanm.");

				if(iPlayerAdminLevel > 0)
				    return SendClientMessage(extraid, COLOR_GREY, "Adminleri banlayamazsn.");

				GetPVarString(extraid, "obanreason", szReason, sizeof(szReason));
				mysql_real_escape_string(szReason, szReason, g_MySQLConnections[0]);

				AddBan(szPlayerIP);

				format(szMessage, sizeof(szMessage), "AdminKomutu: %s (Ip: %s) adl oyuncu, %s tarafndan offline olarak banland, sebep: %s", szPlayerName, szPlayerIP, GetPlayerNameEx(extraid), szReason);
				Log("logs/ban.log", szMessage);
				ABroadCast(COLOR_LIGHTRED, szMessage, 1);

				format(szQuery, sizeof(szQuery), "UPDATE players SET Banned = 1 WHERE Username = '%s'", szPlayerName);
				mysql_query(szQuery, THREAD_NO_RESULT, extraid, g_MySQLConnections[0]);
				punishmentLogEx(iAccountID, PlayerInfo[extraid][pID], 4, szMessage, szReason);

				DeletePVar(extraid, "obanreason");
	        } else SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu yok.");

	        mysql_free_result(g_MySQLConnections[0]);
	    }
	    case THREAD_OFFLINE_PRISON: {
			mysql_store_result(g_MySQLConnections[0]);

			new
				szMessage[128],
				szPlayerIP[20],
				iPlayerAdminLevel,
				iPlayerPrisonTime,
				iPlayerBanned,
				szReason[128],
				iPlayerPermabanned,
				szPlayerName[MAX_PLAYER_NAME],
				iAccountID,
				szResult[285];

			if(mysql_fetch_row_format(szResult, "|", g_MySQLConnections[0])) {
				sscanf(szResult, "p<|>ddds[20]s[19]d", iPlayerPermabanned, iPlayerBanned, iPlayerAdminLevel, szPlayerName, szPlayerIP, iPlayerPrisonTime, iAccountID);
				print(szResult);

				if(iPlayerPermabanned > 0)
					return SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu zaten sresiz banlanm.");

				if(iPlayerBanned > 0)
					return SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu zaten banl.");

				if(iPlayerAdminLevel > 0)
					return SendClientMessage(extraid, COLOR_GREY, "Adminlere uyar veremezsin.");

				GetPVarString(extraid, "oprisonreason", szReason, sizeof(szReason));
				mysql_real_escape_string(szReason, szReason, g_MySQLConnections[0]);

                iPlayerPrisonTime = GetPVarInt(extraid, "oprisontime");

				format(szMessage, sizeof(szMessage), "AdminKomutu: %s adl oyuncu, %s tarafndan offline hapse atld, sebep: %s", szPlayerName, GetPlayerNameEx(extraid), szReason);
				ABroadCast(COLOR_LIGHTRED, szMessage, 1);
				format(szMessage, sizeof(szMessage), "AdminKomutu: %s adl oyuncu, %s tarafndan offline hapse atld, sebep: %s", szPlayerName, GetPlayerNameEx(extraid), szReason);
				Log("logs/admin.log", szMessage);
                punishmentLogEx(iAccountID, PlayerInfo[extraid][pID], 2, szMessage, szReason);

    			format(szQuery, sizeof(szQuery), "UPDATE players SET Jailed = 3, JailTime = %d, PrisonReason = '%s', PrisonedBy = '%s' WHERE Username = '%s'", iPlayerPrisonTime, szReason, GetPlayerNameExEx(extraid), szPlayerName);
				mysql_query(szQuery, THREAD_NO_RESULT, extraid, g_MySQLConnections[0]);

				DeletePVar(extraid, "oprisonreason");
				DeletePVar(extraid, "oprisontime");
			} else SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu yok.");

			mysql_free_result(g_MySQLConnections[0]);
	    }
		case THREAD_OFFLINE_WARN: {
			mysql_store_result(g_MySQLConnections[0]);

			new
				szMessage[128],
				szPlayerIP[20],
				iPlayerAdminLevel,
				iPlayerWarnings,
				iPlayerBanned,
				szReason[128],
				iPlayerPermabanned,
				szPlayerName[MAX_PLAYER_NAME],
				iAccountID,
				szResult[256];

			if(mysql_fetch_row_format(szResult, "|", g_MySQLConnections[0])) {
				sscanf(szResult, "p<|>ddds[24]s[20]dd", iPlayerPermabanned, iPlayerBanned, iPlayerAdminLevel, szPlayerName, szPlayerIP, iPlayerWarnings, iAccountID);
				print(szResult);

				if(iPlayerPermabanned > 0)
					return SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu zaten sresiz banlanm.");

				if(iPlayerBanned > 0)
					return SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu zaten banl.");

				if(iPlayerAdminLevel > 0)
					return SendClientMessage(extraid, COLOR_GREY, "Adminlere uyar veremezsin.");

				GetPVarString(extraid, "owarnreason", szReason, sizeof(szReason));

				iPlayerWarnings += 1;

				if(iPlayerWarnings >= 3) {
					format(szReason, sizeof(szReason), "%s (had 3 warnings)", szReason);
					SetPVarString(extraid, "obanreason", szReason);

	    			format(szQuery, sizeof(szQuery), "UPDATE players SET Warnings = %d WHERE Username = '%s'", iPlayerWarnings, szPlayerName);
					mysql_query(szQuery, THREAD_NO_RESULT, extraid, g_MySQLConnections[0]);

					punishmentLogEx(iAccountID, PlayerInfo[extraid][pID], 4, szMessage, szReason);
					mysql_real_escape_string(szPlayerName, szPlayerName, g_MySQLConnections[0]);

					format(szMessage, sizeof(szMessage), "SELECT Permabanned, Banned, AdminLevel, Username, LastIP FROM players WHERE Username = '%s'", szPlayerName);
					mysql_query(szMessage, THREAD_OFFLINE_BAN, extraid, g_MySQLConnections[0]);
					return 1;
				}

				format(szMessage, sizeof(szMessage), "AdminKomutu: %s adl oyuncuya %s tarafndan offline uyar verildi, sebep: %s", szPlayerName, GetPlayerNameEx(extraid), szReason);
				ABroadCast(COLOR_LIGHTRED, szMessage, 1);
				format(szMessage, sizeof(szMessage), "AdminKomutu: %s adl oyuncuya %s tarafndan offline uyar verildi, sebep: %s", szPlayerName, GetPlayerNameEx(extraid), szReason);
				Log("logs/admin.log", szMessage);
                punishmentLogEx(iAccountID, PlayerInfo[extraid][pID], 1, szMessage, szReason);

    			format(szQuery, sizeof(szQuery), "UPDATE players SET Warnings = %d WHERE Username = '%s'", iPlayerWarnings, szPlayerName);
				mysql_query(szQuery, THREAD_NO_RESULT, extraid, g_MySQLConnections[0]);

				DeletePVar(extraid, "owarnreason");
			} else SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu yok.");

			mysql_free_result(g_MySQLConnections[0]);
		}
	    case THREAD_OFFLINE_IP_CHECK: {
	        mysql_store_result(g_MySQLConnections[0]);

	        new
	            szMessage[128],
	            szPlayerIP[20],
	            szPlayerName[MAX_PLAYER_NAME],
	            szResult[256];

	        if(mysql_fetch_row_format(szResult, "|", g_MySQLConnections[0])) {
				sscanf(szResult, "p<|>s[20]s[16]", szPlayerName, szPlayerIP);

				format(szMessage, sizeof(szMessage), "sim: %s | IP: %s", szPlayerName, szPlayerIP);
				SendClientMessage(extraid, COLOR_WHITE, szMessage);
	        } else SendClientMessage(extraid, COLOR_GREY, "Byle bir oyuncu yok.");

	        mysql_free_result(g_MySQLConnections[0]);
	    }
	    case THREAD_CHECK_BANNED: {
	        mysql_store_result(g_MySQLConnections[0]);

	        new
	            szResult[128],
	            szMessage[128],
	            szPlayerIP[20],
	            szPlayerName[MAX_PLAYER_NAME],
	            iPlayerBan,
	            iPlayerWarnings,
	            iPlayerPermaban;

			if(mysql_fetch_row_format(szResult, "|", g_MySQLConnections[0])) {
			    sscanf(szResult, "p<|>ddds[16]s[20]", iPlayerBan, iPlayerPermaban, iPlayerWarnings, szPlayerIP, szPlayerName);
				print(szResult);

			    if(iPlayerPermaban > 0) {
			        SendClientMessage(extraid, COLOR_GREY, "Bu oyuncunun bann kaldramazsn, sresiz ban yemi.");
			        mysql_free_result(g_MySQLConnections[0]);
			    } else {
			        if(iPlayerBan > 0) {
			            RemoveBan(szPlayerIP);

						format(szMessage, sizeof(szMessage), "AdminKomutu: %s (IP: %s) adl oyuncunun ban %s tarafndan ald.", szPlayerName, szPlayerIP, GetPlayerNameEx(extraid));
						ABroadCast(COLOR_LIGHTRED, szMessage, 1);

						format(szMessage, sizeof(szMessage), "AdminKomutu: %s (IP: %s) adl oyuncunun ban %s tarafndan ald.", szPlayerName, szPlayerIP, GetPlayerNameEx(extraid));
						Log("logs/ban.log", szMessage);

						if(iPlayerWarnings >= 3) {
							format(szQuery, sizeof(szQuery), "UPDATE players SET Banned = 0, Warnings = 0 WHERE Username = '%s'", szPlayerName);
						} else format(szQuery, sizeof(szQuery), "UPDATE players SET Banned = 0 WHERE Username = '%s'", szPlayerName);
						mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
			        } else SendClientMessage(extraid, COLOR_GREY, "Girilen oyuncu banl deil.");
			    }
			} else SendClientMessage(extraid, COLOR_GREY, "Aranan kriterlerde satr bulunamad.");

	        mysql_free_result(g_MySQLConnections[0]);
	    }
	    case THREAD_DELETE_PLAYER_OBJECT: {
	        new
	            string[64],
	            listitem = GetPVarInt(extraid, "deleteObject");

			PlayerToyInfo[extraid][listitem][ptModelID] = 0;
			PlayerToyInfo[extraid][listitem][ptBone] = 1;
			PlayerToyInfo[extraid][listitem][ptRealID] = 0;
			PlayerToyInfo[extraid][listitem][ptPosX] = 0.0;
			PlayerToyInfo[extraid][listitem][ptPosY] = 0.0;
			PlayerToyInfo[extraid][listitem][ptPosZ] = 0.0;
			PlayerToyInfo[extraid][listitem][ptPosX] = 0.0;
			PlayerToyInfo[extraid][listitem][ptPosY] = 0.0;
			PlayerToyInfo[extraid][listitem][ptPosZ] = 0.0;

			format(string, sizeof(string), "%d. slotundaki oyunca sildin.", listitem);
		    ShowPlayerDialogEx(extraid, 0, DIALOG_STYLE_MSGBOX, "Oyuncak Mens - Oyuncak Silme", string, "Tamam", "");

		    DeletePVar(extraid, "deleteObject");
		}
	    case THREAD_LOAD_P_ITEMS_CHAIN_1: {
	        mysql_store_result(g_MySQLConnections[0]);

	        new
	            szReturn[16],
	            iSlot = 0;

	        while(mysql_retrieve_row()) {
	            mysql_fetch_field_row(szReturn, "ID", g_MySQLConnections[0]);
	            PlayerToyInfo[extraid][iSlot][ptRealID] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "ModelID", g_MySQLConnections[0]);
	            PlayerToyInfo[extraid][iSlot][ptModelID] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Bone", g_MySQLConnections[0]);
	            PlayerToyInfo[extraid][iSlot][ptBone] = strval(szReturn);

				if(PlayerToyInfo[extraid][iSlot][ptBone] > 18 || PlayerToyInfo[extraid][iSlot][ptBone] < 1) PlayerToyInfo[extraid][iSlot][ptBone] = 1;

				mysql_fetch_field_row(szReturn, "PosX", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptPosX] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "PosY", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptPosY] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "PosZ", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptPosZ] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "RotX", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptRotX] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "RotY", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptRotY] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "RotZ", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptRotZ] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "ScaX", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptScaleX] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "ScaY", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptScaleY] = floatstr(szReturn);

				mysql_fetch_field_row(szReturn, "ScaZ", g_MySQLConnections[0]);
				PlayerToyInfo[extraid][iSlot][ptScaleZ] = floatstr(szReturn);

				iSlot++;
	        }

	        mysql_free_result(g_MySQLConnections[0]);

	        format(szQuery, sizeof(szQuery), "SELECT playervehicles.* FROM playervehicles INNER JOIN players ON playervehicles.Owner = players.ID WHERE players.ID = '%d' ORDER BY playervehicles.Owner ASC LIMIT %d", PlayerInfo[extraid][pID], MAX_PLAYERVEHICLES);
	        mysql_query(szQuery, THREAD_LOAD_P_ITEMS_CHAIN_2, extraid, g_MySQLConnections[0]);
	    }
	    case THREAD_LOAD_P_ITEMS_CHAIN_2: {
	        mysql_store_result(g_MySQLConnections[0]);

	        new
	            szReturn[16],
	            iSlot = 0;

	        while(mysql_retrieve_row()) {
	            mysql_fetch_field_row(szReturn, "ID", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvRealID] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "PosX", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvPosX] = floatstr(szReturn);

	            mysql_fetch_field_row(szReturn, "PosY", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvPosY] = floatstr(szReturn);

	            mysql_fetch_field_row(szReturn, "PosZ", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvPosZ] = floatstr(szReturn);

	            mysql_fetch_field_row(szReturn, "PosAngle", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvPosAngle] = floatstr(szReturn);

	            mysql_fetch_field_row(szReturn, "ModelID", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvModelId] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "LockType", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvLock] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Locked", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvLocked] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "PaintJob", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvPaintJob] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Color1", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvColor1] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Color2", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvColor2] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Price", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvPrice] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Ticket", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvTicket] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Weapon0", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvWeapons][0] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Weapon1", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvWeapons][1] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Weapon2", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvWeapons][2] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "WepUpgrade", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvWepUpgrade] = strval(szReturn);

	            /*mysql_fetch_field_row(szReturn, "Fuel", g_MySQLConnections[0]);*/
	            PlayerVehicleInfo[extraid][iSlot][pvFuel] = 100.0; //floatstr(szReturn);

	            mysql_fetch_field_row(szReturn, "Impound", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvImpounded] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Spawned", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvSpawned] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Disabled", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvDisabled] = strval(szReturn);

	            mysql_fetch_field_row(PlayerVehicleInfo[extraid][iSlot][pvNumberPlate], "NumPlate", g_MySQLConnections[0]);

	            mysql_fetch_field_row(szReturn, "Disabled", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvDisabled] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod0", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][0] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod1", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][1] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod2", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][2] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod3", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][3] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod4", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][4] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod5", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][5] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod6", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][6] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod7", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][7] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod8", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][8] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod9", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][9] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod10", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][10] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod11", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][11] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod12", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][12] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod13", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][13] = strval(szReturn);

	            mysql_fetch_field_row(szReturn, "Mod14", g_MySQLConnections[0]);
	            PlayerVehicleInfo[extraid][iSlot][pvMods][14] = strval(szReturn);
	            if(AdminLoggedInBefore[extraid] == 0) LoadPlayerVehicles(extraid);
	            CheckPlayerVehicleForDesync(extraid, PlayerVehicleInfo[extraid][iSlot][pvId]);

				iSlot++;
	        }

	        mysql_free_result(g_MySQLConnections[0]);

	        format(szQuery, sizeof(szQuery), "SELECT kills.* FROM kills INNER JOIN players ON kills.killerID = players.ID OR kills.killedID = players.ID WHERE players.ID = '%d' ORDER BY kills.killTS ASC LIMIT 10", PlayerInfo[extraid][pID]);
	        mysql_query(szQuery, THREAD_LOAD_P_ITEMS_CHAIN_3, extraid, g_MySQLConnections[0]);
	    }
	    case THREAD_LOAD_P_ITEMS_CHAIN_3: {
	        mysql_store_result(g_MySQLConnections[0]);

     	    new
	        	iSlot = 0;

	        while(mysql_retrieve_row()) {
	            iSlot++;
	            switch(iSlot) {
					case 0: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog0], "killText", g_MySQLConnections[0]);
					case 1: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog1], "killText", g_MySQLConnections[0]);
					case 2: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog2], "killText", g_MySQLConnections[0]);
					case 3: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog3], "killText", g_MySQLConnections[0]);
					case 4: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog4], "killText", g_MySQLConnections[0]);
					case 5: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog5], "killText", g_MySQLConnections[0]);
					case 6: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog6], "killText", g_MySQLConnections[0]);
					case 7: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog7], "killText", g_MySQLConnections[0]);
					case 8: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog8], "killText", g_MySQLConnections[0]);
					case 9: mysql_fetch_field_row(PlayerInfo[extraid][pKillLog9], "killText", g_MySQLConnections[0]);
				}
	        }

	        mysql_free_result(g_MySQLConnections[0]);
	    }
	    case THREAD_SAVE_ACCOUNT_CHAIN_1: {
			format(szQuery, sizeof(szQuery), "UPDATE players SET Job = %d, Job2 = %d, UpgradePoints = %d, SpawnArmor = '%f', Cash = %d, Bank = %d, Insurance = %d, Crimes = %d, Arrested = %d, WantedLevel = %d, Health = '%f', Armor = '%f', \
			Pot = %d, Crack = %d, Radio = %d, RadioFreq = %d, Phonebook = %d, Dice = %d, CDPlayer = %d, Materials = %d, Rope = %d, Cigars = %d, Sprunk = %d, Spraycan = %d, House = %d, House2 = %d, Renting = %d, Interior = %d, VirtualWorld = %d, Jailed = %d WHERE ID = %d",
			PlayerInfo[extraid][pJob], PlayerInfo[extraid][pJob2], PlayerInfo[extraid][gPupgrade], PlayerInfo[extraid][pSarmor], PlayerInfo[extraid][pCash], PlayerInfo[extraid][pBank], PlayerInfo[extraid][pInsurance], PlayerInfo[extraid][pCrimes],
			PlayerInfo[extraid][pArrested], PlayerInfo[extraid][pWantedLevel], PlayerInfo[extraid][pHealth], PlayerInfo[extraid][pArmor], PlayerInfo[extraid][pPot], PlayerInfo[extraid][pCrack], PlayerInfo[extraid][pRadio], PlayerInfo[extraid][pRadioFreq],
			PlayerInfo[extraid][pPhoneBook], PlayerInfo[extraid][pDice], PlayerInfo[extraid][pCDPlayer], PlayerInfo[extraid][pMats], PlayerInfo[extraid][pRope], PlayerInfo[extraid][pCigar], PlayerInfo[extraid][pSprunk], PlayerInfo[extraid][pSpraycan], PlayerInfo[extraid][pHouse],
			PlayerInfo[extraid][pHouse2], PlayerInfo[extraid][pRenting], PlayerInfo[extraid][pInt], PlayerInfo[extraid][pVW], PlayerInfo[extraid][pJailed], PlayerInfo[extraid][pID]);

			mysql_query(szQuery, THREAD_SAVE_ACCOUNT_CHAIN_2, extraid, g_MySQLConnections[0]);
	    }
	    case THREAD_SAVE_ACCOUNT_CHAIN_2: {
	        format(szQuery, sizeof(szQuery), "UPDATE players SET JailTime = %d, Gun0 = %d, Gun1 = %d, Gun2 = %d, Gun3 = %d, Gun4 = %d, Gun5 = %d, Gun6 = %d, Gun7 = %d, Gun8 = %d, Gun9 = %d, Gun10 = %d, Gun11 = %d, Paycheck = %d, PayReady = %d, Hospital = %d, \
			DetSkill = %d, LawSkill = %d, DrugsSkill = %d, SmugglerSkill = %d, ArmsSkill = %d, MechSkill = %d, BoxSkill = %d, TruckSkill = %d, CarSkill = %d, LawyerTime = %d, LawyerFreeTime = %d, DrugsTime = %d, MechTime = %d WHERE ID = %d",
			PlayerInfo[extraid][pJailTime], PlayerInfo[extraid][pGuns][0], PlayerInfo[extraid][pGuns][1], PlayerInfo[extraid][pGuns][2], PlayerInfo[extraid][pGuns][3], PlayerInfo[extraid][pGuns][4], PlayerInfo[extraid][pGuns][5], PlayerInfo[extraid][pGuns][6], PlayerInfo[extraid][pGuns][7],
			PlayerInfo[extraid][pGuns][8], PlayerInfo[extraid][pGuns][9], PlayerInfo[extraid][pGuns][10], PlayerInfo[extraid][pGuns][11], PlayerInfo[extraid][pPayCheck], PlayerInfo[extraid][pPayReady], PlayerInfo[extraid][pHospital], PlayerInfo[extraid][pDetSkill],
			PlayerInfo[extraid][pLawSkill], PlayerInfo[extraid][pDrugsSkill], PlayerInfo[extraid][pSmugSkill], PlayerInfo[extraid][pArmsSkill], PlayerInfo[extraid][pMechSkill], PlayerInfo[extraid][pBoxSkill], PlayerInfo[extraid][pTruckSkill], PlayerInfo[extraid][pCarSkill], PlayerInfo[extraid][pLawyerTime],
			PlayerInfo[extraid][pLawyerFreeTime], PlayerInfo[extraid][pDrugsTime], PlayerInfo[extraid][pMechTime], PlayerInfo[extraid][pID]);

			mysql_query(szQuery, THREAD_SAVE_ACCOUNT_CHAIN_3, extraid, g_MySQLConnections[0]);
	    }
	    case THREAD_SAVE_ACCOUNT_CHAIN_3: {
			format(szQuery, sizeof(szQuery), "UPDATE players SET SexTime = %d, CarTime = %d, pWEXists = %d, pWX = '%f', pWY = '%f', pWZ = '%f', pWVW = %d, pWInt = %d, pWValue = %d, pWSeeds = %d, Wins = %d, Loses = %d, \
			FightingStyle = %d, Screwdriver = %d, Tire = %d, Firstaid = %d, Rccam = %d, Receiver = %d, GPS = %d, Sweep = %d, SweepLeft = %d, Bugged = %d, OnDuty = %d, CarLic = %d, FlyLic = %d, GunLic = %d, Division = %d WHERE ID = %d",
			PlayerInfo[extraid][pSexTime], PlayerInfo[extraid][pCarTime], PlayerInfo[extraid][pWeedObject], PlayerInfo[extraid][pWeedPos][0], PlayerInfo[extraid][pWeedPos][1], PlayerInfo[extraid][pWeedPos][2],
			PlayerInfo[extraid][pWeedVW], PlayerInfo[extraid][pWeedInt], PlayerInfo[extraid][pWeedGrowth], PlayerInfo[extraid][pWSeeds], PlayerInfo[extraid][pWins], PlayerInfo[extraid][pLoses], PlayerInfo[extraid][pFightStyle], PlayerInfo[extraid][pScrewdriver],
			PlayerInfo[extraid][pTire], PlayerInfo[extraid][pFirstaid], PlayerInfo[extraid][pRccam], PlayerInfo[extraid][pReceiver], PlayerInfo[extraid][pGPS], PlayerInfo[extraid][pSweep], PlayerInfo[extraid][pSweepLeft],
			PlayerInfo[extraid][pBugged], PlayerInfo[extraid][pDuty], PlayerInfo[extraid][pCarLic], PlayerInfo[extraid][pFlyLic], PlayerInfo[extraid][pGunLic], PlayerInfo[extraid][pDivision], PlayerInfo[extraid][pID]);

			mysql_query(szQuery, THREAD_SAVE_ACCOUNT_CHAIN_4, extraid, g_MySQLConnections[0]);
	    }
	    case THREAD_SAVE_ACCOUNT_CHAIN_4: {
	        // Escape strings for now....
	        new
	            szPrisonedBy[MAX_PLAYER_NAME],
	            szPrisonReason[128],
	            szContractBy[MAX_PLAYER_NAME],
	            szContractDetail[128];

			mysql_real_escape_string(PlayerInfo[extraid][pPrisonedBy], szPrisonedBy, g_MySQLConnections[0]);
			mysql_real_escape_string(PlayerInfo[extraid][pPrisonReason], szPrisonReason, g_MySQLConnections[0]);

			mysql_real_escape_string(PlayerInfo[extraid][pContractBy], szContractBy, g_MySQLConnections[0]);
			mysql_real_escape_string(PlayerInfo[extraid][pContractDetail], szContractDetail, g_MySQLConnections[0]);

			format(szQuery, sizeof(szQuery), "UPDATE players SET TicketTime = %d, HeadValue = %d, ContractBy = '%s', ContractDetail = '%s', Bombs = %d, CHits = %d, FHits = %d, PrisonedBy = '%s', PrisonReason = '%s', AcceptReport = %d, TrashReport = %d, Accent = %d, \
			NewMuted = %d, NewMutedTotal = %d, AdMuted = %d, AdMutedTotal = %d, ReportMuted = %d, ReportMutedTotal = %d, ReportMutedTime = %d, Speedo = %d, GCMuted = %d, GCMutedTime = %d, CallsAccepted = %d, PatientsDelivered = %d WHERE ID = %d",
			PlayerInfo[extraid][pTicketTime], PlayerInfo[extraid][pHeadValue], szContractBy, szContractDetail, PlayerInfo[extraid][pBombs], PlayerInfo[extraid][pCHits], PlayerInfo[extraid][pFHits], szPrisonedBy, szPrisonReason,
			PlayerInfo[extraid][pAcceptReport], PlayerInfo[extraid][pTrashReport], PlayerInfo[extraid][pAccent], PlayerInfo[extraid][pNMute], PlayerInfo[extraid][pNMuteTotal], PlayerInfo[extraid][pADMute], PlayerInfo[extraid][pADMuteTotal], PlayerInfo[extraid][pRMuted], PlayerInfo[extraid][pRMutedTotal],
			PlayerInfo[extraid][pRMutedTime], PlayerInfo[extraid][pSpeedo], PlayerInfo[extraid][pGCMuted], PlayerInfo[extraid][pGCMutedTime], PlayerInfo[extraid][pCallsAccepted], PlayerInfo[extraid][pPatientsDelivered], PlayerInfo[extraid][pID]);

			mysql_query(szQuery, THREAD_SAVE_ACCOUNT_CHAIN_5, extraid, g_MySQLConnections[0]);
	    }
	    case THREAD_SAVE_ACCOUNT_CHAIN_5: {
	        // Escape more strings...
	        new
	            szMarriedTo[MAX_PLAYER_NAME],
	            szFlag[128],
	            szReferredBy[MAX_PLAYER_NAME];

			mysql_real_escape_string(PlayerInfo[extraid][pMarriedTo], szMarriedTo, g_MySQLConnections[0]);
			mysql_real_escape_string(PlayerInfo[extraid][pFlag], szFlag, g_MySQLConnections[0]);
			mysql_real_escape_string(PlayerInfo[extraid][pReferredBy], szReferredBy, g_MySQLConnections[0]);

			format(szQuery, sizeof(szQuery), "UPDATE players SET SMSLog = %d, TriageTime = %d, Married = %d, MarriedTo = '%s', Flag = '%s', ReferredBy = '%s', RefTokens = %d, RefTokensOffline = %d, Helper = %d, GangMod = %d, LiveBanned = %d, \
			Gate1 = %d, Gate2 = %d, Gate3 = %d, Blindfold = %d, Gas = %d WHERE ID = %d",
			PlayerInfo[extraid][pSmslog], PlayerInfo[extraid][pTriageTime], PlayerInfo[extraid][pMarried], szMarriedTo, szFlag, szReferredBy, PlayerInfo[extraid][pRefTokens], PlayerInfo[extraid][pRefTokensOffline], PlayerInfo[extraid][pHelper],
   			PlayerInfo[extraid][pGangMod], PlayerInfo[extraid][pLiveBanned], PlayerInfo[extraid][pGate1], PlayerInfo[extraid][pGate2], PlayerInfo[extraid][pGate3], PlayerInfo[extraid][pBlindfold], PlayerInfo[extraid][pGas], PlayerInfo[extraid][pID]);
			mysql_query(szQuery, THREAD_SAVING_FINISHED, extraid, g_MySQLConnections[0]);
		}
		case THREAD_SAVING_FINISHED: {
		    if(GetPVarInt(extraid, "attemptLoginAfter") == 1) { // Log the player back in if we need to (new registrations) and avoid saving things we know don't exist yet (i.e. toys)
                ResetPlayerVariables(extraid);
				AttemptPlayerLogin(extraid, PlayerInfo[extraid][pKey]);
            	DeletePVar(extraid, "attemptLoginAfter");
			} else {

				// Save player toys
				for(new v = 0; v < MAX_PLAYERTOYS; v++) {
				    if(PlayerToyInfo[extraid][v][ptRealID] >= 1) { // Check to ensure the toy has a real ID, in MySQL (if inserted it'll have a "real ID").
				        format(szQuery, sizeof(szQuery), "UPDATE toys SET ModelID = %d, Bone = %d, PosX = '%f', PosY = '%f', PosZ = '%f', RotX = '%f', RotY = '%f', RotZ = '%f', ScaX = '%f', ScaY = '%f', ScaZ = '%f' WHERE Owner = %d AND ID = %d",
						PlayerToyInfo[extraid][v][ptModelID], PlayerToyInfo[extraid][v][ptBone], PlayerToyInfo[extraid][v][ptPosX], PlayerToyInfo[extraid][v][ptPosY], PlayerToyInfo[extraid][v][ptPosZ], PlayerToyInfo[extraid][v][ptRotX], PlayerToyInfo[extraid][v][ptRotY], PlayerToyInfo[extraid][v][ptRotZ],
						PlayerToyInfo[extraid][v][ptScaleX], PlayerToyInfo[extraid][v][ptScaleY], PlayerToyInfo[extraid][v][ptScaleZ], PlayerInfo[extraid][pID], PlayerToyInfo[extraid][v][ptRealID]);

						mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
				    }
		   		}

		   		// Save player vehicles
				for(new v = 0; v < MAX_PLAYERVEHICLES; v++) {
				    if(PlayerVehicleInfo[extraid][v][pvRealID] >= 1) { // Check to ensure the vehicle has a real ID, in MySQL (if inserted, it'll have a "real ID").
				        format(szQuery, sizeof(szQuery), "UPDATE playervehicles SET PosX = '%f', PosY = '%f', PosZ = '%f', PosAngle = '%f', ModelID = %d, LockType = %d, Locked = %d, PaintJob = %d, Color1 = %d, Color2 = %d, \
						Price = %d, Ticket = %d, Weapon0 = %d, Weapon1 = %d, Weapon2 = %d, WepUpgrade = %d, Impound = %d, Spawned = %d, Disabled = %d, NumPlate = '%s', Mod0 = %d, Mod1 = %d, Mod2 = %d,",
						PlayerVehicleInfo[extraid][v][pvPosX], PlayerVehicleInfo[extraid][v][pvPosY], PlayerVehicleInfo[extraid][v][pvPosZ], PlayerVehicleInfo[extraid][v][pvPosAngle], PlayerVehicleInfo[extraid][v][pvModelId], PlayerVehicleInfo[extraid][v][pvLock], PlayerVehicleInfo[extraid][v][pvLocked], PlayerVehicleInfo[extraid][v][pvPaintJob],
						PlayerVehicleInfo[extraid][v][pvColor1], PlayerVehicleInfo[extraid][v][pvColor2], PlayerVehicleInfo[extraid][v][pvPrice], PlayerVehicleInfo[extraid][v][pvTicket], PlayerVehicleInfo[extraid][v][pvWeapons][0], PlayerVehicleInfo[extraid][v][pvWeapons][1], PlayerVehicleInfo[extraid][v][pvWeapons][2],
						PlayerVehicleInfo[extraid][v][pvWepUpgrade], PlayerVehicleInfo[extraid][v][pvImpounded], PlayerVehicleInfo[extraid][v][pvSpawned], PlayerVehicleInfo[extraid][v][pvDisabled], PlayerVehicleInfo[extraid][v][pvNumberPlate], PlayerVehicleInfo[extraid][v][pvMods][0], PlayerVehicleInfo[extraid][v][pvMods][1], PlayerVehicleInfo[extraid][v][pvMods][2]);

						// Concencating the string seems like the most appropriate method for this type... Don't wanna send more than 1 query per player vehicle.
						format(szQuery, sizeof(szQuery), "%s Mod3 = %d, Mod4 = %d, Mod5 = %d, Mod6 = %d, Mod7 = %d, Mod8 = %d, Mod9 = %d, Mod10 = %d, Mod11 = %d, Mod12 = %d, Mod13 = %d, Mod14 = %d WHERE Owner = %d AND ID = %d", szQuery, PlayerVehicleInfo[extraid][v][pvMods][3], PlayerVehicleInfo[extraid][v][pvMods][4], PlayerVehicleInfo[extraid][v][pvMods][5],
						PlayerVehicleInfo[extraid][v][pvMods][6], PlayerVehicleInfo[extraid][v][pvMods][7], PlayerVehicleInfo[extraid][v][pvMods][8], PlayerVehicleInfo[extraid][v][pvMods][9], PlayerVehicleInfo[extraid][v][pvMods][10], PlayerVehicleInfo[extraid][v][pvMods][11], PlayerVehicleInfo[extraid][v][pvMods][12],
						PlayerVehicleInfo[extraid][v][pvMods][13], PlayerVehicleInfo[extraid][v][pvMods][14], PlayerInfo[extraid][pID], PlayerVehicleInfo[extraid][v][pvRealID]);

						// Submit the huge query...
						mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
				    }
		   		}
            }
		}
	    case THREAD_REGISTER_ACCOUNT: {
			ResetPlayerVariables(extraid);

			gPlayerLogged[extraid] = 1;
			PlayerInfo[extraid][pID] = mysql_insert_id(g_MySQLConnections[0]);
			PlayerInfo[extraid][pReg] = 1;
			GetPVarString(extraid, "password", PlayerInfo[extraid][pKey], 128);
			DeletePVar(extraid, "password");

			SetPVarInt(extraid, "attemptLoginAfter", 1);
			SaveAccount(extraid);

			TotalRegister++;
		}
		case THREAD_LOGIN_ATTEMPT: {
		    mysql_store_result(g_MySQLConnections[0]);

			if(IsPlayerConnected(extraid)) {
			    new
			        szReturn[128],
				    string[128];

		        if(mysql_num_rows(g_MySQLConnections[0]) == 0) { // No rows exist with the specified criteria, so, wrong password!
		            mysql_free_result(g_MySQLConnections[0]);
					ShowMainMenuDialog(extraid, 3);

					gPlayerLogTries[extraid]++;
		        } else {
		            mysql_retrieve_row();

					// Decided against using sscanf as I'd have to create a variable the size of mars. Old school method it is...
					mysql_fetch_field_row(szReturn, "ID", g_MySQLConnections[0]);
					PlayerInfo[extraid][pID] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pKey], "Password", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "Level", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLevel] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "AdminLevel", g_MySQLConnections[0]);
					PlayerInfo[extraid][pAdmin] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pAdminName], "AdminName", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "BanAppealer", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBanAppealer] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Donator", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDonator] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Banned", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBanned] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Permabanned", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPermaBanned] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Disabled", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDisabled] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pIP], "LastIP", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "Registered", g_MySQLConnections[0]);
					PlayerInfo[extraid][pReg] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Tutorial", g_MySQLConnections[0]);
					PlayerInfo[extraid][pTut] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Sex", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSex] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Age", g_MySQLConnections[0]);
					PlayerInfo[extraid][pAge] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Skin", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSkin] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "PosX", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPos_x] = floatstr(szReturn);
					SetPVarFloat(extraid, "realX", floatstr(szReturn));

					mysql_fetch_field_row(szReturn, "PosY", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPos_y] = floatstr(szReturn);
					SetPVarFloat(extraid, "realY", floatstr(szReturn));

					mysql_fetch_field_row(szReturn, "PosZ", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPos_z] = floatstr(szReturn);
					SetPVarFloat(extraid, "realZ", floatstr(szReturn));

					mysql_fetch_field_row(szReturn, "PosR", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPos_r] = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "ConnectTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pConnectTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Respect", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRespect] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "PhoneNumber", g_MySQLConnections[0]);
					PlayerInfo[extraid][pNumber] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Warnings", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWarns] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gang", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGang] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Faction", g_MySQLConnections[0]);
					PlayerInfo[extraid][pFaction] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Leader", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLeader] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Rank", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRank] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Job", g_MySQLConnections[0]);
					PlayerInfo[extraid][pJob] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Job2", g_MySQLConnections[0]);
					PlayerInfo[extraid][pJob2] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "UpgradePoints", g_MySQLConnections[0]);
					PlayerInfo[extraid][gPupgrade] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "SpawnArmor", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSarmor] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Cash", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCash] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Bank", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBank] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Insurance", g_MySQLConnections[0]);
					PlayerInfo[extraid][pInsurance] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Smslog", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSmslog] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Crimes", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCrimes] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Arrested", g_MySQLConnections[0]);
					PlayerInfo[extraid][pArrested] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "WantedLevel", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWantedLevel] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Health", g_MySQLConnections[0]);
					PlayerInfo[extraid][pHealth] = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "Armor", g_MySQLConnections[0]);
					PlayerInfo[extraid][pArmor] = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "Pot", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPot] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Crack", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCrack] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Radio", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRadio] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "RadioFreq", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRadioFreq] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Phonebook", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPhoneBook] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Dice", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDice] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "CDPlayer", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCDPlayer] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Materials", g_MySQLConnections[0]);
					PlayerInfo[extraid][pMats] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Rope", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRope] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Cigars", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCigar] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Sprunk", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSprunk] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Spraycan", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSpraycan] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "House", g_MySQLConnections[0]);
					PlayerInfo[extraid][pHouse] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "House2", g_MySQLConnections[0]);
					PlayerInfo[extraid][pHouse2] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Renting", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRenting] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Interior", g_MySQLConnections[0]);
					PlayerInfo[extraid][pInt] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "VirtualWorld", g_MySQLConnections[0]);
					PlayerInfo[extraid][pVW] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Jailed", g_MySQLConnections[0]);
					PlayerInfo[extraid][pJailed] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "JailTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pJailTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun0", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][0] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun1", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][1] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun2", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][2] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun3", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][3] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun4", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][4] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun5", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][5] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun6", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][6] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun7", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][7] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun8", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][8] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun9", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][9] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun10", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][10] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gun11", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGuns][11] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Paycheck", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPayCheck] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "PayReady", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPayReady] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Hospital", g_MySQLConnections[0]);
					PlayerInfo[extraid][pHospital] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "DetSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDetSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "LawSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLawSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "SexSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSexSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "DrugsSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDrugsSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "SmugglerSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSmugSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "ArmsSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pArmsSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "MechSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pMechSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "BoxSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBoxSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "TruckSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pTruckSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "CarSkill", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCarSkill] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "LawyerTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLawyerTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "LawyerFreeTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLawyerFreeTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "DrugsTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDrugsTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "MechTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pMechTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "SexTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSexTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "CarTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCarTime] = strval(szReturn);


					mysql_fetch_field_row(szReturn, "pWEXists", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedObject] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "pWX", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedPos][0] = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "pWY", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedPos][1] = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "pWZ", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedPos][2] = floatstr(szReturn);

					mysql_fetch_field_row(szReturn, "pWVW", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedVW] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "pWInt", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedInt] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "pWValue", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWeedGrowth] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "pWSeeds", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWSeeds] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Wins", g_MySQLConnections[0]);
					PlayerInfo[extraid][pWins] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Loses", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLoses] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "FightingStyle", g_MySQLConnections[0]);
					PlayerInfo[extraid][pFightStyle] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Screwdriver", g_MySQLConnections[0]);
					PlayerInfo[extraid][pScrewdriver] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Tire", g_MySQLConnections[0]);
					PlayerInfo[extraid][pTire] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Firstaid", g_MySQLConnections[0]);
					PlayerInfo[extraid][pFirstaid] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Rccam", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRccam] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Receiver", g_MySQLConnections[0]);
					PlayerInfo[extraid][pReceiver] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "GPS", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGPS] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Sweep", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSweep] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "SweepLeft", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSweepLeft] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Bugged", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBugged] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "CarLic", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCarLic] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "FlyLic", g_MySQLConnections[0]);
					PlayerInfo[extraid][pFlyLic] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "BoatLic", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBoatLic] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "GunLic", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGunLic] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Division", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDivision] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "TicketTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pTicketTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "HeadValue", g_MySQLConnections[0]);
					PlayerInfo[extraid][pHeadValue] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pContractBy], "ContractBy", g_MySQLConnections[0]);

		            mysql_fetch_field_row(PlayerInfo[extraid][pContractDetail], "ContractBy", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "Bombs", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBombs] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "CHits", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCHits] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "FHits", g_MySQLConnections[0]);
					PlayerInfo[extraid][pFHits] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pPrisonedBy], "PrisonedBy", g_MySQLConnections[0]);

					mysql_fetch_field_row(PlayerInfo[extraid][pPrisonReason], "PrisonReason", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "AcceptReport", g_MySQLConnections[0]);
					PlayerInfo[extraid][pAcceptReport] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "TrashReport", g_MySQLConnections[0]);
					PlayerInfo[extraid][pTrashReport] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Accent", g_MySQLConnections[0]);
					PlayerInfo[extraid][pAccent] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "NewMuted", g_MySQLConnections[0]);
					PlayerInfo[extraid][pNMute] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "NewMutedTotal", g_MySQLConnections[0]);
					PlayerInfo[extraid][pNMuteTotal] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "AdMuted", g_MySQLConnections[0]);
					PlayerInfo[extraid][pADMute] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "AdMutedTotal", g_MySQLConnections[0]);
					PlayerInfo[extraid][pADMuteTotal] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "ReportMuted", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRMuted] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "ReportMutedTotal", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRMutedTotal] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "ReportMutedTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRMutedTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Speedo", g_MySQLConnections[0]);
					PlayerInfo[extraid][pSpeedo] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "GCMuted", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGCMuted] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "GCMutedTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGCMutedTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "CallsAccepted", g_MySQLConnections[0]);
					PlayerInfo[extraid][pCallsAccepted] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "PatientsDelivered", g_MySQLConnections[0]);
					PlayerInfo[extraid][pPatientsDelivered] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "TriageTime", g_MySQLConnections[0]);
					PlayerInfo[extraid][pTriageTime] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Married", g_MySQLConnections[0]);
					PlayerInfo[extraid][pMarried] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pMarriedTo], "MarriedTo", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "OnDuty", g_MySQLConnections[0]);
					PlayerInfo[extraid][pDuty] = strval(szReturn);

					mysql_fetch_field_row(PlayerInfo[extraid][pFlag], "Flag", g_MySQLConnections[0]);

					mysql_fetch_field_row(PlayerInfo[extraid][pReferredBy], "ReferredBy", g_MySQLConnections[0]);

					mysql_fetch_field_row(szReturn, "ReferredBy", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRefTokens] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "RefTokens", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRefTokens] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "RefTokensOffline", g_MySQLConnections[0]);
					PlayerInfo[extraid][pRefTokensOffline] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Helper", g_MySQLConnections[0]);
					PlayerInfo[extraid][pHelper] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "GangMod", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGangMod] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "LiveBanned", g_MySQLConnections[0]);
					PlayerInfo[extraid][pLiveBanned] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gate1", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGate1] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gate2", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGate2] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gate3", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGate3] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Blindfold", g_MySQLConnections[0]);
					PlayerInfo[extraid][pBlindfold] = strval(szReturn);

					mysql_fetch_field_row(szReturn, "Gas", g_MySQLConnections[0]);
					PlayerInfo[extraid][pGas] = strval(szReturn);

					// Free the result (of the entire player record) when we're done with loading it...
					mysql_free_result(g_MySQLConnections[0]);

					if(PlayerInfo[extraid][pHospital] == 1) {
					    PlayerInfo[extraid][pHospital] = 0;
					    SetPVarInt(extraid, "DoktorMasrafi", 1);
					}

					TotalLogin++;
					GetPlayerIp(extraid, PlayerInfo[extraid][pIP], 16);
					if(PlayerInfo[extraid][pBanned] >= 1 || PlayerInfo[extraid][pPermaBanned] >= 1) {
						format(string, sizeof(string), "UYARI: %s (IP%s) banl olduu halde giri yapmay denedi ve otomatik olarak banland.", GetPlayerNameEx(extraid), PlayerInfo[extraid][pIP]);
						ABroadCast(COLOR_YELLOW, string, 1);
						SendClientMessage(extraid, COLOR_NEWS, "Master RPG'den ban yedin, ban temyizi amak iin forum sitemizi ziyaret et.");
						AddBan(PlayerInfo[extraid][pIP]);
						Log("logs/ban.log", string);
						return Kick(extraid);
					}

					if(PlayerInfo[extraid][pSprunk] > 10) {
					    format(string, sizeof(string), "ok fazla gazoz tayorsun. Artk 10 kutu gazozun var ve $%d paran iade edildi.", PlayerInfo[extraid][pSprunk] - 10);
						SendClientMessage(extraid, COLOR_GREY, string);

						PlayerInfo[extraid][pCash] += PlayerInfo[extraid][pSprunk] - 10;
						PlayerInfo[extraid][pSprunk] = 10;
					}

					if(PlayerInfo[extraid][pSmslog] >= 1) {
					    format(string, sizeof(string), "SMS loglar silindi ve %d materyalin geri verildi.", PlayerInfo[extraid][pSmslog] * 2000);
						SendClientMessage(extraid, COLOR_GREY, string);

                        PlayerInfo[extraid][pMats] += PlayerInfo[extraid][pSmslog] * 2000;
						PlayerInfo[extraid][pSmslog] = 0;
					}

			        if(PlayerInfo[extraid][pTut] == 1)
						PlayerPlaySound(extraid,SOUND_OFF,2050.1995, 1344.5500, 13.2378); //muzik Off

					SetSpawnInfo(extraid, 0, PlayerInfo[extraid][pSkin], PlayerInfo[extraid][pPos_x], PlayerInfo[extraid][pPos_y], PlayerInfo[extraid][pPos_z], 1.0, -1, -1, -1, -1, -1, -1);

					gPlayerLogged[extraid] = 1;
					SpawnPlayer(extraid);
					SetPlayerScore(extraid, PlayerInfo[extraid][pLevel]);

					if(PlayerInfo[extraid][pTut] == 1) {
					    TextDrawShowForPlayer(extraid, TDEditor_TD[0]);
					    TextDrawShowForPlayer(extraid, TDEditor_TD[1]);
					    TextDrawShowForPlayer(extraid, TDEditor_TD[2]);
						HideMainMenuGUI(extraid);
						InsideTut[extraid] = 0;
					}

					if(PlayerInfo[extraid][pDisabled] != 0) {
						format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s adl oyuncu karakteri kullanm d olduundan dolay otomatik olarak kicklendi.", GetPlayerNameEx(extraid));
				        ABroadCast(COLOR_YELLOW, string, 4);
					    SendClientMessage(extraid, COLOR_NEWS, "Bu karakter kullanm d. Forum zerinden bize ulan.");
					    return Kick(extraid);
					}

					if(PlayerInfo[extraid][pAdmin] < 0 || PlayerInfo[extraid][pAdmin] > 8) {
			   			new name[MAX_PLAYER_NAME];
						GetPlayerName(extraid, name, sizeof(name));
						format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s, %d Level admin olarak giri yapmaya alt.", GetPlayerNameEx(extraid), PlayerInfo[extraid][pAdmin]);
						PlayerInfo[extraid][pAdmin] = 0;
				        ABroadCast(COLOR_YELLOW, string, 4);
						return Kick(extraid);
				    }

					if(PlayerInfo[extraid][pInt] > 0 || PlayerInfo[extraid][pVW] > 0) {
					    LoadObjectsForPlayer(extraid);
				    }

					SkinDelay(extraid);
					SetPlayerFightingStyle(extraid, PlayerInfo[extraid][pFightStyle]);
					SetPlayerToTeamColor(extraid);

					if(AdminLoggedInBefore[extraid] == 0) {
						if(PlayerInfo[extraid][pTut] == 1) {
							format(string, sizeof(string), "Master RPG'ye hogeldin, %s.", GetPlayerNameEx(extraid));
							SendClientMessage(extraid, COLOR_NEWS, string);
						}

						if(PlayerInfo[extraid][pAdmin] > 0 && PlayerInfo[extraid][pTut] == 1) {
							format(string, sizeof(string), "%d Level Admin olarak giri yaptn.",PlayerInfo[extraid][pAdmin]);
							SendClientMessage(extraid, COLOR_WHITE,string);

							if(strlen(PlayerInfo[extraid][pAdminName]) > 2 && strlen(PlayerInfo[extraid][pAdminName]) < 20) {
								format(string, sizeof(string), "%s (%s) %d Level Admin olarak giri yapt.", GetPlayerNameEx(extraid), PlayerInfo[extraid][pAdminName], PlayerInfo[extraid][pAdmin]);
							}
							else {
								format(string, sizeof(string), "%s (admin ismi ayarlanmam) %d Level Admin olarak giri yapt.", GetPlayerNameEx(extraid), PlayerInfo[extraid][pAdmin]);
							}

							foreach(Player, i) {
								if(PlayerInfo[i][pAdmin] >= 5 && PlayerInfo[i][pAdmin] >= PlayerInfo[extraid][pAdmin] && i != extraid) {
									SendClientMessage(i, COLOR_WHITE, string);
								}
							}
						}
						if(PlayerInfo[extraid][pTut] == 1) {
							format(string, sizeof(string), "~w~Hosgeldin~n~~y~%s", GetPlayerNameEx(extraid));
							GameTextForPlayer(extraid, string, 5000, 1);

							new motdstring[128];
							format(motdstring, sizeof(motdstring), "Haberler: %s", GlobalMOTD);
							SendClientMessage(extraid, COLOR_WHITE, motdstring);

							new amotdstring[128];
							format(amotdstring, sizeof(amotdstring), "Admin Haberleri: %s", AdminMOTD);
							if(PlayerInfo[extraid][pAdmin] > 0)  SendClientMessage(extraid, COLOR_YELLOW, amotdstring);
						}
						if(PlayerInfo[extraid][pGang] < 255 && PlayerInfo[extraid][pTut] == 1) {
							format(string, sizeof(string), "Aile Duyurusu: %s.", FamilyInfo[PlayerInfo[extraid][pGang]][FamilyMOTD]);
							SendClientMessage(extraid, COLOR_YELLOW, string);
						}
						if(!isnull(PlayerInfo[extraid][pFlag])) {
							format(string, sizeof(string), "%s adl kiide bayrak var.", GetPlayerNameEx(extraid));
							ABroadCast(COLOR_WHITE, string, 1);
				  		}
				  		if(PlayerInfo[extraid][pRefTokensOffline] != 0) {
				  		    format(string, sizeof(string), "Oyunda deilken %d neri jetonu kazandn. Harcamak /refmarket yaz.", PlayerInfo[extraid][pRefTokensOffline]);
				  		    SendClientMessage(extraid, COLOR_YELLOW, string);
				  		    PlayerInfo[extraid][pRefTokens] += PlayerInfo[extraid][pRefTokensOffline];
				  		    PlayerInfo[extraid][pRefTokensOffline] = 0;
				  		}
			   			if(PlayerInfo[extraid][pJob2] >= 1 && PlayerInfo[extraid][pDonator] < 2 && PlayerInfo[extraid][pLevel] < 25) {
							PlayerInfo[extraid][pJob2] = 0;
							SendClientMessage(extraid, COLOR_YELLOW, "kinci mesleini 25 levelden dk olduundan yada VIP sren bittiinden dolay kaybettin.");
						}
					}

					/* --------- Load alternative player items (vehicles, toys, etc) --------- */
					LoadPlayerDynamicItems(extraid);
					/*format(szQuery, sizeof(szQuery), "UPDATE connections SET AccountID = %d WHERE playerid = %d", PlayerInfo[extraid][pID], extraid);
					mysql_query(szQuery, THREAD_NO_RESULT, extraid, g_MySQLConnections[0]);*/

					if(PlayerInfo[extraid][pWeedObject] != 0) {
						PlayerInfo[extraid][pWeedObject] = CreateDynamicObject(3409, PlayerInfo[extraid][pWeedPos][0], PlayerInfo[extraid][pWeedPos][1], PlayerInfo[extraid][pWeedPos][2], 0.0, 0.0, 0.0, PlayerInfo[extraid][pWeedVW], PlayerInfo[extraid][pWeedInt]);
					}

			 		new
						iCheckOne = INVALID_HOUSE_ID,
						iCheckTwo = INVALID_HOUSE_ID,
						szPlayerName[MAX_PLAYER_NAME];

					GetPlayerName(extraid, szPlayerName, sizeof(szPlayerName));

					for(new i = 0; i < MAX_HOUSES; ++i) if(strcmp(szPlayerName, HouseInfo[i][hOwner], false) == 0) {
						if(iCheckOne != INVALID_HOUSE_ID) iCheckTwo = i;
						else if(iCheckTwo == INVALID_HOUSE_ID) iCheckOne = i;
						else break;
					}

					if(iCheckOne != INVALID_HOUSE_ID)
						PlayerInfo[extraid][pHouse] = iCheckOne;
					else PlayerInfo[extraid][pHouse] = INVALID_HOUSE_ID;

					if(iCheckTwo != INVALID_HOUSE_ID)
						PlayerInfo[extraid][pHouse2] = iCheckTwo;
					else PlayerInfo[extraid][pHouse2] = INVALID_HOUSE_ID;

					if(PlayerInfo[extraid][pRenting] != INVALID_HOUSE_ID && (PlayerInfo[extraid][pHouse] != INVALID_HOUSE_ID || PlayerInfo[extraid][pHouse2] != INVALID_HOUSE_ID)) {
						PlayerInfo[extraid][pRenting] = INVALID_HOUSE_ID;
					}
				}
			} else mysql_free_result(g_MySQLConnections[0]); // The player logged off before we could get their result, so we need to free it.
		}
	}
	return 1;
}

forward Login(playerid);
public Login(playerid)
{
	// Display the main menu
	ShowMainMenuGUI(playerid);
	ClearChatbox(playerid);

InterpolateCameraPos(playerid, 1263.423339, -1355.398681, 337.805175, 1396.172607, -940.134521, 132.164199, 8000);
InterpolateCameraLookAt(playerid, 1265.066894, -1351.099853, 335.850891, 1396.664672, -935.602722, 130.109710, 8000);

	new
	    szQuery[128],
	    szPlayerName[MAX_PLAYER_NAME],
		szPlayerName2[MAX_PLAYER_NAME];

	GetPlayerName(playerid, szPlayerName, sizeof(szPlayerName));

	mysql_real_escape_string(szPlayerName, szPlayerName2, g_MySQLConnections[0]);

	// Check MySQL to see if any accounts exist with the specified username on login.
	format(szQuery, sizeof(szQuery), "SELECT COUNT(*) FROM players WHERE Username = '%s'", szPlayerName);
	mysql_query(szQuery, THREAD_CONFIRM_USERNAME, playerid, g_MySQLConnections[0]);



	//ConnectionLog(playerid, PlayerInfo[playerid][pID], szPlayerName);
	return 1;
}

stock PreloadAnimLib(playerid, animlib[]) {
	return ApplyAnimation(playerid,animlib,"null",0.0,0,0,0,0,0);
}

stock PreloadAnims(playerid) {
	ApplyAnimation(playerid, "AIRPORT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "Attractors", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BAR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BASEBALL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BD_FIRE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BEACH", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "benchpress", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BF_injection", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKED", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKEH", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKELEAP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKES", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKEV", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BIKE_DBZ", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BMX", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BOMBER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BOX", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BSKTBALL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BUDDY", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "BUS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CAMERA", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CAR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CARRY", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CAR_CHAT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CASINO", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CHAINSAW", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CHOPPA", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CLOTHES", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COACH", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COLT45", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COP_AMBIENT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "COP_DVBYZ", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CRACK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "CRIB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DAM_JUMP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DANCING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DEALER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DILDO", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DODGE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DOZER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "DRIVEBYS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FAT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_B", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_C", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_D", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FIGHT_E", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FINALE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FINALE2", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FLAME", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "Flowers", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "FOOD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "Freeweights", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GANGS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GHANDS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GHETTO_DB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "goggles", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GRAFFITI", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GRAVEYARD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GRENADE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "GYMNASIUM", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "HAIRCUTS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "HEIST9", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "INT_HOUSE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "INT_OFFICE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "INT_SHOP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "JST_BUISNESS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "KART", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "KISSING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "KNIFE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LAPDAN1", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LAPDAN2", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LAPDAN3", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "LOWRIDER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MD_CHASE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MD_END", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MEDIC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MISC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MTB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "MUSCULAR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "NEVADA", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ON_LOOKERS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "OTB", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PARACHUTE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PARK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PAULNMAC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ped", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PLAYER_DVBYS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PLAYIDLES", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "POLICE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "POOL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "POOR", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "PYTHON", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "QUAD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "QUAD_DBZ", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RAPPING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RIFLE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RIOT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "ROB_BANK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RUSTLER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "RYDER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SCRATCHING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SHAMAL", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SHOP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SHOTGUN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SILENCED", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SKATE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SMOKING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SNIPER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SPRAYCAN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "STRIP", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SUNBATHE", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWAT", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWEET", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWIM", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "SWORD", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TANK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TATTOOS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TEC", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TRAIN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "TRUCK", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "UZI", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "VAN", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "VENDING", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "VORTEX", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "WAYFARER", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "WEAPONS", "null", 0.0, 0, 0, 0, 0, 0);
	ApplyAnimation(playerid, "WUZI", "null", 0.0, 0, 0, 0, 0, 0);

	return 1;
}

forward RespawnVehicleFunction(vehicleid);
public RespawnVehicleFunction(vehicleid) {
	return SetVehicleToRespawn(vehicleid);
}

public OnPlayerSpawn(playerid) {
	PreloadAnims(playerid);

	SetPlayerTeam(playerid, -1);

	if(!gPlayerLogged[playerid])
    {// The player doesn't actually spawn before logging in, this is just to get rid of the annoying "<<", ">>" and "Spawn" buttons in the login/registration screen.
        TogglePlayerControllable(playerid, 0);
        return 1;
	}
	if(InsideShamal[playerid] != INVALID_VEHICLE_ID)
	{
		SetPlayerPos(playerid, GetPVarFloat(playerid, "air_Xpos"), GetPVarFloat(playerid, "air_Ypos"), GetPVarFloat(playerid, "air_Zpos"));
		SetPlayerFacingAngle(playerid, GetPVarFloat(playerid, "air_Rpos"));
		SetPlayerHealth(playerid, GetPVarFloat(playerid, "air_HP"));
		SetPlayerArmourEx(playerid, GetPVarFloat(playerid, "air_Arm"));
		SetPlayerWeaponsEx(playerid);
		SetPlayerToTeamColor(playerid);
		SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);

		DeletePVar(playerid, "air_Xpos");
		DeletePVar(playerid, "air_Ypos");
		DeletePVar(playerid, "air_Zpos");
		DeletePVar(playerid, "air_Rpos");
		DeletePVar(playerid, "air_HP");
		DeletePVar(playerid, "air_Arm");

		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, InsideShamal[playerid]);
		return SetPlayerInterior(playerid, 1);
	}

	if(KontrolEdildi[playerid] == 0) {
	KontrolEdildi[playerid] = 1;
	SetCameraBehindPlayer(playerid);
	TogglePlayerControllable(playerid,0);
	SetTimerEx("KontrolEdiver",4 * 1000, 0, "i", playerid);
	for(new i = 0; i < 11; i++) TextDrawHideForPlayer(playerid, giristxt[i]);
	}

    Streamer_Update(playerid);

    if(IsPlayerNPC(playerid)) return 1;
	SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
	DeletePVar(playerid, "STD");

	SetCameraBehindPlayer(playerid);
	SetPlayerSpawn(playerid);
	SetPlayerWeapons(playerid);
	StopAudioStreamForPlayer(playerid); // DEAKTF OLABLR
	SetPlayerToTeamColor(playerid);

	SetPlayerSkillLevel(playerid, WEAPONSKILL_PISTOL, 1);
	SetPlayerSkillLevel(playerid, WEAPONSKILL_MICRO_UZI, 1);
	return 1;
}

public OnPlayerDeath(playerid, killerid, reason){
	/*
    new Float:x,Float:y,Float:z,string[256],pName[MAX_PLAYER_NAME];
	GetPlayerPos(playerid, x,y,z);
	GetPlayerName(playerid, pName,sizeof(pName));
	format(string, sizeof(string),"Body of %s",pName);
	Create3DTextLabel(string, 0xFF0000FF,x,y,z-1,5,0,0);
	Object[playerid] = CreateObject(3092, x,y,z+1, 0.0, 0.0, 0.0,100.0);
	SetTimer("DestroyObject",5000,0);
	*/
    //new string[128];
    new string[256];

	if(IsPlayerConnected(killerid)) {
		new
			hour,
			minute,
			second,
			weaponname[32];

		gettime(hour,minute,second);
		FixHour(hour);
		hour = shifthour;
		GetWeaponName(reason, weaponname, sizeof(weaponname));

		new
			szQuery[225];

	    if(GetPVarInt(playerid, "PBM") > 0 && GetPVarInt(killerid, "PBM") > 0) {
        	SetPVarInt(killerid, "PBMK", GetPVarInt(killerid, "PBMK")+1);
        	SetPVarInt(playerid, "PBMD", GetPVarInt(playerid, "PBMD")+1);

        	SetPVarInt(playerid, "PBMS", GetPVarInt(playerid, "PBMS")-5);
        	SetPVarInt(killerid, "PBMS", GetPVarInt(killerid, "PBMS")+10);
			if(reason == 0) format(string, sizeof(string), "%s, %s adl kiiyi paintballda yumruklaryla ldrd.", GetPlayerNameEx(killerid), GetPlayerNameEx(playerid));
			else format(string, sizeof(string), "%s, %s adl kiiyi paintballda %s ile ldrd.", GetPlayerNameEx(killerid), GetPlayerNameEx(playerid), weaponname);
			foreach(Player, i) {
			    if(GetPVarInt(playerid, "PBM") == GetPVarInt(i, "PBM"))
			        SendClientMessage(i, COLOR_RED, string);
			}

			format(PlayerInfo[playerid][pKillLog9], 128, "%s", PlayerInfo[playerid][pKillLog8]);
			format(PlayerInfo[playerid][pKillLog8], 128, "%s", PlayerInfo[playerid][pKillLog7]);
			format(PlayerInfo[playerid][pKillLog7], 128, "%s", PlayerInfo[playerid][pKillLog6]);
			format(PlayerInfo[playerid][pKillLog6], 128, "%s", PlayerInfo[playerid][pKillLog5]);
			format(PlayerInfo[playerid][pKillLog5], 128, "%s", PlayerInfo[playerid][pKillLog4]);
			format(PlayerInfo[playerid][pKillLog4], 128, "%s", PlayerInfo[playerid][pKillLog3]);
			format(PlayerInfo[playerid][pKillLog3], 128, "%s", PlayerInfo[playerid][pKillLog2]);
			format(PlayerInfo[playerid][pKillLog2], 128, "%s", PlayerInfo[playerid][pKillLog1]);
			format(PlayerInfo[playerid][pKillLog1], 128, "%s", PlayerInfo[playerid][pKillLog0]);
			format(PlayerInfo[playerid][pKillLog0], 128, "(%d:%d:%d) %s beni %s ile ldrd. (paintballda)", hour,minute,second,GetPlayerNameEx(killerid), weaponname);

			format(PlayerInfo[killerid][pKillLog9], 128, "%s", PlayerInfo[killerid][pKillLog8]);
			format(PlayerInfo[killerid][pKillLog8], 128, "%s", PlayerInfo[killerid][pKillLog7]);
			format(PlayerInfo[killerid][pKillLog7], 128, "%s", PlayerInfo[killerid][pKillLog6]);
			format(PlayerInfo[killerid][pKillLog6], 128, "%s", PlayerInfo[killerid][pKillLog5]);
			format(PlayerInfo[killerid][pKillLog5], 128, "%s", PlayerInfo[killerid][pKillLog4]);
			format(PlayerInfo[killerid][pKillLog4], 128, "%s", PlayerInfo[killerid][pKillLog3]);
			format(PlayerInfo[killerid][pKillLog3], 128, "%s", PlayerInfo[killerid][pKillLog2]);
			format(PlayerInfo[killerid][pKillLog2], 128, "%s", PlayerInfo[killerid][pKillLog1]);
			format(PlayerInfo[killerid][pKillLog1], 128, "%s", PlayerInfo[killerid][pKillLog0]);
		 	format(PlayerInfo[killerid][pKillLog0], 128, "(%d:%d:%d) %s, %s adl oyuncuyu %s ile ldrd. (paintballda)", hour,minute,second, GetPlayerNameEx(killerid), GetPlayerNameEx(playerid), weaponname);

		 	format(szQuery, sizeof(szQuery), "INSERT INTO kills (killerID, killedID, killTS, killText) VALUES(%d, %d, %d, '%s')", PlayerInfo[killerid][pID], PlayerInfo[playerid][pID], gettime(), PlayerInfo[killerid][pKillLog0]);
		 	mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	    } else if(GetPVarInt(playerid, "EventToken") > 0) {
			format(PlayerInfo[playerid][pKillLog9], 128, "%s", PlayerInfo[playerid][pKillLog8]);
			format(PlayerInfo[playerid][pKillLog8], 128, "%s", PlayerInfo[playerid][pKillLog7]);
			format(PlayerInfo[playerid][pKillLog7], 128, "%s", PlayerInfo[playerid][pKillLog6]);
			format(PlayerInfo[playerid][pKillLog6], 128, "%s", PlayerInfo[playerid][pKillLog5]);
			format(PlayerInfo[playerid][pKillLog5], 128, "%s", PlayerInfo[playerid][pKillLog4]);
			format(PlayerInfo[playerid][pKillLog4], 128, "%s", PlayerInfo[playerid][pKillLog3]);
			format(PlayerInfo[playerid][pKillLog3], 128, "%s", PlayerInfo[playerid][pKillLog2]);
			format(PlayerInfo[playerid][pKillLog2], 128, "%s", PlayerInfo[playerid][pKillLog1]);
			format(PlayerInfo[playerid][pKillLog1], 128, "%s", PlayerInfo[playerid][pKillLog0]);
			format(PlayerInfo[playerid][pKillLog0], 128, "(%d:%d:%d) %s beni %s ile ldrd. (etkinlikte)", hour,minute,second,GetPlayerNameEx(killerid), weaponname);

			format(PlayerInfo[killerid][pKillLog9], 128, "%s", PlayerInfo[killerid][pKillLog8]);
			format(PlayerInfo[killerid][pKillLog8], 128, "%s", PlayerInfo[killerid][pKillLog7]);
			format(PlayerInfo[killerid][pKillLog7], 128, "%s", PlayerInfo[killerid][pKillLog6]);
			format(PlayerInfo[killerid][pKillLog6], 128, "%s", PlayerInfo[killerid][pKillLog5]);
			format(PlayerInfo[killerid][pKillLog5], 128, "%s", PlayerInfo[killerid][pKillLog4]);
			format(PlayerInfo[killerid][pKillLog4], 128, "%s", PlayerInfo[killerid][pKillLog3]);
			format(PlayerInfo[killerid][pKillLog3], 128, "%s", PlayerInfo[killerid][pKillLog2]);
			format(PlayerInfo[killerid][pKillLog2], 128, "%s", PlayerInfo[killerid][pKillLog1]);
			format(PlayerInfo[killerid][pKillLog1], 128, "%s", PlayerInfo[killerid][pKillLog0]);
		 	format(PlayerInfo[killerid][pKillLog0], 128, "(%d:%d:%d) %s, %s adl oyuncuyu %s ile ldrd. (etkinlikte)", hour,minute,second, GetPlayerNameEx(killerid), GetPlayerNameEx(playerid), weaponname);

		 	format(szQuery, sizeof(szQuery), "INSERT INTO kills (killerID, killedID, killTS, killText) VALUES(%d, %d, %d, '%s')", PlayerInfo[killerid][pID], PlayerInfo[playerid][pID], gettime(), PlayerInfo[killerid][pKillLog0]);
		 	mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	    } else {
			format(PlayerInfo[playerid][pKillLog9], 128, "%s", PlayerInfo[playerid][pKillLog8]);
			format(PlayerInfo[playerid][pKillLog8], 128, "%s", PlayerInfo[playerid][pKillLog7]);
			format(PlayerInfo[playerid][pKillLog7], 128, "%s", PlayerInfo[playerid][pKillLog6]);
			format(PlayerInfo[playerid][pKillLog6], 128, "%s", PlayerInfo[playerid][pKillLog5]);
			format(PlayerInfo[playerid][pKillLog5], 128, "%s", PlayerInfo[playerid][pKillLog4]);
			format(PlayerInfo[playerid][pKillLog4], 128, "%s", PlayerInfo[playerid][pKillLog3]);
			format(PlayerInfo[playerid][pKillLog3], 128, "%s", PlayerInfo[playerid][pKillLog2]);
			format(PlayerInfo[playerid][pKillLog2], 128, "%s", PlayerInfo[playerid][pKillLog1]);
			format(PlayerInfo[playerid][pKillLog1], 128, "%s", PlayerInfo[playerid][pKillLog0]);
			format(PlayerInfo[playerid][pKillLog0], 128, "(%d:%d:%d) %s beni %s ile ldrd.", hour,minute,second,GetPlayerNameEx(killerid), weaponname);

			format(PlayerInfo[killerid][pKillLog9], 128, "%s", PlayerInfo[killerid][pKillLog8]);
			format(PlayerInfo[killerid][pKillLog8], 128, "%s", PlayerInfo[killerid][pKillLog7]);
			format(PlayerInfo[killerid][pKillLog7], 128, "%s", PlayerInfo[killerid][pKillLog6]);
			format(PlayerInfo[killerid][pKillLog6], 128, "%s", PlayerInfo[killerid][pKillLog5]);
			format(PlayerInfo[killerid][pKillLog5], 128, "%s", PlayerInfo[killerid][pKillLog4]);
			format(PlayerInfo[killerid][pKillLog4], 128, "%s", PlayerInfo[killerid][pKillLog3]);
			format(PlayerInfo[killerid][pKillLog3], 128, "%s", PlayerInfo[killerid][pKillLog2]);
			format(PlayerInfo[killerid][pKillLog2], 128, "%s", PlayerInfo[killerid][pKillLog1]);
			format(PlayerInfo[killerid][pKillLog1], 128, "%s", PlayerInfo[killerid][pKillLog0]);
			if(JustSuicided[playerid]) {
				JustSuicided[playerid] = 0;
				format(PlayerInfo[killerid][pKillLog0], 128, "(%d:%d:%d) %s intahar etti.", hour,minute,second, GetPlayerNameEx(killerid));
			} else {
				format(PlayerInfo[killerid][pKillLog0], 128, "(%d:%d:%d) %s, %s adl oyuncuyu %s ile ldrd.", hour,minute,second, GetPlayerNameEx(killerid), GetPlayerNameEx(playerid), weaponname);
			}

		 	format(szQuery, sizeof(szQuery), "INSERT INTO kills (killerID, killedID, killTS, killText) VALUES(%d, %d, %d, '%s')", PlayerInfo[killerid][pID], PlayerInfo[playerid][pID], gettime(), PlayerInfo[killerid][pKillLog0]);
		 	mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);
	 	}
	} else {
	    if(GetPVarInt(playerid, "PBM") > 0) {
			format(string, sizeof(string), "%s adl kii ld.", GetPlayerNameEx(playerid));
			foreach(Player, i) {
			    if(GetPVarInt(playerid, "PBM") == GetPVarInt(i, "PBM"))
			        SendClientMessage(i, COLOR_RED, string);
			}
		}
	}

	if(GetPVarType(playerid, "SpecOff"))
	{
		SpawnPlayer(playerid);
		return 1;
	}

	if(PlayerDraggedBy[playerid] != INVALID_PLAYER_ID) {
		IsCopDragging[PlayerDraggedBy[playerid]] = INVALID_PLAYER_ID;
	}

	if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
		RemovePlayerAttachedObject(playerid, 0);

	pTazer[playerid] = 0;
	InsideShamal[playerid] = INVALID_VEHICLE_ID;
	DeletePVar(playerid, "Hiz Radari");
 	DeletePVar(playerid, "UsingSprunk");
	DeletePVar(playerid, "usingfirstaid");
	KillTimer(GetPVarInt(playerid, "firstaid5"));
	PlayerCuffed[playerid] = 0;
	PlayerCuffedTime[playerid] = 0;
	DeletePVar(playerid, "PlayerCuffed");
	IsCopDragging[playerid] = INVALID_PLAYER_ID;
	PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
	PlayerDragged[playerid] = 0;

	if(GetPVarInt(playerid, "Injured") == 1)
	{
     	SendClientMessage(playerid, COLOR_WHITE, "Belirsizlik iinde sktn, doktorlar seni kurtaramad.");
 		KillEMSQueue(playerid);
	    ResetPlayerWeaponsEx(playerid);

   		new Float:X, Float:Y, Float:Z;
		new Float:health;
		GetPlayerHealth(playerid, health);
		SetPlayerHealth(playerid, health-5);
		GetPlayerPos(playerid, X, Y, Z);
		SetPlayerPos(playerid, X, Y, Z+5);
	    return 1;
	}

	// Determine if the player is in onplayerdeath
	SetPVarInt(playerid, "OPD", 1);

	if(GetPVarInt(playerid, "MovingStretcher") != -1)
	{
	    KillTimer(GetPVarInt(playerid, "TickEMSMove"));
	    DeletePVar(GetPVarInt(playerid, "MovingStretcher"), "OnStretcher");
	    SetPVarInt(playerid, "MovingStretcher", -1);
	}

	if(IsPlayerConnected(Mobile[playerid]))
	{
		SendClientMessage(Mobile[playerid],  COLOR_GRAD2, "Hat kesildi.");
		format(string, sizeof(string), "* %s telefonu kaldrd.", GetPlayerNameEx(Mobile[playerid]));
		ProxDetector(30.0, Mobile[playerid], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		CellTime[Mobile[playerid]] = 0;
		Mobile[Mobile[playerid]] = INVALID_PLAYER_ID;
	}
	Mobile[playerid] = INVALID_PLAYER_ID;
	CellTime[playerid] = 0;

	foreach(Player, i)
	{
		if(EMSAccepted[i] == playerid)
		{
			EMSAccepted[i] = INVALID_PLAYER_ID;
			GameTextForPlayer(i, "~w~Ambulans Cagiran Hayatini~n~~r~Kaybetti", 5000, 1);
			EMSCallTime[i] = 0;
			DisablePlayerCheckpoint(i);
		}
	}

	if(GetPVarInt(playerid, "EventToken") == 0)
	{
	    if(GetPVarInt(playerid, "PBM") < 1)
		{
		    if(PlayerInfo[playerid][pJailTime] == 0)
		    {
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(playerid, X, Y, Z);
				SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], X, Y, Z, 1.0, -1, -1, -1, -1, -1, -1);

		    	if(AdminDuty[playerid] != 1 && GetPVarType(playerid, "posX") == 0)
		    	{
					SetPVarInt(playerid, "Injured", 1);

					new Float:mX, Float:mY, Float:mZ;
					GetPlayerPos(playerid, mX, mY, mZ);

					SetPVarFloat(playerid, "MedicX", mX);
					SetPVarFloat(playerid, "MedicY", mY);
					SetPVarFloat(playerid, "MedicZ", mZ);
					SetPVarInt(playerid, "MedicVW", GetPlayerVirtualWorld(playerid));
					SetPVarInt(playerid, "MedicInt", GetPlayerInterior(playerid));
		    	}
		    	else
		    	{
					if(GetPVarType(playerid, "posX") != 0)
						return SpawnPlayer(playerid);

					SetPVarInt(playerid, "AdminDeathVW", GetPlayerVirtualWorld(playerid));
					SetPVarInt(playerid, "AdminDeathInt", GetPlayerInterior(playerid));

					SpawnPlayer(playerid);
				}
			}
		}
	}

	if(GetPVarInt(playerid, "Injured") == 0)
	{
		if(GetPVarInt(playerid, "EventToken") >= 1 || GetPVarInt(playerid, "PBM") > 0)
		{
			ResetPlayerWeapons(playerid);
		}
		else
		{
			ResetPlayerWeaponsEx(playerid);
		}
	}

	if(PlayerInfo[killerid][pAdmin] < 6)
	{
	    if(reason == 49)
	    {
	    	format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) muhtemelen %s (ID %d) oyuncusunu car-ramming yapa yapa ldrd.", GetPlayerNameEx(killerid), killerid, GetPlayerNameEx(playerid), playerid);
	    	ABroadCast(COLOR_YELLOW, string, 1);
	    	//print(string);
	    }
	    if(reason == 50)
	    {
	        if(IsAHelicopter(GetPlayerVehicleID(killerid)))
	        {
	    		format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) muhtemelen %s (ID %d) oyuncusunu heli-blading yaparak ldrd.", GetPlayerNameEx(killerid), killerid, GetPlayerNameEx(playerid), playerid);
	    		ABroadCast(COLOR_YELLOW, string, 1);
	    		//print(string);
	    	}
	    	else
	    	{
	    	    if(GetPlayerWeapon(killerid) != 32 || GetPlayerWeapon(killerid) != 28 || GetPlayerWeapon(killerid) != 29)
	    	    {
	    			format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) muhtemelen %s (ID %d) oyuncusunu car-park yaparak ldrd.", GetPlayerNameEx(killerid), killerid, GetPlayerNameEx(playerid), playerid);
	    			ABroadCast(COLOR_YELLOW, string, 1);
	    			//print(string);
	    		}
	    		else
	    		{
	    			format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) has possibly just drivershot %s (ID %d) to death.", GetPlayerNameEx(killerid), killerid, GetPlayerNameEx(playerid), playerid);
	    			ABroadCast(COLOR_YELLOW, string, 1);
	    			//print(string);
	    		}
	    	}
	    }
	}

	if(gPlayerCheckpointStatus[playerid] > 4 && gPlayerCheckpointStatus[playerid] < 11)
	{
		DisablePlayerCheckpoint(playerid);
		gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
	}

	ClearCrime(playerid);
	if(PlayerInfo[playerid][pHeadValue] >= 1) {
		if(IsPlayerConnected(killerid)) {
			if(GoChase[killerid] == playerid) {
				new
					killer[MAX_PLAYER_NAME],
					name2[MAX_PLAYER_NAME],
					name[MAX_PLAYER_NAME];

				new takemoney = PlayerInfo[playerid][pHeadValue] / 4 * 2;
			 	name = GetPlayerNameEx(playerid);
				killer = GetPlayerNameEx(killerid);
				GivePlayerCash(killerid, takemoney);
				GivePlayerCash(playerid, -takemoney);
				format(string,sizeof(string),"Hitman %s, %s zerindeki kontrakt iini halletti ve $%d kazand.",killer,name,PlayerInfo[playerid][pHeadValue] / 4 * 2);
				SendFamilyMessage(4, COLOR_YELLOW, string);
				format(string,sizeof(string),"Hitman tarafndan ar bir ekilde yaralandn ve $%d kaybettin.",takemoney);
   				ResetPlayerWeaponsEx(playerid);
				SendClientMessage(playerid, COLOR_YELLOW, string);

				foreach(Player, i) {
				    name2 = GetPlayerNameEx(i);
				    if(!strcmp(PlayerInfo[playerid][pContractBy], name2, true)) {
				        if(!IsPlayerStreamedIn(i, playerid)) {
				        	format(string, sizeof(string), "SMS: %s yok edildi, Gnderen: OZELMESAJ (555)", name);
							SendClientMessage(i, COLOR_YELLOW, string);
						}
				    }
				}

				PlayerInfo[playerid][pHeadValue] = 0;
				strcpy(PlayerInfo[playerid][pContractBy], "Nobody", 64);
				strcpy(PlayerInfo[playerid][pContractDetail], "Yok", 64);
				PlayerInfo[killerid][pCHits] += 1;
				GotHit[playerid] = 0;
				GetChased[playerid] = 999;
				GoChase[killerid] = 999;
			}
		}
	}
	if(IsPlayerConnected(killerid)) {
		if(GoChase[playerid] == killerid) {
			new killer[MAX_PLAYER_NAME], name[MAX_PLAYER_NAME], name2[MAX_PLAYER_NAME];
			new takemoney = PlayerInfo[playerid][pHeadValue] / 4 * 2;
			GivePlayerCash(killerid, takemoney);
			name = GetPlayerNameEx(playerid);
			killer = GetPlayerNameEx(killerid);
			format(string,128,"Hitman %s, %s zerindeki eylemi baaramad ve $%d kaybetti.",name,killer,PlayerInfo[killerid][pHeadValue] / 4 * 2);
			SendFamilyMessage(4, COLOR_YELLOW, string);
			GivePlayerCash(playerid, -takemoney);
		   	format(string,128,"Hitman ldrdn ve $%d kazandn, ayrca kellendeki cret gitti.",PlayerInfo[killerid][pHeadValue] / 4 * 2);
			SendClientMessage(killerid, COLOR_YELLOW, string);

			foreach(Player, i) {
			    name2 = GetPlayerNameEx(i);
			    if(!strcmp(PlayerInfo[killerid][pContractBy], name2, true)) {
			        if(!IsPlayerStreamedIn(i, killerid)) {
			        	format(string, sizeof(string), "SMS: %s eylemi zerinde baarsz olduk. Bakas zerine kontrakt yapmay deneyebilirsin, Gnderen: OZELMESAJ (555)", killer);
						SendClientMessage(i, COLOR_YELLOW, string);
					}
			    }
			}

			PlayerInfo[killerid][pHeadValue] = 0;
			strcpy(PlayerInfo[killerid][pContractBy], "Nobody", 64);
			strcpy(PlayerInfo[killerid][pContractDetail], "Yok", 64);
			PlayerInfo[playerid][pFHits] += 1;
			GotHit[playerid] = 0;
			GetChased[killerid] = 999;
			GoChase[playerid] = 999;
		}
	}
	if(GetPVarInt(playerid, "fuelonoff") == 1)
	{
		HideProgressBarForPlayer(playerid, FuelBar[playerid]);
		SetPVarInt(playerid, "fuelonoff", 0);
		DestroyProgressBar(FuelBar[playerid]);
		FuelBar[playerid] = INVALID_BAR_ID;
	}
	killerid = INVALID_PLAYER_ID;
	SetPlayerColor(playerid,TEAM_HIT_COLOR);
	return 1;
}

forward DelayedVehHealth(vehicleid);
public DelayedVehHealth(vehicleid) {
	SetVehicleHealth(vehicleid, 2500);
	return 1;
}

public OnVehicleSpawn(vehicleid) {
    VehicleStatus{vehicleid} = 0;
   	TruckContents[vehicleid] = 0;
	VehicleRadioStation[vehicleid] = 0;

	if(LockStatus[vehicleid] == 1) vehicle_lock_doors(vehicleid);
	else vehicle_unlock_doors(vehicleid);

	switch(GetVehicleModel(vehicleid)) {
		case 427, 428, 432, 601, 528: SetTimerEx("DelayedVehHealth", 1000, false, "d", vehicleid);
	}

    new v;
	foreach(Player, i)
	{
	    v = GetPlayerVehicle(i, vehicleid);
	    if(v != -1)
	    {
 			if(PlayerVehicleInfo[i][v][pvId] == vehicleid && GetVehicleModel(vehicleid) != PlayerVehicleInfo[i][v][pvModelId])
	  		{
	   			DestroyVehicle(vehicleid);
	   			VehicleRadioStation[vehicleid] = 0;
				PlayerVehicleInfo[i][v][pvId] = CreateVehicle(PlayerVehicleInfo[i][v][pvModelId], PlayerVehicleInfo[i][v][pvPosX], PlayerVehicleInfo[i][v][pvPosY], PlayerVehicleInfo[i][v][pvPosZ], PlayerVehicleInfo[i][v][pvPosAngle],PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2], -1);
				if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
	            ChangeVehiclePaintjob(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvPaintJob]);
				ChangeVehicleColor(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2]);
				LoadPlayerVehicleMods(i, v);
				for(new m = 0; m < MAX_MODS; m++)
	   			{
	   			    if(PlayerVehicleInfo[i][v][pvMods][m] >= 1000 && PlayerVehicleInfo[i][v][pvMods][m] <= 1193)
	   			    {
		   				if(InvalidModCheck(GetVehicleModel(vehicleid), PlayerVehicleInfo[i][v][pvMods][m]))
		      			{
		      				AddVehicleComponent(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvMods][m]);
		      			}
		      			else
		      			{
		      			    //printf("Removing invalid mod %d from %d of %s", PlayerVehicleInfo[i][v][pvMods][m], GetVehicleModel(vehicleid), GetPlayerNameEx(i));
		      			    PlayerVehicleInfo[i][v][pvMods][m] = 0;
		      			}
					}
	      		}
 			}
 			else
			{
				LoadPlayerVehicleMods(i, v);
                ChangeVehiclePaintjob(vehicleid, PlayerVehicleInfo[i][v][pvPaintJob]);
				ChangeVehicleColor(vehicleid, PlayerVehicleInfo[i][v][pvColor1], PlayerVehicleInfo[i][v][pvColor2]);
				for(new m = 0; m < MAX_MODS; m++)
	            {
	                if(PlayerVehicleInfo[i][v][pvMods][m] >= 1000 && PlayerVehicleInfo[i][v][pvMods][m] <= 1193)
	   			    {
			            if(InvalidModCheck(GetVehicleModel(vehicleid), PlayerVehicleInfo[i][v][pvMods][m]))
		                {
		    	            AddVehicleComponent(PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvMods][m]);
			            }
			            else
			            {
			                //printf("Removing invalid mod %d from %d of %s", PlayerVehicleInfo[i][v][pvMods][m], GetVehicleModel(vehicleid), GetPlayerNameEx(i));
			                PlayerVehicleInfo[i][v][pvMods][m] = 0;
			            }
					}
	            }
	            if(PlayerVehicleInfo[i][v][pvLocked] == 1) LockPlayerVehicle(i, PlayerVehicleInfo[i][v][pvId], PlayerVehicleInfo[i][v][pvLock]);
			}
			new string[128];
			format(string,sizeof(string),"%s model aracn en son park ettiin yerde tekrar kt.",GetVehicleName(vehicleid));
			SendClientMessage(i, COLOR_GRAD1, string);
		}
	}

	if(LockStatus[vehicleid])
	{
		foreach(Player, i)
		{
			if(PlayerInfo[i][pLockCar] == vehicleid)
			{
				PlayerInfo[i][pLockCar] = INVALID_VEHICLE_ID;
			}
		}
	}

	if(VehicleBomb{vehicleid} == 1)
	{
		foreach(Player, i)
		{
			if(PlayerInfo[i][pFaction] == 4 || PlayerInfo[i][pLeader] == 4)
			{
				if(PlacedVehicleBomb[i] == vehicleid)
				{
					VehicleBomb{vehicleid} = 0;
  					PlacedVehicleBomb[i] = INVALID_VEHICLE_ID;
					PickUpC4(i);
					PlayerInfo[i][pC4Used] = 0;
					PlayerInfo[i][pC4Get] = 1;
				}
			}
		}
	}
	return 1;
}

public OnVehicleDeath(vehicleid, killerid)
{
    VehicleStatus{vehicleid} = 1;
   	TruckContents[vehicleid] = 0;
	VehicleRadioStation[vehicleid] = 0;
	foreach(Player, i)
	{
	    if(InsideShamal[i] == vehicleid)
	    {
     		new Float:X, Float:Y, Float:Z;
  			new Float:XB, Float:YB, Float:ZB;
			GetVehiclePos(InsideShamal[i], X, Y, Z);
			SetPlayerPos(i, X-4, Y-2.3, Z);
			GetVehiclePos(InsideShamal[i], XB, YB, ZB);
			if(ZB > 50.0)
			{
				PlayerInfo[i][pAGuns][GetWeaponSlot(46)] = 46;
				GivePlayerValidWeapon(i, 46, 60000);
			}
   			PlayerInfo[i][pVW] = 0;
			SetPlayerVirtualWorld(i, 0);
			PlayerInfo[i][pInt] = 0;
			SetPlayerInterior(i, 0);
			SendClientMessage(i, COLOR_WHITE, "Uak hasar ald, iinde olamazsn.");
			InsideShamal[i] = INVALID_VEHICLE_ID;
	    }
	}
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(gPlayerLogged[playerid] != 1)
	{
		SendClientMessage(playerid, COLOR_RED, "Giri yapmadn.");
		return 0;
	}
	if(PlayerInfo[playerid][pTut] == 0)
	{
		return 0;
	}
	new string[350];
	if (strcmp(":D", text, true, 10) == 0)

	{
		format(string, sizeof(string), "* %s glmser.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 0;

	}

	if (strcmp(":)", text, true, 10) == 0)

	{
		format(string, sizeof(string), "* %s glmser.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 0;

	}

    if (strcmp(":(", text, true, 10) == 0)

	{
		format(string, sizeof(string), "* %s zlr.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 0;

	}

	if (strcmp(":P", text, true, 10) == 0)

	{
		format(string, sizeof(string), "* %s arr.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 0;

	}

	if (strcmp(":S", text, true, 10) == 0)

	{
		format(string, sizeof(string), "* %s teredtte kalr.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 0;

	}

	if (strcmp(":@", text, true, 10) == 0)

	{
		format(string, sizeof(string), "* %s sinirlenir.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		return 0;

	}
	new
		sendername[MAX_PLAYER_NAME],
		giveplayer[MAX_PLAYER_NAME],
		vehicleid = GetPlayerVehicleID(playerid);

	playerLastTyped[playerid] = 0;

	if(TextSpamUnmute[playerid] != 0)
	{
		if(PlayerInfo[playerid][pAdmin] < 6)
		{
			SendClientMessage(playerid, COLOR_WHITE, "Yaz yazmaktan mutelendiniz.");
			return 0;
		}
	}

	if(PlayerInfo[playerid][pAdmin] < 6)
	{
		TextSpamTimes[playerid]++;

		if(TextSpamTimes[playerid] == 5)
		{
			TextSpamTimes[playerid] = 0;
			TextSpamUnmute[playerid] = 10;
			SendClientMessage(playerid, COLOR_YELLOW, "Spam yaptndan dolay otomatik olarak mutelendin. 10 saniye sonra tekrar dene.");
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
			return 0;
		}
	}

	if(strfind(text, "|", true) != -1)
	{
	    SendClientMessage(playerid, COLOR_RED, "Yazda '|' karakterini kullanamazsn.");
		return 0;
	}

	if(PlayerInfo[playerid][pAdmin] < 4)
	{
		if(strfind(text, ":", true) != -1)
		{
			new
				i_numcount,
				i_period,
				i_pos;

			while(text[i_pos]) {
				if('0' <= text[i_pos] <= '9') i_numcount++;
				else if(text[i_pos] == '.') i_period++;
				i_pos++;
			}
			if(i_numcount >= 8 && i_period >= 3) {
				format(string,sizeof(string),"Uyar: %s adl oyuncu server reklam yapyor olabilir: '%'.", GetPlayerNameEx(playerid),text);
				ABroadCast(COLOR_RED, string, 2);
				Log("logs/hack.log", string);
				return 0;
			}
		}
	}

	if(GetPVarInt(playerid, "ChoosingDrugs") == 1)
	{
		if(strcmp("pot", text, true) == 0)
		{
			new mypoint = -1;
			for (new i=0; i<MAX_POINTS; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Drug Factory", true) == 0)
				{
					mypoint = i;
				}
			}
			if(mypoint == -1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Uyuturucu fabrikasnda deilsin!");
				return 0;
			}
			if(PlayerInfo[playerid][pCrates])
			{
				SendClientMessage(playerid, COLOR_GREY, "   Daha fazla uyuturucu kasas tayamazsn!");
				SetPVarInt(playerid, "ChoosingDrugs", 0);
				return 0;
			}
	 		if(CheckPointCheck(playerid))
 			{
  				SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
    			return 0;
  			}
			if(GetPlayerCash(playerid) >= 100)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"* $100 deyerek birka uyuturucu kasas satn aldn.");
				GivePlayerCash(playerid, -100);
				PlayerInfo[playerid][pCrates] = 1;
				SetPVarInt(playerid, "CrateDeliver", 1);
				SetPVarInt(playerid, "ChoosingDrugs", 0);
				SetPVarInt(playerid, "tpDrugRunTimer", 45);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
				SetPlayerCheckpoint(playerid, 2166.3772,-1675.3829,15.0859, 3);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] += 50;
					}
				}
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY," $100' karlayamyorsun.");
				SetPVarInt(playerid, "ChoosingDrugs", 0);
   				return 0;
			}
		}
		else if(strcmp("crack", text, true) == 0)
		{
			new mypoint = -1;
			for (new i=0; i<MAX_POINTS; i++)
			{
				if(IsPlayerInRangeOfPoint(playerid, 3.0, Points[i][Pointx], Points[i][Pointy], Points[i][Pointz]) && strcmp(Points[i][Name], "Drug Factory", true) == 0)
				{
					mypoint = i;
				}
			}
			if(mypoint == -1)
			{
				SendClientMessage(playerid, COLOR_GREY, "Uyuturucu fabrikasnda deilsin!");
				return 0;
			}
			if(PlayerInfo[playerid][pCrates])
			{
				SendClientMessage(playerid, COLOR_GREY, "   Daha fazla uyuturucu kasas tayamazsn!");
				SetPVarInt(playerid, "ChoosingDrugs", 0);
				return 0;
			}
 			if(CheckPointCheck(playerid))
 			{
  				SendClientMessage(playerid, COLOR_WHITE, "u anki checkpoint'inizin iptal edildiinden emin olun (Materyal paketleriniz veya mevcut checkpoint'iniz olabilir).");
    			return 0;
  			}
			if(GetPlayerCash(playerid) >= 100)
			{
				SendClientMessage(playerid, COLOR_LIGHTBLUE,"* $100 deyerek birka uyuturucu kasas satn aldn.");
				GivePlayerCash(playerid, -100);
				PlayerInfo[playerid][pCrates] = 1;
				SetPVarInt(playerid, "CrateDeliver", 2);
				SetPVarInt(playerid, "ChoosingDrugs", 0);
				SetPVarInt(playerid, "tpDrugRunTimer", 45);
				SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
				SetPlayerCheckpoint(playerid, 2354.2808,-1169.2959,28.0066, 3);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] += 50;
					}
				}
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY," $100' karlayamyorsun.");
				SetPVarInt(playerid, "ChoosingDrugs", 0);
   				return 0;
			}
		}
		else
		{
	 		SendClientMessage(playerid, COLOR_LIGHTRED,"Ne kaakl yapmak istiyorsun? 'crack' yada 'pot' yaz.");
			return 0;
		}
	}
	if(MarriageCeremoney[playerid] > 0)
	{
		if(strcmp("evet", text, true) == 0)
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(GotProposedBy[playerid], giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "Belediye Bakan: %s, %s adl kiiyi ein olarak kabul ediyor musun? (Kabul etmek iin 'evet' yaz, farkl birey yazarsan evlilik iptal olur).", giveplayer,sendername);
					SendClientMessage(GotProposedBy[playerid], COLOR_WHITE, string);
					MarriageCeremoney[GotProposedBy[playerid]] = 1;
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0; // Yeah... no more "YES DILDOS SEX RAPE LOL" broadcast to the whole server
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					GetPlayerName(ProposedTo[playerid], giveplayer, sizeof(giveplayer));
					if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Belediye Bakan: %s ve %s, sizleri... Kar & Koca ilan ediyorum, gelini pebilirsin.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Belediye Bakan: %s ve %s, sizleri... Kar & Koca ilan ediyorum, damad pebilirsin.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Evlilik Haberleri: Yeni bir mutlu iftimiz var! %s ile %s evlendi!", sendername, giveplayer);
						SendClientMessageToAllEx(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 1 && PlayerInfo[ProposedTo[playerid]][pSex] == 1)
					{
						format(string, sizeof(string), "Belediye Bakan: %s ve %s, sizleri... Kar & Koca ilan ediyorum, gelini pebilirsin.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Belediye Bakan: %s ve %s, sizleri... Kar & Koca ilan ediyorum, damad pebilirsin.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Evlilik Haberleri: Yeni bir gay iftimiz var! %s ile %s evlendi!", sendername, giveplayer);
						SendClientMessageToAllEx(COLOR_WHITE, string);
					}
					else if(PlayerInfo[playerid][pSex] == 2 && PlayerInfo[ProposedTo[playerid]][pSex] == 2)
					{
						format(string, sizeof(string), "Belediye Bakan: %s ve %s, sizleri... Kar & Koca ilan ediyorum, gelini pebilirsin.", sendername, giveplayer);
						SendClientMessage(playerid, COLOR_WHITE, string);
				   		format(string, sizeof(string), "Belediye Bakan: %s ve %s, sizleri... Kar & Koca ilan ediyorum, damad pebilirsin.", giveplayer, sendername);
						SendClientMessage(ProposedTo[playerid], COLOR_WHITE, string);
						format(string, sizeof(string), "Evlilik Haberleri: Yeni bir lezbiyen iftimiz var! %s ile %s evlendi!", sendername, giveplayer);
						SendClientMessageToAllEx(COLOR_WHITE, string);
					}
					//MarriageCeremoney[ProposedTo[playerid]] = 1;
					MarriageCeremoney[ProposedTo[playerid]] = 0;
					MarriageCeremoney[playerid] = 0;
					format(PlayerInfo[ProposedTo[playerid]][pMarriedTo], MAX_PLAYER_NAME, "%s", sendername);
					format(PlayerInfo[playerid][pMarriedTo], MAX_PLAYER_NAME, "%s", giveplayer);
					GivePlayerCash(playerid, - 10000);
					PlayerInfo[playerid][pMarried] = 1;
					PlayerInfo[ProposedTo[playerid]][pMarried] = 1;
					ProposedTo[playerid] = 999;
					MarriageCeremoney[playerid] = 0;
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		else
		{
			if(GotProposedBy[playerid] < 999)
			{
				if(IsPlayerConnected(GotProposedBy[playerid]))
				{
					format(string, sizeof(string), "* %s ile evlenmek istemedin nki 'evet' demedin.", GetPlayerNameEx(GotProposedBy[playerid]));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s evlenme teklifine 'evet' demedi. Seninle evlenmek istemiyor.",GetPlayerNameEx(playerid));
					SendClientMessage(GotProposedBy[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					GotProposedBy[playerid] = 999;
					return 0;
				}
			}
			else if(ProposedTo[playerid] < 999)
			{
				if(IsPlayerConnected(ProposedTo[playerid]))
				{
					format(string, sizeof(string), "* %s ile evlenmek istemedin nki 'evet' demedin.",GetPlayerNameEx(ProposedTo[playerid]));
					SendClientMessage(playerid, COLOR_YELLOW, string);
					format(string, sizeof(string), "* %s evlenme teklifine 'evet' demedi. Seninle evlenmek istemiyor.",GetPlayerNameEx(playerid));
					SendClientMessage(ProposedTo[playerid], COLOR_YELLOW, string);
					return 0;
				}
				else
				{
					MarriageCeremoney[playerid] = 0;
					ProposedTo[playerid] = 999;
					return 0;
				}
			}
		}
		return 0;
	}
	if(CallLawyer[playerid] == 111)
	{
		if(strcmp("evet", text, true) == 0)
		{
			format(string, sizeof(string), "** %s adl kii hapiste ve avukata ihtiyac var. Polis merkezine git.", GetPlayerNameEx(playerid));
			SendJobMessage(2, TEAM_AZTECAS_COLOR, string);
			SendClientMessage(playerid, COLOR_LIGHTRED, "Mesaj tm msait avukatlara gnderildi, ltfen bekle.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return 0;
		}
		else
		{
			SendClientMessage(playerid, COLOR_LIGHTRED, "Senin iin msait avukat yok. Hapis sren balad.");
			WantLawyer[playerid] = 0;
			CallLawyer[playerid] = 0;
			return 0;
		}
	}

	if(TalkingLive[playerid] != INVALID_PLAYER_ID) {
		if(PlayerInfo[playerid][pFaction] == 9 || PlayerInfo[playerid][pLeader] == 9) {
			format(string, sizeof(string), "Canl Yayn Sunucusu: %s: %s", GetPlayerNameEx(playerid), text);
			ICNews(COLOR_LIGHTGREEN,string);
		} else {
			format(string, sizeof(string), "Canl Yayn Konuu %s: %s", GetPlayerNameEx(playerid), text);
			ICNews(COLOR_LIGHTGREEN,string);
		}
		return 0;
	}

	if(Mobile[playerid] != INVALID_PLAYER_ID)
	{
		format(string, sizeof(string), "(cep telefonu) %s syler: %s", GetPlayerNameEx(playerid), text);
		if(IsPlayerInAnyVehicle(playerid) && IsVehicleWindowsDown[vehicleid] == 1) { //Windows closed.
			format(string, sizeof(string), "[Cam Kapal] %s", string);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		} else {
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}

		if(Mobile[playerid] == 914)
		{
			if(!text[0])
			{
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Merkez: Afedersiniz, anlayamadm?");
				return 0;
			}
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Merkez: Bu alandaki tm birimlerimize bildirdik.");
			SendClientMessage(playerid, TEAM_CYAN_COLOR, "Bu olay bildirdiiniz iin teekkrler.");

			format(string, sizeof(string), "Merkez: Tm Birimlerin Dikkatine: Arayan: %s",GetPlayerNameEx(playerid));
			SendFamilyMessage(3, COLOR_TWPINK, string);
			format(string, sizeof(string), "Merkez: Olay: %s",text);
			SendFamilyMessage(3, COLOR_TWPINK, string);

			CalledMedics[playerid] = 1;
			MedicsCallTime[playerid] = 60;
			ShowPlayerBeaconForMedics(playerid);
			SendClientMessage(playerid, COLOR_GRAD2, "   Karsidaki kii telefonu kapatt...");
			Mobile[playerid] = INVALID_PLAYER_ID;

			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(playerid, 9);
			return 0;
		}
		if(Mobile[playerid] == 913)
		{
			if(!text[0])
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ACL: zgnm, anlayamadm?");
				return 0;
			}
			if(strcmp("hayir", text, true) == 0)
			{
				SendClientMessage(playerid, COLOR_DBLUE, "Polis Merkezi: Bu alandaki tm birimlere bildirdik.");
				SendClientMessage(playerid, COLOR_DBLUE, "Bu suu ihbar ettiiniz iin teekkr ederiz.");
				new
					szZone[MAX_ZONE_NAME];

				GetPlayer2DZone(playerid, szZone, MAX_ZONE_NAME);
				format(string, sizeof(string), "Merkez: Tm Birimlerin Dikkatine: hbar eden: %s (%s)",GetPlayerNameEx(playerid), szZone);
				SendFamilyMessage(1, COLOR_DBLUE, string);
				SendFamilyMessage(2, COLOR_DBLUE, string);
				format(string, sizeof(string), "Merkez: Su: %s, Zanl: Bilinmiyor",PlayerCrime[playerid][pAccusing]);
				SendFamilyMessage(1, COLOR_DBLUE, string);
				SendFamilyMessage(2, COLOR_DBLUE, string);
				CalledCops[playerid] = 1;
				CopsCallTime[playerid] = 60;
				ShowPlayerBeaconForCops(playerid);
				SendClientMessage(playerid, COLOR_GRAD2, "   Karsidaki kii telefonu kapatt...");
				Mobile[playerid] = INVALID_PLAYER_ID;

				SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
				RemovePlayerAttachedObject(playerid, 9);
				return 0;
			}
			new badguy = ReturnUser(text);
			if(IsPlayerConnected(badguy))
			{
				if(badguy != INVALID_PLAYER_ID)
				{
					if(PlayerInfo[badguy][pWantedLevel] > 0)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polis Merkezi: Bu olaya birimler zaten atanm.");
						SendClientMessage(playerid, COLOR_DBLUE, "Bu suu ihbar ettiiniz iin teekkr ederiz.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Karsidaki kii telefonu kapatt...");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 0;
					}
					if(badguy == playerid)
					{
						SendClientMessage(playerid, COLOR_DBLUE, "Polis Merkezi: Dalga gemeyi brakn, buras acil bir hattr. Bunun iin hapse atlabilirsiniz.");
						SendClientMessage(playerid, COLOR_GRAD2, "   Karsidaki kii telefonu kapatt...");
						Mobile[playerid] = INVALID_PLAYER_ID;
						return 0;
					}
					SendClientMessage(playerid, COLOR_DBLUE, "Polis Merkezi: Bu alandaki tm birimlere bildirdik.");
					SendClientMessage(playerid, COLOR_DBLUE, "Bu suu ihbar ettiiniz iin teekkr ederiz.");
					new
						szZone[MAX_ZONE_NAME];

					GetPlayer2DZone(playerid, szZone, MAX_ZONE_NAME);
					format(string, sizeof(string), "Merkez: Tm Birimlerin Dikkatine: hbar eden: %s (%s)",GetPlayerNameEx(playerid), szZone);
					SendFamilyMessage(1, COLOR_DBLUE, string);
					SendFamilyMessage(2, COLOR_DBLUE, string);
					format(string, sizeof(string), "Merkez: Su: %s, Zanl: %s",PlayerCrime[playerid][pAccusing], GetPlayerNameEx(badguy));
					SendFamilyMessage(1, COLOR_DBLUE, string);
					SendFamilyMessage(2, COLOR_DBLUE, string);
					CalledCops[playerid] = 1;
					CopsCallTime[playerid] = 60;
					ShowPlayerBeaconForCops(playerid);
					SendClientMessage(playerid, COLOR_GRAD2, "   Karsidaki kii telefonu kapatt...");
					Mobile[playerid] = INVALID_PLAYER_ID;

					SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
					RemovePlayerAttachedObject(playerid, 9);
					return 0;
				}
				return 0;
			}
			else
			{
				format(string, sizeof(string), "Polis Merkezi: %s ismi hakknda hibir bilgi yok, bu ismin doru olduuna emin misiniz?",text);
				SendClientMessage(playerid, COLOR_DBLUE, string);
				return 0;
			}
		}
		if(Mobile[playerid] == 912)
		{
			if(!text[0])
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ACL: zgnm, anlayamadm?");
				return 0;
			}
			strmid(PlayerCrime[playerid][pAccusing], text, 0, strlen(text), 255);
			SendClientMessage(playerid, COLOR_DBLUE, "Polis Merkezi: Eer saldrgann adn biliyorsanz syleyin, bilmiyorsanz hayir diyin.");
			Mobile[playerid] = 913;
			return 0;
		}
		if(Mobile[playerid] == 911)
		{
			if(!text[0])
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ACL: Afedersiniz, anlayamadm - polis mi hastane mi?");
				return 0;
			}
			else if(strcmp("polis", text, true) == 0)
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ACL: Sizi polis merkezine balyorum, ltfen bekleyin...");
				Mobile[playerid] = 912;
				SendClientMessage(playerid, COLOR_DBLUE, "Polis Merkezi: Ltfen olay/ilenen su hakknda ksa bilgi verin.");
				return 0;
			}
			else if(strcmp("hastane", text, true) == 0)
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ACL: Sizi LSFMD merkezine balyorum, ltfen bekleyin...");
				Mobile[playerid] = 914;
				SendClientMessage(playerid, TEAM_CYAN_COLOR, "Merkez: Ltfen olay hakknda ksaca bilgi verin.");
				return 0;
			}
			else
			{
				SendClientMessage(playerid, COLOR_ALLDEPT, "ACL: Afedersiniz, anlayamadm - polis mi hastane mi?");
				return 0;
			}
		}
		if(IsPlayerConnected(Mobile[playerid]))
		{
			if(Mobile[Mobile[playerid]] == playerid)
			{
				if(SpeakerPhone[playerid] != 0)
				{
				    format(string, sizeof(string), "(hoparlr) %s syler: %s", GetPlayerNameEx(playerid), text);
					ProxDetector(20.0, Mobile[playerid], string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
				}
				else
				{
				    SendClientMessage(Mobile[playerid], COLOR_YELLOW, string);
				}
				if(PlayerInfo[playerid][pBugged] == 1)
				{
					format(string, sizeof(string), "(bocek) %s (ceptelefonu): %s", GetPlayerNameEx(playerid), text);
					SendBugMessage(2, COLOR_LIGHTGREEN, string);
				}
			}
		}
		else
		{
			SendClientMessage(playerid, COLOR_GREY, "Kar tarafta kimse yok!");
			CellTime[playerid] = 0;
			SendClientMessage(playerid,  COLOR_GRAD2, "   Telefonu kapattn.");
			format(string, sizeof(string), "* %s telefonu kaldrd.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			Mobile[playerid] = INVALID_PLAYER_ID;
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_STOPUSECELLPHONE);
			RemovePlayerAttachedObject(playerid, 9);
		}
		return 0;
	}

	sendername = GetPlayerNameEx(playerid);

	switch(PlayerInfo[playerid][pAccent])
	{
		case 0, 1: format(string, sizeof(string), "%s syler: %s", sendername, text);
		case 2: format(string, sizeof(string), "(Amerika aksan) %s syler: %s", sendername, text);
		case 3: format(string, sizeof(string), "(Almanya aksan) %s syler: %s", sendername, text);
		case 4: format(string, sizeof(string), "(spanya aksan) %s syler: %s", sendername, text);
		case 5: format(string, sizeof(string), "(talya aksan) %s syler: %s", sendername, text);
		case 6: format(string, sizeof(string), "(Arap aksan) %s syler: %s", sendername, text);
		case 7: format(string, sizeof(string), "(Rusya aksan) %s syler: %s", sendername, text);
		case 8: format(string, sizeof(string), "(Kanada aksan) %s syler: %s", sendername, text);
		case 9: format(string, sizeof(string), "(Balkan aksan) %s syler: %s", sendername, text);
		case 10: format(string, sizeof(string), "(Hollanda aksan) %s syler: %s", sendername, text);
		case 11: format(string, sizeof(string), "(Afrika aksan) %s syler: %s", sendername, text);
	}
	if(AdminDuty[playerid] == 1 && PlayerInfo[playerid][pAccent] != 25) {
		format(string, sizeof(string), "%s syler: (( %s )) ", sendername, text);
		ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		SetPlayerChatBubble(playerid, text, COLOR_WHITE, 20.0, 5000);
	} else {
		if(IsPlayerInAnyVehicle(playerid) && IsVehicleWindowsDown[vehicleid] == 1) { //Windows closed.
			format(string, sizeof(string), "[Cam Kapal] %s syler: %s", sendername, text);
			ProxDetector(3.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
		} else {
			ProxDetector(20.0, playerid, string,COLOR_FADE1,COLOR_FADE2,COLOR_FADE3,COLOR_FADE4,COLOR_FADE5);
			SetPlayerChatBubble(playerid,text,COLOR_WHITE,20.0,5000);
		}
		if(PlayerInfo[playerid][pBugged] == 1 && AdminDuty[playerid] == 0) {
			format(string, sizeof(string), "(bocek) %s: %s", GetPlayerNameEx(playerid), text);
			SendBugMessage(2, COLOR_LIGHTGREEN, string);
		}
	}
	return 0;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger) {
	if(PlayerCuffed[playerid] != 0)
		SetPVarInt(playerid, "ToBeEjected", 1);

	if(GetPVarInt(playerid, "Injured") == 1)
		SetPVarInt(playerid, "ToBeEjected", 1);

	SetPVarInt(playerid, "LastWeapon", GetPlayerWeapon(playerid));

	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
	if(engine == VEHICLE_PARAMS_UNSET) switch(GetVehicleModel(vehicleid)) {
		case 509, 481, 510: Fuel[vehicleid] = 100, arr_Engine{vehicleid} = 1, SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_ON,lights,alarm,doors,bonnet,boot,objective);
		default: SetVehicleParamsEx(vehicleid,VEHICLE_PARAMS_OFF,VEHICLE_PARAMS_OFF,alarm,doors,bonnet,boot,objective), arr_Engine{vehicleid} = 0;
	}

    if(GetPVarInt(playerid, "Pizza") != 0 && !(IsAPizzaCar(vehicleid))) {
	    new Float:slx, Float:sly, Float:slz;
		GetPlayerPos(playerid, slx, sly, slz);
		SetPlayerPos(playerid, slx, sly, slz+1.3);
		PlayerPlaySound(playerid, 1130, slx, sly, slz+1.3);
		RemovePlayerFromVehicle(playerid);
		NOPCheck(playerid);
		SendClientMessage(playerid, COLOR_GRAD2, "Pizza teslimat yapmak iin pizzac motorunda olman gerek.");
		return 1;
	}

	if(!ispassenger)
	{
	    SetPlayerArmedWeapon(playerid, 0);

   		if(GetChased[playerid] < 999 && VehicleBomb{vehicleid} == 1)
		{
			if(PlayerInfo[playerid][pHeadValue] >= 1)
			{
				if(PlayerInfo[GetChased[playerid]][pFaction] == 4 || PlayerInfo[GetChased[playerid]][pLeader] == 4)
				{
   					VehicleBomb{vehicleid} = 0;
				    SetTimerEx("VehicleBombDelay", 5000, 0, "d", playerid);
					return 1;
				}
			}
		}

   		if(IsACopCar(vehicleid)) {
		    if(PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pLeader] != 1) {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "LSPD'den deilsin!");
			}
		}
		else if(IsAFBICar(vehicleid)) {
		    if(PlayerInfo[playerid][pFaction] != 2 && PlayerInfo[playerid][pLeader] != 2) {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    // SendClientMessage(playerid,COLOR_GREY,"FBI'dan deilsin!");
			}
		}
	    else if(IsAPizzaCar(vehicleid)) {
		    if(PlayerInfo[playerid][pJob] != 21 && PlayerInfo[playerid][pJob2] != 21) {
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.3);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+1.3);
			    RemovePlayerFromVehicle(playerid);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Pizzac deilsin!");
			}
		}
		else if(IsAVipCar(vehicleid)) {
		    if(PlayerInfo[playerid][pDonator] < 1) {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Bu araca binebilmek iin VIP olmalsn!");
			}
		}
		else if(IsATirCar(vehicleid)) {
		        if(PlayerInfo[playerid][pJob] != 22 && PlayerInfo[playerid][pJob2] != 22) {
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.3);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+1.3);
			    RemovePlayerFromVehicle(playerid);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Tr fr deilsin!");
			}
		}
		else if(IsACimentoCar(vehicleid)) {
		        if(PlayerInfo[playerid][pJob] != 23 && PlayerInfo[playerid][pJob2] != 23) {
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.3);
				PlayerPlaySound(playerid, 1130, slx, sly, slz+1.3);
			    RemovePlayerFromVehicle(playerid);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Beton fr deilsin!");
			}
		}
		else if(IsAnAmbulance(vehicleid))
		{
		    if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3)
			{
			}
			else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "LSFMD'den deilsin.");
			}
		}

		else if(vehicleid == LSFMDVehicles[13] || vehicleid == LSFMDVehicles[16] || vehicleid == LSFMDVehicles[36] || vehicleid == LSFMDVehicles[37] || vehicleid == LSFMDVehicles[38] || vehicleid == LSFMDVehicles[39] || vehicleid == LSFMDVehicles[40]) {
		    if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pDivision] == 2) { }
			else {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "LSFMD'den deilsin.");
			}
		}
		else if(IsANewsVeh(vehicleid)) {
		    if(PlayerInfo[playerid][pFaction] != 9 && PlayerInfo[playerid][pLeader] != 9) {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "SAN News oluumunda deilsin!");
			} else if(GetVehicleModel(vehicleid) == 488 && PlayerInfo[playerid][pRank] < 3) {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Bu helikopteri uurabilmek iin en az R3 olman gerek.");
			}
		}
		else if(IsAGovCar(vehicleid)) {
		    if(PlayerInfo[playerid][pFaction] != 5 && PlayerInfo[playerid][pLeader] != 5) {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "GOV'den deilsin.");
			}
		}
 		else if(IsAPlane(vehicleid)) {
	  		if(PlayerInfo[playerid][pFlyLic] != 1) {
		  		RemovePlayerFromVehicle(playerid);
		  		new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
		  		NOPCheck(playerid);
			 	SendClientMessage(playerid,COLOR_GREY,"Pilot belgen yok!");
	  		}
		}
		else if(IsAHelicopter(vehicleid)) {
		    if(LSFMDVehicles[38] == vehicleid || LSFMDVehicles[39] == vehicleid || LSFMDVehicles[40] == vehicleid) {
		    	if(PlayerInfo[playerid][pFaction] != 3 || PlayerInfo[playerid][pDivision] != 2) {
					RemovePlayerFromVehicle(playerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz);
				  	NOPCheck(playerid);
					SendClientMessage(playerid,COLOR_GREY,"Bu ara Hayat Uuu birimine aittir.");
				}
			}

		    PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
			GivePlayerValidWeapon(playerid, 46, 60000);
		}
		else if(IsATruckerCar(vehicleid)) {
		    if(PlayerInfo[playerid][pJob] == 20 || PlayerInfo[playerid][pJob2] == 20) {
				new string[128];

				new truckcontents = TruckContents[vehicleid];
				new truckcontentname[50];
				if(truckcontents == 0)
				{ format(truckcontentname, sizeof(truckcontentname), "Yok"); }
				else if(truckcontents >= 1 && truckcontents <= 3)
				{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Yiyecek & ecek");}
				else if(truckcontents >= 4 && truckcontents <= 6)
				{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Kyafet"); }
				else if(truckcontents == 7)
				{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Legal materyaller"); }
				else if(truckcontents >= 8 && truckcontents <= 10)
				{ format(truckcontentname, sizeof(truckcontentname), "{00F70C}Market malzemeleri"); }
				else if(truckcontents >= 11 && truckcontents <= 15)
				{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Illegal silahlar"); }
				else if(truckcontents >= 16 && truckcontents <= 20)
				{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Uyuturucular"); }
				else if(truckcontents >= 21 && truckcontents <= 25)
				{ format(truckcontentname, sizeof(truckcontentname), "{FF0606}Illegal materyaller"); }

				format(string, sizeof(string), "KAMYONCU MESLE: (Ara Kayd: %s %d) - (erik: %s{FFFF00})", GetVehicleName(vehicleid), vehicleid, truckcontentname);
				SendClientMessage(playerid, COLOR_YELLOW, string);

				if(IsACop(playerid) && truckcontents >= 11)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "KAMYONCU MESLE: Kamyondaki illegal eyalar temizlemek iin, kamyonun yaknndayken /yuktemizle.");
				}
				if(truckcontents > 0 && TruckUsed[playerid] == INVALID_VEHICLE_ID)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "KAMYONCU MESLE: aldnz kamyondaki mallar teslim etmek iin srcyken /yukcal.");
				}
				else if(TruckUsed[playerid] == INVALID_VEHICLE_ID)
				{
    				SendClientMessage(playerid, COLOR_YELLOW, "KAMYONCU MESLE: Kamyona yk yklemek iin, srcyken /yukyukle yaz.");
				}
				else if(TruckUsed[playerid] == vehicleid && gPlayerCheckpointStatus[playerid] == CHECKPOINT_RETURNTRUCK)
				{
					SendClientMessage(playerid, COLOR_YELLOW, "KAMYONCU MESLE: Bu senin kamyonun, paran almak iin Ocean Dock'a geri gtrmedin.");
				}
				else if(TruckUsed[playerid] == vehicleid)
   				{
      				SendClientMessage(playerid, COLOR_YELLOW, "KAMYONCU MESLE: Bu senin kamyonun, ierisindeki eyalar hala teslim etmedin.");
     			}
				else if(TruckUsed[playerid] != INVALID_VEHICLE_ID)
   				{
      				SendClientMessage(playerid, COLOR_YELLOW, "KAMYONCU MESLE: Zaten bir teslimat grevin var, iptal etmek iin /iptal kamyoncu yaz.");
     			}
			}
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Kamyoncu deilsin!");
			}
		}
		else if(IsAnTaxi(vehicleid) || IsAnBus(vehicleid)) {
	        if(PlayerInfo[playerid][pFaction] != 6) {
		        SendClientMessage(playerid,COLOR_GREY,"Los Santos Taksi oluumunda deilsin!");
		        RemovePlayerFromVehicle(playerid);
		        new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
		    }
		}
	}
	else if(!IsPlayerInRangeOfVehicle(playerid, vehicleid, 7.5) || LockStatus[vehicleid] >= 1) { // G-bugging fix
		ClearAnimations(playerid, 1);
	}
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid) {
	if(GetPlayerState(playerid) == 1)
		return 1;

    HideProgressBarForPlayer(playerid, FuelBar[playerid]);
	SetPVarInt(playerid, "fuelonoff", 0);
	DestroyProgressBar(FuelBar[playerid]);
	FuelBar[playerid] = INVALID_BAR_ID;
	if(GetPVarInt(playerid, "rccam") == 1)
	{
		DestroyVehicle(GetPVarInt(playerid, "rcveh"));
		VehicleRadioStation[GetPVarInt(playerid, "rcveh")] = 0;
	    SetPlayerPos(playerid, GetPVarFloat(playerid, "rcX"), GetPVarFloat(playerid, "rcY"), GetPVarFloat(playerid, "rcZ"));
		DeletePVar(playerid, "rccam");
	    KillTimer(GetPVarInt(playerid, "rccamtimer"));
	}
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate) {
	if(GettingSpectated[playerid] != 999)
	{
	    new spectator = GettingSpectated[playerid];
	    if(!IsPlayerConnected(spectator))
	    {
	        GettingSpectated[playerid] = 999;
	        Spectate[spectator] = 999;
		}

	    if(newstate == PLAYER_STATE_DRIVER && PlayerInfo[spectator][pAdmin] >= 2 || newstate == PLAYER_STATE_PASSENGER && PlayerInfo[spectator][pAdmin] >= 2)
	    {
	        TogglePlayerSpectating(spectator, true);
			new carid = GetPlayerVehicleID(playerid);
			PlayerSpectateVehicle(spectator, carid);
	    }
	    else if(newstate == PLAYER_STATE_ONFOOT && PlayerInfo[spectator][pAdmin] >= 2)
	    {
	        TogglePlayerSpectating(spectator, true);
		   	PlayerSpectatePlayer(spectator, playerid);
		   	SetPlayerInterior(spectator, GetPlayerInterior(playerid));
	    }
	}

	if((newstate == 2 || newstate == 3 || newstate == 7 || newstate == 9) && pTazer[playerid] == 1)
	{
	    RemovePlayerWeapon(playerid, 23);
		GivePlayerValidWeapon(playerid, pTazerReplace[playerid], 60000);
		pTazer[playerid] = 0;
	}
    if(oldstate == PLAYER_STATE_DRIVER || oldstate == PLAYER_STATE_PASSENGER)
    {
		if(GetPVarInt(playerid, "fuelonoff") == 1)
		{
		    HideProgressBarForPlayer(playerid, FuelBar[playerid]);
			SetPVarInt(playerid, "fuelonoff", 0);
			DestroyProgressBar(FuelBar[playerid]);
			FuelBar[playerid] = INVALID_BAR_ID;
		}
    }
	if(newstate == PLAYER_STATE_ONFOOT)
	{
		if(MP3Station[playerid] == 0) {
        StopAudioStreamForPlayer(playerid);
		} else {
			new
				t = MP3Station[playerid]-1;
  			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[t][radiourl]);
		}

		if(GettingSpectated[playerid] < MAX_PLAYERS && PlayerInfo[GettingSpectated[playerid]][pAdmin] >= 2)
		{
			new spectator = GettingSpectated[playerid];
  			// Preventing possible buffer overflows with the arrays
			TogglePlayerSpectating(spectator, true);
			PlayerSpectatePlayer(spectator, playerid);
			SetPlayerInterior(spectator, GetPlayerInterior(playerid));
			SetPlayerInterior(spectator, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(spectator, GetPlayerVirtualWorld(playerid));
		}
		if(ConnectedToPC[playerid] == 1337)//mvb
	    {
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'den k yaptn.");
	        ConnectedToPC[playerid] = 0;
		}
		if(RadarActive[playerid] == 1)//mvb speed radar
	    {
            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB Hz radarn kapattn.");
			RadarActive[playerid] = 0;
/*			TextDrawDestroy(RadarTitle[playerid]);
			TextDrawDestroy(RadarContext[playerid]); */
		}
        if(TransportDuty[playerid] > 0)
		{
		    if(TransportDuty[playerid] == 1)
			{
		        TaxiDrivers -= 1;
			}
			else if(TransportDuty[playerid] == 2)
			{
			    BusDrivers -= 1;
			}
			TransportDuty[playerid] = 0;
			new string[42];
			format(string, sizeof(string), "* bandan ktn ve $%d kazandn.", TransportMoney[playerid]);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
			GivePlayerCash(playerid, TransportMoney[playerid]);
			ConsumingMoney[playerid] = 1; TransportValue[playerid] = 0; TransportMoney[playerid] = 0;
			SetPlayerColor(playerid, TEAM_HIT_COLOR);
			TransportTime[playerid] = 0;
   			TransportCost[playerid] = 0;
		}
		if(TransportDriver[playerid] < MAX_PLAYERS && AdminDuty[playerid] == 0)
		{
			new string[128];
			TransportMoney[TransportDriver[playerid]] += TransportCost[playerid];
			//format(string, sizeof(string), "Taksi ucreti: $%d",TransportCost[playerid]);
			//SendClientMessage(playerid, COLOR_WHITE, string);
			//format(string, sizeof(string), "~Musteri taksiden ayrildi kazanilan: $%d",TransportCost[playerid]);
			//SendClientMessage(TransportDriver[playerid], COLOR_WHITE, string);
			GivePlayerCash(playerid, -TransportCost[playerid]);

			new ip[32], ipex[32];
			GetPlayerIp(playerid, ip, sizeof(ip));
			GetPlayerIp(TransportDriver[playerid], ipex, sizeof(ipex));
			TaxiWarn[playerid][TransportDriver[playerid]] += TransportCost[playerid];
			if(TaxiWarn[playerid][TransportDriver[playerid]] >= 10000)
			{
				format(string, sizeof(string), "%s (IP:%s), %s (IP:%s)' istedii yere gtrd ve $%d kazand.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(TransportDriver[playerid]), ipex, TaxiWarn[playerid][TransportDriver[playerid]]);
				//Log("logs/pay.log", string);
				ABroadCast(COLOR_YELLOW, string, 1);
			}
			TransportTime[TransportDriver[playerid]] = 0;
			TransportCost[TransportDriver[playerid]] = 0;
			TransportCost[playerid] = 0;
			TransportTime[playerid] = 0;
			TransportDriver[playerid] = 999;
		}
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
	}
	if(newstate == PLAYER_STATE_WASTED)
	{
	    if(GetPVarInt(playerid, "EventToken") == 0 && AdminDuty[playerid] == 0)
	    {
			SetPVarInt(playerid, "DoktorMasrafi", 1);
		}
	}
 	if(newstate == PLAYER_STATE_PASSENGER)
	{
	    fVehSpeed[playerid] = 0;
	    new vehicleid = GetPlayerVehicleID(playerid);
	    gLastCar[playerid] = vehicleid;

 		if(PlayerInfo[playerid][pGuns][4] > 0)	SetPlayerArmedWeapon(playerid,PlayerInfo[playerid][pGuns][4]);
		else SetPlayerArmedWeapon(playerid,0);

  		if(GetPVarInt(playerid, "ToBeEjected") >= 1)
    	{
	       	SetPVarInt(playerid, "ToBeEjected", 0);
	       	RemovePlayerFromVehicle(playerid);
	       	new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z+2);

			if(GetPVarInt(playerid, "Injured") == 1)
  			{
  			    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
		   		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
				SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
   				ClearAnimations(playerid, 1);
				ApplyAnimation(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
   			}
   		}

		if(VehicleRadioStation[GetPlayerVehicleID(playerid)] != 0)
		{
			new getradio = VehicleRadioStation[GetPlayerVehicleID(playerid)]-1;
			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[getradio][radiourl]);
		}

  		foreach(Player, i)
	    {
     		if(IsPlayerInVehicle(i, vehicleid) && GetPlayerState(i) == 2 && TransportDuty[i] > 0 && AdminDuty[playerid] == 0)
       		{
				if(GetPlayerCash(playerid) < TransportValue[i])
				{
					new string[128];
					format(string, sizeof(string), "Binebilmek iin $%d'a ihtiyacn var.", TransportValue[i]);
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					RemovePlayerFromVehicle(playerid);
					new Float:X, Float:Y, Float:Z;
					GetPlayerPos(playerid, X, Y, Z);
					SetPlayerPos(playerid, X, Y, Z+2);
					TogglePlayerControllable(playerid, 1);
				}
				else
				{
					new string[128];
					if(TransportDuty[i] == 1 && AdminDuty[playerid] == 0)
					{
						format(string, sizeof(string), "* Taksi ofrne $%d para dedin.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s adl mteri taksi aracnza bindi.", GetPlayerNameEx(playerid));
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
						TransportTime[i] = 1;
						TransportTime[playerid] = 1;
						TransportCost[playerid] = TransportValue[i];
						TransportCost[i] = TransportValue[i];
						TransportDriver[playerid] = i;
					}
					else if(TransportDuty[i] == 2)
					{
						format(string, sizeof(string), "* Taksi ofrne $%d para dedin.", TransportValue[i]);
						SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
						format(string, sizeof(string), "* %s adl mteri taksi aracnza bindi.", GetPlayerNameEx(playerid));
						SendClientMessage(i, COLOR_LIGHTBLUE, string);
					}
					GivePlayerCash(playerid, - TransportValue[i]);
					TransportMoney[i] += TransportValue[i];
				}
      		}
	    }
	}
	if(newstate == PLAYER_STATE_DRIVER)
	{
	    fVehSpeed[playerid] = 0;

	    SetPlayerArmedWeapon(playerid, 0);

	    if(VehicleRadioStation[GetPlayerVehicleID(playerid)] == 0)
	    {
	        SendClientMessage(playerid, COLOR_NEWS, "Radyo amak iin: {FFFFFF}(/radyoac)");
		}
   		if(VehicleRadioStation[GetPlayerVehicleID(playerid)] != 0)
		{
			new getradio = VehicleRadioStation[GetPlayerVehicleID(playerid)]-1;
			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[getradio][radiourl]);

			new genre[18];
			if(getradio >= 0 && getradio <= 15) genre = "Master Radyo";
		/*	else if(getradio >= 10 && getradio <= 19) genre = "Hzn";
			else if(getradio >= 20 && getradio <= 29) genre = "Klasik";
			else if(getradio >= 30 && getradio <= 39) genre = "ehir";
			else if(getradio >= 40 && getradio <= 49) genre = "Yllar";
			else if(getradio >= 50 && getradio <= 59) genre = "Dinlemesi kolay";
			else if(getradio >= 60 && getradio <= 69) genre = "Elektronik";
			else if(getradio >= 70 && getradio <= 79) genre = "Halk";
			else if(getradio >= 80 && getradio <= 89) genre = "lhamverici";
			else if(getradio >= 90 && getradio <= 99) genre = "Evrensel";
			else if(getradio >= 100 && getradio <= 109) genre = "Jazz";
			else if(getradio >= 110 && getradio <= 119) genre = "Latin";
			else if(getradio >= 120 && getradio <= 129) genre = "Metal";
			else if(getradio >= 130 && getradio <= 139) genre = "Misc";
			else if(getradio >= 140 && getradio <= 149) genre = "Yeni Yl";
			else if(getradio >= 150 && getradio <= 159) genre = "Pop";
			else if(getradio >= 160 && getradio <= 169) genre = "Ak Radyo";
			else if(getradio >= 170 && getradio <= 179) genre = "R&B/Urban";
			else if(getradio >= 180 && getradio <= 189) genre = "Rap";
			else if(getradio >= 190 && getradio <= 199) genre = "Reggae";
			else if(getradio >= 200 && getradio <= 209) genre = "Rock";
			else if(getradio >= 210 && getradio <= 219) genre = "Sohbet"; */

	        SendClientMessage(playerid, COLOR_NEWS, "Radyo amak iin: {FFFFFF}(/radyoac)");
		}

   		new
			newcar = GetPlayerVehicleID(playerid),
			v;

        gLastCar[playerid] = newcar;

   	    if(GetPVarInt(playerid, "ToBeEjected") >= 1)
    	{
	       	SetPVarInt(playerid, "ToBeEjected", 0);
	       	RemovePlayerFromVehicle(playerid);
	       	new Float:X, Float:Y, Float:Z;
			GetPlayerPos(playerid, X, Y, Z);
			SetPlayerPos(playerid, X, Y, Z+2);

			if(GetPVarInt(playerid, "Injured") == 1)
  			{
  			    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
		   		SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
				SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
				SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));
   				ClearAnimations(playerid, 1);
				ApplyAnimation(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
   			}
   		}

   		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
  		if(GetCarDealershipVehicleId(newcar) != -1 && GetCarDealershipVehicleId(newcar) == GetPVarInt(playerid, "editingcdveh")) return 1;
        if(GetCarDealershipVehicleId(newcar) != -1)
        {
			new string[57 + 20 + 4];
			format(string, sizeof(string),"Bu %s model arac almak ister misin?\n\nBu aracn fiyat $%d.", GetVehicleName(newcar), CarDealershipInfo[GetCarDealershipId(newcar)][cdVehicleCost][GetCarDealershipVehicleId(newcar)]);
		    ShowPlayerDialogEx(playerid,DIALOG_CDBUY,DIALOG_STYLE_MSGBOX,"Uyar:",string,"Satn Al","Iptal");
		    TogglePlayerControllable(playerid, false);
		    return 1;
        }

 		foreach(Player, i)
	 	{
			v = GetPlayerVehicle(i, newcar);
			if(v != -1) {
				if(i == playerid) {

					new
						string[96];

					format(string, sizeof(string),"Bu %s model aracn sahibisin.", GetVehicleName(newcar));
					SendClientMessage(playerid, COLOR_GREY, string);
					if(PlayerVehicleInfo[i][v][pvTicket] != 0)
					{
						format(string, sizeof(string),"Aracna LSPD memurlar tarafndan $%d'lk bir ceza braklm. Dillimore'deki DMV'den bu cezay demek zorundasn.", PlayerVehicleInfo[i][v][pvTicket]);
						SendClientMessage(playerid, COLOR_GREY, string);
						SendClientMessage(playerid, COLOR_GREY, "Bu cezay demezsen aracn balanabilir, hatta hapse bile girebilirsin.");
					}
				}
				else if(i == PlayerInfo[playerid][pVehicleKeysFrom]) {

					new
						string[64 + MAX_PLAYER_NAME];

					format(string, sizeof(string),"Modeli % olan bu aracn anahtarlarna sahipsin. Sahibi: %s", GetVehicleName(newcar), GetPlayerNameEx(i));
					SendClientMessage(playerid, COLOR_GREY, string);
				}
				else if(PlayerVehicleInfo[i][v][pvLocked] == 1 && PlayerVehicleInfo[i][v][pvLock] == 1) {
				    GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(newcar,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
					SetTimerEx("DisableVehicleAlarm", 20000, 0, "d",  newcar);
				}
				/*else if(PlayerVehicleInfo[i][v][pvLocked] == 1 && PlayerVehicleInfo[i][v][pvLock] == 2) {

					new
						string[49 + MAX_PLAYER_NAME];

	          		if(PlayerInfo[playerid][pAdmin] < 2)
					{
						format(string, sizeof(string), "* %s has been stunned by the electric anti-theft.",GetPlayerNameEx(playerid));
						ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						new Float:X, Float:Y, Float:Z, Float:HP;
	     				GetPlayerPos(playerid, X, Y, Z);
						//SendAudioToRange(64, 100, X, Y, Z, 20.0);
	     				SetPlayerPos(playerid, X + 1, Y, Z);
	         			RemovePlayerFromVehicle(playerid);
	         			SetPVarInt(playerid, "IsFrozen", 1);
	            		TogglePlayerControllable(playerid,0);
		            	SetTimerEx("ReleasePlayer", 10000, 0, "d", playerid);
			            GameTextForPlayer(playerid,"~r~STUNNED!",11000,3);
			            GetPlayerHealth(playerid,HP);
			            SetPlayerHealth(playerid,HP-15);
					}
					else
					{
	    				format(string, sizeof(string), "Warning: This %s is owned by %s.", GetVehicleName(newcar), GetPlayerNameEx(i));
	      				SendClientMessage(playerid, COLOR_GREY, string);
					}
				}*/
				return 1;
			}
		}

		for(new f = 0; f < MAX_FAMILY; f++) {
			v = GetGangVehicle(f, newcar);
			if(v != -1) {
				new string[49 + MAX_PLAYER_NAME];
				if(PlayerInfo[playerid][pGang] == f)
				{
					format(string, sizeof(string), "%s model aracn sahibi olan ailedensin.", GetVehicleName(newcar));
	    			SendClientMessage(playerid, COLOR_GREY, string);
				}
				else if(FamilyVehicleInfo[f][v][fvLocked] == 1 && FamilyVehicleInfo[f][v][fvLock] == 1)
				{
					GetVehicleParamsEx(newcar,engine,lights,alarm,doors,bonnet,boot,objective);
					SetVehicleParamsEx(newcar,engine,lights,VEHICLE_PARAMS_ON,doors,bonnet,boot,objective);
					SetTimerEx("DisableVehicleAlarm", 20000, 0, "d",  newcar);
				}
				/*else if(FamilyVehicleInfo[f][v][fvLocked] == 1 && FamilyVehicleInfo[f][v][fvLock] == 2)
				{
		            format(string, sizeof(string), "* %s has been stunned by the electric anti-theft.",GetPlayerNameEx(playerid));
		            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
		            new Float:X, Float:Y, Float:Z, Float:HP;
		            GetPlayerPos(playerid, X, Y, Z);
					//SendAudioToRange(64, 100, X, Y, Z, 20.0);
		            SetPlayerPos(playerid, X + 1, Y, Z);
		            RemovePlayerFromVehicle(playerid);
		            new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz);
					SetPVarInt(playerid, "IsFrozen", 1);
		            TogglePlayerControllable(playerid,0);
		            SetTimerEx("ReleasePlayer", 10000, 0, "d", playerid);
		            GameTextForPlayer(playerid,"~r~STUNNED!",11000,3);
		            GetPlayerHealth(playerid,HP);
		            SetPlayerHealth(playerid,HP-15);
				}*/
				return 1;
			}
		}

		new vehicleid = GetPlayerVehicleID(playerid);

	 	if(IsACopCar(vehicleid))
		{
if(PlayerInfo[playerid][pFaction] == 1||PlayerInfo[playerid][pLeader] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pLeader] == 2)
			{
			}
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "LSPD'den deilsin!");
			}
		}
		else if(IsAFBICar(vehicleid))
		{
		    if(PlayerInfo[playerid][pFaction] == 2||PlayerInfo[playerid][pLeader] == 2)
			{
			}
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			   // SendClientMessage(playerid,COLOR_GREY,"FBI'dan deilsin!");
			}
		}
				else if(IsAnAmbulance(vehicleid))
		{
		    if(PlayerInfo[playerid][pFaction] == 3||PlayerInfo[playerid][pLeader] == 3)
			{
			}
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid,COLOR_GREY,"LSFMD'den deilsin!");
			}
		}
		else if(vehicleid == LSFMDVehicles[12] || vehicleid == LSFMDVehicles[33] || vehicleid == LSFMDVehicles[34] || vehicleid == LSFMDVehicles[35]) {
		    if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pDivision] == 3) { }
			else {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Yangn Departman biriminde deilsin.");
			}
		}
		else if(vehicleid == LSFMDVehicles[13] || vehicleid == LSFMDVehicles[16] || vehicleid == LSFMDVehicles[36] || vehicleid == LSFMDVehicles[37] || vehicleid == LSFMDVehicles[38] || vehicleid == LSFMDVehicles[39] || vehicleid == LSFMDVehicles[40]) {
		    if(PlayerInfo[playerid][pLeader] == 3 || PlayerInfo[playerid][pFaction] == 3 && PlayerInfo[playerid][pDivision] == 2) { }
			else {
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "Hava Yardm biriminde deilsin.");
			}
		}
		else if(IsANewsVeh(vehicleid))
		{
		    if(PlayerInfo[playerid][pFaction] == 9||PlayerInfo[playerid][pLeader] == 9)
			{
				if(GetVehicleModel(vehicleid) == 488 && PlayerInfo[playerid][pRank] < 3) {
				    RemovePlayerFromVehicle(playerid);
				    new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz);
				    NOPCheck(playerid);
				    SendClientMessage(playerid, COLOR_GRAD2, "Bu helikopteri uurabilmek iin en az R3 olman gerek.");
				}
			}
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "SAN News Haberleri oluumunda deilsin!");
			}
		}
		else if(IsAGovCar(vehicleid))
		{
		    if(PlayerInfo[playerid][pFaction] == 5||PlayerInfo[playerid][pLeader] == 5)
			{
			}
		    else
			{
			    RemovePlayerFromVehicle(playerid);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
			    NOPCheck(playerid);
			    SendClientMessage(playerid, COLOR_GRAD2, "GOV'den deilsin.");
			}
		}
 		else if(IsAPlane(vehicleid))
		{
	  		if(PlayerInfo[playerid][pFlyLic] != 1)
	  		{
		  		RemovePlayerFromVehicle(playerid);
		  		new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
		  		NOPCheck(playerid);
			 	SendClientMessage(playerid,COLOR_GREY,"Pilot belgen yok!");
	  		}
		}
		else if(IsAHelicopter(vehicleid))
		{
		    PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
			GivePlayerValidWeapon(playerid, 46, 60000);
		}
		else if(IsAnTaxi(vehicleid) || IsAnBus(vehicleid))
		{
	        if(PlayerInfo[playerid][pFaction] == 6 || PlayerInfo[playerid][pLeader] == 6)
			{
			}
		    else
			{
		        SendClientMessage(playerid,COLOR_GREY,"Los Santos Taksi oluumunda deilsin!");
		        RemovePlayerFromVehicle(playerid);
		        new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz);
		    }
		}
 		if((engine == VEHICLE_PARAMS_UNSET || engine == VEHICLE_PARAMS_OFF) && GetVehicleModel(newcar) != 509 && GetVehicleModel(newcar) != 481 && GetVehicleModel(newcar) != 510) {
			SendClientMessageEx(playerid, COLOR_WHITE, "{FFFFFF}Aracnzn motorunu altrmak yada durdurmak iin {38B0DE}N{FFFFFF} tuuna basn.");
			if(GetPVarInt(playerid, "fuelonoff") == 1)
			{
			    HideProgressBarForPlayer(playerid, FuelBar[playerid]);
				SetPVarInt(playerid, "fuelonoff", 0);
				DestroyProgressBar(FuelBar[playerid]);
				FuelBar[playerid] = INVALID_BAR_ID;
			}
		}
		else
		{
			if(GetVehicleModel(GetPlayerVehicleID(playerid)) != 481 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 509 && GetVehicleModel(GetPlayerVehicleID(playerid)) != 510)
			{
				SetPVarInt(playerid, "fuelonoff", 1);
	 			FuelBar[playerid] = CreateProgressBar(548.00, 26.00, 57.50, 3.20, 866792447, 100.0);
	  			SetProgressBarValue(FuelBar[playerid], Fuel[GetPlayerVehicleID(playerid)]);
				ShowProgressBarForPlayer(playerid, FuelBar[playerid]);
			}
		}
	}
	if(newstate == PLAYER_STATE_SPAWNED)
	{
		TelePos[playerid][0] = 0.0;
		TelePos[playerid][1] = 0.0;
		//gPlayerSpawned[playerid] = 1;
	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	if(GetPVarInt(playerid,"TrackCar") != 0)
	{
	    PlayerPlaySound(playerid, 1057, 0.0, 0.0, 0.0);
	    DisablePlayerCheckpoint(playerid);
		DeletePVar(playerid, "TrackCar");
		return 1;
	}
	if(GetPVarInt(playerid, "TruckDeliver") > 0 && gPlayerCheckpointStatus[playerid] != CHECKPOINT_RETURNTRUCK)
	{
	    new vehicleid = GetPlayerVehicleID(playerid);
	    if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "Kamyonun iinde deilsin.");
	        return 1;
	    }
	    if(TruckUsed[playerid] != INVALID_VEHICLE_ID && vehicleid != TruckUsed[playerid])
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "Bu kamyon, teslimat yapman gereken eyalar olan kamyon deil.");
	        return 1;
	    }

		if(!IsAtTruckDeliveryPoint(playerid))
 		{// In the case the player finds a way to exploit the checkpoint to different location
			CancelTruckDelivery(playerid);
			SendClientMessage(playerid, COLOR_REALRED, "Hata: Yanl checkpointe gittin. Teslimat tamamen iptal edildi.");
			return 1;
   		}

		if(GetPVarInt(playerid, "tpTruckRunTimer") != 0) {
  			new string[128];
			format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) adl oyuncu muhtemelen  teleport hilesi ile kamyonculuk yapyor.", GetPlayerNameEx(playerid), playerid);
  			ABroadCast(COLOR_YELLOW, string, 2);

  			format(string, sizeof(string), "%s muhtemelen teleport hilesi ile kamyonculuk yapyor.", GetPlayerNameEx(playerid));
  			AddAutomatedFlag(playerid, string);

			SetPVarInt(playerid, "_TP_HACK_WARNINGS", GetPVarInt(playerid,"_TP_HACK_WARNINGS")+1);

  			if(GetPVarInt(playerid,"_TP_HACK_WARNINGS") >= 3)
  			{
   				format(string, sizeof(string), "AdminKomutu: %s adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid));
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid), playerip);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", string);
   				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
			return 1;
		}

		new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
		TruckContents[vehicleid] = 0;

		if(truckdeliver >= 1 && truckdeliver <= 3)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Yiyecek & ecek teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		else if(truckdeliver >= 4 && truckdeliver <= 6)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kyafet teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		else if(truckdeliver == 7)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Materyal teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		else if(truckdeliver >= 8 && truckdeliver <= 10)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Market malzemeleri teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		else if(truckdeliver >= 11 && truckdeliver <= 15)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		else if(truckdeliver >= 16 && truckdeliver <= 20)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		else if(truckdeliver >= 21 && truckdeliver <= 25)
		{
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal materyal teslimat yaptn, demeni almak iin Ocean Docks'a geri dn.");
		}
		DisablePlayerCheckpoint(playerid);

		gPlayerCheckpointStatus[playerid] = CHECKPOINT_RETURNTRUCK;
		SetPlayerCheckpoint(playerid, 2225.343261, -2635.977294, 13.438463, 5);
		GameTextForPlayer(playerid, "~w~Gecis Noktasi Ayarlandi ~r~Ocean Docks", 5000, 1);
		SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Ocean Docks'a geri dn (haritadaki krmz nokta).");

		SetPVarInt(playerid, "tpTruckRunTimer", 30);
		SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
		return 1;
	}
    else if(GetPVarInt(playerid, "Pizza") > 0 && IsPlayerInRangeOfPoint(playerid, 5.0, HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorX], HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorY], HouseInfo[GetPVarInt(playerid, "Pizza")][hExteriorZ]))
	{
	    new string[128];
		if(GetPVarInt(playerid, "tpPizzaTimer") != 0)
		{
			format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) adl kii muhtemelen teleport hilesi ile pizzaclk yapyor.", GetPlayerNameEx(playerid), playerid);
  			ABroadCast(COLOR_YELLOW, string, 2);

  			format(string, sizeof(string), "%s muhtemelen teleport hilesi ile pizzaclk yapyor.", GetPlayerNameEx(playerid));
  			AddAutomatedFlag(playerid, string);

    		// format(string, sizeof(string), "%s (ID %d) is possibly teleport pizzarunning.", GetPlayerNameEx(playerid), playerid);
	    	// Log("logs/hack.log", string);
	    	format(string, sizeof(string), "Pizzay soumadan hedefe gtrdn vee $%d kazandn.", (GetPVarInt(playerid, "pizzaTimer") * 2));
	    	SendClientMessage(playerid, COLOR_WHITE, string);
   			SetPVarInt(playerid, "Pizza", 0);
			DisablePlayerCheckpoint(playerid);

			SetPVarInt(playerid, "_TP_HACK_WARNINGS", GetPVarInt(playerid,"_TP_HACK_WARNINGS")+1);

  			if(GetPVarInt(playerid,"_TP_HACK_WARNINGS") >= 3)
  			{
   				format(string, sizeof(string), "AdminKomutu: %s adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid));
				SendClientMessageToAllEx(COLOR_LIGHTRED, string);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(string, sizeof(string), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid), playerip);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", string);
   				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
	    	return 1;
		}
		DestroyProgressBar(PizzaBar[playerid]);
		format(string, sizeof(string), "Pizzay soumadan hedefe gtrdn vee $%d kazandn.", (GetPVarInt(playerid, "pizzaTimer") * 2));
		//Tax -= (GetPVarInt(playerid, "pizzaTimer") * 70);
		//Misc_Save();
		GivePlayerCash(playerid, floatround((GetPVarInt(playerid, "pizzaTimer") * 2), floatround_round));
		SendClientMessage(playerid, COLOR_WHITE, string);
		SetPVarInt(playerid, "Pizza", 0);
		DisablePlayerCheckpoint(playerid);

	}
	else if(FindingJob[playerid] != 0)
	{
		switch (FindingJob[playerid])
		{
		    case 1: SendClientMessage(playerid, COLOR_WHITE, "Dedektiflik meslei bu binann ierisinde. eri girmek iin /gir yaz.");
		    case 2: SendClientMessage(playerid, COLOR_WHITE, "Avukat mesleine geldin. /isegir yazarak ie gir.");
		    case 3: SendClientMessage(playerid, COLOR_WHITE, "Hayat kadn meslei bu binann ierisinde. eri girmek iin /gir yaz.");
		    case 4: SendClientMessage(playerid, COLOR_WHITE, "Uyuturucu satcs mesleine geldin. /isegir yazarak ie gir.");
		    case 5: SendClientMessage(playerid, COLOR_WHITE, "Tamirci mesleine geldin. /isegir yazarak ie gir.");
		    case 6: SendClientMessage(playerid, COLOR_WHITE, "Bodyguard mesleine geldin. /isegir yazarak ie gir.");
		    case 7: SendClientMessage(playerid, COLOR_WHITE, "Silah mesleine geldin. /isegir yazarak ie gir.");
		    case 8: SendClientMessage(playerid, COLOR_WHITE, "Boksr meslei bu binann ierisinde. eri girmek iin /gir yaz.");
		    case 9: SendClientMessage(playerid, COLOR_WHITE, "Uyuturucu kaaks mesleine geldin. /isegir yazarak ie gir.");
      		case 10: SendClientMessage(playerid, COLOR_WHITE, "Taksici mesleine geldin. /isegir yazarak ie  gir.");
		    case 11: SendClientMessage(playerid, COLOR_WHITE, "Zanaatkar mesleine geldin. /isegir yazarak ie gir.");
		    case 12: SendClientMessage(playerid, COLOR_WHITE, "Barmen meslei bu binann ierisinde. eri girmek iin /gir yaz.");
		    case 13: SendClientMessage(playerid, COLOR_WHITE, "Kamyoncu mesleine geldin. /isegir yazarak ie gir.");
		    case 14: SendClientMessage(playerid, COLOR_WHITE, "Pizzac meslei bu binann ierisinde. eri girmek iin /gir yaz.");
		}
		DisablePlayerCheckpoint(playerid);
		FindingJob[playerid] = 0;
	}
	else if(FindingDealership[playerid] != 0)
	{
		DisablePlayerCheckpoint(playerid);
		FindingDealership[playerid] = 0;
	}
	else if(CP[playerid] == 1)
	{
		if(IsPlayerInAnyVehicle(playerid))
		{
		    new
				vehicleid = GetPlayerVehicleID(playerid);

  			foreach(Player, i)
			{
                new v = GetPlayerVehicle(i, vehicleid);
                if(v != -1)
				{
    				CP[playerid] = 0;
    				DisablePlayerCheckpoint(playerid);
					GameTextForPlayer(playerid, "~r~Arac reddedildi", 5000, 1);
					SendClientMessage(playerid, COLOR_WHITE, "Bir oyuncuya yada aileye ait arac satamazsn.");
                    return 1;
                }
            }
            for(new f = 0; f < MAX_FAMILY; f++)
			{
                new v = GetGangVehicle(f, vehicleid);
                if(v != -1)
                {
					CP[playerid] = 0;
					DisablePlayerCheckpoint(playerid);
					GameTextForPlayer(playerid, "~r~Arac reddedildi", 5000, 1);
					SendClientMessage(playerid, COLOR_WHITE, "Bir oyuncuya yada aileye ait arac satamazsn.");
                    return 1;
                }
			}

			new string[128];

			#if defined DOUBLE_EXP_ENABLED
				new hour,minuite,second;
				gettime(hour,minuite,second);
				if(DoubleEXPcheck(hour))
				{
				    PlayerInfo[playerid][pCarSkill] += 2;
				    SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
					PlayerInfo[playerid][pCarSkill]++;
				}
			#else
				PlayerInfo[playerid][pCarSkill] ++;
			#endif

			new mypoint = -1;
			for (new i=0; i<MAX_POINTS; i++)
			{
				if(strcmp(Points[i][Name], "Auto Export Company", true) == 0)
				{
					mypoint = i;
				}
			}
			if(PlayerInfo[playerid][pCarSkill] == 50)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Ara Hrsz yetenek levelin 2 oldu, artk daha hzl ara satarak daha hzl para kazanacaksn."); }
			else if(PlayerInfo[playerid][pCarSkill] == 100)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Ara Hrsz yetenek levelin 3 oldu, artk daha hzl ara satarak daha hzl para kazanacaksn."); }
			else if(PlayerInfo[playerid][pCarSkill] == 200)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Ara Hrsz yetenek levelin 4 oldu, artk daha hzl ara satarak daha hzl para kazanacaksn."); }
			else if(PlayerInfo[playerid][pCarSkill] == 400)
			{ SendClientMessage(playerid, COLOR_YELLOW, "* Ara Hrsz yetenek levelin 5 oldu, artk daha hzl ara satarak daha hzl para kazanacaksn."); }
			new level = PlayerInfo[playerid][pCarSkill];
			if(level >= 0 && level < 50)
			{
				new rand = random(sizeof(SELLCAR1));
				format(string, sizeof(string), "Arac $%d'a sattn. Tekrar satabilmek iin 20 dakika beklemen gerek.", SELLCAR1[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR1[rand]);
				CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				PlayerInfo[playerid][pCarTime] = 1200;
				SetVehicleToRespawn(vehicleid);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+(SELLCAR1[rand]/2);
					}
				}
			}
			else if(level >= 50 && level < 100)
			{
				new rand = random(sizeof(SELLCAR2));
				format(string, sizeof(string), "Arac $%d'a sattn. Tekrar satabilmek iin 18 dakika beklemen gerek.", SELLCAR2[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR2[rand]);
				PlayerInfo[playerid][pCarTime] = 1080;
				CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				SetVehicleToRespawn(vehicleid);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+(SELLCAR2[rand]/2);
					}
				}
			}
			else if(level >= 100 && level < 200)
			{
				new rand = random(sizeof(SELLCAR3));
				format(string, sizeof(string), "Arac $%d'a sattn. Tekrar satabilmek iin 16 dakika beklemen gerek.", SELLCAR3[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR3[rand]);
				PlayerInfo[playerid][pCarTime] = 960;
				CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				SetVehicleToRespawn(vehicleid);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+(SELLCAR3[rand]/2);
					}
				}
			}
			else if(level >= 200 && level < 400)
			{
				new rand = random(sizeof(SELLCAR4));
				format(string, sizeof(string), "Arac $%d'a sattn. Tekrar satabilmek iin 14 dakika beklemen gerek.", SELLCAR4[rand]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, SELLCAR4[rand]);
				PlayerInfo[playerid][pCarTime] = 840;
				CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				SetVehicleToRespawn(vehicleid);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+(SELLCAR4[rand]/2);
					}
				}
			}
			else if(level >= 400)
			{
				new money = 600;
				format(string, sizeof(string), "Arac $%d'a sattn. Tekrar satabilmek iin 12 dakika beklemen gerek.", money);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				GivePlayerCash(playerid, money);
  				PlayerInfo[playerid][pCarTime] = 720;
 				CP[playerid] = 0;
				DisablePlayerCheckpoint(playerid);
				SetVehicleToRespawn(vehicleid);
				for(new i = 0; i < sizeof(FamilyInfo); i++)
				{
					if(strcmp(Points[mypoint][Owner], FamilyInfo[i][FamilyName], true) == 0)
					{
						FamilyInfo[i][FamilyBank] = FamilyInfo[i][FamilyBank]+(money/2);
					}
				 }
			}
			GameTextForPlayer(playerid, "~y~Araci Sattin", 2500, 1);
			CP[playerid] = 0;
			DisablePlayerCheckpoint(playerid);
			if(GetVehicleModel(vehicleid)==525&&IsTrailerAttachedToVehicle(vehicleid))
			{
				SetVehicleToRespawn(GetVehicleTrailer(vehicleid));
			}
			else
			{
				SetVehicleToRespawn(vehicleid);
			}

			SetTimerEx("RespawnVehicleFunction", 3000, false, "d", gLastCar[playerid]);
		}
		else
		{
		    CP[playerid] = 0;
			GameTextForPlayer(playerid, "Arabada deil", 5000, 1);
			DisablePlayerCheckpoint(playerid);
		}
	}

	if(TaxiCallTime[playerid] > 0 && TaxiAccepted[playerid] < 999)
	{
		TaxiAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Hedefe geldin", 5000, 1);
		TaxiCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(EMSCallTime[playerid] > 0 && EMSAccepted[playerid] < INVALID_PLAYER_ID)
	{
	    if(GetPVarInt(EMSAccepted[playerid], "Injured") == 1)
	    {
	    	SendEMSQueue(EMSAccepted[playerid],2);
	    	EMSAccepted[playerid] = INVALID_PLAYER_ID;
	    	GameTextForPlayer(playerid, "~w~Hedefe geldin", 5000, 1);
	    	EMSCallTime[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
		else
		{
            EMSAccepted[playerid] = INVALID_PLAYER_ID;
		    GameTextForPlayer(playerid, "~r~Yarali hayatini kaybetti", 5000, 1);
		    EMSCallTime[playerid] = 0;
	    	DisablePlayerCheckpoint(playerid);
		}
	}
	else if(BusCallTime[playerid] > 0 && BusAccepted[playerid] < 999)
	{
		BusAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Hedefe geldin", 5000, 1);
		BusCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else if(MedicCallTime[playerid] > 0 && MedicAccepted[playerid] < 999)
	{
		MedicAccepted[playerid] = 999;
		GameTextForPlayer(playerid, "~w~Yaraliya Eristin", 5000, 1);
		MedicCallTime[playerid] = 0;
		DisablePlayerCheckpoint(playerid);
	}
	else
	{
		switch (gPlayerCheckpointStatus[playerid])
		{
			case CHECKPOINT_HOME:
			{
				PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				new i = hInviteHouse[playerid];
				DisablePlayerCheckpoint(playerid);
				gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
    			Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
				SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
				if(HouseInfo[i][hCustomInterior] == 1)
				{
			    	LoadObjectsForPlayer(playerid);
		        }
				SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
				GameTextForPlayer(playerid, "~w~Eve Hosgeldin", 5000, 1);
				PlayerInfo[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
				PlayerInfo[playerid][pVW] = i+60000;
				SetPlayerVirtualWorld(playerid, i+60000);
				hInviteOffer[playerid] = 999;
				hInviteHouse[playerid] = INVALID_HOUSE_ID;
			}
			case CHECKPOINT_TIRBITIS:
			{
			    if(IsPlayerInRangeOfPoint(playerid, 10, 2483.8091,-2483.4810,13.6482))
			    {
				    new vehicleid = GetPlayerVehicleID(playerid);
	   				if(IsATirCar(vehicleid) && IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    		{
				    	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				    	DisablePlayerCheckpoint(playerid);
				    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			            GivePlayerCash(playerid, 450);
			            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Teslimat baarl bir ekilde gerekletirdin $450 para aldn.");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "irketinin tr'n srmyorsun veya arkanda kasa takl deil !");
				}
			}
   			case CHECKPOINT_BETONBITIS:
			{
			    if(IsPlayerInRangeOfPoint(playerid, 10, 2656.4585,866.1746,6.3096))
			    {
				    new vehicleid = GetPlayerVehicleID(playerid);
	   				if(IsACimentoCar(vehicleid) && IsTrailerAttachedToVehicle(GetPlayerVehicleID(playerid)) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    		{
				    	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				    	DisablePlayerCheckpoint(playerid);
				    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			            GivePlayerCash(playerid, 400);
			            SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Teslimat baarl bir ekilde gerekletirdin $400 para aldn.");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "irketinin beton aracn srmyorsun !");
				}
			}
			case CHECKPOINT_LOADTRUCK:
			{
			    if(IsPlayerInRangeOfPoint(playerid, 6, 2197.660644, -2662.190185, 13.546875))
			    {
				    new vehicleid = GetPlayerVehicleID(playerid);
	   				if(IsATruckerCar(vehicleid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
		    		{
				    	PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
				    	DisablePlayerCheckpoint(playerid);
				    	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
						TogglePlayerControllable(playerid, 0);
						SetPVarInt(playerid, "IsFrozen", 1);
						ShowPlayerDialogEx(playerid,DIALOG_LOADTRUCK,DIALOG_STYLE_LIST,"Ne teslimat yapmak istiyorsun?","{00F70C}Legal malzemeler {FFFFFF}(risk yok fakat bonusta yok)\n{FF0606}Illegal malzemeler {FFFFFF}(yakalanma riski var fakat bonusta var.)","Se","Iptal");
					}
					else return SendClientMessage(playerid, COLOR_GREY, "Ocean Docks kamyonu srmyorsun.");
				}
			}
			case CHECKPOINT_RETURNTRUCK:
			{
			    if(!IsPlayerInRangeOfPoint(playerid, 6, 2225.343261, -2635.977294, 13.438463))
			    {// In the case the player finds a way to exploit the checkpoint to different location
                    CancelTruckDelivery(playerid);
                    SendClientMessage(playerid, COLOR_REALRED, "Hata: Yanl checkpointe gittin. Teslimat tamamen iptal edildi.");
					return 1;
			    }

			    new vehicleid = GetPlayerVehicleID(playerid);
   				if(!IsATruckerCar(vehicleid))
   				{// Patch for an exploit
   				    CancelTruckDelivery(playerid);
   				    SendClientMessage(playerid, COLOR_REALRED, "Hata: Ocean Docks kamyonu srmyorsun. Teslimat tamamen iptal edildi.");
   				    return 1;
   				}

 				if(GetPVarInt(playerid, "tpTruckRunTimer") != 0)
				{
  					new string[128];
					format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) adl oyuncu muhtemelen  teleport hilesi ile kamyonculuk yapyor.", GetPlayerNameEx(playerid), playerid);
  					ABroadCast(COLOR_YELLOW, string, 2);

  					format(string, sizeof(string), "%s muhtemelen teleport hilesi ile kamyonculuk yapyor.", GetPlayerNameEx(playerid));
  					AddAutomatedFlag(playerid, string);
    				// format(string, sizeof(string), "%s (ID %d) is possibly teleport truckrunning.", GetPlayerNameEx(playerid), playerid);
	    			// Log("logs/hack.log", string);
	    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Teslimat baarl bir ekilde gerekletirip kamyonu geri getirdiin iin  $100 aldn.");
                    CancelTruckDelivery(playerid);

     				SetPVarInt(playerid, "_TP_HACK_WARNINGS", GetPVarInt(playerid,"_TP_HACK_WARNINGS")+1);

  					if(GetPVarInt(playerid,"_TP_HACK_WARNINGS") >= 3)
  					{
   						format(string, sizeof(string), "AdminKomutu: %s adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid));
						SendClientMessageToAllEx(COLOR_LIGHTRED, string);
						PlayerInfo[playerid][pBanned] = 3;
						new playerip[32];
						GetPlayerIp(playerid, playerip, sizeof(playerip));
						format(string, sizeof(string), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid), playerip);
						PlayerInfo[playerid][pBanned] = 3;
						Log("logs/ban.log", string);
   						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						AddBan(ip);
						Kick(playerid);
						TotalAutoBan++;
					}
	    			return 1;
				}

				if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER)
	    		{
	        		SendClientMessage(playerid, COLOR_WHITE, "Kamyonun iinde deilsin.");
	        		return 1;
	    		}
	    		if(TruckUsed[playerid] != INVALID_VEHICLE_ID && vehicleid != TruckUsed[playerid])
	    		{
	        		SendClientMessage(playerid, COLOR_WHITE, "Bu senin kullandn kamyon deil, cretini alabilmek iin kendi kamyonunu getir!");
	        		return 1;
	    		}

			    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			    DisablePlayerCheckpoint(playerid);
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;

			    SetVehicleToRespawn(vehicleid);

   				new string[128], payment;
				new level = PlayerInfo[playerid][pTruckSkill];
				if(level >= 0 && level < 50) payment = 500;
				else if(level >= 50 && level < 100) payment = 750;
				else if(level >= 100 && level < 200) payment = 1000;
				else if(level >= 200 && level < 400) payment = 1250;
				else if(level >= 400) payment = 2000;

				GivePlayerCash(playerid, payment);
    			format(string, sizeof(string), "* Teslimat baarl bir ekilde gerekletirip kamyonu geri getirdiin iin $%d para aldn.", payment);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);

                new truckdeliver = GetPVarInt(playerid, "TruckDeliver");
				/*if(truckdeliver == 11)
				{
				    if(PlayerInfo[playerid][pConnectTime] > 1)
				    {
   					 SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak 9mm aldn.");
			    		GivePlayerValidWeapon(playerid, 22, 60000);
					}
					else SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah tama yasan olduundan dolay, bonus silahn alamadn.");
				}*/
			 	if(truckdeliver == 12)
				{
				    new randomweapon = Random(1, 3);
					if(PlayerInfo[playerid][pConnectTime] < 2)
				    {
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah tama yasan olduundan dolay, bonus silahn alamadn.");
				    }
					else if(randomweapon == 1)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak 9mm aldn.");
						GivePlayerValidWeapon(playerid, 22, 60000);
					}
					else if(randomweapon == 2)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Susturuculu tabanca aldn.");
						GivePlayerValidWeapon(playerid, 23, 60000);
					}
				}
				else if(truckdeliver == 13)
				{
				    new randomweapon = Random(1, 4);
					if(PlayerInfo[playerid][pConnectTime] < 2)
				    {
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah tama yasan olduundan dolay, bonus silahn alamadn.");
				    }
					else if(randomweapon == 1)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak 9mm aldn.");
						GivePlayerValidWeapon(playerid, 22, 60000);
					}
					else if(randomweapon == 2)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Susturuculu tabanca aldn.");
						GivePlayerValidWeapon(playerid, 23, 60000);
					}
					else if(randomweapon == 3)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Shotgun aldn.");
						GivePlayerValidWeapon(playerid, 25, 60000);
					}
				}
				else if(truckdeliver == 14)
				{
				    new randomweapon = Random(1, 5);
					if(PlayerInfo[playerid][pConnectTime] < 2)
				    {
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah tama yasan olduundan dolay, bonus silahn alamadn.");
				    }
					else if(randomweapon == 1)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak 9mm aldn.");
						GivePlayerValidWeapon(playerid, 22, 60000);
					}
					else if(randomweapon == 2)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Susturuculu tabanca aldn.");
						GivePlayerValidWeapon(playerid, 23, 60000);
					}
					else if(randomweapon == 3)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Shotgun aldn.");
						GivePlayerValidWeapon(playerid, 25, 60000);
					}
					else if(randomweapon == 4)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Rifle aldn.");
						GivePlayerValidWeapon(playerid, 33, 60000);
					}
				}
				else if(truckdeliver == 15)
				{
				    new randomweapon = Random(1, 101);
					if(PlayerInfo[playerid][pConnectTime] < 2)
				    {
				        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Silah tama yasan olduundan dolay, bonus silahn alamadn.");
				    }
					else if(randomweapon >= 1 && randomweapon <= 45)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Shotgun aldn.");
						GivePlayerValidWeapon(playerid, 25, 60000);
					}
					else if(randomweapon >= 46 && randomweapon <= 87)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Rifle aldn.");
						GivePlayerValidWeapon(playerid, 33, 60000);
					}
					else if(randomweapon >= 88 && randomweapon <= 100)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal silah tama riski aldndan dolay, bonus olarak Deagle aldn.");
						GivePlayerValidWeapon(playerid, 24, 60000);
					}
				}
				/*else if(truckdeliver == 16)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu tama riski aldndan dolay, bonus olarak 1gr pot ve 1gr crack aldn.");
				    PlayerInfo[playerid][pPot] += 1;
				    PlayerInfo[playerid][pCrack] += 1;
				}*/
				else if(truckdeliver == 17)
				{
    				new drug = Random(1, 3);
					if(drug == 1)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu tama riskini aldndan dolay, bonus olarak 1gr pot aldn.");
						PlayerInfo[playerid][pPot] += 1;
					}
					else if(drug == 2)
					{
						SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu tama riskini aldndan dolay, bonus olarak 1gr crack aldn.");
						PlayerInfo[playerid][pCrack] += 1;
					}
				}
				else if(truckdeliver == 18)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu tama riski aldndan dolay, bonus olarak 1gr pot ve 1gr crack aldn.");
				    PlayerInfo[playerid][pPot] += 1;
				    PlayerInfo[playerid][pCrack] += 1;
				}
				else if(truckdeliver == 19)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu tama riski aldndan dolay, bonus olarak 2gr pot ve 2gr crack aldn.");
				    PlayerInfo[playerid][pPot] += 2;
				    PlayerInfo[playerid][pCrack] += 2;
				}
				else if(truckdeliver == 20)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Uyuturucu tama riski aldndan dolay, bonus olarak 3gr pot ve 3gr crack aldn.");
				    PlayerInfo[playerid][pPot] += 3;
				    PlayerInfo[playerid][pCrack] += 3;
				}
				else if(truckdeliver == 21)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal materyal tama riskini aldndan dolay,bonus olarak 25 materyal aldn.");
					PlayerInfo[playerid][pMats] += 25;
				}
				else if(truckdeliver == 22)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal materyal tama riskini aldndan dolay,bonus olarak 50 materyal aldn.");
					PlayerInfo[playerid][pMats] += 50;
				}
				else if(truckdeliver == 23)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal materyal tama riskini aldndan dolay,bonus olarak 100 materyal aldn.");
					PlayerInfo[playerid][pMats] += 100;
				}
				else if(truckdeliver == 24)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal materyal tama riskini aldndan dolay,bonus olarak 150 materyal aldn.");
					PlayerInfo[playerid][pMats] += 150;
				}
				else if(truckdeliver == 25)
				{
				    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* llegal materyal tama riskini aldndan dolay,bonus olarak 200 materyal aldn.");
					PlayerInfo[playerid][pMats] += 200;
				}

				#if defined DOUBLE_EXP_ENABLED
					new hour,minuite,second;
					gettime(hour,minuite,second);
					if(DoubleEXPcheck(hour))
					{
				    	PlayerInfo[playerid][pTruckSkill] += 2;
				    	SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
					}
					else
					{
						SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
						PlayerInfo[playerid][pTruckSkill]++;
					}
				#else
					PlayerInfo[playerid][pTruckSkill]++;
				#endif

				TruckUsed[playerid] = INVALID_VEHICLE_ID;
				DeletePVar(playerid, "TruckDeliver");
			}
			case CHECKPOINT_HITMAN:
			{
			    PlayerPlaySound(playerid, 1058, 0.0, 0.0, 0.0);
			    DisablePlayerCheckpoint(playerid);
			    gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
			    SendClientMessage(playerid, COLOR_GRAD2, "Merkeze girmek iin /gir yaz.");
			}
		}
	}

	for(new h = 0; h < MAX_POINTS; h++)
	{
		if(Points[h][Type] == 3 && GetPVarInt(playerid, "CrateDeliver") == 1 && IsPlayerInRangeOfPoint(playerid, 6.0, 2166.3772,-1675.3829,15.0859))
		{
			new string[128];
		    if(GetPVarInt(playerid, "tpDrugRunTimer") != 0) {
			   	format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) muhtemelen teleport hilesi ile uyuturucu kasyor.", GetPlayerNameEx(playerid), playerid);
			   	ABroadCast(COLOR_YELLOW, string, 2);

			   	format(string, sizeof(string), "%s muhtemelen teleport hilesi ile uyuturucu kasyor.", GetPlayerNameEx(playerid));
			   	AddAutomatedFlag(playerid, string);
			   	// format(string, sizeof(string), "%s (ID %d) is possibly teleport drugrunning.", GetPlayerNameEx(playerid), playerid);
			   	// Log("logs/hack.log", string);
			   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $150 kazandn.");
   				DeletePVar(playerid, "CrateDeliver");
				PlayerInfo[playerid][pCrates] = 0;

				SetPVarInt(playerid, "_TP_HACK_WARNINGS", GetPVarInt(playerid,"_TP_HACK_WARNINGS")+1);

  				if(GetPVarInt(playerid,"_TP_HACK_WARNINGS") >= 3)
  				{
   					format(string, sizeof(string), "AdminKomutu: %s adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pBanned] = 3;
					new playerip[32];
					GetPlayerIp(playerid, playerip, sizeof(playerip));
					format(string, sizeof(string), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid), playerip);
					PlayerInfo[playerid][pBanned] = 3;
					Log("logs/ban.log", string);
   					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					AddBan(ip);
					Kick(playerid);
					TotalAutoBan++;
				}
			   	return 1;
			}
			DisablePlayerCheckpoint(playerid);
			new level = PlayerInfo[playerid][pSmugSkill];
   			if(level >= 0 && level < 50)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $500 kazandn.");
				GivePlayerCash(playerid, 500);
			}
			else if(level >= 50 && level < 100)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $750 kazandn.");
				GivePlayerCash(playerid, 750);
			}
			else if(level >= 100 && level < 200)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $1000 kazandn.");
				GivePlayerCash(playerid, 1000);
			}
			else if(level >= 200 && level < 400)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $1250 kazandn.");
				GivePlayerCash(playerid, 1250);
			}
			else if(level >= 400)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $1500 kazandn.");
				GivePlayerCash(playerid, 1500);
			}
			DeletePVar(playerid, "CrateDeliver");
			PlayerInfo[playerid][pCrates] = 0;
			Points[h][Stock] += 10;

			#if defined DOUBLE_EXP_ENABLED
				new hour,minuite,second;
				gettime(hour,minuite,second);
				if(DoubleEXPcheck(hour))
				{
				    PlayerInfo[playerid][pSmugSkill] += 2;
				    SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
					PlayerInfo[playerid][pSmugSkill]++;
				}
			#else
				PlayerInfo[playerid][pSmugSkill]++;
			#endif

			format(string, sizeof(string), " ALINABILIR POT: %d gram.", Points[h][Stock]);
			UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
			return 1;
		}
		else if(Points[h][Type] == 4 && GetPVarInt(playerid, "CrateDeliver") == 2 && IsPlayerInRangeOfPoint(playerid, 6.0, 2354.2808,-1169.2959,28.0066))
		{
			new string[128];
		    if(GetPVarInt(playerid, "tpDrugRunTimer") != 0)
	    	{
			   	format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) muhtemelen teleport hilesi ile uyuturucu kasyor.", GetPlayerNameEx(playerid), playerid);
			   	ABroadCast(COLOR_YELLOW, string, 2);

			   	format(string, sizeof(string), "%s muhtemelen teleport hilesi ile uyuturucu kasyor.", GetPlayerNameEx(playerid));
			   	AddAutomatedFlag(playerid, string);
			   	// format(string, sizeof(string), "%s (ID %d) is possibly teleport drugrunning.", GetPlayerNameEx(playerid), playerid);
			   	// Log("logs/hack.log", string);
			   	SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $125 kazandn.");
   				DeletePVar(playerid, "CrateDeliver");
				PlayerInfo[playerid][pCrates] = 0;

				SetPVarInt(playerid, "_TP_HACK_WARNINGS", GetPVarInt(playerid,"_TP_HACK_WARNINGS")+1);

  				if(GetPVarInt(playerid,"_TP_HACK_WARNINGS") >= 3)
  				{
   					format(string, sizeof(string), "AdminKomutu: %s adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid));
					SendClientMessageToAllEx(COLOR_LIGHTRED, string);
					PlayerInfo[playerid][pBanned] = 3;
					new playerip[32];
					GetPlayerIp(playerid, playerip, sizeof(playerip));
					format(string, sizeof(string), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid), playerip);
					PlayerInfo[playerid][pBanned] = 3;
					Log("logs/ban.log", string);
   					new ip[32];
					GetPlayerIp(playerid,ip,sizeof(ip));
					AddBan(ip);
					Kick(playerid);
					TotalAutoBan++;
				}
				return 1;
			}
			DisablePlayerCheckpoint(playerid);
			new level = PlayerInfo[playerid][pSmugSkill];

			if(level >= 0 && level < 50)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $250 kazandn.");
				GivePlayerCash(playerid, 250);
			}
			else if(level >= 50 && level < 100)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $300 kazandn.");
				GivePlayerCash(playerid, 300);
			}
			else if(level >= 100 && level < 200)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $350 kazandn.");
				GivePlayerCash(playerid, 350);
			}
			else if(level >= 200 && level < 400)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $400 kazandn.");
				GivePlayerCash(playerid, 400);
			}
			else if(level >= 400)
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE,"* Uyuturucu kutusu teslimat yaptndan dolay $450 kazandn.");
				GivePlayerCash(playerid, 450);
			}
			DeletePVar(playerid, "CrateDeliver");
			PlayerInfo[playerid][pCrates] = 0;
			Points[h][Stock] += 10;

			#if defined DOUBLE_EXP_ENABLED
				new hour,minuite,second;
				gettime(hour,minuite,second);
				if(DoubleEXPcheck(hour))
				{
				    PlayerInfo[playerid][pSmugSkill] += 2;
				    SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
					PlayerInfo[playerid][pSmugSkill]++;
				}
			#else
				PlayerInfo[playerid][pSmugSkill]++;
			#endif

			format(string, sizeof(string), " ALINABILIR CRACK: %d gram.", Points[h][Stock]);
			UpdateDynamic3DTextLabelText(Points[h][TextLabel], COLOR_YELLOW, string);
			return 1;
		}
		else if(Points[h][Type] == 2 && GetPVarInt(playerid, "MatDeliver") == Points[h][MatPoint] && IsPlayerInRangeOfPoint(playerid, 6.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
		{
			if(GetPVarInt(playerid, "Packages") > 0)
			{
			    new
			        iOriginalMats = PlayerInfo[playerid][pMats];

				new string[128];
				if(GetPVarInt(playerid, "tpMatRunTimer") != 0)
			    {
			    	format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) adl oyuncu hile ile materyal kasyor olabilir.", GetPlayerNameEx(playerid), playerid);
			    	ABroadCast(COLOR_YELLOW, string, 2);

			    	format(string, sizeof(string), "%s muhtemelen teleport hilesi ile materyal kasyor.", GetPlayerNameEx(playerid));
			    	AddAutomatedFlag(playerid, string);
			    	// format(string, sizeof(string), "%s (ID %d) is possibly teleport matrunning.", GetPlayerNameEx(playerid), playerid);
			    	// Log("logs/hack.log", string);
			    	format(string, sizeof(string), "Fabrika sana bu teslimat iin 250 materyal verdi. Bundan once %d materyalin vard.", iOriginalMats);
			    	SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
   					DeletePVar(playerid, "Packages");
					DeletePVar(playerid, "MatDeliver");
					DisablePlayerCheckpoint(playerid);

					SetPVarInt(playerid, "_TP_HACK_WARNINGS", GetPVarInt(playerid,"_TP_HACK_WARNINGS")+1);

  					if(GetPVarInt(playerid,"_TP_HACK_WARNINGS") >= 3)
  					{
   						format(string, sizeof(string), "AdminKomutu: %s adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid));
						SendClientMessageToAllEx(COLOR_LIGHTRED, string);
						PlayerInfo[playerid][pBanned] = 3;
						new playerip[32];
						GetPlayerIp(playerid, playerip, sizeof(playerip));
						format(string, sizeof(string), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Teleport Hilesi.", GetPlayerNameEx(playerid), playerip);
						PlayerInfo[playerid][pBanned] = 3;
						Log("logs/ban.log", string);
   						new ip[32];
						GetPlayerIp(playerid,ip,sizeof(ip));
						AddBan(ip);
						Kick(playerid);
						TotalAutoBan++;
					}
			    	return 1;
				}
				new payout = (25)*(GetPVarInt(playerid, "Packages"));


				format(string, sizeof(string), "Fabrika sana bu teslimat iin 500 materyal verdi. Bundan once %d materyalin vard.", iOriginalMats);
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
				PlayerInfo[playerid][pMats] += 250;
				DeletePVar(playerid, "Packages");
				DeletePVar(playerid, "MatDeliver");
				DisablePlayerCheckpoint(playerid);
				for(new p = 0; p < sizeof(FamilyInfo); p++)
				{
					if(strcmp(Points[h][Owner], FamilyInfo[p][FamilyName], true) == 0)
					{
						FamilyInfo[p][FamilyBank] = FamilyInfo[p][FamilyBank]+(payout/3);
						//SendClientMessage(playerid, COLOR_WHITE, " Family owner recieved 33 percent of the cost.");
					}
				}
				return 1;
			}
		}
	}
	DisablePlayerCheckpoint(playerid);
	return 1;
}

forward ShowPlayerBeaconForCops(playerid);
public ShowPlayerBeaconForCops(playerid)
{
	foreach(Player, i)
	{
		if(IsACop(i))
		{
			SetPlayerMarkerForPlayer(i, playerid, COP_GREEN_COLOR);
		}
	}
	return 1;
}

forward HidePlayerBeaconForCops(playerid);
public HidePlayerBeaconForCops(playerid)
{
	foreach(Player, i)
	{
		if(IsACop(i))
		{
			SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
		}
	}
	SetPlayerToTeamColor(playerid);
	return 1;
}

forward ShowPlayerBeaconForMedics(playerid);
public ShowPlayerBeaconForMedics(playerid)
{
	foreach(Player, i)
	{
		if(IsInLSFMD(i))
		{
			SetPlayerMarkerForPlayer(i, playerid, COP_GREEN_COLOR);
		}
	}
	return 1;
}

forward HidePlayerBeaconForMedics(playerid);
public HidePlayerBeaconForMedics(playerid)
{
	foreach(Player, i)
	{
		if(IsInLSFMD(i))
		{
			SetPlayerMarkerForPlayer(i, playerid, TEAM_HIT_COLOR);
		}
	}
	SetPlayerToTeamColor(playerid);
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid) {
	#if defined TREASURE_HUNT_ENABLED
	if(iHuntPickup == pickupid && GetPVarType(playerid, "fT") == 0 && AdminDuty[playerid] != 1) {
		new string[128];
		format(string, sizeof(string), "%s adl kii bir hediye pakedi buldu.", GetPlayerNameEx(playerid));
		Log("logs/treasurehunt.log", string);
		format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) hediye pakedi buldu!", GetPlayerNameEx(playerid), playerid);
		ABroadCast(COLOR_YELLOW, string, 5);
 		AskHuntQuestion(playerid);
 		SetPVarInt(playerid, "fT", 1);
	}
	#endif
	/*if(pickupid == dildo && PlayerInfo[playerid][pGuns][10] != 10 && PlayerInfo[playerid][pConnectTime] > 1) {
		GivePlayerValidWeapon(playerid, 10, 60000);
	} Emir Deaktif*/
	return 1;
}

public OnEnterExitModShop(playerid, enterexit, interiorid) {
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid) {
	if(!(1 <= GetPlayerInterior(playerid) <= 3) && PlayerInfo[playerid][pAdmin] < 5 && !GetPVarType(playerid, "unMod")) {

		new
			szMessage[128];

		format(szMessage, sizeof(szMessage), "AdminUyars: % adl kii hile ile aracn modifiye ediyor olabilir (Eklenen:%s,%s - Ara: %s).", GetPlayerNameEx(playerid), partName(componentid), partType(GetVehicleComponentType(componentid)), GetVehicleName(vehicleid));
		ABroadCast(COLOR_YELLOW, szMessage, 2);
		Kick(playerid);
	}

	if(GetPVarType(playerid, "unMod"))
		DeletePVar(playerid, "unMod");
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

forward TazerTimer(playerid);
public TazerTimer(playerid)
{
	if(TazerTimeout[playerid] > 0)
   	{
		new string[128];
   		format(string,sizeof(string),"~n~~n~~n~~n~~n~~n~~n~~n~~r~Tazer mermisi degistiriliyor... ~w~%d", TazerTimeout[playerid]);
		GameTextForPlayer(playerid, string,1500, 3);
		TazerTimeout[playerid] -= 1;
		SetTimerEx("TazerTimer",1000,false,"d",playerid);
   	}
	return 1;
}

Float:DistanceCameraTargetToLocation(Float:CamX, Float:CamY, Float:CamZ,  Float:ObjX, Float:ObjY, Float:ObjZ,  Float:FrX, Float:FrY, Float:FrZ)
{

    new Float:TGTDistance;

    // get distance from camera to target
    TGTDistance = floatsqroot((CamX - ObjX) * (CamX - ObjX) + (CamY - ObjY) * (CamY - ObjY) + (CamZ - ObjZ) * (CamZ - ObjZ));

    new Float:tmpX, Float:tmpY, Float:tmpZ;

    tmpX = FrX * TGTDistance + CamX;
    tmpY = FrY * TGTDistance + CamY;
    tmpZ = FrZ * TGTDistance + CamZ;

    return floatsqroot((tmpX - ObjX) * (tmpX - ObjX) + (tmpY - ObjY) * (tmpY - ObjY) + (tmpZ - ObjZ) * (tmpZ - ObjZ));
}

stock IsPlayerAimingAt(playerid, Float:x, Float:y, Float:z, Float:radius)
{
    new Float:cx,Float:cy,Float:cz,Float:fx,Float:fy,Float:fz;
    GetPlayerCameraPos(playerid, cx, cy, cz);
    GetPlayerCameraFrontVector(playerid, fx, fy, fz);
    return (radius >= DistanceCameraTargetToLocation(cx, cy, cz, x, y, z, fx, fy, fz));
}

public OnPlayerInteriorChange(playerid,newinteriorid,oldinteriorid)
{
	PlayerInfo[playerid][pInt] = newinteriorid;

	if(GettingSpectated[playerid] != 999)
	{
	    new spectator = GettingSpectated[playerid];
	    if(!IsPlayerConnected(spectator))
	    {
	        GettingSpectated[playerid] = 999;
	        Spectate[spectator] = 999;
		}
		else
		{
			PlayerSpectatePlayer(spectator, playerid);
			SetPlayerInterior(spectator, GetPlayerInterior(playerid));
			SetPlayerVirtualWorld(spectator, GetPlayerVirtualWorld(playerid));
		}
	}
	Streamer_Update(playerid);
}

public OnPlayerTakeDamage(playerid, issuerid, Float: amount, weaponid) {
	if(GetPVarInt(playerid, "UsingSprunk") && amount > 4) {
		new
			szMessage[128];

		DeletePVar(playerid, "UsingSprunk");
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		format(szMessage, sizeof(szMessage), "* %s gazozunu yere brakr.", GetPlayerNameEx(playerid));
		ProxDetector(30.0, playerid, szMessage, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE, COLOR_PURPLE);
	}
    new Float:HP;
    GetPlayerHealth(playerid, HP);
 /*
    if(weaponid == 24) SetPlayerHealth(playerid, HP-1);//DesertEagle
	if(weaponid == 22) SetPlayerHealth(playerid, HP-35);//Colt45
    if(weaponid == 32) SetPlayerHealth(playerid, HP-27);//Tec9
    if(weaponid == 28) SetPlayerHealth(playerid, HP-25);//Uzi
    if(weaponid == 23) SetPlayerHealth(playerid, HP-35);//SilencedColt
    if(weaponid == 31) SetPlayerHealth(playerid, HP-50);//M4
    if(weaponid == 30) SetPlayerHealth(playerid, HP-40);//AK
    if(weaponid == 29) SetPlayerHealth(playerid, HP-30);//MP5
    if(weaponid == 34) SetPlayerHealth(playerid, HP-120);//SniperRifle
    if(weaponid == 33) SetPlayerHealth(playerid, HP-40);//CuntGun
    if(weaponid == 25) SetPlayerHealth(playerid, HP-75);//PumpShotgun
    if(weaponid == 27) SetPlayerHealth(playerid, HP-60);//Spaz12
 */
    return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float: amount, weaponid) {
	if(pTazer[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && weaponid == 23 && amount > 10) {
 		if(TazerTimeout[playerid] > 0) return 1;
		if(PlayerCuffed[damagedid] == 0 && GetPlayerState(damagedid) == PLAYER_STATE_ONFOOT && (GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(damagedid))) {
		    new
				Float:X,
				Float:Y,
				Float:Z,
				string[44 + (MAX_PLAYER_NAME * 2)];
		    GetPlayerPos(playerid, X, Y, Z);

			if(!IsPlayerInRangeOfPoint(damagedid, 18.5, X, Y, Z))
				return SendClientMessage(playerid, COLOR_GRAD2, "Tazerin o kadar uzaa etki etmez.");

			if(AdminDuty[damagedid] == 1)
				return SendClientMessage(playerid, COLOR_GRAD2, "Adminler tazerlenmez!");

			if(GetPVarInt(damagedid, "Injured") == 1)
				return SendClientMessage(playerid, COLOR_GREY, "Yaral kiileri tazerleyemezsin.");

 			format(string, sizeof(string), "* %s elektro ok silahn %s zerine dorultur ve ateler.", GetPlayerNameEx(playerid), GetPlayerNameEx(damagedid));
			ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			GameTextForPlayer(damagedid, "~r~Tazerlendin", 3500, 3);
			TogglePlayerControllable(damagedid, 0);
			ApplyAnimation(damagedid,"CRACK","crckdeth2",4.1,0,1,1,1,1,1);
   			GetPlayerPos(damagedid, X, Y, Z);
			PlayerPlaySound(damagedid, 1085, X, Y, Z);
			PlayerPlaySound(playerid, 1085, X, Y, Z);
			PlayerCuffed[damagedid] = 1;
			SetPVarInt(damagedid, "PlayerCuffed", 1);
			PlayerCuffedTime[damagedid] = 16;
			SetPVarInt(damagedid, "IsFrozen", 1);
			TazerTimeout[playerid] = 4;
			SetTimerEx("TazerTimer",1000,false,"d",playerid);
			GameTextForPlayer(playerid, "~n~~n~~n~~n~~n~~n~~n~~n~~r~Tazer mermisi degistiriliyor... ~w~5", 1500,3);
			return 1;
		}
	}
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys) {
    if(IsPlayerNPC(playerid))
		return 1;

	if (((newkeys & KEY_WALK && newkeys & KEY_UP) || (newkeys & KEY_WALK && newkeys & KEY_DOWN) || (newkeys & KEY_WALK && newkeys & KEY_LEFT) || (newkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((oldkeys & KEY_WALK && newkeys & KEY_UP) || (oldkeys & KEY_WALK && newkeys & KEY_DOWN) || (oldkeys & KEY_WALK && newkeys & KEY_LEFT) || (oldkeys & KEY_WALK && newkeys & KEY_RIGHT))
		|| ((newkeys & KEY_WALK && oldkeys & KEY_UP) || (newkeys & KEY_WALK && oldkeys & KEY_DOWN) || (newkeys & KEY_WALK && oldkeys & KEY_LEFT) || (newkeys & KEY_WALK && oldkeys & KEY_RIGHT))
		&& GetPlayerState(playerid) == PLAYER_STATE_ONFOOT) {
			walktime[playerid] = SetTimerEx("WalkAnim",200,0,"d",playerid);
	}
	if(newkeys == KEY_SUBMISSION)
	{
	new vehicleid = GetPlayerVehicleID(playerid);
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 0;
	SetVehicleLights(vehicleid, playerid);
	}
	if(newkeys & KEY_NO && IsPlayerInAnyVehicle(playerid))
	{
		new vehicleid = GetPlayerVehicleID(playerid), string[128];
	if(GetVehicleModel(vehicleid) == 481 || GetVehicleModel(vehicleid) == 509 || GetVehicleModel(vehicleid) == 510) return 1;
	if(!IsPlayerInAnyVehicle(playerid)) return SendClientMessage(playerid, COLOR_WHITE, "Arata deilsiniz.");
	if(GetPlayerState(playerid) != PLAYER_STATE_DRIVER) return SendClientMessage(playerid, COLOR_WHITE, "Bu aracn ofr deilsiniz!");
	GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
	if(engine == VEHICLE_PARAMS_OFF || engine == VEHICLE_PARAMS_UNSET) {
	    if(Fuel[vehicleid] <= 0.0) return SendClientMessageEx(playerid, COLOR_WHITE, "Bu aracn benzini bitmi, altramazsnz!");
		SetTimerEx("AracMotor", 3000, false, "dd", playerid, vehicleid);
	    format(string, sizeof string, "* %s anahtar kontaa takp evirir ve motorun almasn bekler.", GetPlayerNameEx(playerid));
	}
	else {
	    SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
	    format(string, sizeof string, "* %s aracn motoru kapatt.", GetPlayerNameEx(playerid));
	    engine = 0;
		SetPVarInt(playerid, "fuelonoff", 0);
  		HideProgressBarForPlayer(playerid, FuelBar[playerid]);
		DestroyProgressBar(FuelBar[playerid]);
		FuelBar[playerid] = INVALID_BAR_ID;
  		engine = 0;
	}
	ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	}
	if((newkeys & KEY_FIRE) && GetPVarInt(playerid, "Hiz Radari") == 1 && GetPlayerState(playerid) == PLAYER_STATE_ONFOOT)
	{
	    if(GetPVarInt(playerid, "RadarTimeout") == 0)
	    {
			if(GetPlayerWeapon(playerid) == 43)
			{
			    new Float:x,Float:y,Float:z;
				foreach(Player, i)
				{
				    if(IsPlayerStreamedIn(i, playerid))
				    {
					    GetPlayerPos(i,x,y,z);
					    if(IsPlayerAimingAt(playerid,x,y,z,10))
					    {
							new string[68];
							format(string, sizeof(string), "~n~~n~~n~~n~~n~~n~~b~Plaka: ~w~%d~n~~b~Hiz: ~w~%.0f MPH", GetPlayerVehicleID(i), fVehSpeed[i]);
							GameTextForPlayer(playerid, string,3500, 3);
							format(string, sizeof(string), "Plaka: %d. Hiz: %.0f MPH", GetPlayerVehicleID(i), fVehSpeed[i]);
							SendClientMessage(playerid, COLOR_GRAD4, string);
							SetPVarInt(playerid, "RadarTimeout", 1);
							SetTimerEx("RadarCooldown", 3000, 0, "i", playerid);
							return 1;
						}
					}
			    }
			}
		}
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_BEER && (newkeys & KEY_FIRE))
	{
	    if(GetPVarInt(playerid, "DrinkCooledDown") == 1)
	    {
			new Float: cHealth;
			GetPlayerHealth(playerid, cHealth);
		    if((cHealth + 5) >= 100) {
				SetPlayerHealth(playerid, 100);
		        SendClientMessage(playerid, COLOR_GREY, "* meyi brakp elindekini frlattn.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    }
		    else if(cHealth <= 95) {
                SetPlayerHealth(playerid, cHealth+5);
			}
		    else {
		        SendClientMessage(playerid, COLOR_GREY, "* meyi brakp elindekini frlattn.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    }
			DeletePVar(playerid, "DrinkCooledDown");
		    SetTimerEx("DrinkCooldown", 2500, 0, "i", playerid);
			return 1;
		}
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_WINE && (newkeys & KEY_FIRE))
	{
	    if(GetPVarInt(playerid, "DrinkCooledDown") == 1)
	    {
			new Float: cHealth;
			GetPlayerHealth(playerid, cHealth);
		    if((cHealth + 8) >= 100) {
				SetPlayerHealth(playerid, 100);
		        SendClientMessage(playerid, COLOR_GREY, "* meyi brakp elindekini frlattn.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    } else if(cHealth <= 92) {
				SetPlayerHealth(playerid, cHealth+8);
		    } else {
		        SendClientMessage(playerid, COLOR_GREY, "* meyi brakp elindekini frlattn.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    }
			DeletePVar(playerid, "DrinkCooledDown");
		    SetTimerEx("DrinkCooldown", 2500, 0, "i", playerid);
			return 1;
		}
	}

	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_DRINK_SPRUNK && (newkeys & KEY_FIRE))
	{
	    if(GetPVarInt(playerid, "DrinkCooledDown") == 1)
	    {
			new Float: cHealth;
			GetPlayerHealth(playerid, cHealth);
			if((cHealth + 2) >= 100) {
				SetPlayerHealth(playerid, 100);
		        SendClientMessage(playerid, COLOR_GREY, "* meyi brakp elindekini frlattn.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    } else if(cHealth <= 98) {
				SetPlayerHealth(playerid, cHealth+2);
		    } else {
		        SendClientMessage(playerid, COLOR_GREY, "* meyi brakp elindekini frlattn.");
		        SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		    }
		    DeletePVar(playerid, "DrinkCooledDown");
		    SetTimerEx("DrinkCooldown", 2500, 0, "i", playerid);
			return 1;
		}
	}
	if(IsKeyJustDown(KEY_SECONDARY_ATTACK, newkeys, oldkeys))
	{
		if(GetPVarInt(playerid, "UsingSprunk"))
		{
			DeletePVar(playerid, "UsingSprunk");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			return 1;
		}
	}
	if(IsKeyJustDown(KEY_FIRE, newkeys, oldkeys))
 	{
  		if(PlayerInfo[playerid][pC4Used] == 1)
 	    {
			if(GoChase[playerid] < 999)
			{
			    if(IsPlayerInRangeOfPoint(GoChase[playerid], 12.0, GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z")))
			    {
			        if(PlayerInfo[GoChase[playerid]][pHeadValue] >= 1)
					{
						if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4)
						{
							new
								string[128],
								name2[MAX_PLAYER_NAME],
								name[MAX_PLAYER_NAME];

							new takemoney = PlayerInfo[GoChase[playerid]][pHeadValue] / 4 * 2;
							name = GetPlayerNameEx(GoChase[playerid]);
							GivePlayerCash(playerid, takemoney);
							GivePlayerCash(GoChase[playerid], -takemoney);
							format(string,sizeof(string),"Hitman %, %s adl kiinin zerindeki eylemi baaryla tamamlad ve $%d kazand",GetPlayerNameEx(playerid),GetPlayerNameEx(GoChase[playerid]),PlayerInfo[GoChase[playerid]][pHeadValue] / 4 * 2);
							SendFamilyMessage(4, COLOR_YELLOW, string);
							format(string,sizeof(string),"Hitman tarafndan ciddi bir ekilde yaralandn ve $%d kaybettin!.",takemoney);
							ResetPlayerWeaponsEx(GoChase[playerid]);
						    // SpawnPlayer(GoChase[playerid]);
							SendClientMessage(GoChase[playerid], COLOR_YELLOW, string);

							foreach(Player, i) {
				    			name2 = GetPlayerNameEx(i);
			    				if(!strcmp(PlayerInfo[GoChase[playerid]][pContractBy], name2, true)) {
    								if(!IsPlayerStreamedIn(i, GoChase[playerid])) {
     									format(string, sizeof(string), "SMS: (%s) zerindeki eylem baaryla tamamland. Gnderen: OZELMESAJ (555)", name);
										SendClientMessage(i, COLOR_YELLOW, string);
									}
				    			}
							}

							PlayerInfo[GoChase[playerid]][pHeadValue] = 0;
							strcpy(PlayerInfo[GoChase[playerid]][pContractBy], "Nobody", 64);
							strcpy(PlayerInfo[GoChase[playerid]][pContractDetail], "Yok", 64);
							PlayerInfo[playerid][pCHits] += 1;
							SetPlayerHealth(GoChase[playerid], 0.0);
							// KillEMSQueue(GoChase[playerid]);
							GotHit[GoChase[playerid]] = 0;
							GetChased[GoChase[playerid]] = 999;
							GoChase[playerid] = 999;
						}
					}
			    }
			}
 	        PlayerInfo[playerid][pC4Used] = 0;
			CreateExplosion(GetPVarFloat(playerid, "DYN_C4_FLOAT_X"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Y"), GetPVarFloat(playerid, "DYN_C4_FLOAT_Z"), 7, 8);
			PickUpC4(playerid);
			SendClientMessage(playerid, COLOR_YELLOW, "Bomba patladld!");
			PlayerInfo[playerid][pC4Used] = 0;
			return 1;
 	    }
 	    if(GetPVarInt(playerid, "MovingStretcher") != -1)
 	    {
 	        KillTimer(GetPVarInt(playerid, "TickEMSMove"));
		    MoveEMS(playerid);
			return 1;
 	    }
		if(GetPVarInt(playerid, "editingcdvehpos"))
		{
			TogglePlayerControllable(playerid, false);
		    ShowPlayerDialogEx(playerid,DIALOG_CDEDITPARK,DIALOG_STYLE_MSGBOX,"Uyar:","Yeni istediin pozisyon bu mu?","Tamam","Iptal");
		}
		if(GetPVarInt(playerid, "editingcdvehnew"))
		{
            TogglePlayerControllable(playerid, false);
	        ShowPlayerDialogEx(playerid,DIALOG_CDEDITPARK,DIALOG_STYLE_MSGBOX,"Uyar:","Yeni istediin pozisyon bu mu?","Tamam","Iptal");
		}

		new Float:health;
 		GetPlayerHealth(playerid, health);
		if(GetPVarInt(playerid, "UsingSprunk"))
		{
		    new hpint = floatround(health, floatround_round);
		    if(hpint >= 100)
			{
  				SendClientMessage(playerid, COLOR_GREY, "Zaten cann full.");
	 			return 1;
	   		}
	   		else
	   		{
				GetPlayerHealth(playerid, health);
				SetPlayerHealth(playerid, health+1.0);
			}
		}
	}
    if(IsKeyJustDown(KEY_YES, newkeys, oldkeys)) {
        if(GetPVarInt(playerid, "PBM") > 0) {
            SendClientMessage(playerid, COLOR_WHITE, "Arenadayken bunu yapamazsn.");
            return 1;
        }
        if(PlayerCuffed[playerid] >= 1) {
            SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
            return 1;
        }
        if(PlayerInfo[playerid][pJailed] > 0) {
            SendClientMessage(playerid, COLOR_WHITE, "u an bunu yapamazsn.");
            return 1;
        }

        new
			string[128];

        for(new i = 0; i < sizeof(DDoorsInfo); i++) {
            if(IsPlayerInRangeOfPoint(playerid,3.0,DDoorsInfo[i][ddExteriorX], DDoorsInfo[i][ddExteriorY], DDoorsInfo[i][ddExteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddExteriorVW]) {
                if(DDoorsInfo[i][ddVIP] > 0 && PlayerInfo[playerid][pDonator] < DDoorsInfo[i][ddVIP])
                    return SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Yeterli VIP leveline sahip deilsin.");


                if(DDoorsInfo[i][ddGang] > 0 && PlayerInfo[playerid][pGang] != DDoorsInfo[i][ddGang])
                	return SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Bu kap bir ete/aileye zeldir.");

                if(DDoorsInfo[i][ddFaction] > 0 && DDoorsInfo[i][ddFaction] != 1337) {
					if(PlayerInfo[playerid][pFaction] != DDoorsInfo[i][ddFaction])
					{
						SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Bu kap oluumlara zeldir.");
						return 1;
					}
				}

				if(DDoorsInfo[i][ddFaction] == 1337) {
					if(!IsACop(playerid) || PlayerInfo[playerid][pFaction] != 5)
					{
						SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Bu kap oluumlara zeldir.");
						return 1;
					}
				}

                if(DDoorsInfo[i][ddAdmin] > 0 && PlayerInfo[playerid][pAdmin] < DDoorsInfo[i][ddAdmin])
                    return SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin. Yeterli admin leveline sahip deilsin.");

                if(DDoorsInfo[i][ddWanted] > 0 && PlayerInfo[playerid][pWantedLevel] != 0)
                    return SendClientMessage(playerid, COLOR_GRAD2, "eri giremezsin, bu kap arananlar listesindekiler iin yasakl.");

                if(DDoorsInfo[i][ddLocked] == 1)
                    return SendClientMessage(playerid, COLOR_GRAD2, "Bu kap u anda kilitli.");

                format(string, sizeof(string), "* %s, %s adl yere girdi.", GetPlayerNameEx(playerid), DDoorsInfo[i][ddDescription]);
                ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

                SetPlayerInterior(playerid,DDoorsInfo[i][ddInteriorInt]);
                PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddInteriorInt];
                PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddInteriorVW];
                SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddInteriorVW]);
                if(DDoorsInfo[i][ddCustomInterior]) {
                    LoadObjectsForPlayer(playerid);
                }
                if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                    SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                    SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorA]);
                    SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorVW]);
                    LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddInteriorInt]);
                }
                else {
                    SetPlayerPos(playerid,DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
                    SetPlayerFacingAngle(playerid,DDoorsInfo[i][ddInteriorA]);
                    SetCameraBehindPlayer(playerid);
                }
				foreach(Player, x)
				{
                	if(IsABoomboxNearby(DDoorsInfo[i][ddInteriorX] ,DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ], x) < 150.0 && DDoorsInfo[i][ddInteriorVW] == BoomboxInfo[x][bbVW] && DDoorsInfo[i][ddInteriorInt] == BoomboxInfo[x][bbInt])
					{
						PlayAudioStreamForPlayer(playerid, VehicleRadioListing[BoomboxInfo[x][bbStation]-1][radiourl], BoomboxInfo[x][bbPosX], BoomboxInfo[x][bbPosY], BoomboxInfo[x][bbPosZ], 50.0, 1);
					}
				}
                return Streamer_UpdateEx(playerid, DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
            }
        }
        for(new i = 0; i < sizeof(HouseInfo); i++) {
            if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hExteriorX], HouseInfo[i][hExteriorY], HouseInfo[i][hExteriorZ])) {
                if(HouseKey[playerid] == i || PlayerInfo[playerid][pHouse] == i || PlayerInfo[playerid][pHouse2] == i || HouseInfo[i][hLock] == 0 || PlayerInfo[playerid][pRenting] == i || strcmp(HouseInfo[i][hOwner], PlayerInfo[playerid][pMarriedTo],true) == 0) {
                    if(PlayerInfo[playerid][pHouse] == i || PlayerInfo[playerid][pHouse2] == i) {
                        format(string, sizeof(string), "* %s adl kii kendi evine girdi.", GetPlayerNameEx(playerid));
                        ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                    }
                    else {
                        if(HouseInfo[i][hOwned] == 0) {
							format(string, sizeof(string), "* %s adl kii eve girdi.", GetPlayerNameEx(playerid));
							ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						} else {
							format(string, sizeof(string), "* %s, %s adl kiinin evine girdi.", GetPlayerNameEx(playerid), HouseInfo[i][hOwner]);
							ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
						}
                    }

                    SetPlayerInterior(playerid,HouseInfo[i][hHInteriorWorld]);
                    PlayerInfo[playerid][pInt] = HouseInfo[i][hHInteriorWorld];
                    PlayerInfo[playerid][pVW] = i+60000;
                    SetPlayerVirtualWorld(playerid, i+60000);
                    if(HouseInfo[i][hCustomInterior] == 1) {
                        LoadObjectsForPlayer(playerid);
                    }
                    SetPlayerPos(playerid,HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                    SetPlayerFacingAngle(playerid,HouseInfo[i][hInteriorR]);
                    SetCameraBehindPlayer(playerid);
                    if(PlayerInfo[playerid][pHouse] == i || PlayerInfo[playerid][pHouse2] == i) {
                        GameTextForPlayer(playerid, "~w~Eve Hosgeldin", 5000, 1);
                    }
					foreach(Player, x)
					{
                		if(IsABoomboxNearby(HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ], x) < 150.0 && i+60000 == BoomboxInfo[x][bbVW] && HouseInfo[i][hHInteriorWorld] == BoomboxInfo[x][bbInt])
						{
							PlayAudioStreamForPlayer(playerid, VehicleRadioListing[BoomboxInfo[x][bbStation]-1][radiourl], BoomboxInfo[x][bbPosX], BoomboxInfo[x][bbPosY], BoomboxInfo[x][bbPosZ], 50.0, 1);
						}
					}
                    Streamer_UpdateEx(playerid, HouseInfo[i][hInteriorX],HouseInfo[i][hInteriorY],HouseInfo[i][hInteriorZ]);
                }
                else {
                    GameTextForPlayer(playerid, "~r~Kitlendi", 5000, 1);
                }
                return 1;
            }
        }

		// Hitman HQ
        if(IsPlayerInRangeOfPoint(playerid, 2.0,  1938.545898, 165.629531, 37.281250)) {
            if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4) {
                SetPlayerVirtualWorld(playerid, 666420);
                PlayerInfo[playerid][pVW] = 666420;
                SetPlayerInterior(playerid, 42);
                PlayerInfo[playerid][pInt] = 42;
                SetPlayerPos(playerid, 1277.019165, -758.428771, 5080.750000);
                SetPlayerFacingAngle(playerid, 358.16);
                SetCameraBehindPlayer(playerid);

                LoadObjectsForPlayer(playerid);
                SendClientMessage(playerid, COLOR_WHITE, "Mhimmat odasnda /siparis yazarak silah alabilirsin.");
                return 1;
            }
        }

		// The Lubu Gentlemen's Club
        else if(IsPlayerInRangeOfPoint(playerid, 3.0,  511.817230, -1510.971679, 14.566996)) {
            format(string, sizeof(string), "* %s Lubu Beyler Kulbne girdi.", GetPlayerNameEx(playerid));
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerVirtualWorld(playerid, 373737);
            PlayerInfo[playerid][pVW] = 373737;
            SetPlayerInterior(playerid, 37);
            PlayerInfo[playerid][pInt] = 37;
            SetPlayerPos(playerid, -1077.946533, 613.206665, 1116.507812);
            SetPlayerFacingAngle(playerid, 92.42);
            SetCameraBehindPlayer(playerid);

            LoadObjectsForPlayer(playerid);

            PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=242774", -1087.677978, 615.239807, 1116.507812, 40.0, 1);
            return 1;
        }

		// The Tableau Club
        else if(IsPlayerInRangeOfPoint(playerid, 3.0,  561.802795, -1506.722412, 14.548986)) {
            format(string, sizeof(string), "* %s Scylla Kulbne girdi.", GetPlayerNameEx(playerid));
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerVirtualWorld(playerid, 363636);
            PlayerInfo[playerid][pVW] = 363636;
            SetPlayerInterior(playerid, 36);
            PlayerInfo[playerid][pInt] = 36;
            SetPlayerPos(playerid, 308.045654, 1053.886840, 1098.540039);
            SetPlayerFacingAngle(playerid, 267.57);
            SetCameraBehindPlayer(playerid);

            LoadObjectsForPlayer(playerid);

            PlayAudioStreamForPlayer(playerid, "http://188.132.234.206:8000/listen.pls", 321.139465, 1034.947753, 1098.914062, 120.0, 1);
            return 1;
        }

		// The Tableau Club (VIP ROOM)
        else if(IsPlayerInRangeOfPoint(playerid, 3.0,  307.904296, 1025.602294, 1098.540039)) {
            if(GetPlayerCash(playerid) >= 100) {
                format(string, sizeof(string), "* %s Scylla VIP odasna girdi.", GetPlayerNameEx(playerid));
                ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

                GivePlayerCash(playerid, -100);
                GameTextForPlayer(playerid, "~r~-$100", 3000, 1);

                SetPlayerVirtualWorld(playerid, 363636);
                PlayerInfo[playerid][pVW] = 363636;
                SetPlayerInterior(playerid, 36);
                PlayerInfo[playerid][pInt] = 36;
                SetPlayerPos(playerid, 293.066436, 1029.785278, 1104.560058);
                SetPlayerFacingAngle(playerid, 352.47);
                SetCameraBehindPlayer(playerid);
                return 1;
            }
            else return SendClientMessage(playerid, COLOR_GREY, "Bunun iin paran yok.");
        }

		// Santa Maria Surfer's Lounge
        else if(IsPlayerInRangeOfPoint(playerid, 3.0,  387.958374, -1870.688110, 7.835937)) {
            format(string, sizeof(string), "* %s Santa Maria Kumsalndaki srf salonuna girdi.", GetPlayerNameEx(playerid));
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerVirtualWorld(playerid, 353535);
            PlayerInfo[playerid][pVW] = 353535;
            SetPlayerInterior(playerid, 35);
            PlayerInfo[playerid][pInt] = 35;
            SetPlayerPos(playerid, 271.742034, 1074.419677, 5096.750000);
            SetPlayerFacingAngle(playerid, 86.54);
            SetCameraBehindPlayer(playerid);

            LoadObjectsForPlayer(playerid);

            PlayAudioStreamForPlayer(playerid, "http://yp.shoutcast.com/sbin/tunein-station.pls?id=21585", 271.742034, 1074.419677, 5096.750000, 120.0, 1);
            return 1;
        }

        new vehicleid = GetPlayerVehicleID(playerid);
        new closestcar = GetClosestCar(playerid, vehicleid);
        if(IsPlayerInRangeOfVehicle(playerid, closestcar, 6.0) && GetVehicleModel(closestcar) == 519) {
            if(VehicleStatus{closestcar}
            == 1) return SendClientMessage(playerid, COLOR_WHITE, "Shamal model uaa binme iznin yok nki ok hasarl!");
            format(string, sizeof(string), "* %s adl kii Shamal model uaa yolcu olarak bindi.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
            SetPlayerPos(playerid, 2.509036, 23.118730, 1199.593750);
            SetPlayerFacingAngle(playerid, 82.14);
            SetCameraBehindPlayer(playerid);
            PlayerInfo[playerid][pVW] = closestcar;
            SetPlayerVirtualWorld(playerid, closestcar);
            PlayerInfo[playerid][pInt] = 1;
            SetPlayerInterior(playerid, 1);
            InsideShamal[playerid] = closestcar;
            SendClientMessage(playerid, COLOR_WHITE, "Uan kapsndan dar kmak iin /cik yaz. /camdanbak komutu ile dar bakabilirsin.");

      		foreach(Player, x)
			{
 				if(IsABoomboxNearby(2.509036, 23.118730, 1199.593750, x) < 150.0 && closestcar == BoomboxInfo[x][bbVW] && BoomboxInfo[x][bbInt] == 1)
				{
					PlayAudioStreamForPlayer(playerid, VehicleRadioListing[BoomboxInfo[x][bbStation]-1][radiourl], BoomboxInfo[x][bbPosX], BoomboxInfo[x][bbPosY], BoomboxInfo[x][bbPosZ], 50.0, 1);
				}
			}
            return 1;
        }

        for(new i = 0; i <  sizeof(DDoorsInfo); i++) {
            if(IsPlayerInRangeOfPoint(playerid,3,DDoorsInfo[i][ddInteriorX], DDoorsInfo[i][ddInteriorY], DDoorsInfo[i][ddInteriorZ]) && PlayerInfo[playerid][pVW] == DDoorsInfo[i][ddInteriorVW]) {
                format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
                ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

                SetPlayerInterior(playerid,DDoorsInfo[i][ddExteriorInt]);
                PlayerInfo[playerid][pInt] = DDoorsInfo[i][ddExteriorInt];
                SetPlayerVirtualWorld(playerid, DDoorsInfo[i][ddExteriorVW]);
                PlayerInfo[playerid][pVW] = DDoorsInfo[i][ddExteriorVW];
                if(DDoorsInfo[i][ddCustomExterior]) {
                    LoadObjectsForPlayer(playerid);
                }
                if(DDoorsInfo[i][ddVehicleAble] > 0 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER) {
                    SetVehiclePos(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                    SetVehicleZAngle(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorA]);
                    SetVehicleVirtualWorld(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorVW]);
                    LinkVehicleToInterior(GetPlayerVehicleID(playerid), DDoorsInfo[i][ddExteriorInt]);
                }
                else {
                    SetPlayerPos(playerid,DDoorsInfo[i][ddExteriorX],DDoorsInfo[i][ddExteriorY],DDoorsInfo[i][ddExteriorZ]);
                    SetPlayerFacingAngle(playerid, DDoorsInfo[i][ddExteriorA]);
                    SetCameraBehindPlayer(playerid);
                }
                return Streamer_UpdateEx(playerid, DDoorsInfo[i][ddInteriorX],DDoorsInfo[i][ddInteriorY],DDoorsInfo[i][ddInteriorZ]);
            }
        }
        for(new i = 0; i <  sizeof(HouseInfo); i++) {
            if(IsPlayerInRangeOfPoint(playerid,3,HouseInfo[i][hInteriorX], HouseInfo[i][hInteriorY], HouseInfo[i][hInteriorZ]) && (GetPlayerVirtualWorld(playerid) == i+60000)) {
                format(string, sizeof(string), "* %s evden dar kt.", GetPlayerNameEx(playerid));
                ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
                SetPlayerInterior(playerid,0);
                PlayerInfo[playerid][pInt] = 0;
                if(HouseInfo[i][hCustomExterior]) {
					LoadObjectsForPlayer(playerid);
                }
                SetPlayerPos(playerid,HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
                SetPlayerFacingAngle(playerid, HouseInfo[i][hExteriorR]);
                SetCameraBehindPlayer(playerid);
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pVW] = 0;
                return Streamer_UpdateEx(playerid, HouseInfo[i][hExteriorX],HouseInfo[i][hExteriorY],HouseInfo[i][hExteriorZ]);
            }
        }

		// Hitman HQ
        if(IsPlayerInRangeOfPoint(playerid, 2.0, 1277.019165, -758.428771, 5080.750000) && (GetPlayerVirtualWorld(playerid) == 666420)) {
            if(PlayerInfo[playerid][pFaction] == 4 || PlayerInfo[playerid][pLeader] == 4) {
                SetPlayerVirtualWorld(playerid, 0);
                PlayerInfo[playerid][pVW] = 0;
                SetPlayerInterior(playerid, 0);
                PlayerInfo[playerid][pInt] = 0;
                SetPlayerPos(playerid, 1938.545898, 165.629531, 37.281250);
                SetPlayerFacingAngle(playerid, 338.54);
                SetCameraBehindPlayer(playerid);
                return 1;
            }
        }

		// The Lubu Gentlemen's Club
        else if(IsPlayerInRangeOfPoint(playerid, 3.0, -1077.946533, 613.206665, 1116.507812) && (GetPlayerVirtualWorld(playerid) == 373737)) {
            format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid, 511.817230, -1510.971679, 14.566996);
            SetPlayerFacingAngle(playerid, 272.11);
            SetCameraBehindPlayer(playerid);

            StopAudioStreamForPlayer(playerid);
            return 1;
        }

		// The Tableau Club
        else if(IsPlayerInRangeOfPoint(playerid, 3.0, 308.045654, 1053.886840, 1098.540039) && (GetPlayerVirtualWorld(playerid) == 363636)) {
            format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid, 561.802795, -1506.722412, 14.548986);
            SetPlayerFacingAngle(playerid, 86.78);
            SetCameraBehindPlayer(playerid);

            StopAudioStreamForPlayer(playerid);
            return 1;
        }
		// The Tableau Club (VIP ROOM)
        else if(IsPlayerInRangeOfPoint(playerid, 3.0, 293.066436, 1029.785278, 1104.560058) && (GetPlayerVirtualWorld(playerid) == 363636)) {
            SetPlayerVirtualWorld(playerid, 363636);
            PlayerInfo[playerid][pVW] = 363636;
            SetPlayerInterior(playerid, 36);
            PlayerInfo[playerid][pInt] = 36;
            SetPlayerPos(playerid, 307.904296, 1025.602294, 1098.540039);
            SetPlayerFacingAngle(playerid, 264.06);
            SetCameraBehindPlayer(playerid);
            return 1;
        }
		// Santa Maria Surfer's Lounge
        else if(IsPlayerInRangeOfPoint(playerid, 3.0, 271.742034, 1074.419677, 5096.750000) && (GetPlayerVirtualWorld(playerid) == 353535)) {
            format(string, sizeof(string), "* %s binadan dar kt.", GetPlayerNameEx(playerid));
            ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pVW] = 0;
            SetPlayerInterior(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerPos(playerid, 387.958374, -1870.688110, 7.835937);
            SetPlayerFacingAngle(playerid, 89.99);
            SetCameraBehindPlayer(playerid);

            StopAudioStreamForPlayer(playerid);
            return 1;
        }
		// Shamal
        else if(InsideShamal[playerid] != INVALID_VEHICLE_ID && IsPlayerInRangeOfPoint(playerid,3,2.509036, 23.118730, 1199.593750)) {
            format(string, sizeof(string), "* %s adl kii Shamal model uaktan dar kt.", GetPlayerNameEx(playerid));
            ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

            if(InsideShamal[playerid] == INVALID_VEHICLE_ID || GetVehicleModel(InsideShamal[playerid]) != 519) {
                PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
                GivePlayerValidWeapon(playerid, 46, 60000);
                SetPlayerPos(playerid, 0.000000, 0.000000, 420.000000);
            }
            else {
                new Float:X, Float:Y, Float:Z;
                GetVehiclePos(InsideShamal[playerid], X, Y, Z);
                SetPlayerPos(playerid, X-4, Y-2.3, Z);

                new Float:XB, Float:YB, Float:ZB;
                GetVehiclePos(InsideShamal[playerid], XB, YB, ZB);
                if(ZB > 50.0) {
                    PlayerInfo[playerid][pAGuns][GetWeaponSlot(46)] = 46;
                    GivePlayerValidWeapon(playerid, 46, 60000);
                }
            }

            PlayerInfo[playerid][pVW] = 0;
            SetPlayerVirtualWorld(playerid, 0);
            PlayerInfo[playerid][pInt] = 0;
            SetPlayerInterior(playerid, 0);
            InsideShamal[playerid] = INVALID_VEHICLE_ID;
        }
    }
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	return 1;
}

OnPlayerChangeWeapon(playerid, newweapon)
{
    if(pTazer[playerid] == 1) SetPlayerArmedWeapon(playerid,23);

	if(PlayerInfo[playerid][pAdmin] < 5)
	{
		if(GetPVarInt(playerid, "EventToken") != 0) return 1;

		if(PlayerInfo[playerid][pGuns][1] != 2 && PlayerInfo[playerid][pAGuns][1] != 2 && GetPlayerWeapon(playerid) == 2)
		{
			//ExecuteHackerAction(playerid, newweapon);
		}
		else if(PlayerInfo[playerid][pGuns][1] != 3 && PlayerInfo[playerid][pAGuns][1] != 3 && GetPlayerWeapon(playerid) == 3)
		{
			ExecuteHackerAction(playerid, newweapon);
		}
		else if(PlayerInfo[playerid][pGuns][1] != 4 && PlayerInfo[playerid][pAGuns][1] != 4 && GetPlayerWeapon(playerid) == 4)
		{
  			new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
   			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
   			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
		}
		else if(PlayerInfo[playerid][pGuns][1] != 5 && PlayerInfo[playerid][pAGuns][1] != 5 && GetPlayerWeapon(playerid) == 5)
		{
			ExecuteHackerAction(playerid, newweapon);
		}
        else if(PlayerInfo[playerid][pGuns][1] != 6 && PlayerInfo[playerid][pAGuns][1] != 6 && GetPlayerWeapon(playerid) == 6)
		{
			ExecuteHackerAction(playerid, newweapon);
		}
		else if(PlayerInfo[playerid][pGuns][1] != 7 && PlayerInfo[playerid][pAGuns][1] != 7 && GetPlayerWeapon(playerid) == 7)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][1] != 8 && PlayerInfo[playerid][pAGuns][1] != 8 && GetPlayerWeapon(playerid) == 8)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][1] != 9 && PlayerInfo[playerid][pAGuns][1] != 9 && GetPlayerWeapon(playerid) == 9)
        {
  			new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
   			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
        }
        else if(PlayerInfo[playerid][pGuns][2] != 22 && PlayerInfo[playerid][pAGuns][2] != 22 && GetPlayerWeapon(playerid) == 22)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
		    {
			    new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
	            format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][2] != 23 && PlayerInfo[playerid][pAGuns][2] != 23 && GetPlayerWeapon(playerid) == 23)
        {
       		if(PlayerInfo[playerid][pConnectTime] < 2)
			{
   				new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
  			ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][2] != 24 && PlayerInfo[playerid][pAGuns][2] != 24 && GetPlayerWeapon(playerid) == 24)
        {
        	if(PlayerInfo[playerid][pConnectTime] < 2)
	    	{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s) (%d-%d-%d)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
  			ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][3] != 25 && PlayerInfo[playerid][pAGuns][3] != 25 && GetPlayerWeapon(playerid) == 25)
        {
       		if(PlayerInfo[playerid][pConnectTime] < 2)
	    	{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
  			ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][3] != 26 && PlayerInfo[playerid][pAGuns][3] != 26 && GetPlayerWeapon(playerid) == 26)
        {
    		new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
        }
        else if(PlayerInfo[playerid][pGuns][3] != 27 && PlayerInfo[playerid][pAGuns][3] != 27 && GetPlayerWeapon(playerid) == 27)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][4] != 28 && PlayerInfo[playerid][pAGuns][4] != 28 && GetPlayerWeapon(playerid) == 28)
        {
  			new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
   			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
        }
        else if(PlayerInfo[playerid][pGuns][4] != 29 && PlayerInfo[playerid][pAGuns][4] != 29 && GetPlayerWeapon(playerid) == 29)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][5] != 30 && PlayerInfo[playerid][pAGuns][5] != 30 && GetPlayerWeapon(playerid) == 30)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][5] != 31 && PlayerInfo[playerid][pAGuns][5] != 31 && GetPlayerWeapon(playerid) == 31)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][4] != 32 && PlayerInfo[playerid][pAGuns][4] != 32 && GetPlayerWeapon(playerid) == 32)
        {
  			new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
        }
        else if(PlayerInfo[playerid][pGuns][6] != 33 && PlayerInfo[playerid][pAGuns][6] != 33 && GetPlayerWeapon(playerid) == 33)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][6] != 34 && PlayerInfo[playerid][pAGuns][6] != 34 && GetPlayerWeapon(playerid) == 34)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][7] != 35 && PlayerInfo[playerid][pAGuns][7] != 35 && GetPlayerWeapon(playerid) == 35)
        {
            new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
            format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][7] != 36 && PlayerInfo[playerid][pAGuns][7] != 36 && GetPlayerWeapon(playerid) == 36)
        {
            new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
            new String[128];
			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][7] != 37 && PlayerInfo[playerid][pAGuns][7] != 37 && GetPlayerWeapon(playerid) == 37)
        {
			new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
            format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][7] != 38 && PlayerInfo[playerid][pAGuns][7] != 38 && GetPlayerWeapon(playerid) == 38)
        {
            new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
            new String[128];
			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][8] != 16 && PlayerInfo[playerid][pAGuns][8] != 16 && GetPlayerWeapon(playerid) == 16)
        {
            new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
            format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][8] != 17 && PlayerInfo[playerid][pAGuns][8] != 17 && GetPlayerWeapon(playerid) == 17)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][8] != 18 && PlayerInfo[playerid][pAGuns][8] != 18 && GetPlayerWeapon(playerid) == 18)
        {
            new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
            format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][8] != 39 && PlayerInfo[playerid][pAGuns][8] != 39 && GetPlayerWeapon(playerid) == 39)
        {
            new WeaponName[32];
			GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
			new String[128];
            format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
			SendClientMessageToAllEx(COLOR_LIGHTRED, String);
			SetPVarInt(playerid, "_HACK_WARNINGS", 0);
			//RemovePlayerWeapon(playerid, weaponid);
			PlayerInfo[playerid][pBanned] = 3;
			new playerip[32];
			GetPlayerIp(playerid, playerip, sizeof(playerip));
			format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
			PlayerInfo[playerid][pBanned] = 3;
			Log("logs/ban.log", String);
			new ip[32];
			GetPlayerIp(playerid,ip,sizeof(ip));
			AddBan(ip);
			Kick(playerid);
			TotalAutoBan++;
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][9] != 41 && PlayerInfo[playerid][pAGuns][9] != 41 && GetPlayerWeapon(playerid) == 41)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][9] != 42 && PlayerInfo[playerid][pAGuns][9] != 42 && GetPlayerWeapon(playerid) == 42)
        {
            if(PlayerInfo[playerid][pConnectTime] < 2)
    		{
		    	new WeaponName[32];
				GetWeaponName(newweapon, WeaponName, sizeof(WeaponName));
				new String[128];
    			format(String, sizeof(String), "AdminKomutu: %s adl oyuncu banland, sebep: Silah Hilesi (%s).", GetPlayerNameEx(playerid), WeaponName);
				SendClientMessageToAllEx(COLOR_LIGHTRED, String);
				SetPVarInt(playerid, "_HACK_WARNINGS", 0);
				//RemovePlayerWeapon(playerid, weaponid);
				PlayerInfo[playerid][pBanned] = 3;
				new playerip[32];
				GetPlayerIp(playerid, playerip, sizeof(playerip));
				format(String, sizeof(String), "AdminKomutu: %s (IP:%s) adl oyuncu banland, sebep: Silah Hilesi (%s)", GetPlayerNameEx(playerid), playerip, WeaponName);
				PlayerInfo[playerid][pBanned] = 3;
				Log("logs/ban.log", String);
				new ip[32];
				GetPlayerIp(playerid,ip,sizeof(ip));
				AddBan(ip);
				Kick(playerid);
				TotalAutoBan++;
			}
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][9] != 43 && PlayerInfo[playerid][pAGuns][9] != 43 && GetPlayerWeapon(playerid) == 43)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][10] != 10 && PlayerInfo[playerid][pAGuns][10] != 10 && GetPlayerWeapon(playerid) == 10)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][10] != 11 && PlayerInfo[playerid][pAGuns][10] != 11 && GetPlayerWeapon(playerid) == 11)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][10] != 12 && PlayerInfo[playerid][pAGuns][10] != 12 && GetPlayerWeapon(playerid) == 12)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][10] != 13 && PlayerInfo[playerid][pAGuns][10] != 13 && GetPlayerWeapon(playerid) == 13)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][10] != 14 && PlayerInfo[playerid][pAGuns][10] != 14 && GetPlayerWeapon(playerid) == 14)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][10] != 15 && PlayerInfo[playerid][pAGuns][10] != 15 && GetPlayerWeapon(playerid) == 15)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][11] != 44 && PlayerInfo[playerid][pAGuns][11] != 44 && GetPlayerWeapon(playerid) == 44)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][11] != 45 && PlayerInfo[playerid][pAGuns][11] != 45 && GetPlayerWeapon(playerid) == 45)
        {
            ExecuteHackerAction(playerid, newweapon);
        }
        else if(PlayerInfo[playerid][pGuns][11] != 46 && GetPlayerWeapon(playerid) == 46)
        {
        	PlayerInfo[playerid][pGuns][11] = 46;
        }
	}
	return 1;
}

public OnPlayerUpdate(playerid)
{
if( GetPlayerWantedLevel(playerid) != PlayerInfo[playerid][pWantedLevel]) 
SetPlayerWantedLevel(playerid, PlayerInfo[playerid][pWantedLevel]);
	if(playerTabbed[playerid] == 1)
	{
		playerTabbed[playerid] = 0;
		playerTabbedTime[playerid] = 0;
		if(GetPVarType(playerid, "tabbedVW") != 0) {
		    SetPlayerVirtualWorld(playerid, GetPVarInt(playerid, "tabbedVW"));
		    DeletePVar(playerid, "tabbedVW");
		}
	}
    foreach(Player, i)
	{
 		if(GetPlayerState(i) == 2)
		{
      		new vehicleid = GetPlayerVehicleID(i);
			GetVehicleHealth(vehicleid,explodehealth);
			GetVehicleParamsEx(vehicleid, engine, lights, alarm, doors, bonnet, boot, objective);
			if(explodehealth < 300.0 && engine == VEHICLE_PARAMS_ON)
			{
				RemovePlayerFromVehicle(playerid);
				GameTextForPlayer(i, "~g~Arac Kullanilmaz Halde!", 2500, 3);
	            SetVehicleParamsEx(vehicleid, false, lights, alarm, doors, bonnet, boot, objective);
                SendClientMessage(i, COLOR_WHITE, "Arac kullanilmaz halde, tamirci ar ve aracn tamir ettir.");
				engine = 0;
				return 1;

			}
			if(explodehealth < 300.0 && engine == VEHICLE_PARAMS_OFF)
			    SetVehicleHealth(vehicleid,298.0);
		    {

  			}
		}
	}
	if(!BoomboxStream[playerid])
    {
        for(new i=0; i<MAX_PLAYERS; i++)
        {
            if(IsPlayerConnected(i))
            {
                if(Boombox[i])
                {
                    if(IsPlayerInRangeOfPoint(playerid, 30, bpos[i][0], bpos[i][1], bpos[i][2]))
                    {
                        PlayAudioStreamForPlayer(playerid, BoomboxURL[i], bpos[i][0], bpos[i][1], bpos[i][2], 30, 1);
                        BoomboxPlayer[playerid] = i;
                        BoomboxStream[playerid] = 1;
                        SendClientMessage(playerid, COLOR_WHITE, "Yakndan gelen bir mzik sesini dinlemeye baladn!");
                    }
                }
            }
        }
    }
    else
    {
        new i = BoomboxPlayer[playerid];
        if(!IsPlayerInRangeOfPoint(playerid, 30, bpos[i][0], bpos[i][1], bpos[i][2]))
        {
            BoomboxStream[playerid] = 0;
            BoomboxPlayer[playerid] = -1;
            StopAudioStreamForPlayer(playerid);
            SendClientMessage(playerid, COLOR_WHITE, "Boombox kutusundan uzaklatn, artk mzii duyamyorsun!");
        }
    }
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER && Speedlimit[playerid])
	{
	    new a, b, c;
		GetPlayerKeys(playerid, a, b ,c);
	    if(a == 8 && GetVehicleSpeed(GetPlayerVehicleID(playerid), 0) > Speedlimit[playerid])
	    {
	        new newspeed = GetVehicleSpeed(GetPlayerVehicleID(playerid), 0) - Speedlimit[playerid];
	    	ModifyVehicleSpeed(GetPlayerVehicleID(playerid), -newspeed);
	    }
	}
	if(IsPlayerConnected(playerid) && GetPlayerPing(playerid) > MAX_PING)
    {
        new oyuncuisim[20],yazi[256];
        GetPlayerName(playerid,oyuncuisim,20);
        format(yazi,256,"%s adli oyuncu yuksek ping nedeniyle sunucudan atildi. (%d/%d)",oyuncuisim,GetPlayerPing(playerid),MAX_PING);
        SendClientMessageToAll(COLOR_WHITE,yazi);
        Kick(playerid);
    }
	foreach(Player, i)
	{
		if(IsPlayerInAnyVehicle(i))
		{
			SetProgressBarValue(FuelBar[i], Fuel[GetPlayerVehicleID(i)]);
	    	UpdateProgressBar(FuelBar[i], i);
 		}
 		else
 		{
 		    HideProgressBarForPlayer(i, FuelBar[i]);
	    	DeletePVar(i, "fuelonoff");
	    	FuelBar[i] = INVALID_BAR_ID;
    		DestroyProgressBar(FuelBar[i]);
		}
	}
	if(isrefuelling[playerid] == 1)
	{
		SetPVarInt(playerid, "fuelonoff", 0);
  		HideProgressBarForPlayer(playerid, FuelBar[playerid]);
		DestroyProgressBar(FuelBar[playerid]);
		FuelBar[playerid] = INVALID_BAR_ID;
	}
	playerSeconds[playerid] = gettime();

 if(GetPVarInt(playerid, "IsFrozen") == 1) TogglePlayerControllable(playerid, 0);

	new pCurWeap = GetPlayerWeapon(playerid);
    if(pCurWeap != pCurrentWeapon[playerid])
    {
        OnPlayerChangeWeapon(playerid, pCurWeap);
        pCurrentWeapon[playerid] = pCurWeap;
    }
	return 1;
}

public OnPlayerEditAttachedObject(playerid, response, index, modelid, boneid, Float:fOffsetX, Float:fOffsetY, Float:fOffsetZ, Float:fRotX, Float:fRotY, Float:fRotZ, Float:fScaleX, Float:fScaleY, Float:fScaleZ)
{
    if(response)
    {
		if(fScaleX < 0.1) fScaleX = 0.1;
		if(fScaleX > 1.5) fScaleX = 1.5;
		if(fScaleY < 0.1) fScaleY = 0.1;
		if(fScaleY > 1.5) fScaleY = 1.5;
		if(fScaleZ < 0.1) fScaleZ = 0.1;
		if(fScaleZ > 1.5) fScaleZ = 1.5;
		if(fOffsetX < -100) fOffsetX = 0;
		if(fOffsetX > 100) fOffsetX = 100;
		if(fOffsetY < -100) fOffsetY = 0;
		if(fOffsetY > 100) fOffsetY = 100;
		if(fOffsetZ < -100) fOffsetZ = 0;
		if(fOffsetZ > 100) fOffsetZ = 100;

		SendClientMessage(playerid, COLOR_WHITE, "Oyuncak pozisyonu kaydedildi.");

		PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = fOffsetX;
		PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = fOffsetY;
		PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = fOffsetZ;
		PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = fRotX;
		PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = fRotY;
		PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = fRotZ;
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX] = fScaleX;
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY] = fScaleY;
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ] = fScaleZ;

		RemovePlayerAttachedObject(playerid, slotselection[playerid]);
		SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
		PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
		PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
		PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
		PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX],
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ]);
    }  else  {
        SendClientMessage(playerid, COLOR_GREY, "Oyuncak pozisyonu kaydedilmedi.");
		RemovePlayerAttachedObject(playerid, slotselection[playerid]);
    }
    return 1;
}

stock ShowEditMenu(playerid)
{
    if(IsPlayerAttachedObjectSlotUsed(playerid, slotselection[playerid]))
	{
 		RemovePlayerAttachedObject(playerid, slotselection[playerid]);
	}
	if(PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX] == 0) {
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX] = 1.0;
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY] = 1.0;
		PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ] = 1.0;
	}

	SetPlayerAttachedObject(playerid, slotselection[playerid], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID],
	PlayerToyInfo[playerid][slotselection[playerid]][ptBone], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY],
	PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX],
	PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ]);

    new stringg[856];
    format(stringg, sizeof(stringg), "Kemik (%s)\nPozisyon", HoldingBones[PlayerToyInfo[playerid][slotselection[playerid]][ptBone]]);
 	ShowPlayerDialogEx(playerid, EDITTOYS2, DIALOG_STYLE_LIST, "Oyuncak Mens: Ayarla", stringg, "Se", "Iptal");
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[]) {
	new
	    string[128],
	    sendername[MAX_PLAYER_NAME];

	if(GetPVarInt(playerid, "dialog") != dialogid) { // Confirm the dialogid matches what we have in the PVar
		format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) is possibly trying to spoof a dialog ID (%d).", GetPlayerNameEx(playerid), playerid, dialogid);
  		ABroadCast(COLOR_YELLOW, string, 2);

		format(string, sizeof(string), "%s has possibly tried to spoof a dialog ID.", GetPlayerNameEx(playerid));
		AddAutomatedFlag(playerid, string);

		format(string, sizeof(string), "%s has possibly tried to spoof a dialog ID (%d, %d).", GetPlayerNameEx(playerid), dialogid, response);
		Log("logs/crash.log", string);

		return 1;
	}

	DeletePVar(playerid, "dialog"); // Delete the PVar now we're done with it

	if(!isnull(inputtext))
	{
	    if(strfind(inputtext, "%s", true) != -1)
	    {
			format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) is possibly dialog-exploiting by attempting to send a null string.", GetPlayerNameEx(playerid), playerid);
  			ABroadCast(COLOR_YELLOW, string, 2);

  			format(string, sizeof(string), "%s is possibly dialog-exploiting by attempting to send a null string.", GetPlayerNameEx(playerid));
  			AddAutomatedFlag(playerid, string);

  			format(string, sizeof(string), "%s has attempted to insert a false string placeholder into a dialog.", GetPlayerNameEx(playerid));
  			Log("logs/crash.log", string);
  			Kick(playerid);
	        return 1;
		}
	}
	if(dialogid == MAINMENU || dialogid == MAINMENU2) {
		if(dialogid == MAINMENU) {
			if(response == 0) {
				SendClientMessage(playerid, COLOR_NEWS, "Otomatik olarak kicklendin.");
				Kick(playerid);
			}
			else {
				if(strlen(inputtext)) {
					new passbuffer[129], name[MAX_PLAYER_NAME];
					GetPlayerName(playerid, name, sizeof(name));
					WP_Hash(passbuffer, sizeof(passbuffer), inputtext);
					AttemptPlayerLogin(playerid, passbuffer);

					strcpy(AdminRelogPassword[playerid], passbuffer, 129);
    			}
				else
				{
					new titlestring[64], dstring[512];
					format(titlestring, sizeof(titlestring), "{AD00D3}Master RPG - Giri yap");
					format(dstring, sizeof(dstring), "{FFFFFF}Yanl ifre.\n\n{FFFFFF}Bu isim kaytl. Ltfen ifrenizi aaya girin.\n\n{AD00D3}Kullanc: {FFFFFF}%s\n\n {AD00D3}ifre:", GetPlayerNameEx(playerid));
					ShowPlayerDialogEx(playerid,MAINMENU,DIALOG_STYLE_PASSWORD,titlestring,dstring,"Giri yap","k");
					if(gPlayerLogTries[playerid] == 2) { SendClientMessage(playerid, COLOR_NEWS, "Yanl ifre, otomatik olarak kicklendin."); Kick(playerid); }
				}
			}
		}
		if(dialogid == MAINMENU2)
		{
			if(response == 0)
			{
				SendClientMessage(playerid, COLOR_NEWS, "Otomatik olarak kicklendin.");
                //geberTimer(GetPVarInt(playerid, "MenuTimer"));
				Kick(playerid);
			}
			else if(strlen(inputtext))
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				new passbuffer[129];
				WP_Hash(passbuffer, sizeof(passbuffer), inputtext);
				OnPlayerRegister(playerid,passbuffer);
			}
		}
	}
	else if(dialogid == REGISTRATION_MENU_ONE)
	{
	    if(response) {
	        PlayerInfo[playerid][pSex] = 1;
	        PlayerInfo[playerid][pSkin] = 299;
	    } else {
	        PlayerInfo[playerid][pSex] = 2;
	        PlayerInfo[playerid][pSkin] = 55;
	    }

	    ShowPlayerDialogEx(playerid, REGISTRATION_MENU_TWO, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}Karakterinizin ya ka?\n\nNot: 18 ile 90 arasnda bir ya seiniz.", "Tamam", "");
	}
	else if(dialogid == REGISTRATION_MENU_TWO)
	{
		if(!IsNumeric(inputtext))
		{
			ShowPlayerDialogEx(playerid, REGISTRATION_MENU_TWO, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: Say girmelisin!\n\nKarakterinizin yann ka olmasn istiyorsunuz?\n\nUyar: Ya 18'den byk, 90'dan kk olmaldr.", "Bitir", "");
			return 1;
		}
		new age = strval(inputtext);
		if(age < 18 || age > 90)
		{
			ShowPlayerDialogEx(playerid, REGISTRATION_MENU_TWO, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: Karakterinizin ya 18 ile 90 aras olmaldr.\n\nKarakterinizin yann ka olmasn istiyorsunuz?\n\nUyar: Ya 18'den byk, 90'dan kk olmaldr.", "Bitir", "");
			return 1;
		}

		PlayerInfo[playerid][pAge] = age;
		SetPlayerVirtualWorld(playerid, 0);

		ShowPlayerDialogEx(playerid, REGISTRATION_MENU_THREE, DIALOG_STYLE_MSGBOX, "{AD00D3}Master RPG - Kayt", "{FFFFFF}Bu sunucuyu baka bir oyuncumuzun nerisiylemi buldunuz?" , "Evet", "Hayr");
  	}
	else if(dialogid == 3652) {
		if(!response)
		    return 1;

		switch(listitem) {
			case 0: {
			    // Paintball is static right now; I may change this in the future. Each arena has its own static ID, DM goes from 1-3, TDM goes from 4-6
			    ShowPlayerDialogEx(playerid, 3653, DIALOG_STYLE_LIST, "Paintball - DM", "LV Deposu\nRasgele Depo\nRC Sava alan", "Git", "Iptal");
			}
			case 1: {
			    // Paintball is static right now; I may change this in the future. Each arena has its own static ID, DM goes from 1-3, TDM goes from 4-6
			    ShowPlayerDialogEx(playerid, 3654, DIALOG_STYLE_LIST, "Paintball - TDM", "LV Deposu\nRasgele Depo\nRC Sava alan", "Git", "Iptal");
			}
			case 2: {
			    new
			        iPlayer = INVALID_PLAYER_ID;

			    foreach(Player, i) {
					if(GetPVarInt(i, "PBM") > 0) {
					    iPlayer = i; // always going to get the highest ID because Y_Less never added a 'break;' for foreach ~_~ ...or didn't document it
					}
			    }

			    if(iPlayer == INVALID_PLAYER_ID)
			        return SendClientMessage(playerid, COLOR_GREY, "zgnz, u anda oyunda kimse yok.");

			    JoinPaintballGame(playerid, GetPVarInt(iPlayer, "PBM"));
			}
		}
	}
	else if(dialogid == vdolap) {
         if(response){
	        switch(listitem)
	        {
		        case 0:{
					SetPlayerHealth(playerid,99);
					format(string, sizeof(string), "cretsiz  Cann doldurdun.");
					SendClientMessage(playerid,COLOR_ORANGE,string);
			    }
			    case 1:{
                    GivePlayerCash(playerid, -10000);
					SetPlayerArmourEx(playerid,99);
					format(string, sizeof(string), "10000 dolar karlnda zrhn doldurdun.");
					SendClientMessage(playerid,COLOR_ORANGE,string);
 					}

			    case 2:{//silahlar
				ShowPlayerDialogEx(playerid, vdolap1, DIALOG_STYLE_LIST, "VIP Silah Maazas", "AK-47(2000$)\nRifle(1000$)\nShotgun(500$)\nDesert Eagle(2000$)\nMP5(750$)\nM4 (2000$)\nCombat Shotgun (5000$)\nSniper (5000$)", "Sec", "Iptal");
				}
			    case 3:{
                ShowPlayerDialogEx(playerid, vdolap2, DIALOG_STYLE_INPUT, "VIP Kiyafet Deiimi"," 0 ile 311 Skin idleri arasndan skin giriniz", "Sec", "Iptal");
				}
          		case 4: {
          		if(PlayerInfo[playerid][pDonator] >= 2)
          		{
					ShowPlayerDialogEx(playerid,vdolap3, DIALOG_STYLE_LIST, "VIP Meslek Seimi", "-Dedektiflik Meslegi\n-Avukat Meslegi\n-Hayat Kadn Meslegi\n-Tamirci Meslegi\n-BodyGuard Meslegi\n-Silah Satcs Meslegi\n-Boksr\n-Uyuturucu Kaakcs Meslegi\n-Zanaatkar\n-Barmen\n-Kamyon fr\n-Pizzac", "Sec", "Iptal");
 				}
 				else
 				{
 				    SendClientMessage(playerid, -1, "Meslek mensn grebilmek iin Master VP yada Elmas VP olmanz gerekiyor.");
                }
				}
                case 5: {
		            if(GetPlayerColor(playerid) != TRANSPARENT_VIP) {SetPlayerColor(playerid, TRANSPARENT_VIP); SendClientMessage(playerid, COLOR_VIP, "VIP Ad rengini etkinletirdin.");}
		            else {SetPlayerColor(playerid, TEAM_HIT_COLOR); SendClientMessage(playerid, COLOR_VIP, "VIP ad rengini kapattn.");}
		        }
			}
		}
	}
    else if(dialogid == vdolap1)
	{
	    if(response)
	    {   new str[128];
		    new silahid,bilet;
 	        switch(listitem)
	        {
				case 0: { silahid = 30; bilet = 2000;}
				case 1: { silahid = 33; bilet = 1000;}
				case 2: { silahid = 25; bilet = 500;}
				case 3: { silahid = 24; bilet = 2000;}
				case 4: { silahid = 29; bilet = 750;}
				case 5: { silahid = 31; bilet = 2000;}
				case 6: { silahid = 27; bilet = 7000;}
				case 7: { silahid = 34; bilet = 5000;}
			}
			GivePlayerValidWeapon(playerid, silahid, 60000);
			GivePlayerCash(playerid, -bilet);
			format(str, sizeof(str), "* %s VIP dolabndan %d $ karlnda ekipman alr.", GetPlayerNameEx(playerid), bilet);
			ProxDetector(30.0, playerid, str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	    }
	}
	else if(dialogid == vdolap2)
	{
	    if(response)
	    {   new str[128];
	        new skinid = strval(inputtext);
	        if(skinid < 0 || skinid > 311) return SendClientMessage(playerid, COLOR_GREY, "Skinler 0 ile 311 arasndadr.");
	        format(str, sizeof(str), "* %s VIP dolabndan cretsiz olarak kyafet alr.", GetPlayerNameEx(playerid));
			ProxDetector(30.0, playerid, str, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
	        SetPlayerSkin(playerid, skinid);
	        PlayerInfo[playerid][pSkin] = skinid;
	    }
	}
	else if(dialogid == vdolap3) {
		if(response)
 		{
			 switch(listitem) {
					case 0 : VIPisci[playerid] = 1;
					case 1 : VIPisci[playerid] = 2;//avukat
					case 2 : VIPisci[playerid] = 3;
					//case 3 : VIPisci[playerid] = 4;
					case 3 : VIPisci[playerid] = 7;
					case 4 : VIPisci[playerid] = 8;
					case 5 : VIPisci[playerid] = 9;
					case 6 : VIPisci[playerid] = 12;
					case 7 : VIPisci[playerid] = 14;
					//case 9 : VIPisci[playerid] = 17;
					case 8 :VIPisci[playerid] = 18;
					case 9 :VIPisci[playerid] = 19;
					case 10 :VIPisci[playerid] = 20;
					case 11 :VIPisci[playerid] = 21;
			 }
			 ShowPlayerDialogEx(playerid,vdolap4, DIALOG_STYLE_LIST,"VIP Meslek Seimi","1. Meslek\n2. Meslek","Se","ptal");
		}
	}
    else if(dialogid == vdolap4) {
		new slot,istext[32];
		if(response)
			{
			switch(listitem){
				case 0:{
				slot = 1;
				PlayerInfo[playerid][pJob] = VIPisci[playerid];
				}
				case 1:{
				slot = 2;
				PlayerInfo[playerid][pJob2] = VIPisci[playerid];
				}
			}
			switch(VIPisci[playerid]) {
				case 1: istext = "Dedektif";
				case 2: istext = "Avukat";
				case 3: istext = "Hayat Kadn";
				case 5: istext = "Araba Hrsz";
				//case 6: istext = "News Reporter";
				case 7: istext = "Tamirci";
				case 8: istext = "Bodyguard";
				case 9: istext = "Silah Satcs";
				//case 10: istext = "Car Dealer";
				case 12: istext = "Boksr";
				case 14: istext = "UyuturucuKaaks";
				//case 15: istext = "Paper Boy";
				//case 16: istext = "Kamyon ofr";
				//case 17: istext = "Taksici";
				case 18: istext = "Zanaatkar";
				case 19: istext = "Barmen";
				case 20: istext = "Kamyon ofr";
				case 21: istext = "Pizzac";
			}
			format(string,sizeof(string),"%d. meslek olarak %s mesleini ayarladn.",slot,istext);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
	}
	else if(dialogid == DIALOG_SAN_CLOTHES) {
		switch(listitem) {
			case 0: {
				PlayerInfo[playerid][pSkin] = 113;
				SetPlayerSkin(playerid, 113);
			}
			case 1: {
				PlayerInfo[playerid][pSkin] = 148;
				SetPlayerSkin(playerid, 148);
			}
		}

		return 1;
	}
	else if(dialogid == DIALOGMEGAFON)
	{
        new szMessage[128];
		if(response)
		{
			if(listitem == 0)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Teslim ol etrafn sarld!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 1)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Orada olduunu biliyoruz.", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 2)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Hey sen! Polis. Dur!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 3)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: LSPD! Olduun yerde kal!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 4)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Olduun yerde kal. Yoksa ate aacaz!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 5)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Hadi! Hadi! Hadi!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 6)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Polis! Kprdama!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 7)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: Ellerin bann stnde kalacak ekilde aratan in!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
			if(listitem == 8)
			{
			    format(szMessage, sizeof(szMessage), "(megafon) %s: LSPD Kenara ek... sen delimisin? Hepimizi ldryordun!", GetPlayerNameEx(playerid));
				ProxDetector(60.0, playerid, szMessage, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW, COLOR_YELLOW);
			}
	    }
	}
	else if(dialogid == 3653) {
		if(!response)
		    return 1;

		SendClientMessage(playerid, COLOR_WHITE, "lmoyunu oynamaya hazrlanyorsun.");
		SendClientMessage(playerid, COLOR_GREY, "Grev, tek olarak ldrebildiin kadar adam ldrmek.");

	    switch(listitem) {
	    	case 0: JoinPaintballGame(playerid, 1);
	    	case 1: JoinPaintballGame(playerid, 2);
	    	case 2: JoinPaintballGame(playerid, 3);
	    }
	}
	else if(dialogid == 3654) {
		if(!response)
		    return 1;

 		SendClientMessage(playerid, COLOR_WHITE, "Takm lmoyunu oynamaya hazrlanyorsun.");
		SendClientMessage(playerid, COLOR_GREY, "Grev, takm olarak ldrebildiin kadar adam ldrmek.");

	    switch(listitem) {
	    	case 0: JoinPaintballGame(playerid, 4);
	    	case 1: JoinPaintballGame(playerid, 5);
	    	case 2: JoinPaintballGame(playerid, 6);
	    }
	}

	#if defined TREASURE_HUNT_ENABLED
	if(dialogid == DIALOG_HUNT_PRIZE) {
	    if(!response) {
	        SetRandomHuntPos();
	        DeletePVar(playerid, "fT");
	        return 1;
		}

		switch(listitem) {
		    case 0: {
		        PlayerInfo[playerid][pPot] += 20;
  		      	PlayerInfo[playerid][pCrack] += 10;

        		format(string, sizeof(string), "%s dl olarak 20 pot ve 10 crack seti.", GetPlayerNameEx(playerid));
				Log("logs/treasurehunt.log", string);
		        SendClientMessage(playerid, COLOR_WHITE, "20 crack, 10 pot setin. Tebrikler, hakettin.");
		    }
		    case 1: {
				PlayerInfo[playerid][pMats] += 2000;

				format(string, sizeof(string), "%s dl olarak 2.000 materyal seti.", GetPlayerNameEx(playerid));
				Log("logs/treasurehunt.log", string);
				SendClientMessage(playerid, COLOR_WHITE, "2.000 materyal setin. Tebrikler, hakettin.");
			}
		    case 2: {
		        GivePlayerValidWeapon(playerid, 24, 50000);

  				format(string, sizeof(string), "%s dl olarak Desert Eagle seti.", GetPlayerNameEx(playerid));
				Log("logs/treasurehunt.log", string);
		        SendClientMessage(playerid, COLOR_WHITE, "Desert eagle setin. Tebrikler, hakettin.");
		    }
		    case 3: {
		        PlayerInfo[playerid][pRespect] += 1;

  				format(string, sizeof(string), "%s dl olarak 1 sayg puann seti.", GetPlayerNameEx(playerid));
				Log("logs/treasurehunt.log", string);
		        SendClientMessage(playerid, COLOR_WHITE, "1 sayg puan setin. Tebrikler, hakettin.");
		    }
		}

		SetRandomHuntPos();
		DeletePVar(playerid, "fT");

		return 1;
	}
	else if(dialogid == DIALOG_HUNT_QUESTION) {
	    if(!response) {
	        SetRandomHuntPos();
	        DeletePVar(playerid, "fT");
	        return 1;
		}

	    switch(GetPVarInt(playerid, "HuntQ")) {
	        case 0: {
				if(listitem == 2) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 1: {
				if(listitem == 0) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 2: {
				if(listitem == 2) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 3: {
				if(listitem == 1) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 4: {
				if(listitem == 2) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 5: {
				if(listitem == 1) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 6: { // 0
				if(listitem == 0) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 7: { // 2
				if(listitem == 2) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 8: { // 0
				if(listitem == 0) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
			case 9: { // 1
				if(listitem == 1) {
				    PrizeMenu(playerid);
				} else {
				    SetRandomHuntPos();
					SendClientMessage(playerid, COLOR_GREY, "Yanl cevap verdin. Hediyenin yeri deiti! Birdahaki sefere bol ans!");
					DeletePVar(playerid, "fT");
				}
			}
	    }
	}
	#endif

  	if(dialogid == REGISTRATION_MENU_THREE)
  	{
   		if(response)
	    {
	        ShowPlayerDialogEx(playerid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{FFFFFF}Master RPG - Kayt", "{FFFFFF}Bu oyunu sana neren kiinin ad nedir?\n\nUyar: Oyuncunun tam ismini girmek zorundasn. sim ve soyisminin arasna ('_') koymay unutma. rn: Fernando_Silver", "Bitir", "Iptal");
	    }
  	    else
  	    {
			HideMainMenuGUI(playerid);
			PlayerPlaySound(playerid,SOUND_OFF,2050.1995, 1344.5500, 13.2378); //muzik Off

			SetPlayerPos(playerid, 2489.09, -1669.88, -80.0);
            SetPlayerCameraPos(playerid, 1017.62, -2030.82, 81.81);
            SetPlayerCameraLookAt(playerid, 1094.26, -2036.95, 81.83);
			TogglePlayerControllable(playerid, false);
			SetPVarInt(playerid, "IsFrozen", 1);

			for(new t = 0; t < 11; t++)
			{
				TextDrawShowForPlayer(playerid, TutTxtDraw[t]);
			}

			TutorialProgress[playerid] = 1;

			SetTimerEx("TutorialProgression", 1, 0, "d", playerid);
		}
	}
	else if(dialogid == REGISTRATION_MENU_FOUR)
  	{
        if(response) {
            if(IsNumeric(inputtext)) {
                ShowPlayerDialogEx(playerid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: Girilen ey say olamaz.\n\nBu oyunu sana neren kiinin ad nedir?\n\nUyar: Oyuncunun tam ismini girmek zorundasn. sim ve soyisminin arasna ('_') koymay unutma. rn: James_Bond", "Bitir", "Iptal");
                return 1;
            }
            for(new i = 0; i < strlen(inputtext); i++) {
                if(inputtext[i] == ' ') {
                    ShowPlayerDialogEx(playerid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: Ltfen isminden sonra boluk yerine '_' (altizgi) kullan.\n\nBu oyunu sana neren kiinin ad nedir?\n\nUyar: Oyuncunun tam ismini girmek zorundasn. sim ve soyisminin arasna ('_') koymay unutma. rn: James_Bond", "Bitir", "Iptal");
                    return 1;
                }
            }
            if(strfind(inputtext, "_", true) == -1) {
                ShowPlayerDialogEx(playerid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: Ltfen isminizi seerken doru format kullann: sim_Soyisim.\n\nBu oyunu sana neren kiinin ad nedir?\n\nUyar: Oyuncunun tam ismini girmek zorundasn. sim ve soyisminin arasna ('_') koymay unutma. rn: James_Bond", "Bitir", "Iptal");
                return 1;
            }
            if(strlen(inputtext) > 20) {
                ShowPlayerDialogEx(playerid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{AD00D3}Master RPG - Kayt", "{FFFFFF}GR REDDEDLD: smin maksimum 20 karakterden oluabilir.\n\nBu oyunu sana neren kiinin ad nedir?\n\nUyar: Oyuncunun tam ismini girmek zorundasn. sim ve soyisminin arasna ('_') koymay unutma. rn: James_Bond", "Bitir", "Iptal");
                return 1;
            }

            new
                szPlayerName[MAX_PLAYER_NAME],
                szQuery[128];

			mysql_real_escape_string(inputtext, szPlayerName, g_MySQLConnections[0]);

			format(PlayerInfo[playerid][pReferredBy], MAX_PLAYER_NAME, "%s", szPlayerName);

			format(szQuery, sizeof(szQuery), "SELECT Username FROM players WHERE Username = '%s'", szPlayerName);
			mysql_query(szQuery, THREAD_REFERRAL_MENU, playerid, g_MySQLConnections[0]);
        }
        else
        {
            strcpy(PlayerInfo[playerid][pReferredBy], "0", 32);
			HideMainMenuGUI(playerid);
			PlayerPlaySound(playerid,SOUND_OFF,2050.1995, 1344.5500, 13.2378); //muzik Off

			SetPlayerPos(playerid, 2489.09, -1669.88, -80.0);
            SetPlayerCameraPos(playerid, 1017.62, -2030.82, 81.81);
            SetPlayerCameraLookAt(playerid, 1094.26, -2036.95, 81.83);
			TogglePlayerControllable(playerid,0);

			for(new t = 0; t < 11; t++)
			{
				TextDrawShowForPlayer(playerid, TutTxtDraw[t]);
			}

			TutorialProgress[playerid] = 1;

			SetTimerEx("TutorialProgression", 1, 0, "d", playerid);
        }
  	}
  	else if(dialogid == REGISTRATION_MENU_FIVE)
  	{
   		if(response)
	    {
  			HideMainMenuGUI(playerid);
			PlayerPlaySound(playerid,SOUND_OFF,2050.1995, 1344.5500, 13.2378); //muzik Off

			SetPlayerPos(playerid, 2489.09, -1669.88, -80.0);
            SetPlayerCameraPos(playerid, 1017.62, -2030.82, 81.81);
            SetPlayerCameraLookAt(playerid, 1094.26, -2036.95, 81.83);
			TogglePlayerControllable(playerid,0);

			for(new t = 0; t < 11; t++)
			{
				TextDrawShowForPlayer(playerid, TutTxtDraw[t]);
			}

			TutorialProgress[playerid] = 1;

			SetTimerEx("TutorialProgression", 1, 0, "d", playerid);

	    }
  	    else
  	    {
  	    	ShowPlayerDialogEx(playerid, REGISTRATION_MENU_FOUR, DIALOG_STYLE_INPUT, "{FFFFFF}Master RPG - Kayt", "{FFFFFF}Size oyunu tavsiye eden kii kim?\n\nUyar: Ad_Soyad eklinde belirtmeniz gerekiyor. rnek: James_Bond", "Tamam", "Iptal");
		}
	}
	else if(dialogid == 12768)
	{
		if(response)
	    {
			ShowPlayerDialogEx(playerid,INFO_DIALOG,DIALOG_STYLE_MSGBOX,"neri Sistemi Bilgilendirmesi", "Eer nerdiin oyuncu sen offlineyken 8 saatini doldurursa, oyuna girdiinde jeton karakterine otomatik olarak eklecenektir.\n\nneri jetonlarn /refmarket yazarak iine yarayacak eyalar ile takas edebilirsin.\n\nBiri seni nerdikten sonra o kiinin 8 saati dolmadan isim deitirmemelisin.\nYoksa jeton alamazsn.","Kapat","");
		}
	}
	else if(dialogid == DIALOG_REFSHOP)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 1)
			    {
       				PlayerInfo[playerid][pRefTokens] -= 1;

			        PlayerInfo[playerid][pPot] += 50;
			        PlayerInfo[playerid][pCrack] += 25;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 1 neri jetonu harcayarak 50 gram pot ve 25 gram crack aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 1)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 1)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 1;

			        PlayerInfo[playerid][pMats] += 2500;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 1 neri jetonu harcayarak 2.500 materyal aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 2)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 1)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 1;

			        PlayerInfo[playerid][pRespect] += 4;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 1 neri jetonu harcayarak 4 sayg puan aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 3)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 1)
			    {
			        if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Silah kullanma yasan varken silah alamazsn.");
		         	PlayerInfo[playerid][pRefTokens] -= 1;

			        GivePlayerValidWeapon(playerid, 24, 60000);
			        GivePlayerValidWeapon(playerid, 27, 60000);
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 1 neri jetonu harcayarak SPAS-12 ve Desert Eagle aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 4)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 2)
			    {
       				PlayerInfo[playerid][pRefTokens] -= 2;

			        PlayerInfo[playerid][pPot] += 100;
			        PlayerInfo[playerid][pCrack] += 50;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 2 neri jetonu harcayarak 100 gram pot ve 50 gram crack aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 5)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 2)
			    {
			        if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_WHITE, "Silah kullanma yasan varken silah alamazsn.");
		         	PlayerInfo[playerid][pRefTokens] -= 2;

		        	GivePlayerValidWeapon(playerid, 27, 60000);
		        	GivePlayerValidWeapon(playerid, 24, 60000);
		        	GivePlayerValidWeapon(playerid, 31, 60000);
		        	GivePlayerValidWeapon(playerid, 34, 60000);
		        	GivePlayerValidWeapon(playerid, 29, 60000);
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 2 neri jetonu harcayarak full silah seti aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 6)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 2)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 2;

			        PlayerInfo[playerid][pRespect] += 8;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 2 neri jetonu harcayarak 5 sayg puan aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 7)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 2)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 2;

			        PlayerInfo[playerid][pMats] += 5000;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 2 neri jetonu harcayarak 5.000 materyal aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 8)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 3)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 3;

			        PlayerInfo[playerid][pRespect] += 12;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 3 adet neri jetonu harcayarak 12 sayg puan aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 9)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 3)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 3;

			        PlayerInfo[playerid][pMats] += 10000;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 3 adet neri jetonu harcayarak 10.000 materyal aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 10)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 4)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 4;

			        PlayerInfo[playerid][pRespect] += 16;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 4 adet neri jetonu harcayarak 16 sayg puan aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 11)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 4)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 4;

			        PlayerInfo[playerid][pMats] += 15000;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 4 adet neri jetonu harcayarak 15.000 materyal aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 12)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 5)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 5;

			        PlayerInfo[playerid][pRespect] += 20;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 5 adet neri jetonu harcayarak 20 sayg puan aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 13)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 5)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 5;

			        PlayerInfo[playerid][pMats] += 20000;
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 5 adet neri jetonu harcayarak 20.000 materyal aldn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 14)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 10)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 10;

        			new nxtlevel = PlayerInfo[playerid][pLevel]+1;
					format(string, sizeof(string), "~g~LEVEL ATLADIN~n~~w~Artik %d Levelsin", nxtlevel);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pLevel]++;
					PlayerInfo[playerid][gPupgrade] = PlayerInfo[playerid][gPupgrade]+2;
					GameTextForPlayer(playerid, string, 5000, 1);
					SetPlayerScore(playerid, PlayerInfo[playerid][pLevel]);

			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 10 adet neri jetonu kullanarak sayg puan gerekmeden level atladn ve 2 geliim puan kazandn. (/gelisim)");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
			else if(listitem == 15)
			{
			    if(PlayerInfo[playerid][pRefTokens] >= 10)
			    {
			        PlayerInfo[playerid][pRefTokens] -= 10;

					new log[128];
					format(log, sizeof(log), "%s 10 adet neri jetonu harcad ve bedava ara iin bekliyor.", GetPlayerNameEx(playerid));
					Log("logs/referralcars.log", log);

					format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s, 10 adet neri jetonu harcayarak bedava ara seeneini seti. imdi arac iin bekliyor.", GetPlayerNameEx(playerid));
					ABroadCast(COLOR_YELLOW, string, 4);

                    format(PlayerInfo[playerid][pFlag], 128, "Bedava Ara (Yalnzca ara satcsndan alabileceklerinden)");

					SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: 10 adet neri jetonu harcayarak bedava ara aldn. Otomatik olarak bayrak kondu, yaknda dln alacaksn.");
			        SendClientMessage(playerid, COLOR_YELLOW, "NER SSTEM: Bu nadir verilen bir dldr ve verilmesi 48 saati bulabilir. 4 level ve zeri admin arayn.");
			    }
			    else return SendClientMessage(playerid, COLOR_WHITE, "Bu item iin yeterli neri jetonun yok.");
			}
		}
	}
	else if(dialogid == GOVLOCKERMENU) {
		// Uniform then Equipment

		if(!response)
		    return 1;

		switch(listitem) {
			case 0: ShowPlayerDialogEx(playerid, GOVSKINMENU, DIALOG_STYLE_LIST, "Devlet Skin Men", "17 (siyah takmelbise)\n57 (takm elbiseli asyal)\n141 (gen asyal bayan)\n147 (orta yal beyaz)\n240 (zrhl gen beyaz)\n295 (takm elbiseli, yal beyaz)", "Tamam", "Iptal");
			case 1: ShowPlayerDialogEx(playerid, GOVEQUIPMENU, DIALOG_STYLE_LIST, "Devlet Ekipman Mens", "lk Yardm Kiti\nZrh\nDesert Eagle\nMP5\nShotgun\nM4\nAksesuarlar", "Tamam", "Iptal");
			case 2: ShowPlayerDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Gizli","Skin sein (ID kullanarak).", "Se", "Iptal");
		}
	}
	else if(dialogid == GOVEQUIPMENU) {
		if(!response)
		    return 1;

		switch(listitem) {
			case 0: SetPlayerHealth(playerid, 100);
			case 1: SetPlayerArmourEx(playerid, 100);
			case 2: GivePlayerValidWeapon(playerid, 24, 99999);
			case 3: GivePlayerValidWeapon(playerid, 29, 99999);
			case 4: GivePlayerValidWeapon(playerid, 25, 99999);
			case 5: GivePlayerValidWeapon(playerid, 31, 99999);
			case 6: ShowPlayerDialogEx(playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Aksesuarlar", "Devlet memurlarnn aksesuar dolabna hogeldiniz.","Devam", "Iptal");
		}
	}
	else if(dialogid == GOVSKINMENU) {
		if(!response)
		    return 1;

		switch(listitem) {
			case 0: {
				SetPlayerSkin(playerid, 17);
				PlayerInfo[playerid][pSkin] = 17;
			}
			case 1:  {
				SetPlayerSkin(playerid, 57);
				PlayerInfo[playerid][pSkin] = 57;
			}
			case 2: {
				SetPlayerSkin(playerid, 141);
				PlayerInfo[playerid][pSkin] = 141;
			}
			case 3: {
				SetPlayerSkin(playerid, 147);
				PlayerInfo[playerid][pSkin] = 147;
			}
			case 4: {
				SetPlayerSkin(playerid, 240);
				PlayerInfo[playerid][pSkin] = 240;
			}
			case 5: {
				SetPlayerSkin(playerid, 295);
				PlayerInfo[playerid][pSkin] = 295;
			}
		}
	}
   /*  else if(dialogid == JOBHELPMENU)  //DEAKTF
	{
 		if(response)
		{
			if(listitem == 0) //Detective
			{
				ShowPlayerDialogEx(playerid, DETECTIVEJOB, DIALOG_STYLE_MSGBOX, "Dedektif", "Bilgi:\n\nBu meslek San Andreas'daki herhangi birinin yerini bulmak iin kullanlr.\nBu meslek devlet oluumlarna ok yardmc olan bir meslektir. Legal bir meslektir.\nBulmaya altn kiinin sana son bulunduu yeri syleyecektir. Eer yeteri kadar yakn isen, haritada grebileceksin.", "Devam", "Iptal");
			}
			if(listitem == 1) // Lawyer
			{
				ShowPlayerDialogEx(playerid, LAWYERJOB, DIALOG_STYLE_MSGBOX, "Avukat", "Bilgi:\n\nBu meslek sulularn aranma seviyelerini drmek, mahkumlarn hapis srelerini azaltmak ve tm sulular grmek iin kullanlr.\nAranan aznl sululara yardmc olabileceiniz nemli bir meslektir ve legaldir.\nEer bir arkadan yada aile bireyinin ba polisler ile beladaysa bu meslek iininize yarayacaktr.", "Devam", "Iptal");
			}
			if(listitem == 2) //Whore
			{
				ShowPlayerDialogEx(playerid, WHOREJOB, DIALOG_STYLE_MSGBOX, "Hayat Kadn", "Bilgi:\n\nBu meslek, elenmek isteyen mterileri memnun etmek iin kullanlr.\nBu meslek gelen mterilere sex teklif eden bir meslektir.\nBu meslek illegaldir ve yaparken yakalanabilirsiniz.", "Devam", "Iptal");
			}
			if(listitem == 3) //Drug Dealer
            {
				ShowPlayerDialogEx(playerid, DRUGDEALERJOB, DIALOG_STYLE_MSGBOX, "Uyuturucu Satcs", "Bilgi:\n\nBu meslek, almak isteyen oyunculara pot ve crack satmak iin kullanlr.\nMeslekte yksek level olduunuz zaman kullanldr.\nLevel atladka daha fazla crack & pot tayabilirsin.\nBu meslek illegaldir ve yaparken yakalanabilirsiniz.", "Devam", "Iptal");
			}
			if(listitem == 4) //Mechanic
			{
				ShowPlayerDialogEx(playerid, MECHANICJOB, DIALOG_STYLE_MSGBOX, "Tamirci", "Bilgi:\n\nBu meslek ara tamir etmek, nos ve hidrolik eklemek iin kullanlr.\nBu meslek bazen iyi para kazandrr ancak baz zamanlarda kimsenin yardma ihtiyac olmaz.\nBu meslek legal bir meslektir.", "Devam", "Iptal");
			}
			if(listitem == 5) //Bodyguard
			{
				ShowPlayerDialogEx(playerid, BODYGUARDJOB, DIALOG_STYLE_MSGBOX, "Bodyguard", "Bilgi:\n\nBu meslek oyunculara yarm zrh vermek iindir.\nBu meslek karl bir meslektir. zellikle GYM'nin orda zrh isteyenler bulunmaktadr.\nBu meslek legal bir meslektir.", "Devam", "Iptal");
			}
			if(listitem == 6) //Arms Dealer
			{
				ShowPlayerDialogEx(playerid, ARMSDEALERJOB, DIALOG_STYLE_MSGBOX, "Silah Satcs", "Bilgi:\n\nBu meslek oyunculara silah satmak iin kullanlr.\nBu meslek karl bir meslektlir. Level atladka byk silahlar satar daha fazla para kazanrsnz.\nBu meslek illegaldir ve yaparken yakalanabilirsiniz.", "Devam", "Iptal");
			}
			if(listitem == 7) //Boxer
			{
				ShowPlayerDialogEx(playerid, BOXERJOB, DIALOG_STYLE_MSGBOX, "Boksr", "Bilgi:\n\nBu meslek Ganton GYM ierisinde dvmenizi salar.\nBu meslek karl bir meslek deildir ancak ampiyon olabilirsin.\nBu meslek legal bir meslektir.", "Devam", "Iptal");
			}
 			if(listitem == 8) //Drug Smuggling
            {
				ShowPlayerDialogEx(playerid, SMUGGLEJOB, DIALOG_STYLE_MSGBOX, "Uyuturucu Kaaks", "Bilgi:\n\nBu meslek crack laboratuvarndaki crackleri ve pot evindeki potlar dolu tutmaya yarar.\nBu meslek birok kii genellikle pot ve crack aldndan dolay karldr. Ancak bazen crack ve potlarnz almaya alrlar.\nBu meslek illegaldir ve yaparken yakalanabilirsiniz.", "Devam", "Iptal");
			}
			if(listitem == 9) //Craftsman
            {
				ShowPlayerDialogEx(playerid, CRAFTJOB, DIALOG_STYLE_MSGBOX, "Zanaatkar", "Bilgi:\nBu meslek elde edilen zanaatleri baka oyunculara satmak iin kullanlr.\nBu meslekte birok nemli eya yapldndan dolay, olduka karldr.\nBu meslek legal bir meslektir.\n\nKomutlar:\n/paketal /zanaat\nMeslein Yeri: Bu meslek Willowfield'deki  hurdalkta bulunan meslek ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
			}
			if(listitem == 10) //Bartender
            {
				ShowPlayerDialogEx(playerid, BARTENDERJOB, DIALOG_STYLE_MSGBOX, "Barmen", "Bilgi:\nBu meslek baka oyunculara iki satmak iin kullanlabilir.\nBu meslek legal bir meslektir.\n\nKomutlar:\n/iceceksat\nMeslein Yeri: Bu meslek Alhambra Kulb'nn ierisindeki meslek ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
			}
			if(listitem == 11) //Trucker
            {
				ShowPlayerDialogEx(playerid, TRUCKERJOB, DIALOG_STYLE_MSGBOX, "Kamyoncu","Bilgi:\nBu meslek kamyon teslimatlar yaparak para kazanmanz salar\nBu bir legal meslektir. Ancak illegal eyalar tarsanz yada kamyon soyarsanz yakalanabilirsiniz. \n\nKomutlar:\n/yukyukle /yukkontrol /yukcal\nMeslein Yeri: Bu meslek Ocean Docks'taki meslek alma ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
			}
			if(listitem == 12) //Pizza Boy
            {
				ShowPlayerDialogEx(playerid, PIZZAJOB, DIALOG_STYLE_MSGBOX, "Pizzac","Bilgi:\nBu meslek az ama hzl yoldan para kazanmak iin kullanlabilir. Dominos pizzacsndan pizzalar verilen adrese teslim etmeniz gerek.\n Ne kadar ge giderseniz, o kadar az para kazanrsnz.\n\nKomutlar:\n/pizzaal\nMeslein Yeri: Bu meslek Idlewood pizzacsnn ierisinde bulunan meslek ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
			}
   			if(listitem == 13) //Tir Job
            {
				ShowPlayerDialogEx(playerid, TIRJOB, DIALOG_STYLE_MSGBOX, "Trc","Bilgi:\nBu meslek uzun ama yava yoldan para kazanmak iin kullanlabilir. Los Santos trc irketinden verilen dorseyi teslim etmeniz gerekir..\n Sunucumuzda en fazla para veren meslektir.\n\nKomutlar:\n/tiryukle\nMeslein Yeri: Bu meslek Las Veanturas tirci irketinden alabilirsiniz. (sar ikon)", "Bitir", "Iptal");
			}
			if(listitem == 14) //Cimento Job
            {
				ShowPlayerDialogEx(playerid, CIMENTOJOB, DIALOG_STYLE_MSGBOX, "imentocu","Bilgi:\nBu meslek uzun ama yava yoldan para kazanmak iin kullanlabilir. Los Santos'da ki imento irketinden verilen dorseyi teslim etmeniz gerekir..\n Sunucumuzda en fazla para veren mesleklerden biridir.\n\nKomutlar:\n/cimentoyukle\nMeslein Yeri: Bu meslei Los Santos Idlewood Benzincisin yanndan alabilirsiniz. (sar ikon)", "Bitir", "Iptal");
			}
		}
	} */
	else if(dialogid == SMUGGLEJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, SMUGGLEJOB3, DIALOG_STYLE_MSGBOX, "Uyuturucu Kaaks", "Komutlar:\n\n/kasaal [isim(Pot/Crack)]\n\nMeslein Yeri: Bu meslei Crack Laboratuvar'nn nndeki meslek ikonundan alabilirsin.(sar ikon)", "Bitir", "Iptal");
		}
	}
	else if(dialogid == SMUGGLEJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, SMUGGLEJOB2, DIALOG_STYLE_MSGBOX, "Uyuturucu Kaaks", "Not: Uyuturucu karmak iin bir bekleme sresi yok ancak daha fazla para kazanmak iin level atlamalsn. Bu meslek iin 5 level var.", "Devam", "Iptal");
  		}
 	}
	else if(dialogid == TAXIJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, TAXIJOB2, DIALOG_STYLE_MSGBOX, "Taksici", "Not: Bu meslekte herhangi bir bekleme sresi ve meslek leveli yoktur. Baka bir deyile, daha fazla para kazanmak iin level atlamaya ihtiya yok.", "Devam", "Iptal");
		}
	}
	else if(dialogid == TAXIJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, TAXIJOB3, DIALOG_STYLE_MSGBOX, "Taksici", "Komutlar:\n\n/taksimetre [$1 - $50]\n\nMeslein Yeri: Bu meslek taksi durann nndeki meslek ikonunun nnden alnabilir. (sar ikon)", "Bitir", "Iptal");
		}
	}
	if(dialogid == BOXERJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, BOXERJOB3, DIALOG_STYLE_MSGBOX, "Boksr", "Komutlar:\n\n/dovus [playerid/Name], /boxistatistik\n\nMeslein Yeri: Bu meslek GYM ierisindeki meslek ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
		}
	}
	else if(dialogid == BOXERJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, BOXERJOB2, DIALOG_STYLE_MSGBOX, "Boksr", "Not: Bu meslekte dvmek iin bekleme sresi yok ve 3 level var.\n\nLevel 1: Acemi Boksr.\nLevel 2: Amatr Boksr.\nLevel 3: Profesyonel Boksr.", "Devam", "Iptal");
		}
	}
	if(dialogid == ARMSDEALERJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, ARMSDEALERJOB2, DIALOG_STYLE_MSGBOX, "Silah Satcs", "Not: Bu meslekte silah satma sresi her zaman 10 saniyedir.\n\nYetenekler:\n\nLevel 1 Silahlar: iekler, Muta, SDPistol, ve Shotgun.\nLevel 2 Silahlar: Bezbol Sopas, Baston, MP5, ve Rifle.\nLevel 3 Silahlar: Krek ve Deagle.\nLevel 4 Silahlar: Istaka, Golf Sopas, AK47 ve M4.\nLevel 5 Silahlar: Katana, Dildo, Sniper ve SPAS12.", "Devam", "Iptal");
		}
	}
	else if(dialogid == ARMSDEALERJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, ARMSDEALERJOB3, DIALOG_STYLE_MSGBOX, "Silah Satcs", "Komutlar:\n\n/paketal, /silahsat\n\nMeslein Yeri: Bu meslek haritada silah ikonu olan byk silahnn nndeki meslek ikonundan alnabilir.", "Bitir", "Iptal");
		}
	}
	else if(dialogid == BODYGUARDJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, BODYGUARDJOB3, DIALOG_STYLE_MSGBOX, "Bodyguard", "Komutlar:\n\n/zirhsat[Oyuncu ID/sim] [cret $200 - $1000]\n\nMeslein Yeri: Bu meslek Ganton GYM'in nndeki meslek ikonunndan alnabilir. (sar ikon)", "Bitir", "Iptal");
		}
	}
	if(dialogid == BODYGUARDJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, BODYGUARDJOB2, DIALOG_STYLE_MSGBOX, "Bodyguard", "Not: Bu meslekte level yoktur. Komutlarn kullanm sreleri 10 saniyedir. Baka bir deyile, daha fazla para kazanmak iin level atlamaya ihtiya yok.", "Devam", "Iptal");
		}
	}
	else if(dialogid == MECHANICJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, MECHANICJOB2, DIALOG_STYLE_MSGBOX, "Tamirci", "Not: Meslekte komut kullanma sresi her zaman 1 dakikadr.", "Devam", "Iptal");
		}
	}
	else if(dialogid == MECHANICJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, MECHANICJOB3, DIALOG_STYLE_MSGBOX, "Tamirci", "Komutlar:\n\n/fix, /tamtamir, /hidrolik, /nos, /tisbasi\n\nMeslein Yeri: Bu meslek Ocean Docks'taki meslek ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
		}
	}
	else if(dialogid == DRUGDEALERJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, DRUGDEALERJOB2, DIALOG_STYLE_MSGBOX, "Uyuturucu Satcs", "Not: Meslekte komut kullanma sresi her zaman 1 dakikadr.\n\nYetenekler:\n\nLevel 1: 10 pot 5 crack tayabilirsin.\nLevel 2: 20 pot 15 crack tayabilirsin.\nLevel 3: 30 pot 15 crack tayabilirsin.\nLevel 4: 40 pot 20 crack tayabilirsin.\nLevel 5: 50 pot 25 crack tayabilirsin.", "Devam", "Iptal");
		}
	}
	else if(dialogid == DRUGDEALERJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, DRUGDEALERJOB3, DIALOG_STYLE_MSGBOX, "Uyuturucu Satcs", "Komutlar:\n\n/potsat, /potal, /cracksat, /crackal\n\nMeslein Yeri: Bu meslek, Ganton GYM'in karsnda bulunan haritadaki 'D' ikonundan alnabilir.", "Bitir", "Iptal");
		}
	}
	else if(dialogid == WHOREJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, WHOREJOB3, DIALOG_STYLE_MSGBOX, "Hayat Kadn", "Komutlar:\n\n/sex\n/sex mteriye sex yapma istei gnderen komuttur. yalnzca aratayken kullanlabilir.\n\nMeslein Yeri: Bu meslek, Pig Pen kulb ierisindeki meslek ikonundan alnabilir. (sar ikon)", "Bitir", "Iptal");
		}
	}
	else if(dialogid == LAWYERJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, LAWYERJOB3, DIALOG_STYLE_MSGBOX, "Avukat", "Komutlar:\n\n/koru, /serbestbirak, /arananlar, /avukatisbasi\n\nMeslein Yeri: Bu meslek Master bankasnn yaknndaki ikondan alnabilir.(haritadaki sar ikon)", "Bitir", "Iptal");
		}
	}
	else if(dialogid == WHOREJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, WHOREJOB2, DIALOG_STYLE_MSGBOX, "Hayat Kadn", "Not: Meslekte komut kullanma sresi her zaman 1 dakikadr.\n\nYetenekler:\n\nLevel 1: Birine AIDS bulatrma/olma ansn ok yksek.\nLevel 2: Birine AIDS bulatrma/olma ansn yksek.\nLevel 3: Birine AIDS bulatrma/olma ansn orta seviye.\nLevel 4: Birine AIDS bulatrma/olma ansn dk seviye.\nLevel 5: Birine AIDS bulatrma/olma ansn ok dk seviye.", "Devam", "Iptal");
		}
	}
	else if(dialogid == LAWYERJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, LAWYERJOB2, DIALOG_STYLE_MSGBOX, "Avukat", "Not: Meslekte level atladka, komutlar tekrar kullanabilme sreleri azalr.\n\nYetenekler:\n\nLevel 1: Mahkumlarn cezalarn 1 dakika azaltabilirsin.\nLevel 2: Mahkumlarn cezalarn 2 dakika azaltabilirsin.\nLevel 3: Mahkumlarn cezalarn 3 dakika azaltabilirsin.\nLevel 4: Mahkumlarn cezalarn 4 dakika azaltabilirsin.\nLevel 5: Mahkumlarn cezalarn 5 dakika azaltabilirsin.", "Devam", "Iptal");
		}
	}
	else if(dialogid == DETECTIVEJOB2)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, DETECTIVEJOB3, DIALOG_STYLE_MSGBOX, "Dedektif", "Komutlar:\n\n//takipet\n/takipet bir oyuncunun anlk yerini bulabilecein bir komuttur.\n\nMeslein Yeri: Bu meslek Los Santos Polis Departman ierisinden alnabilir.", "Bitir", "Iptal");
		}
	}
    else if(dialogid == DETECTIVEJOB)
	{
   		if(response)
		{
			ShowPlayerDialogEx(playerid, DETECTIVEJOB2, DIALOG_STYLE_MSGBOX, "Dedektif", "Yetenekler:\n\nLevel 1: Kiiyi 4 saniyeliine bulabilirsin.Kullanma sresi 2 dakikadr.\nLevel 2: Kiiyi 6 saniyeliine bulabilirsin. Kullanma sresi 80 saniyedir.\nLevel 3: Kiiyi 8 saniyeliine bulabilirsin.Kullanma sresi 1 dakikadr.\nLevel 4: \nLevel 3: Kiiyi 10 saniyeliine bulabilirsin.Kullanma sresi 30 saniyedir.\nLevel 5: Kiiyi 12 saniyelik bulabilirsin.Kullanma sresi 15 saniyedir.", "Devam", "Iptal");
		}
	}
	else if(dialogid == FINDJOB)
	{
		if(response)
		{
			if(listitem == 0)
			{
   				FindingJob[playerid] = 1;
			    SetPlayerCheckpoint(playerid, 1555.170654, -1675.652343, 16.195312, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Dedektiflik mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");

			}
			if(listitem == 1)
			{
   				FindingJob[playerid] = 2;
			    SetPlayerCheckpoint(playerid, 1380.827148, -1088.673339, 27.384355, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Avukatlk mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 2)
			{
   				FindingJob[playerid] = 3;
			    SetPlayerCheckpoint(playerid, 2421.525878, -1219.291503, 25.558557, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Hayat kadn mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 3)
			{
   				FindingJob[playerid] = 4;
			    SetPlayerCheckpoint(playerid, 2166.397216, -1675.312622, 15.085937, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Uyuturucu satcsn setin. Meslei satn alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 4)
			{
   				FindingJob[playerid] = 5;
			    SetPlayerCheckpoint(playerid, 2329.970214, -2315.306884, 13.546875, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Tamirci mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 5)
			{
   				FindingJob[playerid] = 6;
			    SetPlayerCheckpoint(playerid, 2226.128662, -1718.083984, 13.515367, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Bodyguard mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 6)
			{
   				FindingJob[playerid] = 7;
			    SetPlayerCheckpoint(playerid, 1366.455566, -1275.152709, 13.546875, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Silah satcsn setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 7)
			{
   				FindingJob[playerid] = 8;
			    SetPlayerCheckpoint(playerid, 2229.904052, -1721.263793, 13.561338, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Boksrl setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 8)
			{
   				FindingJob[playerid] = 9;
			    SetPlayerCheckpoint(playerid, 2354.260498, -1169.261840, 28.004892, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Uyuturucu kacakln setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 9)
			{
   				FindingJob[playerid] = 10;
			    SetPlayerCheckpoint(playerid, 1741.000, -000.000, 000.000, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Taksicilik mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 10)
			{
   				FindingJob[playerid] = 11;
			    SetPlayerCheckpoint(playerid, 2195.686035, -1972.952880, 13.558935, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Zanaatkar mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 11)
			{
   				FindingJob[playerid] = 12;
			    SetPlayerCheckpoint(playerid, 1836.902587, -1682.565063, 13.328538, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Barmenlii setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 12)
			{
   				FindingJob[playerid] = 13;
			    SetPlayerCheckpoint(playerid, 2214.893798, -2661.312255, 13.546875, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Kamyoncuyu setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 13)
			{
   				FindingJob[playerid] = 14;
			    SetPlayerCheckpoint(playerid, 2105.363037, -1806.507812, 13.554687, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Pizzac mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
            }
			if(listitem == 14)
			{
   				FindingJob[playerid] = 16;
			    SetPlayerCheckpoint(playerid, 1679.0898,2340.3586,10.0411, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Tr fr mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
			if(listitem == 15)
			{
   				FindingJob[playerid] = 17;
			    SetPlayerCheckpoint(playerid, 1942.6814,-1821.7446,13.7095, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "imento fr mesleini setin. Meslei alabilmek iin haritandaki krmz noktaya git.");
			}
		}
	}
	else if(dialogid == HARITA)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    SetPlayerCheckpoint(playerid, 1542.431884, -1675.587280, 13.554489, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "LSPD'i setin, haritanda kan krmz noktaya git!");

			}
			if(listitem == 1)
			{
   				SetPlayerCheckpoint(playerid, 348.765075, -1512.152343, 32.969165, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "FBI' setin, haritanda kan krmz noktaya git!");
            }
			if(listitem == 2)
			{
   			    SetPlayerCheckpoint(playerid, 1544.757324, -2180.179931, 13.546875, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "LSFMD'yi setin, haritanda kan krmz noktaya git!");
			}
			if(listitem == 3)
			{
   				SetPlayerCheckpoint(playerid, 1529.646850, -1673.496704, 13.382812, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Kzlay (Merkez)'i setin, haritanda kan krmz noktaya git!");
			}
			if(listitem == 4)
			{
   				SetPlayerCheckpoint(playerid, 2096.905517, -1807.264038, 13.552999, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Domino's Pizzay setin, haritanda kan krmz noktaya git!");
			}
  	        if(listitem == 5)
			{
   				SetPlayerCheckpoint(playerid, 2217.546386, -2644.021972, 13.546875, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Yldrm Nakliyat (Kamyon) setin, haritanda kan krmz noktaya git!");
			}
			if(listitem == 6)
			{
   				SetPlayerCheckpoint(playerid, 1315.356445, -1387.445800, 13.562341, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "zel Mekan' setin, haritanda kan krmz noktaya git!");
			}
			if(listitem == 7)
			{
   				SetPlayerCheckpoint(playerid, 844.619934, -591.173767, 17.786298, 3);
			    SendClientMessage(playerid, COLOR_WHITE, "Ara Ceza deme Noktas'n setin, haritanda kan krmz noktaya git!");
			}
		}
	}
    else if(dialogid == SIGNCHECK)
	{
 		if(!response) return 1;
		new
			szMessage[150];
   		if(strlen(inputtext) < 1)
		{
            format(szMessage, sizeof(szMessage), "mzalamadan nce ek kodunu girmek zorundasn.\n\nek kodu: %d\n\nMaan alabilmek iin ek kodunu gir.", PayCheckCode[playerid]);
			ShowPlayerDialogEx(playerid, SIGNCHECK, DIALOG_STYLE_INPUT, "ek imzala", szMessage, "ek imzala","Iptal");
			return 1;
        }
		if(!IsNumeric(inputtext))
		{
 			format(szMessage, sizeof(szMessage), "Yanl ek kodu. ek kodu yalnzca rakam ierir.\n\nek kodu: %d\n\nMaan alabilmek iin ek kodunu gir.", PayCheckCode[playerid]);
			ShowPlayerDialogEx(playerid, SIGNCHECK, DIALOG_STYLE_INPUT, "ek imzala", szMessage, "ek imzala","Iptal");
			return 1;
		}
        if(strlen(inputtext) > 6 || (strlen(inputtext) > 0 && strlen(inputtext) < 6))
		{
           	format(szMessage, sizeof(szMessage), "Yanl ek kodu. ek kodu 6 rakam ierir.\n\nek kodu: %d\n\nMaan alabilmek iin ek kodunu gir.", PayCheckCode[playerid]);
			ShowPlayerDialogEx(playerid, SIGNCHECK, DIALOG_STYLE_INPUT, "ek imzala", szMessage, "ek imzala","Iptal");
			return 1;
        }

        new code = strval(inputtext);
        if(code == PayCheckCode[playerid])
		{
            PayCheckCode[playerid] = 0;

			// VIP Disabled
			/*if(PlayerInfo[i][pDonator] > 0)
			{
    			PlayerInfo[i][pPayCheck] += PlayerInfo[i][pPayCheck] / 2;
			}*/

            new PayCheck = PlayerInfo[playerid][pPayCheck] / 10;


            new TaxCost;
            new TaxPercentage;
            if(PayCheck < 1250)
            {
				TaxPercentage = 10;
				TaxCost = (PayCheck / 100) * 10;
			}
			else if(PayCheck >= 1250 && PayCheck <= 1999)
			{
			    TaxPercentage = 15;
			    TaxCost = (PayCheck / 100) * 15;
			}
			else if(PayCheck >= 2000 && PayCheck <= 2499)
			{
			    TaxPercentage = 25;
			    TaxCost = (PayCheck / 100) * 25;
			}
			else if(PayCheck >= 2500 && PayCheck <= 3499)
			{
			    TaxPercentage = 30;
			    TaxCost = (PayCheck / 100) * 30;
			}
			else if(PayCheck >= 3500)
			{
			    TaxPercentage = 35;
			    TaxCost = (PayCheck / 100) * 35;
			}

            SendClientMessage(playerid, COLOR_WHITE, "________ BANKA AIKLAMASI ________");
            format(string, sizeof(string), "  Maa: $%d |  Vergi: $%d (yzde %d)", PayCheck, TaxCost, TaxPercentage);
            SendClientMessage(playerid, COLOR_GRAD1, string);

			// VIP Disabled
			/*switch(PlayerInfo[i][pDonator])
			{
    			case 0:
    			{
        			if(interest > 50000) interest = 50000;
        			format(string, sizeof(string), "  Balance: $%d  |  Interest rate: 0.1 percent (5k max)", PlayerInfo[i][pBank]);
        			SendClientMessage(i, COLOR_GRAD1, string);
    			}
    			case 1:
    			{
   			 		if(interest > 100000) interest = 100000;
					format(string, sizeof(string), "  Balance: $%d  |  Interest rate: 0.1 percent {FFFF00}(Ruby Donator: 100k max)", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_GRAD1, string);
				}
				case 2:
				{
					if(interest > 150000) interest = 150000;
					format(string, sizeof(string), "  Balance: $%d  |  Interest rate: 0.1 percent {FFFF00}(Sapphire Donator: 150k max)", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_GRAD1, string);
				}
				case 3:
				{
					if(interest > 200000) interest = 200000;
					format(string, sizeof(string), "  Balance: $%d  |  Interest rate: 0.1 percent {FFFF00}(Diamond Donator: 200k max)", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_GRAD1, string);
				}
				case 4, 5:
				{
					if(interest > 250000) interest = 250000;
					format(string, sizeof(string), "  Balance: $%d  |  Interest rate: 0.1 percent {FFFF00}(Undefined Donator: 250k max)", PlayerInfo[i][pBank]);
					SendClientMessage(i, COLOR_GRAD1, string);
				}
			}*/

            new interest;
            if(PlayerInfo[playerid][pDonator] == 0) interest = PlayerInfo[playerid][pBank] / 1000;
            else if(PlayerInfo[playerid][pDonator] == 1) interest = PlayerInfo[playerid][pBank] / 500;
            else if(PlayerInfo[playerid][pDonator] == 2) interest = PlayerInfo[playerid][pBank] / 333;
            else if(PlayerInfo[playerid][pDonator] == 3) interest = PlayerInfo[playerid][pBank] / 200;

            if(interest > 5000) interest = 5000;

            if(PlayerInfo[playerid][pDonator] == 0) format(string, sizeof(string), "  Eski Bakiye: $%d  |  Faiz oran: yzde 0.1 (5k max)", PlayerInfo[playerid][pBank]);
            else if(PlayerInfo[playerid][pDonator] == 1) format(string, sizeof(string), "  Eski Bakiye: $%d  |  Faiz oran: yzde 0.2 (5k max)", PlayerInfo[playerid][pBank]);
            else if(PlayerInfo[playerid][pDonator] == 2) format(string, sizeof(string), "  Eski Bakiye: $%d  |  Faiz oran: yzde 0.3 (5k max)", PlayerInfo[playerid][pBank]);
            else if(PlayerInfo[playerid][pDonator] == 3) format(string, sizeof(string), "  Eski Bakiye: $%d  |  Faiz oran: yzde 0.5 (5k max)", PlayerInfo[playerid][pBank]);

            SendClientMessage(playerid, COLOR_GRAD1, string);

			if(PlayerInfo[playerid][pFaction] == 1 || PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 3 || PlayerInfo[playerid][pFaction] == 5 || PlayerInfo[playerid][pFaction] == 9) {
				if(PlayerInfo[playerid][pRank] == 0) {
					PlayerInfo[playerid][pBank] += FACTION_PAY_PER_RANK / 2;
					format(string,sizeof(string),"  Oluum demesi: $%d", FACTION_PAY_PER_RANK / 2);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				} else {
					PlayerInfo[playerid][pBank] += PlayerInfo[playerid][pRank] * FACTION_PAY_PER_RANK;
					format(string,sizeof(string),"  Oluum demesi: $%d", PlayerInfo[playerid][pRank] * 100);
					SendClientMessage(playerid, COLOR_GRAD2, string);
				}
			}

            //Tax += TaxCost;
            PlayerInfo[playerid][pBank] += PayCheck;
            PlayerInfo[playerid][pBank] += interest;
            PlayerInfo[playerid][pBank] -= TaxCost;

            format(string, sizeof(string), "  Alnan Faiz: $%d", interest);
            SendClientMessage(playerid, COLOR_GRAD3, string);
            SendClientMessage(playerid, COLOR_GRAD4, "______________________________________");
            format(string, sizeof(string), "  Yeni Bakiye: $%d |  denen Kira: $%d", PlayerInfo[playerid][pBank], (PlayerInfo[playerid][pRenting] != INVALID_HOUSE_ID) ? (HouseInfo[PlayerInfo[playerid][pRenting]][hRentFee]) : (0));
            SendClientMessage(playerid, COLOR_GRAD5, string);

            GameTextForPlayer(playerid, "~w~Maas Alindi", 5000, 1);

            PlayerInfo[playerid][pPayReady] = 0;
            PlayerInfo[playerid][pPayCheck] = 0;

            #if defined DOUBLE_EXP_ENABLED
				new hour,minuite,second;
				gettime(hour,minuite,second);
				if(DoubleEXPcheck(hour))
				{
				    PlayerInfo[playerid][pRespect] += 2;
				    SendClientMessage(playerid, COLOR_YELLOW, "* ki kat XP etkinlii olduu iin 2 sayg puan kazandn.");
				}
				else
				{
	    			SendClientMessage(playerid, COLOR_YELLOW, "* ki kat XP etkinlii olmad iin yalnzca 1 sayg puan kazandn.");
					PlayerInfo[playerid][pRespect]++;
				}
            #else
            	PlayerInfo[playerid][pRespect]++;
            #endif

            PlayerInfo[playerid][pConnectTime]++;
            SignedPaycheck[playerid] = 1;
            MissedPaychecks[playerid] = 0;

            // Referrals
            if(PlayerInfo[playerid][pConnectTime] == 8 && (strlen(PlayerInfo[playerid][pReferredBy]) > 3 && strlen(PlayerInfo[playerid][pReferredBy]) < 20))
            {
            	new giveplayerid = ReturnUser(PlayerInfo[playerid][pReferredBy]);
    	        if(IsPlayerConnected(giveplayerid))
				{
    				PlayerInfo[giveplayerid][pRefTokens]++;
				    format(string, sizeof(string), "Senin tarafndan nerilen arkadan 8 saatlik oyun oynama saatine eriti ve bu yzden 1 neri jetonu kazandn.", GetPlayerNameEx(playerid));
				    SendClientMessage(giveplayerid, COLOR_YELLOW, string);

				    format(string, sizeof(string), "8 oyun oynama saatine eritin ve %s tarafndan nerildiin iin, ona 1 neri jetonu kazandrdn.", PlayerInfo[playerid][pReferredBy]);
				    SendClientMessage(playerid, COLOR_YELLOW, string);
				}
				else  {
				    /*OnPlayerOfflineLogin(PlayerInfo[playerid][pReferredBy]);
				    PlayerInfo[MAX_PLAYERS][pRefTokensOffline]++;
				    OnPlayerOfflineSave(PlayerInfo[playerid][pReferredBy]);*/

				    new
				        szQuery[128];

					format(szQuery, sizeof(szQuery), "SELECT RefTokensOffline FROM players WHERE Username = '%s'", PlayerInfo[playerid][pReferredBy]);
					mysql_query(szQuery, THREAD_GIVE_REF_TOKENS, playerid, g_MySQLConnections[0]);
				}
            }
        }
        else
		{
            SendClientMessage(playerid, COLOR_WHITE, "Yanl kod");
        }
    }
	else if(dialogid == 2398)
	{
	    if(strlen(inputtext) >= 64)
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "ifrende maksimum 64 karakter kullanabilirsin.");
	    }
	    else
	    {
	        if(strlen(inputtext) >= 1)
	        {
	            if(!response)
	            {
	                SendClientMessage(playerid, COLOR_WHITE, "ifre deitirmekten vazgetin.");
	            }
	            else
	            {
					new passbuffer[129];
					WP_Hash(passbuffer, sizeof(passbuffer), inputtext);

	             	format(PlayerInfo[playerid][pKey], 129, "%s", passbuffer);
		            format(string, sizeof(string), "Karakterinin ifresini '%s' olarak deitirdin.", inputtext);

		            SendClientMessage(playerid, COLOR_YELLOW, string);
		            OnPlayerStatsUpdate(playerid);

					format(string, sizeof(string), "%s (IP: %s) karakterinin ifresini deitirdi.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pIP]);
					Log("logs/password.log", string);
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "ifren 1 karakterden fazla olmak zorunda.");
	        }
	    }
	}
	else if(dialogid == DIALOG_NAMECHANGE)
	{
	    if(!response || strlen(inputtext) == 0) return SendClientMessage(playerid, COLOR_WHITE, "smini deitirmekten vazgetin.");
	    if(strlen(inputtext) > 20)
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "smin 20 karakterden fazla karakter ieremez.");
	    }
	    else
	    {
	        if(strlen(inputtext) >= 1)
	        {
	            if(!response)
	            {
	                SendClientMessage(playerid, COLOR_WHITE, "smini deitirmekten vazgetin.");
	            }
	            else
	            {
		            for(new i = 0; i < strlen(inputtext); i++)
					{
					    if(inputtext[i] == ' ') return SendClientMessage(playerid, COLOR_GRAD2, "sminizde boluk yerine '_' kullann.");
					}
					if(strfind(inputtext, "_", true) == -1)
					{
						SendClientMessage(playerid, COLOR_WHITE, "sim deitirme istei reddedildi. Ltfen doru formatta isim sein: sim_Soyisim.");
						return 1;
					}
					new namechangecost;
					namechangecost = (PlayerInfo[playerid][pLevel]) * 1500;
					SetPVarInt(playerid, "requestpath", 2);
					if(PlayerInfo[playerid][pFaction] == 2 || PlayerInfo[playerid][pFaction] == 4)
					{
	    				new String[128];
						SetPVarInt(playerid, "RequestingNameChange", 1);
						SetPVarString(playerid, "NewNameRequest", inputtext);
						new playername[MAX_PLAYER_NAME];
						GetPlayerName(playerid, playername, sizeof(playername));
		            	format(String, sizeof(String), "smini herhangi bir cret demeden %s'den %s olarak deitirmek iin istek yolladn.(Hitman yada FBI). Admin onaylayana kadar bekle.", playername, inputtext, namechangecost);
		            	SendClientMessage(playerid, COLOR_YELLOW, String);
		            	format(String, sizeof(String), "{AA3333}AdminUyars{FFFF00}: %s (ID %d)  cretsiz olarak ismini %s yapmak istiyor. /ikabul %d (/kabul), yada /ired %d (red).", playername, playerid, inputtext, playerid, playerid);
		            	ABroadCast(COLOR_YELLOW, String, 1);
		            	return 1;
					}
					if(GetPlayerCash(playerid) >= namechangecost)
					{
					    new String[128];
						SetPVarInt(playerid, "RequestingNameChange", 1);
						SetPVarString(playerid, "NewNameRequest", inputtext);
						SetPVarInt(playerid, "NameChangeCost", namechangecost);
						new playername[MAX_PLAYER_NAME];
						GetPlayerName(playerid, playername, sizeof(playername));
		            	format(String, sizeof(String), "$%d deyerek ismini %s'dan % yapmak iin istek yolladn. Admin onay bekliyorsun.", playername, inputtext, namechangecost);
		            	SendClientMessage(playerid, COLOR_YELLOW, String);
		            	format(String, sizeof(String), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) ismini %s yapmak iin $%d deyecek %s 'dan % yapmak iin istek yollad. /ikabul %d (kabul).", playername, playerid, inputtext, namechangecost, playerid);
		            	ABroadCast(COLOR_YELLOW, String, 1);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_GRAD2, "sim deitirmek iin yeterli paran yok.");
					}
	            }
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "smin 1 karakterden fazla olmal.");
	        }
	    }
	}
	else if(dialogid == DIALOG_NAMECHANGE2)
	{
	    if(!response || strlen(inputtext) == 0) return Kick(playerid);
	    if(strlen(inputtext) >= 20)
	    {
	        SendClientMessage(playerid, COLOR_WHITE, "smin 20 karakterden fazla karakter ieremez.");
	        ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "cretsiz isim deitirme","Buras bir RP serveridir. RP serverlerinde isminizi u formatta yapmalsnz: sim_Soyisim.\nrnein: James_Bond\n\nBir admin sana uanki isminin formatn dzeltmen iin cretsiz isim deitirme teklif etti. Ltfen istediin ismi aaya gir.\n\nUyar: Eer iptale basarsanz, sunucudan otomatik olarak kickleneceksiniz.", "Deitir", "Iptal");
	    }
	    else
	    {
	        if(strlen(inputtext) >= 1)
	        {
	            if(!response)
	            {
				    ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "cretsiz isim deitirme","Buras bir RP serveridir. RP serverlerinde isminizi u formatta yapmalsnz: sim_Soyisim.\nrnein: James_Bond\n\nBir admin sana uanki isminin formatn dzeltmen iin cretsiz isim deitirme teklif etti. Ltfen istediin ismi aaya gir.\n\nUyar: Eer iptale basarsanz, sunucudan otomatik olarak kickleneceksiniz.", "Deitir", "Iptal");
				}
	            else
	            {
           			for(new i = 0; i < strlen(inputtext); i++)
					{
    					if(inputtext[i] == ' ')
    					{
							SendClientMessage(playerid, COLOR_WHITE, "sminizde boluk yerine '_' kullann.");
							ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "cretsiz isim deitirme","Buras bir RP serveridir. RP serverlerinde isminizi u formatta yapmalsnz: sim_Soyisim.\nrnein: James_Bond\n\nBir admin sana uanki isminin formatn dzeltmen iin cretsiz isim deitirme teklif etti. Ltfen istediin ismi aaya gir.\n\nUyar: Eer iptale basarsanz, sunucudan otomatik olarak kickleneceksiniz.", "Deitir", "Iptal");
							return 1;
						}
					}
					if(strfind(inputtext, "_", true) == -1)
					{
						SendClientMessage(playerid, COLOR_WHITE, "sim deitirme istei reddedildi. Ltfen doru formatta isim sein: sim_Soyisim.");
						ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "cretsiz isim deitirme","Buras bir RP serveridir. RP serverlerinde isminizi u formatta yapmalsnz: sim_Soyisim.\nrnein: James_Bond\n\nBir admin sana uanki isminin formatn dzeltmen iin cretsiz isim deitirme teklif etti. Ltfen istediin ismi aaya gir.\n\nUyar: Eer iptale basarsanz, sunucudan otomatik olarak kickleneceksiniz.", "Deitir", "Iptal");
						return 1;
					}
     				else
					{
						new String[128];
						SetPVarInt(playerid, "RequestingNameChange", 1);
						SetPVarInt(playerid, "NameChangeCost", 0);
						SetPVarString(playerid, "NewNameRequest", inputtext);
						new playername[MAX_PLAYER_NAME];
						GetPlayerName(playerid, playername, sizeof(playername));
    					format(String, sizeof(String), "smini %s'den % olarak deitirmek iin istek yolladn. Admin onay bekliyorsun.", playername, inputtext);
       					SendClientMessage(playerid, COLOR_YELLOW, String);
          				format(String, sizeof(String), "{AA3333}AdminUyars{FFFF00}:%s (ID %d) adl oyuncu ismini %s yapmak istiyor. (NON-RP sim & cretsiz) - /ikabul %d (kabul), yada /ired %d (red).", playername, playerid, inputtext, playerid, playerid);
            			ABroadCast(COLOR_YELLOW, String, 1);
            			return 1;
            		}
				}
	        }
	        else
	        {
	            SendClientMessage(playerid, COLOR_WHITE, "smin 1 karakterden fazla olmal.");
	            ShowPlayerDialogEx(playerid, DIALOG_NAMECHANGE2, DIALOG_STYLE_INPUT, "cretsiz isim deitirme","Buras bir RP serveridir. RP serverlerinde isminizi u formatta yapmalsnz: sim_Soyisim.\nrnein: James_Bond\n\nBir admin sana uanki isminin formatn dzeltmen iin cretsiz isim deitirme teklif etti. Ltfen istediin ismi aaya gir.\n\nUyar: Eer iptale basarsanz, sunucudan otomatik olarak kickleneceksiniz.", "Deitir", "Iptal");
	        }
	    }
	}
	if(dialogid == DIALOG_LICENSE_BUY && response)
	{
		switch (listitem)
		{
			case 0:
			{
			    if(PlayerInfo[playerid][pCarLic] == 0)
			    {
			        if(GetPlayerCash(playerid) < 500)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "Src belgesini karlayacak paran yok.");
			            return 1;
			        }
					GivePlayerCash(playerid,-500);
					PlayerInfo[playerid][pCarLic] = 1;
					SendClientMessage(playerid, COLOR_GREY, "Baarl bir ekilde src belgesi aldn.");
				}
				else SendClientMessage(playerid, COLOR_GREY, "Zaten src belgen var.");
			}
			case 1:
			{
			    if(PlayerInfo[playerid][pBoatLic] == 0)
			    {
			        if(GetPlayerCash(playerid) < 500)
			        {
			            SendClientMessage(playerid, COLOR_GREY, "Denizci belgesini karlayacak paran yok.");
			            return 1;
			        }
					GivePlayerCash(playerid,-500);
					PlayerInfo[playerid][pBoatLic] = 1;
					SendClientMessage(playerid, COLOR_GREY, "Baarl bir ekilde denizci belgesi aldn.");
				}
				else SendClientMessage(playerid, COLOR_GREY, "Zaten denizci belgen var.");
			}
			case 2:
			{
			    if(PlayerInfo[playerid][pFlyLic] == 0)
			    {
			    	if(PlayerInfo[playerid][pLevel] >=2) // FOR LATER SETTING POSSIBLY
			    	{
			    	    if(GetPlayerCash(playerid) < 2500)
			        	{
			            	SendClientMessage(playerid, COLOR_GREY, "Pilot belgesini karlayacak paran yok.");
			            	return 1;
			        	}
						GivePlayerCash(playerid,-2500);
						PlayerInfo[playerid][pFlyLic] = 1;
      					SendClientMessage(playerid, COLOR_GREY, "Baarl bir ekilde pilot belgesi satn aldn. Artk uabilirsin.");
					}
					else SendClientMessage(playerid, COLOR_GREY, "Pilot belgesine sahip olmak iin minimum 2 level olman gerek.");
				}
                else SendClientMessage(playerid, COLOR_GREY, "Zaten pilot belgen var.");
			}
		}
	}
 	if(dialogid == FAMILYSKINDIALOG)
    {
        if(response)
	    {
   			if(listitem == 0)
      		{
        		SetFamilySkin(playerid, 0);
      		}
   			if(listitem == 1)
      		{
                SetFamilySkin(playerid, 1);
      		}
   			if(listitem == 2)
      		{
                SetFamilySkin(playerid, 2);
      		}
   			if(listitem == 3)
      		{
                SetFamilySkin(playerid, 3);
      		}
			if(listitem == 4)
      		{
                SetFamilySkin(playerid, 4);
      		}
			if(listitem == 5)
      		{
                SetFamilySkin(playerid, 5);
      		}
			if(listitem == 6)
      		{
                SetFamilySkin(playerid, 6);
      		}
			if(listitem == 7)
      		{
                SetFamilySkin(playerid, 7);
      		}
	    }
	 }
	if((dialogid == BUYTOYS) && response)
	{
	    new stringg[856];
		for(new x;x<MAX_PLAYERTOYS;x++)
		{
  			new name[24];
	    	format(name, sizeof(name), "Yok");

			for(new i;i<sizeof(HoldingObjectsAll);i++)
   			{
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
    			{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}

			format(stringg, sizeof(stringg), "%s(%d) %s (Kemik: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		ShowPlayerDialogEx(playerid, BUYTOYS2, DIALOG_STYLE_LIST, "Select a Slot", stringg, "Se", "Iptal");
	}
	if((dialogid == BUYTOYS2) && response)
	{
	    if(listitem == 5 && PlayerInfo[playerid][pDonator] < 1) return SendClientMessage(playerid, COLOR_WHITE, "* Bu slotu kullanabilmek iin Yakut VIP olman gerek.");
	    if(listitem == 6 && PlayerInfo[playerid][pDonator] < 2) return SendClientMessage(playerid, COLOR_WHITE, "* Bu slotu kullanabilmek iin Master VIP olman gerek.");
        if(listitem == 7 && PlayerInfo[playerid][pDonator] < 3) return SendClientMessage(playerid, COLOR_WHITE, "* Bu slotu kullanabilmek iin Elmas VIP olman gerek.");

	    if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessage(playerid, COLOR_YELLOW, "* O slotta baka bir eyan var. Silmek iin /oyuncaklar yaz.");

		slotselection[playerid] = listitem;

		new stringg[4000];
		for(new x;x<sizeof(HoldingObjects);x++)
		{
		    format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjects[x][holdingmodelname], HoldingObjects[x][holdingprice]);
		}
		ShowPlayerDialogEx(playerid, BUYTOYS3, DIALOG_STYLE_LIST, "* tem Se", stringg, "Satn Al", "Iptal");
	}
	if((dialogid == BUYTOYS3) && response)
	{
		if(GetPlayerCash(playerid) < HoldingObjects[listitem][holdingprice])
		{
		    SendClientMessage(playerid, COLOR_WHITE, "* Bunu karlayamazsn!");
		}
		else
		{
			GivePlayerCash(playerid, -HoldingObjects[listitem][holdingprice]);
		    PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjects[listitem][holdingmodelid];

		    new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
		    {
		        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
		    }
		    else if(modelid >= 18891 && modelid <= 18910)
		    {
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			}
			else if(modelid >= 18926 && modelid <= 18935)
			{
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			else if(modelid >= 18911 && modelid <= 18920)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			}
			else if(modelid == 19078 || modelid == 19078)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
		    else
		    {
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX] = 1.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY] = 1.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ] = 1.0;

			new
			    szQuery[460];
			format(szQuery, sizeof(szQuery),"INSERT INTO toys (Owner, ModelID, Bone, PosX, PosY, PosZ, RotX, RotY, RotZ, ScaX, ScaY, ScaZ) VALUES(%d, %d, %d, '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f')",
			PlayerInfo[playerid][pID], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX], PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY], PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY],
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ]);
			mysql_query(szQuery);
			PlayerToyInfo[playerid][slotselection[playerid]][ptRealID] = mysql_insert_id();

			format(string, sizeof(string), "* $%d deyerek %s satn aldn (Slot: %d)", HoldingObjects[listitem][holdingmodelname], HoldingObjects[listitem][holdingprice], slotselection[playerid]);
		    SendClientMessage(playerid, COLOR_RED, string);
		    SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Oyuncan giymek/ayarlamak iin /oyuncaklar yaz.");
		}
	}
	if((dialogid == TOYS) && response)
	{
		if(listitem == 0)
		{
		    new stringg[856];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[64];
			    format(name, sizeof(name), "Yok");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Kemik: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			ShowPlayerDialogEx(playerid, WEARTOY, DIALOG_STYLE_LIST, "Oyuncak Se", stringg, "Se", "Iptal");
	    }
		else if(listitem == 1)
		{
		    new stringg[856];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Yok");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Kemik: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			ShowPlayerDialogEx(playerid, EDITTOYS, DIALOG_STYLE_LIST, "Oyuncak Se", stringg, "Se", "Iptal");
   		}
		else if(listitem == 2)
		{
		    new stringg[856];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Yok");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Kemik: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			ShowPlayerDialogEx(playerid, DELETETOY, DIALOG_STYLE_LIST, "Oyuncak Se", stringg, "Sil", "Iptal");
		}
	}

	if((dialogid == EDITTOYS) && response) {
	    if(PlayerToyInfo[playerid][listitem][ptModelID] == 0) {
	        ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "Oyuncak Mens: Ayarla", "Oooops! O slotta hibireyin yok.", "Tamam", "");
		}
		else {
		    slotselection[playerid] = listitem;
		    ShowEditMenu(playerid);
		}
	}
	if((dialogid == EDITTOYS2)) {
	    if(response) switch(listitem) {
		    case 0: ShowPlayerDialogEx(playerid, EDITTOYSBONE, DIALOG_STYLE_LIST, "Kemik Sein", "Omurga\nKafa\nSol stkol\nSa stkol\nSol El\nSa El\nSol Uyluk\nSa Uyluk\nSol Ayak\nSa Ayak\nSa Baldr\nSol Baldr\nSol nkol\nSa nkol\nSol Kprck\nSa Kprck\nBoyun\nene", "Se", "Iptal");
		    case 1: EditAttachedObject(playerid, slotselection[playerid]);
		}
		else
		{
		    new stringg[856];
			for(new x;x<MAX_PLAYERTOYS;x++)
			{
			    new name[24];
			    format(name, sizeof(name), "Yok");

			    for(new i;i<sizeof(HoldingObjectsAll);i++)
			    {
       				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
			        {
           				format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}

				format(stringg, sizeof(stringg), "%s(%d) %s (Kemik: %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
			}
   			ShowPlayerDialogEx(playerid, EDITTOYS, DIALOG_STYLE_LIST, "Oyuncak Se", stringg, "Se", "Iptal");
		}
	}
	/* if(dialogid == EDITTOYSSX)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < 0.1) offset = 0.1;
			else if(offset > 1.5) offset = 1.5;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSSY)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < 0.1) offset = 0.1;
			else if(offset > 1.5) offset = 1.5;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSSZ)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < 0.1) offset = 0.1;
			else if(offset > 1.5) offset = 1.5;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSPX)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < -100) offset = 0;
			else if(offset > 100) offset = 100;
	        offset = offset/100;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSPY)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
     		if(offset < -100) offset = 0;
			else if(offset > 100) offset = 100;
	        offset = offset/100;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSPZ)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < -100) offset = 0;
			else if(offset > 100) offset = 100;
			offset = offset/100;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSRX)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < -100) offset = 0;
			else if(offset > 360) offset = 360;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSRY)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < -100) offset = 0;
			else if(offset > 360) offset = 360;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = offset;
		}
		ShowEditMenu(playerid);
	}
	if(dialogid == EDITTOYSRZ)
	{
	    if(response)
	    {
	        new Float:offset = floatstr(inputtext);
	        if(offset < -100) offset = 0;
			else if(offset > 360) offset = 360;
	        PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = offset;
		}
		ShowEditMenu(playerid);
	} */
	if(dialogid == EDITTOYSBONE)
	{
	    if(response)
	    {
			PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = listitem+1;
			if(PlayerToyInfo[playerid][slotselection[playerid]][ptBone] > 18 || PlayerToyInfo[playerid][slotselection[playerid]][ptBone] < 1) {
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 1;
			}
		}
	 	ShowEditMenu(playerid);
	}
	if((dialogid == WEARTOY) && response)
	{
	    if(PlayerToyInfo[playerid][listitem][ptModelID] == 0)
	    {
	        ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "Oyuncak Mens: Tak/kar", "Oooops! O slotta takabilecein birey yok.", "Tamam", "");
		}
		else
		{
		    if(IsPlayerAttachedObjectSlotUsed(playerid, listitem))
			{
			    new name[24];
			    format(name, sizeof(name), "Yok");

				for(new i;i<sizeof(HoldingObjectsAll);i++)
	   			{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
					{
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
			    format(string, sizeof(string), "Oyuncan baarl bir ekilde kardn. (Kemik: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
				SendClientMessage(playerid, COLOR_RED, string);
			    RemovePlayerAttachedObject(playerid, listitem);
			}
			else
			{
				if(listitem == 5 && PlayerInfo[playerid][pDonator] < 1) return SendClientMessage(playerid, COLOR_WHITE, "* Bu slotu kullanabilmek iin Yakut VIP olman gerek.");
			 	if(listitem == 6 && PlayerInfo[playerid][pDonator] < 2) return SendClientMessage(playerid, COLOR_WHITE, "* Bu slotu kullanabilmek iin Master VIP olman gerek.");
        		if(listitem == 7 && PlayerInfo[playerid][pDonator] < 3) return SendClientMessage(playerid, COLOR_WHITE, "* Bu slotu kullanabilmek iin Elmas VIP olman gerek.");

				if(PlayerToyInfo[playerid][listitem][ptScaleX] == 0) {
					PlayerToyInfo[playerid][listitem][ptScaleX] = 1.0;
					PlayerToyInfo[playerid][listitem][ptScaleY] = 1.0;
					PlayerToyInfo[playerid][listitem][ptScaleZ] = 1.0;
				}
			    SetPlayerAttachedObject(playerid, listitem, PlayerToyInfo[playerid][listitem][ptModelID], PlayerToyInfo[playerid][listitem][ptBone], PlayerToyInfo[playerid][listitem][ptPosX], PlayerToyInfo[playerid][listitem][ptPosY], PlayerToyInfo[playerid][listitem][ptPosZ],
				PlayerToyInfo[playerid][listitem][ptRotX], PlayerToyInfo[playerid][listitem][ptRotY], PlayerToyInfo[playerid][listitem][ptRotZ], PlayerToyInfo[playerid][listitem][ptScaleX], PlayerToyInfo[playerid][listitem][ptScaleY], PlayerToyInfo[playerid][listitem][ptScaleZ]);
			    new name[24];
			    format(name, sizeof(name), "Yok");

				for(new i;i<sizeof(HoldingObjectsAll);i++)
	   			{
					if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][listitem][ptModelID])
					{
						format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
					}
				}
				format(string, sizeof(string), "Oyuncan baarl bir ekilde taktn. (Kemik: %s) (Slot: %d)", name, HoldingBones[PlayerToyInfo[playerid][listitem][ptBone]], listitem);
				SendClientMessage(playerid, COLOR_RED, string);
			}
		}
	}

	if((dialogid == DELETETOY) && response) {
		if(IsPlayerAttachedObjectSlotUsed(playerid, listitem)) {
		    RemovePlayerAttachedObject(playerid, listitem);
		}

	    new
	        szQuery[128];

		SetPVarInt(playerid, "deleteObject", listitem);
     	format(szQuery, sizeof(szQuery), "DELETE FROM toys WHERE Owner = %d AND ID = %d", PlayerInfo[playerid][pID], PlayerToyInfo[playerid][listitem][ptRealID]);
		mysql_query(szQuery, THREAD_DELETE_PLAYER_OBJECT, playerid, g_MySQLConnections[0]);
	}
	if((dialogid == BUYTOYSCOP) && response)
	{
	    new stringg[856];
		for(new x;x<MAX_PLAYERTOYS;x++)
		{
  			new name[24] = "Yok";

			for(new i;i<sizeof(HoldingObjectsAll);i++)
   			{
				if(HoldingObjectsAll[i][holdingmodelid] == PlayerToyInfo[playerid][x][ptModelID])
    			{
   					format(name, sizeof(name), "%s", HoldingObjectsAll[i][holdingmodelname]);
				}
			}

			format(stringg, sizeof(stringg), "%s(%d) %s ( %s)\n", stringg, x, name, HoldingBones[PlayerToyInfo[playerid][x][ptBone]]);
		}
		ShowPlayerDialogEx(playerid, BUYTOYSCOP2, DIALOG_STYLE_LIST, "Select a Slot", stringg, "Se", "Iptal");
	}

	if((dialogid == BUYTOYSCOP2) && response)
	{
	    // (TEMPORARY - ZHAO NOTE) NO VIP added yet
	    /*if(listitem >= 3 && PlayerInfo[playerid][pDonator] < 1 || listitem >= 3 && PlayerInfo[playerid][pBuddyInvited] == 1) return SendClientMessage(playerid, COLOR_WHITE, "* You must be a Ruby Donator + to use that slot!");
	    if(listitem >= 4 && PlayerInfo[playerid][pDonator] < 2) return SendClientMessage(playerid, COLOR_WHITE, "* You must be a Sapphire Donator + to use that slot!");
        if(listitem >= 5 && PlayerInfo[playerid][pDonator] < 3) return SendClientMessage(playerid, COLOR_WHITE, "* You must be a Diamond Donator + to use that slot!");
	    if(PlayerToyInfo[playerid][listitem][ptModelID] != 0) return SendClientMessage(playerid, COLOR_YELLOW, "* O slotta baka bir eyan var. Silmek iin /oyuncaklar yaz.");*/

		slotselection[playerid] = listitem;

		new stringg[1024];
		for(new x;x<sizeof(HoldingObjectsCop);x++)
		{
		    format(stringg, sizeof(stringg), "%s%s ($%d)\n", stringg, HoldingObjectsCop[x][holdingmodelname], HoldingObjectsCop[x][holdingprice]);
		}
		ShowPlayerDialogEx(playerid, BUYTOYSCOP3, DIALOG_STYLE_LIST, "* tem Se", stringg, "Satn Al", "Iptal");
	}
	if((dialogid == BUYTOYSCOP3) && response)
	{
		if(GetPlayerCash(playerid) < HoldingObjectsCop[listitem][holdingprice])
		{
		    SendClientMessage(playerid, COLOR_WHITE, "* Bunu karlayamazsn!");
		}
		else
		{
			GivePlayerCash(playerid, -HoldingObjectsCop[listitem][holdingprice]);
		    PlayerToyInfo[playerid][slotselection[playerid]][ptModelID] = HoldingObjectsCop[listitem][holdingmodelid];

   			new modelid = PlayerToyInfo[playerid][slotselection[playerid]][ptModelID];
		    if((modelid >= 19006 && modelid <= 19035) || (modelid >= 19138 && modelid <= 19140))
		    {
		        PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.9;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.35;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
		    }
		    else if(modelid >= 18891 && modelid <= 18910)
		    {
		    	PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.15;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			}
			else if(modelid >= 18926 && modelid <= 18935)
			{
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			else if(modelid >= 18911 && modelid <= 18920)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.1;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.035;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 90.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 90.0;
			}
			else if(modelid == 19078 || modelid == 19078)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 16;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 180.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			else if((modelid >= 18641 && modelid <= 18644) || (modelid >= 19080 && modelid <= 19084) || modelid == 18890)
			{
			    PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 6;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
		    else
		    {
				PlayerToyInfo[playerid][slotselection[playerid]][ptBone] = 2;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotX] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotY] = 0.0;
				PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ] = 0.0;
			}
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX] = 1.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY] = 1.0;
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ] = 1.0;

			new
			    szQuery[460];
			format(szQuery, sizeof(szQuery),"INSERT INTO toys (Owner, ModelID, Bone, PosX, PosY, PosZ, RotX, RotY, RotZ, ScaX, ScaY, ScaZ) VALUES(%d, %d, %d, '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f', '%f')",
			PlayerInfo[playerid][pID], PlayerToyInfo[playerid][slotselection[playerid]][ptModelID], PlayerToyInfo[playerid][slotselection[playerid]][ptPosX], PlayerToyInfo[playerid][slotselection[playerid]][ptPosY], PlayerToyInfo[playerid][slotselection[playerid]][ptPosZ],
			PlayerToyInfo[playerid][slotselection[playerid]][ptRotX], PlayerToyInfo[playerid][slotselection[playerid]][ptRotY], PlayerToyInfo[playerid][slotselection[playerid]][ptRotZ], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleX], PlayerToyInfo[playerid][slotselection[playerid]][ptScaleY],
			PlayerToyInfo[playerid][slotselection[playerid]][ptScaleZ]);
			mysql_query(szQuery);
			PlayerToyInfo[playerid][slotselection[playerid]][ptRealID] = mysql_insert_id();

			format(string, sizeof(string), "* $%d deyerek %s satn aldn (Slot: %d)", HoldingObjectsCop[listitem][holdingmodelname], HoldingObjectsCop[listitem][holdingprice], slotselection[playerid]);
		    SendClientMessage(playerid, COLOR_RED, string);
		    SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Oyuncan giymek/ayarlamak iin /oyuncaklar yaz.");
		}
	}
	if(dialogid == LSFMDMENU)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(PlayerInfo[playerid][pDuty] == 0)
				{
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* Doktor %s, ekipmanlarn ald ve iba yapt.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid,TEAM_MED_COLOR);
					SetPlayerArmourEx(playerid, 100);
					SetPlayerHealth(playerid, 100.0);
					if(PlayerInfo[playerid][pRank] >= 4 || PlayerInfo[playerid][pLeader] == 3)
					{
        				GivePlayerValidWeapon(playerid, 42, 99999);
        			}
					Medics += 1;
					PlayerInfo[playerid][pDuty] = 1;
				}
				else
				{
					format(string, sizeof(string), "* Doktor %s, ekipmanlarn yerine koydu ve ibandan kt.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					Medics -= 1;
					PlayerInfo[playerid][pDuty] = 0;
					SetPlayerColor(playerid,TEAM_HIT_COLOR);
				}
			}
			if(listitem == 1)
			{
    			ShowPlayerDialogEx(playerid, LSFMDSKINS, DIALOG_STYLE_LIST, "Hangi niformay giymek istiyorsun?","Yangn Kyafeti 1\nYangn Kyafeti 2\nYangn Kyafeti 3\nDoktor 1\nDoktor 2\nDoktor3\nBayan\nYksek Rtbe", "Se", "Iptal");
			}
			if(listitem == 2)
			{
                ShowPlayerDialogEx(playerid, LSFMDGEAR, DIALOG_STYLE_LIST, "Hangi ekipman istiyorsun?","Sprey\nKrek\nKamera\nParat\nYangn Sndrc\nTestere\nShotgun\nZrh\nlk Yardim Kiti\nAksesuarlar", "Se", "Iptal");
			}
			if(listitem == 3)
			{
				SetPlayerColor(playerid, TEAM_MED_COLOR);
				SetPlayerSkin(playerid, 170);
				ResetPlayerWeaponsEx(playerid);
			}
		}
 	}
    if(dialogid == LSFMDSKINS)
	{
		if(response)
		{
			if(listitem == 0)
			{
			    PlayerInfo[playerid][pSkin] = 277;
				SetPlayerSkin(playerid, 277);
			}
			if(listitem == 1)
			{
			    PlayerInfo[playerid][pSkin] = 278;
    			SetPlayerSkin(playerid, 278);
			}
			if(listitem == 2)
			{
			    PlayerInfo[playerid][pSkin] = 279;
                SetPlayerSkin(playerid, 279);
			}
			if(listitem == 3)
			{
			    PlayerInfo[playerid][pSkin] = 274;
				SetPlayerSkin(playerid, 274);
			}
			if(listitem == 4)
			{
			    PlayerInfo[playerid][pSkin] = 275;
				SetPlayerSkin(playerid, 275);
			}
			if(listitem == 5)
			{
			    PlayerInfo[playerid][pSkin] = 276;
				SetPlayerSkin(playerid, 276);
			}
			if(listitem == 6)
			{
			    PlayerInfo[playerid][pSkin] = 217;
				SetPlayerSkin(playerid, 211);
			}
			if(listitem == 7)
			{
			    if(PlayerInfo[playerid][pRank] >= 5)
			    {
			        PlayerInfo[playerid][pSkin] = 295;
					SetPlayerSkin(playerid, 295);
				}
				else
				{
				    SendClientMessage(playerid, COLOR_GRAD2, "Bu niformay yalnzca R5 ve R6'lar giyebilir.");
				}
			}
		}
 	}
  	if(dialogid == LSFMDGEAR)
	{
		if(response)
		{
		    if(PlayerInfo[playerid][pConnectTime] < 2)
				return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

			switch(listitem) {
			    case 0: GivePlayerValidWeapon(playerid, 41, 99999);
			    case 1: GivePlayerValidWeapon(playerid, 6, 99999);
			    case 2: GivePlayerValidWeapon(playerid, 43, 99999);
			    case 3: GivePlayerValidWeapon(playerid, 46, 99999);
			    case 4: GivePlayerValidWeapon(playerid, 42, 99999);
			    case 5: {
	                if(PlayerInfo[playerid][pRank] >= 4 || PlayerInfo[playerid][pLeader] == 4) {
	        			GivePlayerValidWeapon(playerid, 9, 99999);
	        		} else SendClientMessage(playerid, COLOR_GRAD2, "You're not a high enough rank!");
				}
				case 6: GivePlayerValidWeapon(playerid, 25, 99999);
				case 7: SetPlayerArmourEx(playerid, 100);
				case 8: SetPlayerHealth(playerid, 100);
				case 9: ShowPlayerDialogEx(playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Aksesuarlar", "Devlet memurlarnn aksesuar dolabna hogeldiniz.","Devam", "Iptal");
			}

			/*if(listitem == 0)
			{
				GivePlayerValidWeapon(playerid, 6, 99999);
			}
			else if(listitem == 1)
			{
				GivePlayerValidWeapon(playerid, 43, 99999);
			}
			else if(listitem == 2)
			{
				GivePlayerValidWeapon(playerid, 46, 99999);
			}
			else if(listitem == 3)
			{
				GivePlayerValidWeapon(playerid, 42, 99999);
			}
			else if(listitem == 4)
			{
                if(PlayerInfo[playerid][pRank] >= 4 || PlayerInfo[playerid][pLeader] == 4)
                {
        			GivePlayerValidWeapon(playerid, 9, 99999);
        		}
        		else
        		{
            		SendClientMessage(playerid, COLOR_GRAD2, "You're not a high enough rank!");
        		}
			}
			else if(listitem == 5)
			{
        		GivePlayerValidWeapon(playerid, 25, 99999);
			}
			else if(listitem == 6)
			{
        		SetPlayerArmourEx(playerid, 100);
			}
			else if(listitem == 7) SetPlayerHealth(playerid, 100);*/
			//else if(listitem == 8) ShowPlayerDialogEx(playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Aksesuarlar", "Devlet memurlarnn aksesuar dolabna hogeldiniz.","Devam", "Iptal");
		}
 	}
	if(dialogid == DIALOG_RADIOMENU_START)
	{
		if(response)
		{
			if(listitem == 0)
			{
  				new radiovehicle = GetPlayerVehicleID(playerid);

  				if(VehicleRadioStation[radiovehicle] == 0)
  				{
  				    SendClientMessage(playerid, COLOR_GRAD1, "Bu arataki radyo zaten kapal.");
					return 1;
  				}

				format(string, sizeof(string), "* %s radyosunu kapatt.", GetPlayerNameEx(playerid));
				ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			    VehicleRadioStation[radiovehicle] = 0;
       			StopAudioStreamForPlayer(playerid);

          		foreach(Player, i)
				{
				    if(GetPlayerVehicleID(i) == radiovehicle && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_PASSENGER && i != playerid)
				    {
				        StopAudioStreamForPlayer(i);
				    }
				}
			}
			if(listitem == 2)
			{
				ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_SEARCH, DIALOG_STYLE_INPUT, "Radyo istasyonlar - Radyo Ara", "Aramak istediin radyo istasyonunu gir.\n\nUyar: Aramak iin minimum 3 karakter girmelisin.", "Ara", "Iptal");
			}
			if(listitem == 1)
			{
				ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_GENRE, DIALOG_STYLE_LIST, "Radyo istasyonlar - Seim Yap", "Master Radyo", "Se", "Iptal"); //bunu oyunda setikten sonra biey olmuyor
			}
		}
	}
	if(dialogid == DIALOG_RADIOMENU_SEARCH)
	{
		if(response)
		{
 			if(strlen(inputtext) < 3)
	    	{
	        	ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_SEARCH, DIALOG_STYLE_INPUT, "Radyo istasyonlar - Radyo Ara", "ERK REDDEDLD: Arama yapmak iin minimum 3 karakter girmelisin.\n\nAramak istediin radyo istasyonunu gir.\n\nUyar: Minimum 3 karakter olmal.", "Ara", "Iptal");
	    	}
	    	else
	    	{
	    	    for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

    			new stringg[512], name[32], search[128], iCount;

    			strcat(search, inputtext, sizeof(search));

				for (new i=0; i<220; i++)
				{
					if(strfind(VehicleRadioListing[i][radioname], search, true) != -1 && iCount < 50)
					{
            			format(name, sizeof(name), "%s", VehicleRadioListing[i][radioname]);
						format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
						ListItemTrackId[playerid][iCount++] = i;
					}
				}
				if(iCount == 0)
				{
				    ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_SEARCH, DIALOG_STYLE_INPUT, "Radyo istasyonlar - Radyo Ara", "ARAMA BAARISIZ: Aranan radyo istasyonu bulunamad.\n\nAramak istediin istasyonu gir.\n\nUyar: 3 karakterden az olmamal.", "Ara", "Iptal");
				}
				else
				{
					ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_SEARCHLIST, DIALOG_STYLE_LIST, "Radyo stasyonu - Arama Sonular", stringg, "Oynat", "Iptal");
				}
			}
	    }
 	}
	if(dialogid == DIALOG_RADIOMENU_SEARCHLIST)
	{
		if(response)
		{
			new t = ListItemTrackId[playerid][listitem];
			new radiovehicle = GetPlayerVehicleID(playerid);

			if(VehicleRadioStation[radiovehicle] == t+1)
			{
   				SendClientMessage(playerid, COLOR_GRAD1, "Bu arataki radyo istasyonu zaten o.");
				return 1;
			}

			format(string, sizeof(string), "* %s radyo istasyonunu %s olarak deitirdi.", GetPlayerNameEx(playerid), VehicleRadioListing[t][radioname]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			VehicleRadioStation[radiovehicle] = t+1;
  			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[t][radiourl]);

			foreach(Player, i)
			{
  				if(GetPlayerVehicleID(i) == radiovehicle && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_PASSENGER && i != playerid)
	    		{
      				PlayAudioStreamForPlayer(i, VehicleRadioListing[t][radiourl]);
		    	}
			}
		}
	}

	if(dialogid == DIALOG_RADIOMENU_GENRE)
	{
		if(response)
		{
			new stringg[500], name[32], iCount;

			for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

			if(listitem == 0)
			{
			    for(new r; r < 10; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Master Radyo", stringg, "Oynat", "Iptal"); //buras gelmiyor
			}
		/*	if(listitem == 1)
			{
   				for(new r = 10; r < 20; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Hzn", stringg, "Oynat", "Iptal");
			}
			if(listitem == 2)
			{
   				for(new r = 20; r < 30; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Klasik", stringg, "Oynat", "Iptal");
			}
			if(listitem == 3)
			{
   				for(new r = 30; r < 40; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - ehir", stringg, "Oynat", "Iptal");
			}
			if(listitem == 4)
			{
   				for(new r = 40; r < 50; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Yllar", stringg, "Oynat", "Iptal");
			}
			if(listitem == 5)
			{
   				for(new r = 50; r < 60; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Dinlemesi Kolay", stringg, "Oynat", "Iptal");
			}
			if(listitem == 6)
			{
   				for(new r = 60; r < 70; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Elektronik", stringg, "Oynat", "Iptal");
			}
			if(listitem == 7)
			{
   				for(new r = 70; r < 80; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Halk", stringg, "Oynat", "Iptal");
			}
			if(listitem == 8)
			{
   				for(new r = 80; r < 90; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - lhamverici", stringg, "Oynat", "Iptal");
			}
			if(listitem == 9)
			{
   				for(new r = 90; r < 100; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Evrensel", stringg, "Oynat", "Iptal");
			}
			if(listitem == 10)
			{
   				for(new r = 100; r < 110; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Jazz", stringg, "Oynat", "Iptal");
			}
			if(listitem == 11)
			{
				for(new r = 110; r < 120; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Latin", stringg, "Oynat", "Iptal");
			}
			if(listitem == 12)
			{
				for(new r = 120; r < 130; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Metal", stringg, "Oynat", "Iptal");
			}
			if(listitem == 13)
			{
				for(new r = 130; r < 140; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Misc", stringg, "Oynat", "Iptal");
			}
			if(listitem == 14)
			{
				for(new r = 140; r < 150; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Yeni Yl", stringg, "Oynat", "Iptal");
			}
			if(listitem == 15)
			{
				for(new r = 150; r < 160; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Pop", stringg, "Oynat", "Iptal");
			}
			if(listitem == 16)
			{
				for(new r = 160; r < 170; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Herkese Ak Radyo", stringg, "Oynat", "Iptal");
			}
			if(listitem == 17)
			{
				for(new r = 170; r < 180; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - R&B/Urban", stringg, "Oynat", "Iptal");
			}
			if(listitem == 18)
			{
				for(new r = 180; r < 190; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Rap", stringg, "Oynat", "Iptal");
			}
			if(listitem == 19)
			{
				for(new r = 190; r < 200; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Reggae", stringg, "Oynat", "Iptal");
			}
			if(listitem == 20)
			{
				for(new r = 200; r < 210; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Rock", stringg, "Oynat", "Iptal");
			}
			if(listitem == 21)
			{
				for(new r = 210; r < 220; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_PLAY, DIALOG_STYLE_LIST, "Radyo istasyonlar - Sohbet", stringg, "Oynat", "Iptal");
			}
			// CURRENTLY NO HOLIDAYS
			if(listitem == 24)
			{
                ShowPlayerDialogEx(playerid, DIALOG_RADIOMENU_SEASON, DIALOG_STYLE_LIST, "Radyo istasyonlar - Seasonal/Holiday", "", "Oynat", "Iptal");
			} */
		}
	}
	else if(dialogid == DIALOG_RADIOMENU_PLAY)
	{
		if(response)
		{
		    new t = ListItemTrackId[playerid][listitem];
			new radiovehicle = GetPlayerVehicleID(playerid);

			if(VehicleRadioStation[radiovehicle] == t+1)
			{
   				SendClientMessage(playerid, COLOR_GRAD1, "Bu arataki radyo istasyonu zaten o.");
				return 1;
			}

			format(string, sizeof(string), "* %s radyo istasyonunu %s olarak deitirdi.", GetPlayerNameEx(playerid), VehicleRadioListing[t][radioname]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			VehicleRadioStation[radiovehicle] = t+1;
  			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[t][radiourl]);

			foreach(Player, i)
			{
  				if(GetPlayerVehicleID(i) == radiovehicle && IsPlayerInAnyVehicle(i) && GetPlayerState(i) == PLAYER_STATE_PASSENGER && i != playerid)
	    		{
      				PlayAudioStreamForPlayer(i, VehicleRadioListing[t][radiourl]);
		    	}
			}
		}
	}
	if(dialogid == DIALOG_MP3_START)
	{
		if(response)
		{
			if(listitem == 0)
			{
  				if(MP3Station[playerid] == 0)
  				{
  				    SendClientMessage(playerid, COLOR_GRAD1, "MP3 oynatcn zaten kapal.");
					return 1;
  				}

				format(string, sizeof(string), "* %s MP3 oynatcsn balatt.", GetPlayerNameEx(playerid));
				ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);

			    MP3Station[playerid] = 0;
       			StopAudioStreamForPlayer(playerid);
			}
			if(listitem == 1)
			{
				ShowPlayerDialogEx(playerid, DIALOG_MP3_SEARCH, DIALOG_STYLE_INPUT, "MP3 Oynatc - Radyo Ara", "Aramak istediin radyo istasyonunu gir.\n\nUyar: Aramak iin minimum 3 karakter girmelisin.", "Ara", "Iptal");
			}
			if(listitem == 2)
			{
				ShowPlayerDialogEx(playerid, DIALOG_MP3_GENRE, DIALOG_STYLE_LIST, "MP3 Oynatc - Tr se", "Alternatif\nHzn\nKlasik\nehir\nYl\nDinlemesi Kolay\nElektronik\nHalk\nlhamverici\nEvrensel\nJazz\nLatin\nMetal\nMisc\nYeni Yl\nPop\nHerkese Ak Radyo\nR&B/Urban\nRap\nReggae\nRock\nSohbet", "Se", "Iptal");
			}
		}
	}
	if(dialogid == DIALOG_MP3_SEARCH)
	{
		if(response)
		{
 			if(strlen(inputtext) < 3)
	    	{
	        	ShowPlayerDialogEx(playerid, DIALOG_MP3_SEARCH, DIALOG_STYLE_INPUT, "MP3 Oynatc - Radyo Ara", "ERK REDDEDLD: Arama yapmak iin minimum 3 karakter girmelisin.\n\nAramak istediin radyo istasyonunu gir.\n\nUyar: Minimum 3 karakter olmal.", "Ara", "Iptal");
	    	}
	    	else
	    	{
	    	    for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

    			new stringg[512], name[32], search[128], iCount;

    			strcat(search, inputtext, sizeof(search));

				for (new i=0; i<220; i++)
				{
					if(strfind(VehicleRadioListing[i][radioname], search, true) != -1 && iCount < 50)
					{
            			format(name, sizeof(name), "%s", VehicleRadioListing[i][radioname]);
						format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
						ListItemTrackId[playerid][iCount++] = i;
					}
				}
				if(iCount == 0)
				{
				    ShowPlayerDialogEx(playerid, DIALOG_MP3_SEARCH, DIALOG_STYLE_INPUT, "MP3 Oynatc - Radyo Ara", "ARAMA BAARISIZ: Aranan radyo istasyonu bulunamad.\n\nAramak istediin istasyonu gir.\n\nUyar: 3 karakterden az olmamal.", "Ara", "Iptal");
				}
				else
				{
					ShowPlayerDialogEx(playerid, DIALOG_MP3_SEARCHLIST, DIALOG_STYLE_LIST, "MP3 Oynatc - Arama Sonular", stringg, "Oynat", "Iptal");
				}
			}
	    }
 	}
	if(dialogid == DIALOG_MP3_SEARCHLIST)
	{
		if(response)
		{
			new t = ListItemTrackId[playerid][listitem];

			format(string, sizeof(string), "* %s,MP3 Player'inden % istasyonunu at.", GetPlayerNameEx(playerid), VehicleRadioListing[t][radioname]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			MP3Station[playerid] = t+1;
  			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[t][radiourl]);
		}
	}
	if(dialogid == DIALOG_MP3_GENRE)
	{
		if(response)
		{
			new stringg[321], name[32], iCount;

			for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

			if(listitem == 0)
			{
			    for(new r = 0; r < 10; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Alternatif", stringg, "Oynat", "Iptal");
			}
			if(listitem == 1)
			{
   				for(new r = 10; r < 20; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Hzn", stringg, "Oynat", "Iptal");
			}
			if(listitem == 2)
			{
   				for(new r = 20; r < 30; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Klasik", stringg, "Oynat", "Iptal");
			}
			if(listitem == 3)
			{
   				for(new r = 30; r < 40; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - ehir", stringg, "Oynat", "Iptal");
			}
			if(listitem == 4)
			{
   				for(new r = 40; r < 50; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Yl", stringg, "Oynat", "Iptal");
			}
			if(listitem == 5)
			{
   				for(new r = 50; r < 60; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Dinlemesi Kolay", stringg, "Oynat", "Iptal");
			}
			if(listitem == 6)
			{
   				for(new r = 60; r < 70; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Elektronik", stringg, "Oynat", "Iptal");
			}
			if(listitem == 7)
			{
   				for(new r = 70; r < 80; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Halk", stringg, "Oynat", "Iptal");
			}
			if(listitem == 8)
			{
   				for(new r = 80; r < 90; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - lhamverici", stringg, "Oynat", "Iptal");
			}
			if(listitem == 9)
			{
   				for(new r = 90; r < 100; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Evrensel", stringg, "Oynat", "Iptal");
			}
			if(listitem == 10)
			{
   				for(new r = 100; r < 110; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Jazz", stringg, "Oynat", "Iptal");
			}
			if(listitem == 11)
			{
				for(new r = 110; r < 120; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Latin", stringg, "Oynat", "Iptal");
			}
			if(listitem == 12)
			{
				for(new r = 120; r < 130; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Metal", stringg, "Oynat", "Iptal");
			}
			if(listitem == 13)
			{
				for(new r = 130; r < 140; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Misc", stringg, "Oynat", "Iptal");
			}
			if(listitem == 14)
			{
				for(new r = 140; r < 150; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Yeni Yl", stringg, "Oynat", "Iptal");
			}
			if(listitem == 15)
			{
				for(new r = 150; r < 160; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Pop", stringg, "Oynat", "Iptal");
			}
			if(listitem == 16)
			{
				for(new r = 160; r < 170; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Herkese Ak Radyo", stringg, "Oynat", "Iptal");
			}
			if(listitem == 17)
			{
				for(new r = 170; r < 180; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - R&B/Urban", stringg, "Oynat", "Iptal");
			}
			if(listitem == 18)
			{
				for(new r = 180; r < 190; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Rap", stringg, "Oynat", "Iptal");
			}
			if(listitem == 19)
			{
				for(new r = 190; r < 200; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Reggae", stringg, "Oynat", "Iptal");
			}
			if(listitem == 20)
			{
				for(new r = 200; r < 210; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Rock", stringg, "Oynat", "Iptal");
			}
			if(listitem == 21)
			{
				for(new r = 210; r < 220; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_MP3_PLAY, DIALOG_STYLE_LIST, "MP3 Oynatc - Sohbet", stringg, "Oynat", "Iptal");
			}
			// CURRENTLY NO HOLIDAYS
			/*if(listitem == 24)
			{
                ShowPlayerDialogEx(playerid, DIALOG_MP3_SEASON, DIALOG_STYLE_LIST, "MP3 Oynatc - Seasonal/Holiday", "", "Oynat", "Iptal");
			}*/
		}
	}
	else if(dialogid == DIALOG_MP3_PLAY)
	{
		if(response)
		{
			new t = ListItemTrackId[playerid][listitem];

			format(string, sizeof(string), "* %s,MP3 Player'inden % istasyonunu at.", GetPlayerNameEx(playerid), VehicleRadioListing[t][radioname]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			MP3Station[playerid] = t+1;
  			PlayAudioStreamForPlayer(playerid, VehicleRadioListing[t][radiourl]);
		}
	}
	if(dialogid == DIALOG_BOOMBOX_START)
	{
		if(response)
		{
			if(listitem == 0)
			{
				ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_SEARCH, DIALOG_STYLE_INPUT, "Boombox - Radyo Arama", "Aramak istediin radyo istasyonunu gir.\n\nUyar: Aramak iin minimum 3 karakter girmelisin.", "Ara", "Iptal");
			}
			if(listitem == 1)
			{
				ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_GENRE, DIALOG_STYLE_LIST, "Boombox - Tr sein", "Alternatif\nHzn\nKlasik\nehir\nYl\nDinlemesi Kolay\nElektronik\nHalk\nlhamverici\nEvrensel\nJazz\nLatin\nMetal\nMisc\nYeni Yl\nPop\nHerkese Ak Radyo\nR&B/Urban\nRap\nReggae\nRock\nSohbet", "Se", "Iptal");
			}
		}
	}
	if(dialogid == DIALOG_BOOMBOX_SEARCH)
	{
		if(response)
		{
 			if(strlen(inputtext) < 3)
	    	{
	        	ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_SEARCH, DIALOG_STYLE_INPUT, "Boombox - Radyo Arama", "ERK REDDEDLD: Arama yapmak iin minimum 3 karakter girmelisin.\n\nAramak istediin radyo istasyonunu gir.\n\nUyar: Minimum 3 karakter olmal.", "Ara", "Iptal");
	    	}
	    	else
	    	{
	    	    for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

    			new stringg[512], name[32], search[128], iCount;

    			strcat(search, inputtext, sizeof(search));

				for (new i=0; i<220; i++)
				{
					if(strfind(VehicleRadioListing[i][radioname], search, true) != -1 && iCount < 50)
					{
            			format(name, sizeof(name), "%s", VehicleRadioListing[i][radioname]);
						format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
						ListItemTrackId[playerid][iCount++] = i;
					}
				}
				if(iCount == 0)
				{
				    ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_SEARCH, DIALOG_STYLE_INPUT, "Boombox - Radyo Arama", "ARAMA BAARISIZ: Aranan radyo istasyonu bulunamad.\n\nAramak istediin istasyonu gir.\n\nUyar: 3 karakterden az olmamal.", "Ara", "Iptal");
				}
				else
				{
					ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_SEARCHLIST, DIALOG_STYLE_LIST, "Boombox - Arama Sonular", stringg, "Oynat", "Iptal");
				}
			}
	    }
 	}
	if(dialogid == DIALOG_BOOMBOX_SEARCHLIST)
	{
		if(response)
		{
			new t = ListItemTrackId[playerid][listitem];

			format(string, sizeof(string), "* %s, boombox kanaln %s olarak deitirdi.", GetPlayerNameEx(playerid), VehicleRadioListing[t][radioname]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			BoomBoxSet[playerid] = 1;

        	GetPlayerPos(playerid, BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ]);
        	BoomboxInfo[playerid][bbInt] = GetPlayerInterior(playerid);
        	BoomboxInfo[playerid][bbVW] = GetPlayerVirtualWorld(playerid);
			BoomboxInfo[playerid][bbStation] = t+1;
			BoomboxInfo[playerid][bbSetBy] = playerid;

			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
			BoomboxInfo[playerid][bbObject] = CreateDynamicObject(2103, BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ]-0.9, 0, 0, 0, BoomboxInfo[playerid][bbVW], BoomboxInfo[playerid][bbInt]);

       		foreach(Player, i)
			{
				if(IsPlayerInRangeOfPoint(i,150.0,BoomboxInfo[playerid][bbPosX],BoomboxInfo[playerid][bbPosY],BoomboxInfo[playerid][bbPosZ]) && GetPlayerInterior(i) == BoomboxInfo[playerid][bbInt] && GetPlayerVirtualWorld(i) == BoomboxInfo[playerid][bbVW])
				{
					PlayAudioStreamForPlayer(i, VehicleRadioListing[t][radiourl], BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ], 50.0, 1);
				}
			}
		}
	}
	if(dialogid == DIALOG_BOOMBOX_GENRE)
	{
		if(response)
		{
			new stringg[321], name[32], iCount;

			for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

			if(listitem == 0)
			{
			    for(new r = 0; r < 10; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Alternatif", stringg, "Oynat", "Iptal");
			}
			if(listitem == 1)
			{
   				for(new r = 10; r < 20; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Hzn", stringg, "Oynat", "Iptal");
			}
			if(listitem == 2)
			{
   				for(new r = 20; r < 30; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Klasik", stringg, "Oynat", "Iptal");
			}
			if(listitem == 3)
			{
   				for(new r = 30; r < 40; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox ehir", stringg, "Oynat", "Iptal");
			}
			if(listitem == 4)
			{
   				for(new r = 40; r < 50; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Yl", stringg, "Oynat", "Iptal");
			}
			if(listitem == 5)
			{
   				for(new r = 50; r < 60; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Dinlemesi Kolay", stringg, "Oynat", "Iptal");
			}
			if(listitem == 6)
			{
   				for(new r = 60; r < 70; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Elektronik", stringg, "Oynat", "Iptal");
			}
			if(listitem == 7)
			{
   				for(new r = 70; r < 80; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Halk", stringg, "Oynat", "Iptal");
			}
			if(listitem == 8)
			{
   				for(new r = 80; r < 90; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox lhamverici", stringg, "Oynat", "Iptal");
			}
			if(listitem == 9)
			{
   				for(new r = 90; r < 100; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Evrensel", stringg, "Oynat", "Iptal");
			}
			if(listitem == 10)
			{
   				for(new r = 100; r < 110; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Jazz", stringg, "Oynat", "Iptal");
			}
			if(listitem == 11)
			{
				for(new r = 110; r < 120; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Latin", stringg, "Oynat", "Iptal");
			}
			if(listitem == 12)
			{
				for(new r = 120; r < 130; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Metal", stringg, "Oynat", "Iptal");
			}
			if(listitem == 13)
			{
				for(new r = 130; r < 140; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Misc", stringg, "Oynat", "Iptal");
			}
			if(listitem == 14)
			{
				for(new r = 140; r < 150; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Yeni Yl", stringg, "Oynat", "Iptal");
			}
			if(listitem == 15)
			{
				for(new r = 150; r < 160; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Pop", stringg, "Oynat", "Iptal");
			}
			if(listitem == 16)
			{
				for(new r = 160; r < 170; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Herkese Acik Radyo", stringg, "Oynat", "Iptal");
			}
			if(listitem == 17)
			{
				for(new r = 170; r < 180; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox R&B/Urban", stringg, "Oynat", "Iptal");
			}
			if(listitem == 18)
			{
				for(new r = 180; r < 190; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Rap", stringg, "Oynat", "Iptal");
			}
			if(listitem == 19)
			{
				for(new r = 190; r < 200; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Reggae", stringg, "Oynat", "Iptal");
			}
			if(listitem == 20)
			{
				for(new r = 200; r < 210; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Rock", stringg, "Oynat", "Iptal");
			}
			if(listitem == 21)
			{
				for(new r = 210; r < 220; ++r)
			    {
    				format(name, sizeof(name), "%s", VehicleRadioListing[r][radioname]);
					format(stringg, sizeof(stringg), "%s %s\n", stringg, name);
					ListItemTrackId[playerid][iCount++] = r;
			    }
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_PLAY, DIALOG_STYLE_LIST, "Boombox Sohbet", stringg, "Oynat", "Iptal");
			}
			// CURRENTLY NO HOLIDAYS
			/*if(listitem == 24)
			{
                ShowPlayerDialogEx(playerid, DIALOG_BOOMBOX_SEASON, DIALOG_STYLE_LIST, "Boombox Seasonal/Holiday", "", "Oynat", "Iptal");
			}*/
		}
	}
	if(dialogid == DIALOG_BOOMBOX_PLAY)
	{
		if(response)
		{
			new t = ListItemTrackId[playerid][listitem];

			format(string, sizeof(string), "* %s, boombox kanaln %s olarak deitirdi.", GetPlayerNameEx(playerid), VehicleRadioListing[t][radioname]);
			ProxDetector(25.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
			BoomBoxSet[playerid] = 1;

        	GetPlayerPos(playerid, BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ]);
        	BoomboxInfo[playerid][bbInt] = GetPlayerInterior(playerid);
        	BoomboxInfo[playerid][bbVW] = GetPlayerVirtualWorld(playerid);
			BoomboxInfo[playerid][bbStation] = t+1;
			BoomboxInfo[playerid][bbSetBy] = playerid;

			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
			ApplyAnimation(playerid,"BOMBER","BOM_Plant",4.0,0,0,0,0,0);
			BoomboxInfo[playerid][bbObject] = CreateDynamicObject(2103, BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ]-0.9, 0, 0, 0, BoomboxInfo[playerid][bbVW], BoomboxInfo[playerid][bbInt]);

       		foreach(Player, i)
			{
				if(IsPlayerInRangeOfPoint(i,150.0,BoomboxInfo[playerid][bbPosX],BoomboxInfo[playerid][bbPosY],BoomboxInfo[playerid][bbPosZ]) && GetPlayerInterior(i) == BoomboxInfo[playerid][bbInt] && GetPlayerVirtualWorld(i) == BoomboxInfo[playerid][bbVW])
				{
					PlayAudioStreamForPlayer(i, VehicleRadioListing[t][radiourl], BoomboxInfo[playerid][bbPosX], BoomboxInfo[playerid][bbPosY], BoomboxInfo[playerid][bbPosZ], 50.0, 1);
				}
			}
		}
	}
	/*if(dialogid == REPORTSMENU)
	{
	    if(response)
	    {
	        if(CancelReport[playerid] == listitem) return 1;
			new reportid = ListItemReportId[playerid][listitem];
	        if(Reports[reportid][BeingUsed] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			    return 1;
			}
			if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			    Reports[reportid][ReportFrom] = 999;
			    Reports[reportid][BeingUsed] = 0;
			    return 1;
			}
			format(string, sizeof(string), "AdminKomutu: %s has accepted the report from %s (ID: %i RID: %i).", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), Reports[reportid][ReportFrom], reportid);
			ABroadCast(COLOR_ORANGE, string, 1);
			AddReportToken(playerid); // Report Tokens
			if(PlayerInfo[playerid][pAdmin] == 1)
			{
			    SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, "An admin has accepted your report and is reviewing it, you can /cevap to send messages to the admin reviewing your report.");
			}
			else
			{
			    format(string, sizeof(string), "%s has accepted your report and is reviewing it, you can /cevap to send messages to the admin reviewing your report.", GetPlayerNameEx(playerid));
			    SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
			}
			PlayerInfo[playerid][pAcceptReport]++;
			Reports[reportid][ReplyTimerr] = SetTimerEx("ReplyTimer", 60000, 0, "d", reportid);
			Reports[reportid][CheckingReport] = playerid;
			//Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			Reports[reportid][TimeToExpire] = 0;
			//strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	    }
	    else
	    {
	        if(CancelReport[playerid] == listitem) return 1;
	        new reportid = ListItemReportId[playerid][listitem];
	        if(Reports[reportid][BeingUsed] == 0)
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Rapor ID'si kullanlmyor!");
			    return 1;
			}
			if(!IsPlayerConnected(Reports[reportid][ReportFrom]))
			{
			    SendClientMessage(playerid, COLOR_GREY, "   Rapor eden oyundan kt!");
			    Reports[reportid][ReportFrom] = 999;
			    Reports[reportid][BeingUsed] = 0;
			    return 1;
			}
			format(string, sizeof(string), "AdminKomutu: %s has trashed the report from %s (RID: %i).", GetPlayerNameEx(playerid), GetPlayerNameEx(Reports[reportid][ReportFrom]), reportid);
			ABroadCast(COLOR_ORANGE, string, 1);
			if(PlayerInfo[playerid][pAdmin] == 1)
			{
			    SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, "An admin has marked your report invalid. It will not be reviewed.");
			}
			else
			{
			    format(string, sizeof(string), "%s has marked your report invalid. It will not be reviewed.", GetPlayerNameEx(playerid));
			    SendClientMessage(Reports[reportid][ReportFrom], COLOR_WHITE, string);
			}
			PlayerInfo[playerid][pTrashReport]++;
			Reports[reportid][ReportFrom] = 999;
			Reports[reportid][BeingUsed] = 0;
			Reports[reportid][TimeToExpire] = 0;
			new reportdialog[2048], itemid = 0;
		    for(new i = 0; i < MAX_REPORTS; i++)
			{
				if(Reports[i][BeingUsed] == 1 && itemid < 40)
				{
					ListItemReportId[playerid][itemid] = i;
					itemid++;
					if(strlen((Reports[i][Report])) > 92)
					{
						new firstline[128], secondline[128];
						strmid(firstline, Reports[i][Report], 0, 88);
						strmid(secondline, Reports[i][Report], 88, 128);
						format(reportdialog, sizeof(reportdialog), "%s%s(ID:%i) | Report: %s", reportdialog, GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, firstline);
						format(reportdialog, sizeof(reportdialog), "%s%s", reportdialog, secondline);
						ListItemReportId[playerid][itemid] = i;
						itemid++;
					}
					else format(reportdialog, sizeof(reportdialog), "%s%s(ID:%i) | Report: %s", reportdialog, GetPlayerNameEx(Reports[i][ReportFrom]), Reports[i][ReportFrom], i, (Reports[i][Report]));

					format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
				}
			}
			CancelReport[playerid] = itemid;
			format(reportdialog, sizeof(reportdialog), "%s\n", reportdialog);
			format(reportdialog, sizeof(reportdialog), "%sCancel Reports", reportdialog);
			//SendClientMessage(playerid, COLOR_GREEN, "___________________________________________________");
			ShowPlayerDialogEx(playerid, REPORTSMENU, DIALOG_STYLE_LIST, "Reports", reportdialog, "Accept", "Trash");
			//strmid(Reports[reportid][Report], "Yok", 0, 4, 4);
	    }
	}*/
	if(dialogid == DIALOG_LOADTRUCK) // TRUCKER JOB LOAD TRUCK
	{
 		if(response)
		{
			if(listitem == 0) // Legal goods
			{

			    ShowPlayerDialogEx(playerid, DIALOG_LOADTRUCKL, DIALOG_STYLE_LIST, "Ne tamak istiyorsun?","{00F70C}Yiyecek & ecek\n{00F70C}Kyafet\n{00F70C}Materyal\n{00F70C}Market Malzemeleri", "Se", "Iptal");
			}
			if(listitem == 1) // Illegal goods
			{
				new level = PlayerInfo[playerid][pTruckSkill];
				if(level >= 0 && level < 50)
				{
            		ShowPlayerDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "Ne tamak istiyorsun?","{FF0606}Silahlar 		{FFFFFF}(Level 1 Bonus: Yok)\n{FF0606}lalar 			{FFFFFF}(Level 1 Bonus: Yok)\n{FF0606}Illegal materyaller  	{FFFFFF}(Level 1 Bonus: Bedava 25 materyal)", "Se", "Iptal");
				}
				else if(level >= 50 && level < 100)
				{
		    		ShowPlayerDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "Ne tamak istiyorsun?","{FF0606}Silahlar 		{FFFFFF}(Level 2 Bonus: Susturuculu tabanca yada 9mm)\n{FF0606}lalar 			{FFFFFF}(Level 2 Bonus: 1gr pot yada 1gr crack)\n{FF0606}Illegal materyaller  	{FFFFFF}(Level 2 Bonus: Bedava 50 materyal)", "Se", "Iptal");
				}
				else if(level >= 100 && level < 200)
				{
		    		ShowPlayerDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "Ne tamak istiyorsun?","{FF0606}Silahlar 		{FFFFFF}(Level 3 Bonus: Susturuculu tabanca, 9mm yada Shotgun)\n{FF0606}lalar 			{FFFFFF}(Level 3 Bonus: 1gr pot ve 1gr crack)\n{FF0606}Illegal materyaller  	{FFFFFF}(Level 3 Bonus: Bedava 100 materyal)", "Se", "Iptal");
				}
				else if(level >= 200 && level < 400)
				{
            		ShowPlayerDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "Ne tamak istiyorsun?","{FF0606}Silahlar 		{FFFFFF}(Level 4 Bonus: Susturuculu tabanca, 9mm, Shotgun yada Rifle)\n{FF0606}lalar 			{FFFFFF}(Level 4 Bonus: 2gr pot ve 2gr crack)\n{FF0606}Illegal materyaller  	{FFFFFF}(Level 4 Bonus: Bedava 150 materyal)", "Se", "Iptal");
				}
				else if(level >= 400)
				{
 		 			ShowPlayerDialogEx(playerid, DIALOG_LOADTRUCKI, DIALOG_STYLE_LIST, "Ne tamak istiyorsun?","{FF0606}Silahlar 		{FFFFFF}(Level 5 Bonus: Shotgun, Rifle yada Deagle [nadir])\n{FF0606}lalar 			{FFFFFF}(Level 5 Bonus: 3gr pot ve 3gr crack)\n{FF0606}Illegal materyaller  	{FFFFFF}(Level 5 Bonus: Bedava 200 materyal)", "Se", "Iptal");
				}
			}
		}
		else
		{
		    DeletePVar(playerid, "IsFrozen");
			TogglePlayerControllable(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kamyona mal yklemeyi iptal ettin. Yk yklemek iin /yukyukle yazip tekrar dene.");
		}
	}
	if(dialogid == DIALOG_LOADTRUCKL) // TRUCKER JOB LEGAL GOODS
	{
 		if(response)
		{
			if(listitem == 0) // Food & beverages
			{
				new route = Random(1, 4);
    			if(route == 1)
				{
    				SetPVarInt(playerid, "TruckDeliver", 1);
    			}
    			if(route == 2)
				{
    				SetPVarInt(playerid, "TruckDeliver", 2);
    			}
    			if(route == 3)
				{
    				SetPVarInt(playerid, "TruckDeliver", 3);
    			}
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyona yiyecek & iecek yklenirken ltfen bekle....");
			}
			if(listitem == 1) // Clothing
			{
				new route = Random(1, 4);
    			if(route == 1)
				{
    				SetPVarInt(playerid, "TruckDeliver", 4);
    			}
    			if(route == 2)
				{
    				SetPVarInt(playerid, "TruckDeliver", 5);
    			}
    			if(route == 3)
				{
    				SetPVarInt(playerid, "TruckDeliver", 6);
    			}
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyona kyafet yklenirken ltfen bekle....");
			}
			if(listitem == 2) // Materials
			{
				SetPVarInt(playerid, "TruckDeliver", 7);
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyona materyal yklenirken ltfen bekle....");
			}
			if(listitem == 3) // 24/7 Items
			{
				new route = Random(1, 4);
    			if(route == 1)
				{
    				SetPVarInt(playerid, "TruckDeliver", 8);
    			}
    			if(route == 2)
				{
    				SetPVarInt(playerid, "TruckDeliver", 9);
    			}
    			if(route == 3)
				{
    				SetPVarInt(playerid, "TruckDeliver", 10);
    			}
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyona market malzemeleri yklenirken ltfen bekle....");
			}

  			LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
			SetProgressBarValue(LoadTruckBar[playerid], 100.0);
			ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
			SetTimerEx("LoadTruck", 1000, 0, "d", playerid);
		}
		else
		{
		    DeletePVar(playerid, "IsFrozen");
			TogglePlayerControllable(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kamyona mal yklemeyi iptal ettin. Yk yklemek iin /yukyukle yazip tekrar dene.");
		}
	}

	if(dialogid == DIALOG_LOADTRUCKI) // TRUCKER JOB ILLEGAL GOODS
	{
 		if(response)
		{
		    new level = PlayerInfo[playerid][pTruckSkill];
			if(listitem == 0) // Weapons
			{
				if(level >= 0 && level < 50)
				{
                    SetPVarInt(playerid, "TruckDeliver", 11); // bonus weapons
				}
				else if(level >= 50 && level < 100)
				{
                    SetPVarInt(playerid, "TruckDeliver", 12); // bonus weapons
				}
				else if(level >= 100 && level < 200)
				{
                    SetPVarInt(playerid, "TruckDeliver", 13); // bonus weapons
				}
				else if(level >= 200 && level < 400)
				{
                    SetPVarInt(playerid, "TruckDeliver", 14); // bonus weapons
				}
				else if(level >= 400)
				{
                    SetPVarInt(playerid, "TruckDeliver", 15); // bonus weapons
				}
    			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyon silahlar ile yklenirken ltfen bekle....");
			}
			if(listitem == 1) // Drugs
			{
				if(level >= 0 && level < 50)
				{
                    SetPVarInt(playerid, "TruckDeliver", 16); // bonus drugs
				}
				else if(level >= 50 && level < 100)
				{
                    SetPVarInt(playerid, "TruckDeliver", 17); // bonus drugs
				}
				else if(level >= 100 && level < 200)
				{
                    SetPVarInt(playerid, "TruckDeliver", 18); // bonus drugs
				}
				else if(level >= 200 && level < 400)
				{
                    SetPVarInt(playerid, "TruckDeliver", 19); // bonus drugs
				}
				else if(level >= 400)
				{
                    SetPVarInt(playerid, "TruckDeliver", 20); // bonus drugs
				}
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyon ilalar ile yklenirken ltfen bekle...");
			}
			if(listitem == 2) // Illegal materials
			{
				if(level >= 0 && level < 50)
				{
                    SetPVarInt(playerid, "TruckDeliver", 21); // Bonus: x materials
				}
				else if(level >= 50 && level < 100)
				{
                    SetPVarInt(playerid, "TruckDeliver", 22); // Bonus: x materials
				}
				else if(level >= 100 && level < 200)
				{
                    SetPVarInt(playerid, "TruckDeliver", 23); // Bonus: x materials
				}
				else if(level >= 200 && level < 400)
				{
                    SetPVarInt(playerid, "TruckDeliver", 24); // Bonus: x materials
				}
				else if(level >= 400)
				{
                    SetPVarInt(playerid, "TruckDeliver", 25); // Bonus: x materials
				}
                SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Kamyon illegal materyallerle yklenirken ltfen bekle.");
			}

  			LoadTruckBar[playerid] = CreateProgressBar(258.00, 137.00, 131.50, 3.19, COLOR_GREEN, 100.0);
			SetProgressBarValue(LoadTruckBar[playerid], 100.0);
			ShowProgressBarForPlayer(playerid, LoadTruckBar[playerid]);
			SetTimerEx("LoadTruck", 1000, 0, "d", playerid);
		}
		else
		{
		    DeletePVar(playerid, "IsFrozen");
			TogglePlayerControllable(playerid, 1);
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "Kamyona mal yklemeyi iptal ettin. Yk yklemek iin /yukyukle yazip tekrar dene.");
		}
	}
	if(dialogid == NMUTE)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0: // Jailtime
				{
				    if(PlayerInfo[playerid][pNMuteTotal] < 4)
				    {
				        /*if(GetPVarInt(playerid, "PBM") > 0)
					    {
					        LeavePaintballArena(playerid, GetPVarInt(playerid, "IsInArena"));
					    }*/
					    PlayerInfo[playerid][pNMute] = 0;
				        ResetPlayerWeaponsEx(playerid);
						if(PlayerInfo[playerid][pJailed] != 0)
						{
						    PlayerInfo[playerid][pJailTime] += PlayerInfo[playerid][pNMuteTotal]*15*60;
						}
						else
						{
							if(PlayerDraggedBy[playerid] != INVALID_PLAYER_ID) {
								IsCopDragging[PlayerDraggedBy[playerid]] = INVALID_PLAYER_ID;
								PlayerDragged[playerid] = 0;
								PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
							}
							PlayerInfo[playerid][pJailed] = 3;
							PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pNMuteTotal]*15*60;
							PhoneOnline[playerid] = 1;
		    				LoadObjectsForPlayer(playerid);

							if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
								RemovePlayerAttachedObject(playerid, 0);

							SetPlayerInterior(playerid, 69);
							PlayerInfo[playerid][pVW] = 696969;
							PlayerInfo[playerid][pInt] = 69;
							SetPlayerVirtualWorld(playerid, 696969);
							new rand = random(sizeof(AdminPrisonFloat));
							SetPlayerPos(playerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);
						}
				    }
				    else if(PlayerInfo[playerid][pNMuteTotal] >= 4 || PlayerInfo[playerid][pNMuteTotal] < 7)
				    {
				        /*if(GetPVarInt(playerid, "PBM") > 0)
					    {
					        LeavePaintballArena(playerid, GetPVarInt(playerid, "IsInArena"));
					    }*/
					    PlayerInfo[playerid][pNMute] = 0;
						GameTextForPlayer(playerid, "~w~Admin Hapsine ~n~~r~Hosgeldin", 5000, 3);
						ResetPlayerWeaponsEx(playerid);
                        if(PlayerInfo[playerid][pJailed] != 0)
                        {
                            PlayerInfo[playerid][pJailTime] += PlayerInfo[playerid][pNMuteTotal]*15*60;
                        }
                        else
                        {
							if(PlayerDraggedBy[playerid] != INVALID_PLAYER_ID) {
								IsCopDragging[PlayerDraggedBy[playerid]] = INVALID_PLAYER_ID;
								PlayerDragged[playerid] = 0;
								PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
							}
							PlayerInfo[playerid][pJailed] = 3;
							PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pNMuteTotal]*15*60;
							PhoneOnline[playerid] = 1;
		    				LoadObjectsForPlayer(playerid);

							if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
								RemovePlayerAttachedObject(playerid, 0);

							SetPlayerInterior(playerid, 69);
							PlayerInfo[playerid][pVW] = 696969;
							PlayerInfo[playerid][pInt] = 69;
							SetPlayerVirtualWorld(playerid, 696969);
							new rand = random(sizeof(AdminPrisonFloat));
							SetPlayerPos(playerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);
						}
				    }
					format(string,sizeof(string),"{AA3333}AdminUyars{FFFF00}: %s, newbie kanalndaki mutesini atrmak iin %d dakika hapiste.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pNMuteTotal]*15);
					ABroadCast(COLOR_YELLOW,string,1);
	            }
	            case 1: // Fine
	            {
	                new playername[MAX_PLAYER_NAME];
	                GetPlayerName(playerid, playername, sizeof(playername));

					new allmoney;
					if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
					{
						allmoney = HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney]+GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
					}
					else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)
					{
						allmoney += HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney];
					}
					else
					{
						allmoney = GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
					}

				    new fine = 10*allmoney/100;
	                format(string,sizeof(string),"{AA3333}AdminUyars{FFFF00}: %s, newbie kanalndaki mutesini atrmak iin $%d ceza dedi.",GetPlayerNameEx(playerid),fine);
	                GivePlayerCash(playerid,-fine);
					ABroadCast(COLOR_YELLOW,string,1);
					PlayerInfo[playerid][pNMute] = 0;
	            }
	        }
	    }
		else
		{
		    format(string,sizeof(string),"{AA3333}AdminUyars{FFFF00}: %s, newbie kanal mutesinden dolay ald cezay iptal etti.",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_YELLOW,string,1);
		}
	}
	if(dialogid == ADMUTE)
	{
	    if(response == 1)
	    {
	        switch(listitem)
	        {
	            case 0: // Jailtime
				{
				    if(PlayerInfo[playerid][pADMuteTotal] < 4)
				    {
				        /*if(GetPVarInt(playerid, "PBM") > 0)
					    {
					        LeavePaintballArena(playerid, GetPVarInt(playerid, "IsInArena"));
					    }*/
					    PlayerInfo[playerid][pADMute] = 0;
				        ResetPlayerWeaponsEx(playerid);
						if(PlayerInfo[playerid][pJailed] != 0)
						{
						    PlayerInfo[playerid][pJailTime] += PlayerInfo[playerid][pADMuteTotal]*15*60;
						}
						else
						{
							PlayerInfo[playerid][pJailed] = 3;
							PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pNMuteTotal]*15*60;
							if(PlayerDraggedBy[playerid] != INVALID_PLAYER_ID) {
								IsCopDragging[PlayerDraggedBy[playerid]] = INVALID_PLAYER_ID;
								PlayerDragged[playerid] = 0;
								PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
							}
							PhoneOnline[playerid] = 1;
		    				LoadObjectsForPlayer(playerid);

							if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
								RemovePlayerAttachedObject(playerid, 0);

							SetPlayerInterior(playerid, 69);
							PlayerInfo[playerid][pVW] = 696969;
							PlayerInfo[playerid][pInt] = 69;
							SetPlayerVirtualWorld(playerid, 696969);
							new rand = random(sizeof(AdminPrisonFloat));
							SetPlayerPos(playerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);
						}
				    }
				    else if(PlayerInfo[playerid][pADMuteTotal] >= 4 || PlayerInfo[playerid][pADMuteTotal] < 7)
				    {
				        /*if(GetPVarInt(playerid, "PBM") > 0)
					    {
					        LeavePaintballArena(playerid, GetPVarInt(playerid, "IsInArena"));
					    }*/
					    PlayerInfo[playerid][pADMute] = 0;
						GameTextForPlayer(playerid, "~w~Admin Hapsine ~n~~r~Hosgeldin", 5000, 3);
						ResetPlayerWeaponsEx(playerid);
						if(PlayerInfo[playerid][pJailed] != 0)
						{
						    PlayerInfo[playerid][pJailTime] += PlayerInfo[playerid][pADMuteTotal]*15*60;
						}
						else
						{
							if(PlayerDraggedBy[playerid] != INVALID_PLAYER_ID) {
								IsCopDragging[PlayerDraggedBy[playerid]] = INVALID_PLAYER_ID;
								PlayerDragged[playerid] = 0;
								PlayerDraggedBy[playerid] = INVALID_PLAYER_ID;
							}
							PlayerInfo[playerid][pJailed] = 3;
							PlayerInfo[playerid][pJailTime] = PlayerInfo[playerid][pNMuteTotal]*15*60;
							PhoneOnline[playerid] = 1;
		    				LoadObjectsForPlayer(playerid);

							if(IsPlayerAttachedObjectSlotUsed(playerid, 0))
								RemovePlayerAttachedObject(playerid, 0);

							SetPlayerInterior(playerid, 69);
							PlayerInfo[playerid][pVW] = 696969;
							PlayerInfo[playerid][pInt] = 69;
							SetPlayerVirtualWorld(playerid, 696969);
							new rand = random(sizeof(AdminPrisonFloat));
							SetPlayerPos(playerid, AdminPrisonFloat[rand][0], AdminPrisonFloat[rand][1], AdminPrisonFloat[rand][2]);
						}
				    }
					format(string,sizeof(string),"{AA3333}AdminUyars{FFFF00}: %s, reklam mutesini atrmak iin %d dakika hapiste.",GetPlayerNameEx(playerid),PlayerInfo[playerid][pADMuteTotal]*15);
					ABroadCast(COLOR_YELLOW,string,1);
	            }
	            case 1: // Fine
	            {
	                new playername[MAX_PLAYER_NAME];
	                GetPlayerName(playerid, playername, sizeof(playername));

					new allmoney;
					if(PlayerInfo[playerid][pHouse] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse]][hOwner], true) == 0)
					{
						allmoney = HouseInfo[PlayerInfo[playerid][pHouse]][hSafeMoney]+GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
					}
					else if(PlayerInfo[playerid][pHouse2] != INVALID_HOUSE_ID && strcmp(GetPlayerNameEx(playerid), HouseInfo[PlayerInfo[playerid][pHouse2]][hOwner], true) == 0)
					{
						allmoney += HouseInfo[PlayerInfo[playerid][pHouse2]][hSafeMoney];
					}
					else
					{
						allmoney = GetPlayerCash(playerid)+PlayerInfo[playerid][pBank];
					}

                    PlayerInfo[playerid][pADMute] = 0;
				    new fine = 10*allmoney/100;
	                format(string,sizeof(string),"{AA3333}AdminUyars{FFFF00}: %s, reklam mutesinin kaldrlmas iin $%d dedi.",GetPlayerNameEx(playerid),fine);
	                GivePlayerCash(playerid,-fine);
					ABroadCast(COLOR_YELLOW,string,1);
	            }
	        }
	    }
	    else
	    {
	        format(string,sizeof(string),"{AA3333}AdminUyars{FFFF00}: %s, reklam mutesi iin ald cezay iptal etti.",GetPlayerNameEx(playerid));
			ABroadCast(COLOR_YELLOW,string,1);
	    }
	}
	switch(dialogid) {
		case DIALOG_ADMAIN: if(response) switch(listitem) {
			case 0: {

				new
					szDialog[2256],
					szBuffer[32],
					arrAdverts[MAX_PLAYERS] = INVALID_PLAYER_ID,
					iDialogCount,
					iCount,
					iBreak,
					iRand;

				for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;
				foreach(Player, i) if(!isnull(szAdvert[i])) arrAdverts[iCount++] = i;

				while(iDialogCount < 50 && iBreak < 5000) {
					iRand = random(iCount);
					if(arrAdverts[iRand] != INVALID_PLAYER_ID) {
						strcpy(szBuffer, szAdvert[arrAdverts[iRand]], sizeof(szBuffer));
						if(AdminDuty[playerid] == 0) format(szDialog, sizeof(szDialog), "%s%s... (%i)\r\n", szDialog, szBuffer, PlayerInfo[arrAdverts[iRand]][pNumber]);
						else format(szDialog, sizeof(szDialog), "%s%s... (%s)\r\n", szDialog, szBuffer, GetPlayerNameEx(arrAdverts[iRand]));
						ListItemTrackId[playerid][iDialogCount++] = arrAdverts[iRand];
						arrAdverts[iRand] = INVALID_PLAYER_ID;
					}
					++iBreak;
				}
				if(!isnull(szDialog)) return ShowPlayerDialogEx(playerid, DIALOG_ADLIST, DIALOG_STYLE_LIST, "Reklamlar - Liste", szDialog, "Se", "Geri Don");
				ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
				SendClientMessage(playerid, COLOR_GREY, "Yollanan reklam yok.");
			}
			case 1: ShowPlayerDialogEx(playerid, DIALOG_ADSEARCH, DIALOG_STYLE_INPUT, "Reklamlar - Ara", "Enter a search phrase.", "Ara", "Geri Don");
			case 2: {
				if(PlayerInfo[playerid][pADMute] == 1) {
					SendClientMessage(playerid, COLOR_GREY, "Reklam verme mutesi yemisin.");
				}
				else if(PlayerInfo[playerid][pNumber] == 0) {
					SendClientMessage(playerid, COLOR_GRAD2, "Telefonun yok.");
				}
				else ShowPlayerDialogEx(playerid, DIALOG_ADPLACE, DIALOG_STYLE_INPUT, "Advertisements - Place Advertisement", "Enter your desired advertisement text! Keep it below 128 characters.", "Submit", "Geri Don");
			}
			case 3: {
				if(PlayerInfo[playerid][pADMute] == 1) {
					SendClientMessage(playerid, COLOR_GREY, "Reklam verme mutesi yemisin.");
				}
				else if(PlayerInfo[playerid][pNumber] == 0) {
					SendClientMessage(playerid, COLOR_GRAD2, "Telefonun yok.");
				}
				else if(iAdverTimer >= 1) {
					ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
					return SendClientMessage(playerid, COLOR_GREY, "Her 30 saniyede yalnzca bir tane ncelikli reklam verilebilir.");
				}
				else if(GetPVarType(playerid, "adT")) {
					ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
					return SendClientMessage(playerid, COLOR_GREY, "Yalnzca 2 dakikada bir ncelikli reklam verebilirsin.");
				}
				else ShowPlayerDialogEx(playerid, DIALOG_ADPLACEP, DIALOG_STYLE_INPUT, "Reklamlar - ncelikli Reklam",
				"stediin ncelikli reklam ieriini gir! 128 karakterin zerine kamazsn.\nncelikli bir reklam olaca iin, tm oyuncular grebilecek ve bu sana 800$'a patlayacak.", "Submit", "Geri Don");
			}
		}
		case DIALOG_ADPLACE: {
			if(response) {

				new
					iLength = strlen(inputtext);

				if(!(2 <= iLength <= 127)) {
					ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
					return SendClientMessage(playerid, COLOR_GREY, "Girdiiniz ierik ok uzun yada ok ksa.");
				}

				iLength *= 5;
				if(GetPlayerCash(playerid) < iLength) {
					ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
					return SendClientMessage(playerid, COLOR_GREY, "Bunun iin yeterli paran yok.");
				}
				strcpy(szAdvert[playerid], inputtext, 128);
				GivePlayerCash(playerid, -iLength);
				format(string, sizeof(string), "Tebrikler, $%d'a ncelikli reklamn verdin!", iLength);
				SendClientMessage(playerid, COLOR_WHITE, string);
			}
			else ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
		}

		case DIALOG_ADPLACEP: {
			if(response) {
				if(iAdverTimer >= 1) {
					SendClientMessage(playerid, COLOR_GREY, "Her 30 saniyede yalnzca bir tane ncelikli reklam verilebilir.");
					return ShowPlayerDialogEx(playerid, DIALOG_ADPLACEP, DIALOG_STYLE_INPUT, "Reklamlar - ncelikli Reklam",
					"stediin ncelikli reklam ieriini gir! 128 karakterin zerine kamazsn.\nncelikli bir reklam olaca iin, tm oyuncular grebilecek ve bu sana 800$'a patlayacak.", "Submit", "Geri Don");
				}
				else if(GetPlayerCash(playerid) < 800) {
					ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
					return SendClientMessage(playerid, COLOR_GREY, "Bunun iin yeterli paran yok.");
				}
				else if(!(2 <= strlen(inputtext) <= 79)) {
					ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
					return SendClientMessage(playerid, COLOR_GREY, "Girdiiniz ierik ok uzun yada ok ksa.");
				}
				iAdverTimer = 30;
				SetPVarInt(playerid, "adT", 120);
				strcpy(szAdvert[playerid], inputtext, 128);
				GivePlayerCash(playerid, -800);

				new
					szMessage[128];

 				format(szMessage, sizeof(szMessage), "{EC9C1C}<{FFFFFF}SAN News{EC9C1C}> {FFFFFF}Reklam: {EC9C1C}%s - letiim: {D5D212}%s (%i)", inputtext, GetPlayerNameEx(playerid), PlayerInfo[playerid][pNumber]);
                SendClientMessageToAllEx(COLOR_ORANGE, szMessage);


				return SendClientMessage(playerid, COLOR_WHITE, "Tebrikler ncelikli reklamn baarl bir ekilde verdin.");
			}
			else ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
		}
		case DIALOG_ADSEARCH: {
			if(response) {

				if(!(4 <= strlen(inputtext) <= 80))
					return ShowPlayerDialogEx(playerid, DIALOG_ADSEARCH, DIALOG_STYLE_INPUT, "Reklamlar - Ara", "4 ile\n80 karakter aras olmas gerekiyor.\n\nAranacak szc girin.", "Ara", "Geri Don");
				else for(new x; x < 50; ++x) ListItemTrackId[playerid][x] = -1;

				new
					szDialog[2256],
					szSearch[80],
					szBuffer[32],
					iCount;

				strcat(szSearch, inputtext, sizeof(szSearch)); // strfind is a piece of shit when it comes to non-indexed arrays, maybe this'll help.
				foreach(Player, i) if(!isnull(szAdvert[i])) {
					// printf("[ads] [NAME: %s] [ID: %i] [AD: %s] [SEARCH: %s]", GetPlayerNameEx(i), i, szAdvert[i], szSearch);
					if(strfind(szAdvert[i], szSearch, true) != -1 && iCount < 50) {
						// printf("[ads - MATCH] [NAME: %s] [ID: %i] [AD: %s] [SEARCH: %s] [COUNT: %i] [DIALOG LENGTH: %i] [FINDPOS: %i]", GetPlayerNameEx(i), i, szAdvert[i], szSearch, iCount, strlen(szDialog), strfind(szAdvert[i], szSearch, true));
						strcpy(szBuffer, szAdvert[i], sizeof(szBuffer));
						if(AdminDuty[playerid] == 0) format(szDialog, sizeof(szDialog), "%s%s... (%i)\r\n", szDialog, szBuffer, PlayerInfo[i][pNumber]);
						else format(szDialog, sizeof(szDialog), "%s%s... (%s)\r\n", szDialog, szBuffer, GetPlayerNameEx(i));
						ListItemTrackId[playerid][iCount++] = i;
					}
				}
				if(!isnull(szDialog)) ShowPlayerDialogEx(playerid, DIALOG_ADSEARCHLIST, DIALOG_STYLE_LIST, "Reklamlar - Arama Sonular", szDialog, "Se", "Geri Don");
				else ShowPlayerDialogEx(playerid, DIALOG_ADSEARCHLIST, DIALOG_STYLE_INPUT, "Reklamlar - Ara", "Sonu bulunamad.\n\nAranacak szc girin.", "Ara", "Geri Don");

			}
   				else ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
		}
		case DIALOG_ADSEARCHLIST: if(response) {

			new
				i = ListItemTrackId[playerid][listitem],
				szDialog[164];

			if(IsPlayerConnected(i) && !isnull(szAdvert[i])) {
				format(szDialog, sizeof(szDialog), "%s\r\nletiim: %i", szAdvert[i], PlayerInfo[i][pNumber]);
				ShowPlayerDialogEx(playerid, DIALOG_ADFINAL, DIALOG_STYLE_MSGBOX, "Reklamlar - Arama Sonucu", szDialog, "Geri Don", "Exit");
			}
			else SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu ya oyundan dt, ya da reklam vermeyi brakt.");
		}
		case DIALOG_ADFINAL: {
			if(response) return ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
		}
		case DIALOG_ADLIST: {
			if(response) {

				new
					i = ListItemTrackId[playerid][listitem],
					szDialog[164];

				if(IsPlayerConnected(i) && !isnull(szAdvert[i])) {
					format(szDialog, sizeof(szDialog), "%s\r\nletiim: %i", szAdvert[i], PlayerInfo[i][pNumber]);
					return ShowPlayerDialogEx(playerid, DIALOG_ADFINAL, DIALOG_STYLE_MSGBOX, "Reklamlar - Arama Sonucu", szDialog, "Geri Don", "Exit");
				}
				else SendClientMessage(playerid, COLOR_GREY, "Bu oyuncu ya oyundan dt, ya da reklam vermeyi brakt.");
			}
			else ShowPlayerDialogEx(playerid, DIALOG_ADMAIN, DIALOG_STYLE_LIST, "Reklamlar", "Reklamlar Listele\nReklam Ara\nReklam ver\nncelikli Reklam Ver", "Se", "Iptal");
		}
	}
	if(dialogid == STOREMENU)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetPlayerCash(playerid) >= 50)
				{
					new randphone = 1000 + random(99999);//minimum 1000  max 99999
					ReplacePH(PlayerInfo[playerid][pNumber], randphone);
					PlayerInfo[playerid][pNumber] = randphone;
 					PlayerInfo[playerid][pInt] = GetPlayerInterior(playerid);
					PlayerInfo[playerid][pVW] = GetPlayerVirtualWorld(playerid);
					GetPlayerIp(playerid, PlayerInfo[playerid][pIP], 32);
					GetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
					GetPlayerFacingAngle(playerid, PlayerInfo[playerid][pPos_r]);
					OnPlayerStatsUpdate(playerid);
					format(string, sizeof(string), "Telefon satn alnd, yeni telefon numaran %d.", randphone);
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_GRAD5, "Telefonun bilgini /karakter yazarak daima grebilirsin.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: /telefonyardim yazarak telefon komutlarn grebilirsin.");
					GivePlayerCash(playerid, -50);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 1)
			{
				if(GetPlayerCash(playerid) >= 25)
				{
					PlayerInfo[playerid][pPhoneBook] = 1;
					format(string, sizeof(string), "Telefon defteri satn alnd. Dier oyuncularn telefon numarasna bakabilirsin..");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: /numara <id/isim>.");
					GivePlayerCash(playerid, -25);
				}
				else
				{
				SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 2)
			{
				if(GetPlayerCash(playerid) >= 50)
				{
					PlayerInfo[playerid][pDice] = 1;
					format(string, sizeof(string), "Zar satn alnd.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: /zarat yazarak zar atabilirsin.");
					GivePlayerCash(playerid, -50);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 3)
			{
				if(GetPlayerCash(playerid) >= 5)
				{
					Condom[playerid] ++;
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					format(string, sizeof(string), "Prezervatif alnd.");
					SendClientMessage(playerid, COLOR_GRAD4, string);
					GivePlayerCash(playerid, -5);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 4)
			{
				if(GetPlayerCash(playerid) >= 5)
				{
					GivePlayerCash(playerid, -50);
					PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					SendClientMessage(playerid, COLOR_GRAD4, "CD Player satin alindi.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: /muzik yaz.");
					PlayerInfo[playerid][pCDPlayer] = 1;
					GivePlayerCash(playerid, -5);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 5)
			{
				if(GetPlayerCash(playerid) >= 20)
				{
					if(PlayerInfo[playerid][pSpraycan] < 20) {
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerInfo[playerid][pSpraycan] += 10;
						SendClientMessage(playerid, COLOR_GRAD4, "10 Araboyas alnd.");
						SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Aracn ierisindeyken /araciboya ve /boyaisi komutlariyla aracini boyayabilirsin.");
						GivePlayerCash(playerid, -20);
					}
					else SendClientMessage(playerid, COLOR_GRAD4, "Bu eyadan daha fazla bulunduramazsn.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 6)
			{
				if(GetPlayerCash(playerid) >= 100)
				{
					if(PlayerInfo[playerid][pRope] < 8) {
						PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
						PlayerInfo[playerid][pRope] += 3;
						SendClientMessage(playerid, COLOR_GRAD4, "3 Ropes purchased.");
						SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Birini balamak iin ara srerken /bagla yaz.");
						GivePlayerCash(playerid, -100);
					}
					else SendClientMessage(playerid, COLOR_GRAD4, "Bu eyadan daha fazla bulunduramazsn.");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 7)
			{
				if(GetPlayerCash(playerid) >= 5)
				{
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pCigar] = 10;
					SendClientMessage(playerid, COLOR_GRAD4, "10 sigara satn alnd.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Sigara yakmak iin /sigara komutunu kullan. mek iin ise mousenin sol tuuna bas. Frlatmak iin ise F tuuna bas.");
					GivePlayerCash(playerid, -5);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 8) {
				if(GetPlayerCash(playerid) >= 1) {
				    if(PlayerInfo[playerid][pSprunk] >= 10)
				        return SendClientMessage(playerid, COLOR_GREY, "Daha fazla gazoz tayamazsn.");

				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pSprunk] += 1;
					SendClientMessage(playerid, COLOR_GRAD4, "Gazoz satin alindi.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Gazoz inmek iin /gazozic yaz ve mousenin sol tuuna basarak i. Atmak iin ise F tuuna bas.");
					GivePlayerCash(playerid, -1);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 9)
			{
				if(GetPlayerCash(playerid) >= 500)
				{
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pRadio] = 1;
					PlayerInfo[playerid][pRadioFreq] = 1;
					SendClientMessage(playerid, COLOR_GRAD4, "Portatif radyo satn alnd.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Portatif radyondan konumak iin /pr komutunu kullan.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Radyo frekansn deitirmek iin /frekans komutunu kullan.");
					GivePlayerCash(playerid, -500);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 10)
			{
				if(GetPlayerCash(playerid) >= 20)
				{
				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					GivePlayerValidWeapon(playerid, 43, 99999);
					SendClientMessage(playerid, COLOR_GRAD4, "Kamera satn alnd.");
					SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Resim ekerken vizrden bakmay unutmayn.");
					GivePlayerCash(playerid, -20);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 11)
			{
				if(GetPlayerCash(playerid) >= 50)
				{
				    if(PlayerInfo[playerid][pBlindfold] >= 5)
					    return SendClientMessage(playerid, COLOR_WHITE, "Daha fazla Gz Bandanas tayamazsn.");

				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pBlindfold] += 1;
					SendClientMessage(playerid, COLOR_GRAD4, "Gz bandanas satn alnd.");
					SendClientMessage(playerid, COLOR_WHITE,"Artk /gozbagla ile birilerinin gzn balayabilirsin.");
					GivePlayerCash(playerid, -50);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
			if(listitem == 12)
			{
				if(GetPlayerCash(playerid) >= 50)
				{
				    if(PlayerInfo[playerid][pGas] >= 10)
				        return SendClientMessage(playerid, COLOR_WHITE, "Daha fazla benzin bidonu tayamazsn!");

				    PlayerPlaySound(playerid, 1052, 0.0, 0.0, 0.0);
					PlayerInfo[playerid][pGas] += 1;
					SendClientMessage(playerid, COLOR_GRAD4, "1 adet benzin bidonu satn alnd!");
					SendClientMessage(playerid, COLOR_WHITE,"Aracnz benzinle doldurmak iin /bidonkullan yazmalsnz.");
					GivePlayerCash(playerid, -50);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD4, "Bu eya iin yeterli paran yok.");
				}
			}
		}
	}
	if(dialogid == FINDDEALERSHIPMENU)
	{
		if(response)
		{
			new
				szMessage[128];
			SetPlayerCheckpoint(playerid, CarDealershipInfo[listitem][cdEntranceX], CarDealershipInfo[listitem][cdEntranceY], CarDealershipInfo[listitem][cdEntranceZ], 3);
			format(szMessage, sizeof(szMessage), "%s' setin. Haritandaki krmz noktaya git.", CarDealershipInfo[listitem][cdMessage]);
			SendClientMessage(playerid, COLOR_WHITE, szMessage);
			FindingDealership[playerid] = 1;
		}
	}
	if(dialogid == FINDCARTUNINGMENU)
	{
		if(response) {
			switch(listitem) {
				case 0: {
					SetPlayerCheckpoint(playerid, -1935.7700, 228.7900, 34.1563, 3);
					SendClientMessage(playerid, COLOR_WHITE, "Ara modifiyecisini setin. Haritandaki krmz noktaya git.");
					FindingDealership[playerid] = 1; // Using this because it's pointless to make another variable.
				} case 1: {
					SetPlayerCheckpoint(playerid, -2707.4482, 218.9819, 4.1797, 3);
					SendClientMessage(playerid, COLOR_WHITE, "Ara modifiyecisini setin. Haritandaki krmz noktaya git.");
					FindingDealership[playerid] = 1; // Using this because it's pointless to make another variable.
				} case 2: {
					SetPlayerCheckpoint(playerid, 2645.6418, -2028.8173, 13.5469, 3);
					SendClientMessage(playerid, COLOR_WHITE, "LowRider tipi ara modifiyecisini setin. Haritandaki krmz noktaya git.");
					FindingDealership[playerid] = 1; // Using this because it's pointless to make another variable.
				} case 3: {
					SetPlayerCheckpoint(playerid, 1041.2914, -1036.4375, 31.7365, 3);
					SendClientMessage(playerid, COLOR_WHITE, "Ara modifiyecisini setin. Haritandaki krmz noktaya git.");
					FindingDealership[playerid] = 1; // Using this because it's pointless to make another variable.
				} case 4: {
					SetPlayerCheckpoint(playerid, 2387.5823, 1036.0345, 10.8203, 3);
					SendClientMessage(playerid, COLOR_WHITE, "Ara modifiyecisini setin. Haritandaki krmz noktaya git.");
					FindingDealership[playerid] = 1; // Using this because it's pointless to make another variable.
				}
			}
		}
	}
	if(dialogid == COLORMENU)
	{
		if(response)
		{
			if(listitem == 0)
			{
				SetPlayerColor(playerid,COLOR_A8);
				SendClientMessage(playerid, COLOR_A8, "{31F4F1}Server Owner olarak deitirildi!");
			}
			if(listitem == 1)
			{
				SetPlayerColor(playerid,COLOR_A7);
				SendClientMessage(playerid, COLOR_A7, "Level 7 admin olarak deitirdi!");
			}
			if(listitem == 2)
			{
				SetPlayerColor(playerid,COLOR_A6);
				SendClientMessage(playerid, COLOR_A6	, "Level 6 admin olarak deitirildi!");
			}
			if(listitem == 3)
			{
				SetPlayerColor(playerid,COLOR_A5);
				SendClientMessage(playerid, COLOR_A5, "Level 5 admin olarak deitirildi!");
			}
			if(listitem == 4)
			{
				SetPlayerColor(playerid,COLOR_A4);
				SendClientMessage(playerid, COLOR_A4, "Level 4 admin olarak deitirildi!");
			}
			if(listitem == 5)
			{
				SetPlayerColor(playerid,COLOR_A3);
				SendClientMessage(playerid, COLOR_A3, "Level 3 admin olarak deitirildi!");
			}
			if(listitem == 6)
			{
				SetPlayerColor(playerid,COLOR_A2);
				SendClientMessage(playerid, COLOR_A2, "Level 2 admin olarak deitirildi!");
			}
			if(listitem == 7)
			{
				SetPlayerColor(playerid,COLOR_A1);
				SendClientMessage(playerid, COLOR_A1, "Level 1 admin olarak deitirildi!");
			}
			if(listitem == 8)
			{
				SetPlayerColor(playerid,COLOR_A0);
				SendClientMessage(playerid, COLOR_A0, "Normal olarak deitirildi!");
			}
		}
	}
	if(dialogid == 3495) {
		new skinid = strval(inputtext);

		if(!response)
		    return 1;

        if(IsValidSkin(skinid) == 0 && PlayerInfo[playerid][pDonator] < 1) {
			SendClientMessage(playerid, COLOR_GREY, "Girilen skin ID yanl yada bir oluum & aileye ait.");
   			ShowPlayerDialogEx(playerid, 3495, DIALOG_STYLE_INPUT, "Skin Seimi","Ltfen bir Skin ID'si girin\n\nUyar: Skin deiimleri 250$'dr.", "Satn Al", "Iptal");
		} else {
			if(GetPlayerCash(playerid) < 250 && PlayerInfo[playerid][pFaction] == 0 && PlayerInfo[playerid][pLeader] == 0)
			   	return SendClientMessage(playerid, COLOR_GRAD2, "Bu kyafetlerin parasn karlayamyorsun.");

			if(PlayerInfo[playerid][pDonator] > 0 && IsInvalidSkin(skinid)) {
			    ShowPlayerDialogEx(playerid, 3495, DIALOG_STYLE_INPUT, "Skin Seimi","Ltfen bir Skin ID'si girin\n\nUyar: Skin deiimleri VIP'lere bedavadr.", "Satn Al", "Iptal");
			    return SendClientMessage(playerid, COLOR_GREY, "Yanl skin ID'si, tekrar deneyin.");
			}

			if(PlayerInfo[playerid][pFaction] == 0 && PlayerInfo[playerid][pLeader] == 0 && PlayerInfo[playerid][pDonator] == 0) {
				GivePlayerCash(playerid, -250);
				GameTextForPlayer(playerid, "~g~Skin satin alindi ~n~ ~r~- $250", 2000, 1);
			} else {
			    GameTextForPlayer(playerid, "~g~Skin degistirildi", 2000, 1);
			}

			PlayerInfo[playerid][pSkin] = skinid;
			SetPlayerSkin(playerid, skinid);
  		}
		return 1;
	}
	// MVB System
	if(dialogid == MDC_MAIN && response)
	{//*Memur Bul\n*Sivil Bilgisi\n*Law Enforcement Agencies\n*Options
 		if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
	   	switch(listitem)
	    {
	        case 0:
	        {
	            ShowPlayerDialogEx(playerid, MDC_FIND, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Memur GPS Yeri", "Bir devlet memuru ad yada ID'si girin.", "Gir", "Iptal");
	        }
	        case 1:
	        {
	            ShowPlayerDialogEx(playerid, MDC_CIVILIANS, DIALOG_STYLE_LIST, "*GOV-MVB - Giri yapld | Sivil Seenekleri", "*Kayit Kontrol\n*Lisanslar\n*Tutuklama Emirleri\n*Tutuklama Emri Koy\n*BOLO\n*BOLO Olutur\n*Sil", "Tamam", "Iptal");
	        }
	        case 2:
	        {
	            ShowPlayerDialogEx(playerid, MDC_MEMBERS, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Birim Listesi", "*LSPD\n*FBI\n*LSFMD\n*GOV", "Tamam", "Iptal");
	        }
		}
	}
	if(dialogid == MDC_FIND && response)
	{
	    new giveplayerid;
		if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
		if(sscanf(inputtext, "u", giveplayerid))
		{
			ShowPlayerDialogEx(playerid, MDC_FIND, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Memur GPS Yeri", "Bir devlet memuru ad yada ID'si girin.", "Gir", "Iptal");
			return 1;
		}

		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
				if(giveplayerid == playerid)
				{
				    ShowPlayerDialogEx(playerid, MDC_FIND, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Kendi kendini bulamazsn.\nBir memur ismi yada ID'si gir.", "Gir", "Iptal");

					return 1;
				}
				if(PlayerInfo[giveplayerid][pFaction] == 1|| PlayerInfo[giveplayerid][pLeader] == 1 || PlayerInfo[giveplayerid][pFaction] == 2 || PlayerInfo[giveplayerid][pLeader] == 2)
				{
				    if(AdminDuty[giveplayerid] != 0)
				        return SendClientMessage(playerid, COLOR_GREY, "banda olan bir adminin yerini bulamazsn.");

	    			SetPlayerMarkerForPlayer(playerid,giveplayerid,FIND_COLOR);
                    FindingPlayer[playerid] = giveplayerid;
		    		FindTime[playerid] = 1;
		    		FindTimePoints[playerid] = 30;
		    	}
		    	else
		    	{
			    	SendClientMessage(playerid, COLOR_GRAD2, "Sadece dier memurlar bulabilirsin!");
		    	}
			}
		}
	}
	if(dialogid == MDC_CIVILIANS && response)
	{ //*Check Record\n*Licenses\nWarrants\n*Issue Warrant
		new WarrantString[512];
	 	if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
		if(News[hTaken6] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd6], News[hContact6]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken7] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd7], News[hContact7]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken8] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd8], News[hContact8]);
		    strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken9] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd9], News[hContact9]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken10] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd10], News[hContact10]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken11] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd11], News[hContact11]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken12] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd12], News[hContact12]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(News[hTaken13] == 1)
		{
			format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd13], News[hContact13]);
			strcat(WarrantString, string, sizeof(WarrantString));
		}
		if(strlen(WarrantString) == 0)
		{
		    strcat(WarrantString, "uanda aktif bir emir yok.", sizeof(WarrantString));
		}
		switch(listitem)
		{
		    case 0: ShowPlayerDialogEx(playerid, MDC_CHECK, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Records Check", "Kiinin adn yada ID'sini girin.", "Gir", "Iptal");
		    case 1: ShowPlayerDialogEx(playerid, MDC_LICENSES, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Lisans Kontrol", "Kiinin adn yada ID'sini girin.", "Gir", "Iptal");
			case 2: ShowPlayerDialogEx(playerid, MDC_WARRANTS, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Emir Listesi", WarrantString, "Gir", "Iptal");
			case 3: ShowPlayerDialogEx(playerid, MDC_ISSUE_SLOT, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Hangi slotu kullanmak istiyorsun?", "1\n2\n3\n4\n5\n6\n7\n8", "Gir", "Iptal");
		    case 4:
		    {
				new BOLOString[512];
				if(News[hTaken14] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd14], News[hContact14]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken15] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd15], News[hContact15]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken16] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd16], News[hContact16]);
				    strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken17] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd17], News[hContact17]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken18] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd18], News[hContact18]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken19] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd19], News[hContact19]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken20] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd20], News[hContact20]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(News[hTaken21] == 1)
				{
					format(string, sizeof(string), "%s :: Memur: %s\n", News[hAdd21], News[hContact21]);
					strcat(BOLOString, string, sizeof(BOLOString));
				}
				if(strlen(BOLOString) == 0)
				{
				    strcat(BOLOString, "uanda BOLO yok.", sizeof(BOLOString));
				}
				ShowPlayerDialogEx(playerid, MDC_BOLOLIST, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | BOLO Listesi", BOLOString, "Tamam", "Iptal");
		    }
		    case 5:
		    {
		    	ShowPlayerDialogEx(playerid, MDC_BOLO_SLOT, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Hangi slotu kullanmak istiyorsun?", "1\n2\n3\n4\n5\n6\n7\n8", "Gir", "Iptal");
		    }
		    case 6:
	        {
	        	ShowPlayerDialogEx(playerid, MDC_DELETE, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Sil", "*BOLO\n*Emir", "Tamam", "Iptal");
	        }
		}

	}
	if(dialogid == MDC_MEMBERS && response)
	{
	    if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
		new MemberString[1024], giveplayer[MAX_PLAYER_NAME];
		new rank[64], division[64], employer[64];
		if(listitem == 0)
		{
			foreach(Player, i)
			{
			    giveplayer = GetPlayerNameEx(i);
				if(PlayerInfo[i][pFaction] == 1)
				{
				    GetPlayerFactionInfo(i, rank, division, employer);
					//GetPlayerName(i, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* %s (%s) %s Ph: %d\n", rank, division,  giveplayer, PlayerInfo[i][pNumber]);
					strcat(MemberString, string, sizeof(MemberString));
				}
			}
			if(strlen(MemberString) == 0)
			{
			    strcat(MemberString, "uanda online ye yok.", sizeof(MemberString));
			}
			ShowPlayerDialogEx(playerid, MDC_LSPD, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | LSPD Uyeleri", MemberString, "Se", "Iptal");
		}
		else if(listitem == 1)
		{
			foreach(Player, i)
			{
			    giveplayer = GetPlayerNameEx(i);
			    if(PlayerInfo[i][pFaction] == 2)
				{
				    GetPlayerFactionInfo(i, rank, division, employer);
					//GetPlayerName(i, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* %s (%s) %s Ph: %d\n", rank, division,  giveplayer, PlayerInfo[i][pNumber]);
					strcat(MemberString, string, sizeof(MemberString));
				}
			}
			if(strlen(MemberString) == 0)
			{
			    strcat(MemberString, "uanda online ye yok.", sizeof(MemberString));
			}
			ShowPlayerDialogEx(playerid, MDC_SFPD, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | FBI Uyeleri", MemberString, "Se", "Iptal");
		}
		else if(listitem == 2)
		{
			foreach(Player, i)
			{
			    giveplayer = GetPlayerNameEx(i);
      	 		if(PlayerInfo[i][pFaction] == 3)
				{
				    GetPlayerFactionInfo(i, rank, division, employer);
					//GetPlayerName(i, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* %s (%s) %s Ph: %d\n", rank, division,  giveplayer, PlayerInfo[i][pNumber]);
					strcat(MemberString, string, sizeof(MemberString));
				}
			}
			if(strlen(MemberString) == 0)
			{
			    strcat(MemberString, "uanda online ye yok.", sizeof(MemberString));
			}
			ShowPlayerDialogEx(playerid, MDC_LSFMD, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | LSFMD Uyeleri", MemberString, "Se", "Iptal");
		}
		else if(listitem == 3)
		{
			foreach(Player, i)
			{
			    giveplayer = GetPlayerNameEx(i);
      	 		if(PlayerInfo[i][pFaction] == 5)
				{
				    GetPlayerFactionInfo(i, rank, division, employer);
					//GetPlayerName(i, giveplayer, sizeof(giveplayer));
					format(string, sizeof(string), "* %s (%s) %s Ph: %d\n", rank, division,  giveplayer, PlayerInfo[i][pNumber]);
					strcat(MemberString, string, sizeof(MemberString));
				}
			}
			if(strlen(MemberString) == 0)
			{
			    strcat(MemberString, "uanda online ye yok.", sizeof(MemberString));
			}
			ShowPlayerDialogEx(playerid, MDC_LSFMD, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | GOV Uyeleri", MemberString, "Se", "Iptal");
		}
	}
	if(dialogid == MDC_WARRANTS && response)
	{
	    if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
	    ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | Emirler", inputtext, "Tamam", "Geri");
	}
	if(dialogid == MDC_BOLOLIST && response)
	{
	    if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
	    ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | BOLO", inputtext, "Tamam", "Geri");
	}
	if(dialogid == MDC_CHECK && response)
	{
	    if(!IsMDCPermitted(playerid))
			return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");

		new
			giveplayerid = ReturnUser(inputtext),
			szMessage[128],
			szQuery[256];

		if(giveplayerid != INVALID_PLAYER_ID) {
			format(szMessage, sizeof(szMessage), "** MERKEZ: %s, %s zerinde tutuklama emri olup olmadn kontrol etti.**", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
			SendRadioMessage(1, COLOR_DBLUE, szMessage);
			SendRadioMessage(2, COLOR_DBLUE, szMessage);
			if(PlayerInfo[giveplayerid][pWantedLevel] == 0) {
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | HATA ", "Bu kiinin bir kayd yok.", "Tamam", "Iptal");
			} else {
				format(szQuery, sizeof(szQuery), "SELECT crimes.* FROM crimes INNER JOIN players ON crimes.crimeIssuedTo = players.ID OR crimes.crimeIssuedTo = players.ID WHERE players.ID = '%d' ORDER BY crimes.crimeID DESC LIMIT %d", PlayerInfo[giveplayerid][pID], PlayerInfo[giveplayerid][pWantedLevel]);
				mysql_query(szQuery, THREAD_MDC_CHECK, playerid, g_MySQLConnections[0]);
				SetPVarInt(playerid, "MVBKONTROL", giveplayerid);
			}
			return 1;
		} else return ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | HATA ", "Bu kiinin bir kayd yok.", "Tamam", "Iptal");
	}
	if(dialogid == MDC_LICENSES && response)
	{
		if(!IsMDCPermitted(playerid)) return SendClientMessage(playerid, COLOR_LIGHTBLUE, " Giri Baarsz. MVB'i kullanma izniniz yok!");
		new giveplayerid;
		if(sscanf(inputtext, "u", giveplayerid))
		{
			ShowPlayerDialogEx(playerid, MDC_LICENSES, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Lisans Kontrol", "Kiinin adn yada ID'sini girin.", "Gir", "Iptal");
			return 1;
		}
		if(IsPlayerConnected(giveplayerid))
		{
			if(giveplayerid != INVALID_PLAYER_ID)
			{
			    new LicenseString[256], giveplayer[MAX_PLAYER_NAME];
				GetPlayerName(playerid, sendername, sizeof(sendername));
				GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
				new text1[20];
				new text2[20];
				new text4[20];
				if(PlayerInfo[giveplayerid][pCarLic] == 0) { text1 = "Geemedi"; }
				if(PlayerInfo[giveplayerid][pCarLic] == 1) { text1 = "Geti"; }
				if(PlayerInfo[giveplayerid][pCarLic] == 2) { text1 = "Askiya Alindi"; }
				if(PlayerInfo[giveplayerid][pCarLic] == 3) { text1 = "Iptal Edildi"; }
				if(PlayerInfo[giveplayerid][pFlyLic]) { text4 = "Geti"; } else { text4 = "Geemedi"; }
				if(PlayerInfo[giveplayerid][pBoatLic]) { text2 = "Geti"; } else { text2 = "Geemedi"; }
				format(string, sizeof(string), "   Name: %s\n", giveplayer);
				strcat(LicenseString, string, sizeof(LicenseString));
				format(string, sizeof(string), "-Surucu belgesi: %s.\n", text1);
				strcat(LicenseString, string, sizeof(LicenseString));
				format(string, sizeof(string), "-Pilot Belgesi: %s.\n", text4);
				strcat(LicenseString, string, sizeof(LicenseString));
				format(string, sizeof(string), "-Denizci Belgesi: %s.\n", text2);
				strcat(LicenseString, string, sizeof(LicenseString));
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Su Gemii", LicenseString, "Tamam", "Iptal");
				format(string, sizeof(string), "** MERKEZ: %s, %s adna kaytl lisanslar kontrol etti.**", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
				SendRadioMessage(1, COLOR_DBLUE, string);
				SendRadioMessage(2, COLOR_DBLUE, string);
				return 1;
			}
			else return ShowPlayerDialogEx(playerid, MDC_LICENSES, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Hata!", "Hata: Yanl isim yada ID.\nKiinin ismini yada ID'sini girin.", "Gir", "Iptal");
		}
		else return ShowPlayerDialogEx(playerid, MDC_LICENSES, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Hata!", "Hata: Yanl isim yada ID.\nKiinin ismini yada ID'sini girin.", "Gir", "Iptal");
	}
	if(dialogid == MDC_BOLO && response)
	{
		new x_nr = GetPVarInt(playerid, "BOLOISSUESLOT");
		if(x_nr == 1)
		{
			if(News[hTaken14] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd14], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact14], string, 0, strlen(string), 255);
				News[hTaken14] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "1. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 2)
		{
			if(News[hTaken15] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd15], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact15], string, 0, strlen(string), 255);
				News[hTaken15] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "2. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 3)
		{
			if(News[hTaken16] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd16], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact16], string, 0, strlen(string), 255);
				News[hTaken16] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "3. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 4)
		{
			if(News[hTaken17] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd17], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact17], string, 0, strlen(string), 255);
				News[hTaken17] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "4. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 5)
		{
			if(News[hTaken18] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd18], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact18], string, 0, strlen(string), 255);
				News[hTaken18] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "5. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 6)
		{
			if(News[hTaken19] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd19], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact19], string, 0, strlen(string), 255);
				News[hTaken19] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "6. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 7)
		{
			if(News[hTaken20] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd20], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact20], string, 0, strlen(string), 255);
				News[hTaken20] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "7. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 8)
		{
			if(News[hTaken21] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin\nBOLO detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd21], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact21], string, 0, strlen(string), 255);
				News[hTaken21] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir BOLO detay ekledin. -BOLO\nuanda bulunan BOLO'lar grmek iin MVB'e giri yapp BOLO'lar gr semelisin.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: BOLO detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | Hata! ", "8. Slot zaten kullanlyor.", "Tamam", "Geri");
				return 1;
			}
		}
	}
	if(dialogid == MDC_BOLO_SLOT && response)
	{
	    SetPVarInt(playerid, "BOLOISSUESLOT", listitem + 1);
	    ShowPlayerDialogEx(playerid, MDC_BOLO, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Emir Gir", "BOLO detayi gir.", "Gir", "Iptal");
	}
	if(dialogid == MDC_ISSUE_SLOT && response)
	{
	    SetPVarInt(playerid, "ISSUESLOT", listitem + 1);
	    ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri yapld | Emir Gir", "Emir hakknda detay girin", "Gir", "Iptal");
	}
	if(dialogid == MDC_END_ID && response)
	{
		ShowPlayerDialogEx(playerid, MDC_MAIN, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld", "*Memur Bul\n*Sivil Bilgisi\n*Devlet Birimleri", "Tamam", "Iptal");
	}
	if(dialogid == MDC_ISSUE && response)
	{
		new x_nr = GetPVarInt(playerid, "ISSUESLOT");
		if(x_nr == 1)
		{
			if(News[hTaken6] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd6], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact6], string, 0, strlen(string), 255);
				News[hTaken6] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "1. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 2)
		{
			if(News[hTaken7] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd7], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact7], string, 0, strlen(string), 255);
				News[hTaken7] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "2. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 3)
		{
			if(News[hTaken8] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd8], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact8], string, 0, strlen(string), 255);
				News[hTaken8] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "3. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 4)
		{
			if(News[hTaken9] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd9], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact9], string, 0, strlen(string), 255);
				News[hTaken9] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "4. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 5)
		{
			if(News[hTaken10] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd10], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact10], string, 0, strlen(string), 255);
				News[hTaken10] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "5. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 6)
		{
			if(News[hTaken11] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd11], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact11], string, 0, strlen(string), 255);
				News[hTaken11] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "6. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 7)
		{
			if(News[hTaken12] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd12], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact12], string, 0, strlen(string), 255);
				News[hTaken12] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Hata! ", "7. slot zaten kullanlyor", "Tamam", "Geri");
				return 1;
			}
		}
		if(x_nr == 8)
		{
			if(News[hTaken13] == 0)
			{
				GetPlayerName(playerid, sendername, sizeof(sendername));
				if(strlen(inputtext) < 9) { ShowPlayerDialogEx(playerid, MDC_ISSUE, DIALOG_STYLE_INPUT, "GOV-MVB - Giri Yapld | HATA", "Hata: Minimum 9 karakter girmelisin.\nTutuklama emri detay gir.", "Gir", "Iptal"); return 1; }
				format(string, sizeof(string), "%s",inputtext); strmid(News[hAdd13], string, 0, strlen(string), 255);
				format(string, sizeof(string), "%s",sendername); strmid(News[hContact13], string, 0, strlen(string), 255);
				News[hTaken13] = 1;
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri Yapld | Baarl! ","* MVB'e bir tutuklama emri detay girdin. -Warrants\nTutuklama emirlerini grmek istiyorsan MVB'na giri yap.", "Tamam", "Geri");
				SendRadioMessage(1, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				SendRadioMessage(2, COLOR_LIGHTBLUE, "** MVB: Bir tutuklama emrinin detaylar gncellendi.");
				return 1;
			}
			else
			{
				ShowPlayerDialogEx(playerid, MDC_END_ID, DIALOG_STYLE_MSGBOX, "GOV-MVB - Giri yapld | Hata! ", "8. Slot zaten kullanlyor.", "Tamam", "Geri");
				return 1;
			}
		}
	}
	if(dialogid == MDC_DELETE && response)
	{
	    if(listitem == 0)
	    {
	    	ShowPlayerDialogEx(playerid, MDC_DEL_BOLO, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld | Hangi slottaki BOLO detayn silmek istiyorsun?", "1\n2\n3\n4\n5\n6\n7\n8\nALL", "Gir", "Iptal");
	    }
		if(listitem == 1)
		{
			ShowPlayerDialogEx(playerid, MDC_DEL_WARRANT, DIALOG_STYLE_LIST, "GOV-MVB - Oturum Ald | Hangi slottaki tutuklama emrini silmek istiyorsunuz?", "1\n2\n3\n4\n5\n6\n7\n8\nALL", "Gir", "Iptal");
		}
	}
	if(dialogid == MDC_DEL_BOLO && response)
	{
		new string1[MAX_PLAYER_NAME];
		if(isnull(inputtext))
		{
			ShowPlayerDialogEx(playerid, MDC_DEL_WARRANT, DIALOG_STYLE_LIST, "GOV-MVB - Oturum Ald | Hangi slottaki tutuklama emrini silmek istiyorsunuz?", "1\n2\n3\n4\n5\n6\n7\n8\nALL", "Gir", "Iptal");
			return 1;
		}
		if(strcmp(inputtext, "1") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd14], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact14], string1, 0, strlen(string1), 255);
			News[hTaken14] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (1). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "2") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd15], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact15], string1, 0, strlen(string1), 255);
			News[hTaken15] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (2). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "3") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd16], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact16], string1, 0, strlen(string1), 255);
			News[hTaken16] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (3). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "4") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd17], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact17], string1, 0, strlen(string1), 255);
			News[hTaken17] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (4). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "5") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd18], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact18], string1, 0, strlen(string1), 255);
			News[hTaken18] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (5). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "6") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd19], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact19], string1, 0, strlen(string1), 255);
			News[hTaken19] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (6). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "7") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd20], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact20], string1, 0, strlen(string1), 255);
			News[hTaken20] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (7). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext, "8") == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd21], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact21], string1, 0, strlen(string1), 255);
			News[hTaken21] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'de bulunan (8). BOLO detayn sildin -BOLO.");
			return 1;
		}
		else if(strcmp(inputtext,"all",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd14], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact14], string1, 0, strlen(string1), 255);
			News[hTaken14] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd15], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact15], string1, 0, strlen(string1), 255);
			News[hTaken15] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd16], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact16], string1, 0, strlen(string1), 255);
			News[hTaken16] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd17], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact17], string1, 0, strlen(string1), 255);
			News[hTaken17] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd18], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact18], string1, 0, strlen(string1), 255);
			News[hTaken18] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd19], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact19], string1, 0, strlen(string1), 255);
			News[hTaken19] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd20], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact20], string1, 0, strlen(string1), 255);
			News[hTaken20] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd21], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact21], string1, 0, strlen(string1), 255);
			News[hTaken21] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'deki tm BOLO detaylarn sildin -BOLO.");
			return 1;
		}
	}
	if(dialogid == MDC_DEL_WARRANT && response)
	{
	    new string1[MAX_PLAYER_NAME];
		if(isnull(inputtext))
		{
			ShowPlayerDialogEx(playerid, MDC_DEL_WARRANT, DIALOG_STYLE_LIST, "GOV-MVB - Oturum Ald | Hangi slottaki tutuklama emrini silmek istiyorsunuz?", "1\n2\n3\n4\n5\n6\n7\n8\nALL", "Gir", "Iptal");
			return 1;
		}
		if(strcmp(inputtext,"1",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd6], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact6], string1, 0, strlen(string1), 255);
			News[hTaken6] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (1)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"2",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd7], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact7], string1, 0, strlen(string1), 255);
			News[hTaken7] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (2)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"3",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd8], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact8], string1, 0, strlen(string1), 255);
			News[hTaken8] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (3)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"4",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd9], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact9], string1, 0, strlen(string1), 255);
			News[hTaken9] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (4)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"5",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd10], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact10], string1, 0, strlen(string1), 255);
			News[hTaken10] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (5)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"6",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd11], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact11], string1, 0, strlen(string1), 255);
			News[hTaken11] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (6)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"7",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd12], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact12], string1, 0, strlen(string1), 255);
			News[hTaken12] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (7)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"8",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd13], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact13], string1, 0, strlen(string1), 255);
			News[hTaken13] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "*Tutuklama Emri (8)'in detaylarn MVB'den sildin -Warrants.");
			return 1;
		}
		else if(strcmp(inputtext,"all",true) == 0)
		{
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd6], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact6], string1, 0, strlen(string1), 255);
			News[hTaken6] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd7], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact7], string1, 0, strlen(string1), 255);
			News[hTaken7] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd8], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact8], string1, 0, strlen(string1), 255);
			News[hTaken8] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd9], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact9], string1, 0, strlen(string1), 255);
			News[hTaken9] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd10], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact10], string1, 0, strlen(string1), 255);
			News[hTaken10] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd11], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact11], string1, 0, strlen(string1), 255);
			News[hTaken11] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd12], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact12], string1, 0, strlen(string1), 255);
			News[hTaken12] = 0;
			format(string, sizeof(string), "Nothing"); strmid(News[hAdd13], string, 0, strlen(string), 255);
			format(string1, sizeof(string1), "Nobody");	strmid(News[hContact13], string1, 0, strlen(string1), 255);
			News[hTaken13] = 0;
			SendClientMessage(playerid, COLOR_LIGHTBLUE, "* Tm tutuklama emir detaylarn MVB'den sildiniz -Warrants.");
			return 1;
		}
	}
	if(dialogid == MDC_LOGOUT && response)
	{
	}
	if(dialogid == MDC_CREATE && response)
	{
	}
	if((dialogid >= MDC_START_ID && dialogid <= MDC_END_ID) && !response)
	{
	    if(dialogid == MDC_MAIN)
	    {
	        SendClientMessage(playerid, COLOR_LIGHTBLUE, "* MVB'den k yaptn.");
			ConnectedToPC[playerid] = 0;
	    }
	    else
		{
			ShowPlayerDialogEx(playerid, MDC_MAIN, DIALOG_STYLE_LIST, "GOV-MVB - Giri yapld", "*Memur Bul\n*Sivil Bilgisi\n*Devlet Birimleri", "Tamam", "Iptal");
		}
	}
	if(dialogid == SAN_DUTYMENU)
	{
 		if(response){
			if(PlayerInfo[playerid][pConnectTime] < 2)
				return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");

		    switch(listitem) {
				case 0: SetPlayerHealth(playerid, 100);
				case 1: SetPlayerArmourEx(playerid, 50.0);
				case 2: {
					if(GetPlayerCash(playerid) < 150)
						return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");

					GivePlayerCash(playerid, -150);
					GivePlayerValidWeapon(playerid, 25, 60000);
				}
				case 3: GivePlayerValidWeapon(playerid, 43, 60000);
			}
		}
	}
	if(dialogid == DUTYMENU)
	{
 		if(response)
		{
			if(listitem == 0) // LSPD Duty
			{
				if(PlayerInfo[playerid][pDuty]==0)
				{
					format(string, sizeof(string), "* Memur % rozetini ve silahn dolabndan alr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_BLUE_COLOR);
					SetPlayerSkin(playerid, 280);
					PlayerInfo[playerid][pSkin] = 280;
	    			SetPlayerArmourEx(playerid, 100.0);
	    			SetPlayerHealth(playerid, 100.0);
					GivePlayerValidWeapon(playerid, 24, 99999);
					GivePlayerValidWeapon(playerid, 41, 99999);
					GivePlayerValidWeapon(playerid, 3, 99999);
					OnDuty[playerid] = 1;
					PlayerInfo[playerid][pDuty] = 1;
                    //ShowPlayerDialogEx(playerid, DUTY_OPTIONS, DIALOG_STYLE_LIST, "Duty Options","Public\nUndercover", "Se", "Iptal");
				}
				else if(PlayerInfo[playerid][pDuty]==1)
				{
					format(string, sizeof(string), "* Memur % rozetini ve silahn dolabna koyar.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerArmourEx(playerid, 0.0);
					SetPlayerSkin(playerid, 46);
					PlayerInfo[playerid][pSkin] = 46;
					OnDuty[playerid] = 0;
					PlayerInfo[playerid][pDuty] = 0;
					PlayCrimeReportForPlayer(playerid, playerid, 21);
				}
			}
			if(listitem == 1) // LSPD Weapons
			{
				ShowPlayerDialogEx(playerid, DUTYMENU2, DIALOG_STYLE_LIST, "LSPD Ekipmanlar","Sprey\nCop\nDesert Eagle\nSPAS-12	$700\nMP5\nM4\nAK-47\nSmoke Grenade\nShotgun\nRifle		$100\nSniper Rifle	$800\nZirh\nlkYardim\nAksesuarlar", "Satin Al", "Iptal");
			}
			if(listitem == 2) // LSPD Tactical
			{
				if(PlayerInfo[playerid][pDivision] == 5 || PlayerInfo[playerid][pRank] > 3) // S.W.A.T. division
				{
					GivePlayerValidWeapon(playerid, 24, 99999);
					GivePlayerValidWeapon(playerid, 41, 99999);
					GivePlayerValidWeapon(playerid, 3, 99999);
					GivePlayerValidWeapon(playerid, 31, 99999);
					GivePlayerValidWeapon(playerid, 17, 5);
					SetPlayerArmourEx(playerid, 100.0);
					SetPlayerHealth(playerid, 100);
					SetPlayerSkin(playerid, 285);
					PlayerInfo[playerid][pSkin] = 285;
					OnDuty[playerid] = 1;
					PlayerInfo[playerid][pDuty] = 1;
					format(string, sizeof(string), "* Memur % hzl bir ekilde taktiksel kyafetini ve ekipmanlarn alr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_BLUE_COLOR);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "S.W.A.T biriminden yada R5 zeri deilsin.");
				}
			}
			if(listitem == 3) // LSPD Uniforms
			{
				ShowPlayerDialogEx(playerid, DUTYMENU3, DIALOG_STYLE_LIST, "LSPD niformalar","Cadet\nFemale Officer\nOfficer 1\nOfficer 2\nOfficer 3\nBlack Officer\nLatino Officer\nMotorcycle Officer\nSWAT Officer\nSergeant\nCaptain\nChief", "Giy", "Iptal");
			}
			if(listitem == 4) // LSPD Undercover Uniform
			{
				ShowPlayerDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Gizli","Skin sein (ID kullanarak).", "Se", "Iptal");
			}
			if(listitem == 5) // LSPD Clear.
			{
				ShowPlayerDialogEx(playerid, DUTYMENU5,DIALOG_STYLE_INPUT,"LSPD","Kimi temize karmak istiyorsun?","Temizle","Iptal");
    		}
		}
	}
	if(dialogid == DUTYMENU2)
	{
 		if(response)
		{
 			if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");
		    switch(listitem)
			{
				case 0: // LSPD Mace
				{
					GivePlayerValidWeapon(playerid, 41, 60000);
				}
				case 1: // LSPD Nite Stick
				{
					GivePlayerValidWeapon(playerid, 3, 60000);
				}
				case 2: // LSPD Deagle
				{
					GivePlayerValidWeapon(playerid, 24, 60000);
				}
				case 3: // LSPD Spas12 *
				{
					if(PlayerInfo[playerid][pRank] >= 2) {
					    if(GetPlayerCash(playerid) < 700)
							return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");

						GivePlayerCash(playerid, -700);
						GivePlayerValidWeapon(playerid, 27, 60000);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "En az rtbe 2 olman gerek.");
					}
				}
				case 4: // LSPD mp5
				{
					GivePlayerValidWeapon(playerid, 29, 60000);
				}
				case 5: // LSPD m4 *
				{
    				if(PlayerInfo[playerid][pRank] >= 1)
			    	{
						GivePlayerValidWeapon(playerid, 31, 60000);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "En az rtbe 1 olman gerek.");
					}
				}
				case 6: // LSPD ak-47 *
				{
    				if(PlayerInfo[playerid][pRank] >= 1)
			    	{
						GivePlayerValidWeapon(playerid, 30, 60000);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "En az rtbe 1 olman gerek.");
					}
				}
				case 7: // LSPD Smoke Bomb *
				{
					if(PlayerInfo[playerid][pRank] >= 1)
					{
						GivePlayerValidWeapon(playerid, 17, 5);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "En az rtbe 1 olman gerek.");
					}
				}
				case 8: // LSPD Shotgun
				{
					GivePlayerValidWeapon(playerid, 25, 60000);
				}
				case 9: // LSPD rifle
				{
					if(GetPlayerCash(playerid) < 100) return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");
					GivePlayerCash(playerid, -100);
					GivePlayerValidWeapon(playerid, 33, 60000);
				}
				case 10: // LSPD Sniper *
				{
					if(PlayerInfo[playerid][pRank] >= 2)
					{
 						if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");
						GivePlayerCash(playerid, -800);
						GivePlayerValidWeapon(playerid, 34, 60000);
					}
					else
					{
						SendClientMessage(playerid, COLOR_GRAD2, "En az rtbe 3 olman gerek.");
					}
				}
				case 11: // LSPD Kevlar
				{
					SetPlayerArmourEx(playerid, 100.0);
				}
				case 12: SetPlayerHealth(playerid, 100);
				case 13: ShowPlayerDialogEx(playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Aksesuarlar", "Devlet memurlarnn aksesuar dolabna hogeldiniz.","Devam", "Iptal");
			}
		}
	}
	if(dialogid == DUTYMENU3)
	{
 		if(response)
		{
			if(listitem == 0) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 71);
				PlayerInfo[playerid][pSkin] = 71;
			}
			if(listitem == 1) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 141);
				PlayerInfo[playerid][pSkin] = 141;
			}
			if(listitem == 2) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 280);
				PlayerInfo[playerid][pSkin] = 280;
			}
			if(listitem == 3) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 266);
				PlayerInfo[playerid][pSkin] = 266;
			}
			if(listitem == 4) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 281);
				PlayerInfo[playerid][pSkin] = 281;
			}
			if(listitem == 5) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 265);
				PlayerInfo[playerid][pSkin] = 265;
			}

			if(listitem == 6) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 267);
				PlayerInfo[playerid][pSkin] = 267;
			}
			if(listitem == 7) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 284);
				PlayerInfo[playerid][pSkin] = 284;
			}
			if(listitem == 8) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 285);
				PlayerInfo[playerid][pSkin] = 285;
			}
			if(listitem == 9) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 282);
				PlayerInfo[playerid][pSkin] = 282;
			}
			if(listitem == 10) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 283);
				PlayerInfo[playerid][pSkin] = 283;
			}
			if(listitem == 11) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 288);
				PlayerInfo[playerid][pSkin] = 288;
			}
		}
	}
	if(dialogid == DUTYMENU4)
	{
 		if(response)
		{
			if(listitem == 0) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 223);
				PlayerInfo[playerid][pSkin] = 223;
			}
			if(listitem == 1) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 120);
				PlayerInfo[playerid][pSkin] = 120;
			}
			if(listitem == 2) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 240);
				PlayerInfo[playerid][pSkin] = 240;
			}
			if(listitem == 3) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 296);
				PlayerInfo[playerid][pSkin] = 296;
			}
			if(listitem == 4) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 137);
				PlayerInfo[playerid][pSkin] = 137;
			}
			if(listitem == 5) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 214);
				PlayerInfo[playerid][pSkin] = 214;
			}
			if(listitem == 6) // LSPD Uniforms
			{
				SetPlayerSkin(playerid, 147);
				PlayerInfo[playerid][pSkin] = 147;
			}
			if(listitem == 7) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 150);
				PlayerInfo[playerid][pSkin] = 150;
			}
			if(listitem == 8) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 201);
				PlayerInfo[playerid][pSkin] = 201;
			}
			if(listitem == 9) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 162);
				PlayerInfo[playerid][pSkin] = 162;
			}
			if(listitem == 10) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 29);
				PlayerInfo[playerid][pSkin] = 29;
			}
			if(listitem == 11) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 270);
				PlayerInfo[playerid][pSkin] = 270;
			}
			if(listitem == 12) //LSPD Uniforms
			{
				SetPlayerSkin(playerid, 59);
				PlayerInfo[playerid][pSkin] = 59;
			}
		}
	}
    if(dialogid == DUTYMENU5)
	{
	    if(response)
    	{
            new giveplayerid = ReturnUser(inputtext);
			//giveplayerid = strval(inputtext);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					format(string, sizeof(string), "* %s adl kiinin tm kaytlarn ve aranma seviyelerini sildin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, senin zerindeki tm kaytlar ve aranma seviyelerini temizledi.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Memur %s, %s zerindeki tm kaytlar ve aranma seviyelerini temizledi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendRadioMessage(1, RADIO, string);
					SendRadioMessage(2, RADIO, string);
					PlayerInfo[giveplayerid][pWantedLevel] = 0;
					SetPlayerToTeamColor(giveplayerid);
				    SetPlayerWantedLevel(giveplayerid, 0);
        			ClearCrime(giveplayerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				}
			}
		}
	}
	if(dialogid == FDUTYMENU)
	{
 		if(response)
		{
			if(listitem == 0) // FBI Duty
			{
				if(PlayerInfo[playerid][pDuty]==0)
				{
					format(string, sizeof(string), "* Ajan %s silahn ve rozetini dolabndan alr.", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_FBI_COLOR);
					SetPlayerArmourEx(playerid, 100.0);
					SetPlayerHealth(playerid, 100.0);
					GivePlayerValidWeapon(playerid, 24, 99999);
					GivePlayerValidWeapon(playerid, 41, 99999);
					GivePlayerValidWeapon(playerid, 3, 99999);
					GivePlayerValidWeapon(playerid, 29, 99999);
					OnDuty[playerid] = 1;
					PlayerInfo[playerid][pDuty] = 1;
				}
				else if(PlayerInfo[playerid][pDuty]==1)
				{
					format(string, sizeof(string), "* Ajan %s silahn ve rozetini dolaba koyar. ", GetPlayerNameEx(playerid));
					ProxDetector(30.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
					SetPlayerColor(playerid, TEAM_HIT_COLOR);
					SetPlayerSkin(playerid, 46);
					PlayerInfo[playerid][pSkin] = 46;
					SetPlayerArmourEx(playerid, 0.0);
					OnDuty[playerid] = 0;
					PlayerInfo[playerid][pDuty] = 0;
				}
			}
			if(listitem == 1) // FBI Weapons
			{
				ShowPlayerDialogEx(playerid, FDUTYMENU2, DIALOG_STYLE_LIST, "FBI Silahlari","Desert Eagle\nShotgun\nSPAS-12	$700\nMP5\nM4\nAK-47\nSmoke Grenade\nCamera\nSniper Rifle	$800\nTactical Vest\nlk Yardim\nYerletirilebilir Kamera	$200\nAksesuarlar", "Satin Al", "Iptal");
			}
			if(listitem == 2) // FBI SWAT Uniform
			{
                if(PlayerInfo[playerid][pRank] > 3)
				{
    				SetPlayerSkin(playerid, 285);
	    			PlayerInfo[playerid][pSkin] = 285;
				}
				else
				{
    				SendClientMessage(playerid, COLOR_GRAD2, "Yeterli rtbede deilsin!");
    				return 1;
				}
			}
			if(listitem == 3) // FBI Uniforms
			{
				ShowPlayerDialogEx(playerid, FDUTYMENU3, DIALOG_STYLE_LIST, "FBI niformalar","Paltolu Ajan\nSiyahi Ajan\nBeyaz Ajan\nAsyali Ajan\nAsyali Ajan 2\nSWAT\nBayan", "Giy", "Iptal");
			}
			if(listitem == 4) // FBI Undercover Uniform
			{
				ShowPlayerDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Gizli","Skin sein (ID kullanarak).", "Se", "Iptal");
			}
			if(listitem == 5) // FBI Clear.
			{
				ShowPlayerDialogEx(playerid,FDUTYMENU5,DIALOG_STYLE_INPUT,"FBI","Kimi temize karmak istiyorsun?","Temizle","Geri Don");
    		}
		}
	}
	if(dialogid == FDUTYMENU2)
	{
 		if(response)
		{
 			if(PlayerInfo[playerid][pConnectTime] < 2) return SendClientMessage(playerid, COLOR_GRAD2, "Silah taman yasaklandndan dolay bunu kullanamazsn!");
				else switch(listitem) {
				case 0: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 24, 99999);
				}
				case 1: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 25, 99999);
				}
				case 2: // FBI Weapons
				{
					if(GetPlayerCash(playerid) < 700) return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");
					GivePlayerCash(playerid, -700);
					GivePlayerValidWeapon(playerid, 27, 99999);
				}
				case 3: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 29, 99999);
				}
				case 4: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 31, 99999);
				}
				case 5: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 30, 99999);
				}
				case 6: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 17, 5);
				}
				case 7: // FBI Weapons
				{
					GivePlayerValidWeapon(playerid, 43, 99999);
				}
				case 8: // FBI Weapons
				{
					if(GetPlayerCash(playerid) < 800) return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");
					GivePlayerCash(playerid, -800);
					GivePlayerValidWeapon(playerid, 34, 99999);
				}
				case 9: // FBI Weapons
				{
					SetPlayerArmourEx(playerid, 100);
				}
				case 10: SetPlayerHealth(playerid, 100);
				case 11: // FBI Weapons
				{
					if(PlayerInfo[playerid][pRank] >= 2) {
						if(PlayerInfo[playerid][pRccam] == 0) {
							if(GetPlayerCash(playerid) < 200) return SendClientMessage(playerid, COLOR_WHITE, "Bunun iin paran yok.");
							GivePlayerCash(playerid, -200);
							PlayerInfo[playerid][pRccam]++;
							SendClientMessage(playerid, COLOR_LIGHTBLUE, "$200 odeyerek yerletirilebilir kamera aldn. /kamerayerlestir komutu ile aktif edebilirsin.");
						} else return SendClientMessage(playerid, COLOR_GRAD2, "Zaten bir yerletirilebilir kameraya sahipsin.");
					} else return SendClientMessage(playerid, COLOR_GRAD2, "Yeterli rtbede deilsin!");
				}
				case 12: ShowPlayerDialogEx(playerid, BUYTOYSCOP, DIALOG_STYLE_MSGBOX, "Aksesuarlar", "Devlet memurlarnn aksesuar dolabna hogeldiniz.","Devam", "Iptal");
			}
		}
	}
	if(dialogid == FDUTYMENU3)
	{
 		if(response)
		{
			if(listitem == 0) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 286);
				PlayerInfo[playerid][pSkin] = 286;
			}
			if(listitem == 1) //FBI Uniforms
			{
				SetPlayerSkin(playerid, 166);
				PlayerInfo[playerid][pSkin] = 166;
			}
			if(listitem == 2) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 165);
				PlayerInfo[playerid][pSkin] = 165;
			}
			if(listitem == 3) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 294);
				PlayerInfo[playerid][pSkin] = 294;
			}
			if(listitem == 4) // FBI Uniforms
			{
				SetPlayerSkin(playerid, 120);
				PlayerInfo[playerid][pSkin] = 120;
			}
			if(listitem == 5) //FBI Uniforms
			{
				SetPlayerSkin(playerid, 285);
				PlayerInfo[playerid][pSkin] = 285;
			}
			if(listitem == 6) //FBI Uniforms
			{
				SetPlayerSkin(playerid, 141);
				PlayerInfo[playerid][pSkin] = 141;
			}
		}
	}
	if(dialogid == FDUTYMENU4)
	{
 		if(response)
		{
            new skin = strval(inputtext);
			if(IsInvalidSkin(skin) || 274 <= skin <= 288 || skin == 165 || skin == 166 || skin == 71) {
				return ShowPlayerDialogEx(playerid, FDUTYMENU4, DIALOG_STYLE_INPUT, "Gizli","Yanl Skin ID. Baka girin.", "Se", "Iptal");
			}
			PlayerInfo[playerid][pSkin] = skin;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
    if(dialogid == FDUTYMENU5)
	{
	    if(response)
    	{
            new giveplayerid;
            new giveplayer[MAX_PLAYER_NAME];
			giveplayerid = ReturnUser(inputtext);
			//giveplayerid = strval(inputtext);
			if(IsPlayerConnected(giveplayerid))
			{
				if(giveplayerid != INVALID_PLAYER_ID)
				{
					GetPlayerName(giveplayerid, giveplayer, sizeof(giveplayer));
					GetPlayerName(playerid, sendername, sizeof(sendername));
					format(string, sizeof(string), "* %s adl kiinin tm kaytlarn ve aranma seviyelerini sildin.", GetPlayerNameEx(giveplayerid));
					SendClientMessage(playerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ajan %s, senin tm kaytlarn ve aranma seviyelerini sildi.", GetPlayerNameEx(playerid));
					SendClientMessage(giveplayerid, COLOR_LIGHTBLUE, string);
					format(string, sizeof(string), "* Ajan %s, %s zerindeki tm kaytlar ve aranma seviyelerini sildi.", GetPlayerNameEx(playerid), GetPlayerNameEx(giveplayerid));
					SendRadioMessage(1, RADIO, string);
					SendRadioMessage(2, RADIO, string);
					PlayerInfo[giveplayerid][pWantedLevel] = 0;
					SetPlayerToTeamColor(giveplayerid);
				    SetPlayerWantedLevel(giveplayerid, 0);
				    ClearCrime(giveplayerid);
				}
				else
				{
					SendClientMessage(playerid, COLOR_GREY, "Geersiz oyuncu.");
				}
			}
		}
	}
	else if(dialogid == DIALOG_CDEDIT)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
            if(listitem == 0) // New Vehicle
			{
				format(string, sizeof(string),"Ltfen yeni aracn model ID'sini girin.");
		        ShowPlayerDialogEx(playerid,DIALOG_CDNEWVEH,DIALOG_STYLE_INPUT,"Uyar:",string,"Tamam","Iptal");
			}
			else if(listitem == 1) // My Vehicles
			{
				new vehicles;
                for(new i=0; i<MAX_DEALERSHIPVEHICLES; i++)
	            {
					if(CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdVehicleModel][i] != 0)
					{
						vehicles++;
		                format(string, sizeof(string), "Ara %d | sim: %s | Fiyat: %d.",i+1,GetVehicleName(CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdVehicleId][i]),CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdVehicleCost][i]);
		                SendClientMessage(playerid, COLOR_WHITE, string);
					}
				}
				if(vehicles)
				{
				    ShowPlayerDialogEx(playerid, DIALOG_CDEDITCARS, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Ayarlamak istediiniz arac sein:", "Ayarla", "Geri");
				}
				else
				{
					SendClientMessage(playerid, COLOR_GRAD2, "Bu ara bayisinde hi ara yok.");
				}
			}
			else if(listitem == 2) // Upgrade
			{
				new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
			    ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
			}
			else if(listitem == 3) // Till
			{
				new listitems[] = "1 Para ek\n2 Para Yatir";
			    ShowPlayerDialogEx(playerid,DIALOG_CDTILL,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
			}
		}
		else
		{
			SavecDealerships();
            SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDTILL)
	{ // car dealership dialog
	    if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
            if(listitem == 0) // Withdraw
			{
				format(string, sizeof(string), "Banka hesabnda $%d var.\n\n\tNe kadarn ekmek istiyorsun?", CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				ShowPlayerDialogEx(playerid,DIALOG_CDWITHDRAW,DIALOG_STYLE_INPUT,"Withdraw", string,"Se","Iptal");
			}
			else if(listitem == 1) // Deposit
			{
				format(string, sizeof(string), "Banka hesabnda $%d var.\n\n\tNe kadarn yatrmak istiyorsun?", CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				ShowPlayerDialogEx(playerid,DIALOG_CDDEPOSIT,DIALOG_STYLE_INPUT,"Deposit", string,"Se","Iptal");
			}
		}
		else
		{
            SavecDealerships();
            SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDWITHDRAW)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
		    if(IsNumeric(inputtext))
	        {
				new money = strval(inputtext);
				if(CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill] < money)
				{
					format(string, sizeof(string), "Kasanda o kadar para yok!\n\nKasanda $%d var.\n\n\tNe kadar ekmek istiyorsun?", CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
					ShowPlayerDialogEx(playerid,DIALOG_CDWITHDRAW,DIALOG_STYLE_INPUT,"Withdraw", string,"Se","Iptal");
					return 1;
				}
				CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill] -= money;
				PlayerInfo[playerid][pCash] += money;
				format(string, sizeof(string), "Kasandan $%d ektin, yeni durum: $%d", money, CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				SendClientMessage(playerid, COLOR_GRAD2, string);
				SavecDealerships();
				SetPVarInt(playerid, "editingcd", -1);
			}
        }
		else
		{
             SavecDealerships();
             SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDDEPOSIT)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
		    if(IsNumeric(inputtext))
	        {
	             new money = strval(inputtext);
	             if(PlayerInfo[playerid][pCash] < money)
	             {
                     format(string, sizeof(string), "Czdannda o kadar para yok!\n\nBanka hesabnda $%d var.\n\n\tNe kadarn yatrmak istiyorsun?", CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
				     ShowPlayerDialogEx(playerid,DIALOG_CDDEPOSIT,DIALOG_STYLE_INPUT,"Deposit", string,"Se","Iptal");
                     return 1;
	             }
	             CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill] += money;
	             PlayerInfo[playerid][pCash] -= money;
	             format(string, sizeof(string), "$%d' kasana koydun. yeni durum: $%d", money, CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdTill]);
	             SendClientMessage(playerid, COLOR_GRAD2, string);
	             SavecDealerships();
                 SetPVarInt(playerid, "editingcd", -1);
			}
		}
		else
		{
             SavecDealerships();
             SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDUPGRADE)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
            if(listitem == 0) // Vehicle Spawn
			{
				SendClientMessage(playerid, COLOR_GRAD2, "Ltfen satn alnan aralarn nerde spawn olmasn istiyorsan orda durun.");
				SendClientMessage(playerid, COLOR_GRAD2, "Hazr olduunda mousenden ate tuuna bas.");
				SetPVarInt(playerid, "editingcdvehpos", 2);
			}
            if(listitem == 1) // Radius
			{
				ShowPlayerDialogEx(playerid, DIALOG_CDRADIUS, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Yeni evre belirleyin:", "Ayarla", "Geri");
			}
			else if(listitem == 2) // Dealership Name
			{
				ShowPlayerDialogEx(playerid, DIALOG_CDNAME, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Yeni isim sein:", "Ayarla", "Geri");
			}
			else if(listitem == 3) // Price
			{
				ShowPlayerDialogEx(playerid, DIALOG_CDPRICE, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Yeni fiyat belirleyin:", "Ayarla", "Geri");
			}
		}
		else
		{
            SavecDealerships();
            SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDRADIUS)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new d;
			d = GetPVarInt(playerid, "editingcd");
			new Float:radius = floatstr(inputtext);
			new Float:radiusex = CarDealershipInfo[d][cdRadius];
			new test = floatround(radius), test1 = floatround(radiusex);
            if(CarDealershipInfo[d][cdRadius] > radius)
	        {
				 new cost = (test - test1) * (test1 * 1000);
				 if(PlayerInfo[playerid][pCash] < cost)
				 {
                     format(string, sizeof(string), "Hata: Bunu yapmak iin yeterli paran yok ($%d).",cost);
                     SendClientMessage(playerid, COLOR_GREY, string);
                     return 1;
				 }
				 format(string, sizeof(string), "Ara bayisinin evresi $%d denerek %.1f'ten %.1f'e arttrld.",radiusex, radius, cost);
                 SendClientMessage(playerid, COLOR_GREY, string);
	             CarDealershipInfo[d][cdRadius] = radius;
	             format(string,128,"%s arac bayisi\nSahibi: %s\nID: %d", CarDealershipInfo[d][cdMessage], CarDealershipInfo[d][cdOwner], d);
	             UpdateDynamic3DTextLabelText(CarDealershipInfo[d][cdTextLabel], COLOR_LIGHTBLUE, string);
	             new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
			     ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
			     SavecDealerships();
	        }
		}
		else
		{
		    new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
			ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
		}
	}
	else if(dialogid == DIALOG_CDNAME)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new d;
			d = GetPVarInt(playerid, "editingcd");
            if(!strlen(inputtext))
			{
			    SendClientMessage(playerid, COLOR_LIGHTRED, "** sim yazmak zorundasnz **");
    	        ShowPlayerDialogEx(playerid, DIALOG_CDNAME, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Yeni isim sein:", "Ayarla", "Geri");
		        return 1;
			}
			new cost = strlen(inputtext) * 50;
			format(string, sizeof(string), "Ara bayisinin ismi $%d'a %s'den %s olarak deitirildi.", CarDealershipInfo[d][cdMessage], inputtext, cost);
            SendClientMessage(playerid, COLOR_GREY, string);
	        strmid(CarDealershipInfo[d][cdMessage], inputtext, 0, strlen(inputtext), 255);
	        format(string,128,"%s arac bayisi\nSahibi: %s\nID: %d", CarDealershipInfo[d][cdMessage], CarDealershipInfo[d][cdOwner], d);
	        UpdateDynamic3DTextLabelText(CarDealershipInfo[d][cdTextLabel], COLOR_LIGHTBLUE, string);
	        new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
			ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
			SavecDealerships();
		}
		else
		{
		    new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
			ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
		}
	}
	else if(dialogid == DIALOG_CDEDITCARS)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new cdvid;
            if(IsNumeric(inputtext))
	        {
	             cdvid = strval(inputtext);
	             if(CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdVehicleModel][cdvid-1])
	             {
	                 SetPVarInt(playerid, "editingcdveh", cdvid-1);
	                 new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			         ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
				 }
	        }
		}
		else
		{
		    new listitems[] = "1 Yeni Arac\n2 Araclarim\n3 Gelistir\n4 Kasa";
			ShowPlayerDialogEx(playerid,DIALOG_CDEDIT,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
		}
	}
	else if(dialogid == DIALOG_CDEDITONE)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
            if(listitem == 0) // Edit Model
			{
	             ShowPlayerDialogEx(playerid, DIALOG_CDEDITMODEL, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Yeni model ID belirleyin:", "Ayarla", "Geri");
	        }
	        else if(listitem == 1) // Edit Cost
			{
	             ShowPlayerDialogEx(playerid, DIALOG_CDEDITCOST, DIALOG_STYLE_INPUT, "Arac Bayisi:", "Ara iin yeni fiyat belirleyin.", "Ayarla", "Geri");
	        }
	        else if(listitem == 2) // Edit Park
			{
				 PutPlayerInVehicle(playerid, CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdVehicleId][GetPVarInt(playerid, "editingcdveh")], 0);
	             SendClientMessage(playerid, COLOR_GRAD2, "Ltfen arac park etmek istediiniz yerde durun.");
				 SendClientMessage(playerid, COLOR_GRAD2, "Hazr olduunda mousenden ate tuuna bas.");
				 SetPVarInt(playerid, "editingcdvehpos", 1);
	        }
	        else if(listitem == 3) // Delete Vehicle
			{
	             format(string, sizeof(string), "%s model araci silmek istediinize emin misiniz?\nUyar: Geri deme almayacaksnz.",
				 GetVehicleName(CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdVehicleId][GetPVarInt(playerid, "editingcdveh")]));
		         ShowPlayerDialogEx(playerid,DIALOG_CDDELVEH,DIALOG_STYLE_MSGBOX,"Uyar:",string,"Tamam","Iptal");
	        }
		}
		else
		{
            SavecDealerships();
            SetPVarInt(playerid, "editingcdveh", -1);
		}
	}
    else if(dialogid == DIALOG_CDEDITMODEL)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
			new modelid, d, v;
			new text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			v = GetPVarInt(playerid, "editingcdveh");
            if(IsNumeric(inputtext))
	        {
	             modelid = strval(inputtext);
	             if(modelid < 400 || modelid > 611) { SendClientMessage(playerid, COLOR_GREY, "Ara numaras 400'n altnda yada 611'in zerinde olamaz!"); return 1; }
	             CarDealershipInfo[d][cdVehicleModel][v] = modelid;
	             DestroyDynamic3DTextLabel(CarDealershipInfo[d][cdVehicleLabel][v]);
	             DestroyVehicle(CarDealershipInfo[d][cdVehicleId][v]);
	             VehicleRadioStation[CarDealershipInfo[d][cdVehicleId][v]] = 0;
	             new carcreated;
	             carcreated = CreateVehicle(CarDealershipInfo[d][cdVehicleModel][v], CarDealershipInfo[d][cdVehicleSpawnX][v], CarDealershipInfo[d][cdVehicleSpawnY][v], CarDealershipInfo[d][cdVehicleSpawnZ][v], CarDealershipInfo[d][cdVehicleSpawnAngle][v], 0, 0, 6);
		         format(text_info, sizeof(text_info),"%s Satilik | Ucret: %d", GetVehicleName(carcreated), CarDealershipInfo[d][cdVehicleCost][v]);
                 CarDealershipInfo[d][cdVehicleLabel][v] = CreateDynamic3DTextLabel(text_info,COLOR_LIGHTBLUE,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
	             CarDealershipInfo[d][cdVehicleId][v] = carcreated;
	             new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			     ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
			     SavecDealerships();
	        }
		}
		else
		{
		    new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
		}
	}
	else if(dialogid == DIALOG_CDEDITCOST)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
			new price, d, v;
			new text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			v = GetPVarInt(playerid, "editingcdveh");
            if(IsNumeric(inputtext))
	        {
	             price = strval(inputtext);
	             CarDealershipInfo[d][cdVehicleCost][v] = price;
	             format(text_info, sizeof(text_info), "%s Satilik | Ucret: %d", GetVehicleName(CarDealershipInfo[d][cdVehicleId][v]), CarDealershipInfo[d][cdVehicleCost][v]);
	             UpdateDynamic3DTextLabelText(CarDealershipInfo[d][cdVehicleLabel][v], COLOR_LIGHTBLUE, text_info);
	             new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			     ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
			     SavecDealerships();
	        }
		}
		else
		{
		    new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
		}
	}
	else if(dialogid == DIALOG_CDDELVEH)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1)
		{
			DestroyCarDealershipVehicle(GetPVarInt(playerid, "editingcd"), GetPVarInt(playerid, "editingcdveh"));
			SavecDealerships();
		}
		else
		{
		    new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
		}
	}
	else if(dialogid == DIALOG_CDEDITPARK)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdveh") != -1 &&  GetPVarInt(playerid, "editingcdvehpos") == 1 || GetPVarInt(playerid, "editingcdvehnew"))
		{
			new Float: x, Float: y, Float: z, Float: a;
			new d, v, text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			v = GetPVarInt(playerid, "editingcdveh");
			GetVehiclePos(CarDealershipInfo[d][cdVehicleId][v], x, y, z);
	        GetVehicleZAngle(CarDealershipInfo[d][cdVehicleId][v], a);
			if(IsPlayerInRangeOfPoint(playerid, CarDealershipInfo[d][cdRadius], CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]))
		    {
			     CarDealershipInfo[d][cdVehicleSpawnX][v] = x;
                 CarDealershipInfo[d][cdVehicleSpawnY][v] = y;
                 CarDealershipInfo[d][cdVehicleSpawnZ][v] = z;
                 CarDealershipInfo[d][cdVehicleSpawnAngle][v] = a;
                 SetPVarInt(playerid, "editingcdvehpos", 0);
                 SetPVarInt(playerid, "editingcdvehnew", 0);
                 DestroyDynamic3DTextLabel(CarDealershipInfo[d][cdVehicleLabel][v]);
	             DestroyVehicle(CarDealershipInfo[d][cdVehicleId][v]);
	             VehicleRadioStation[CarDealershipInfo[d][cdVehicleId][v]] = 0;
	             new carcreated;
	             carcreated = CreateVehicle(CarDealershipInfo[d][cdVehicleModel][v], CarDealershipInfo[d][cdVehicleSpawnX][v], CarDealershipInfo[d][cdVehicleSpawnY][v], CarDealershipInfo[d][cdVehicleSpawnZ][v], CarDealershipInfo[d][cdVehicleSpawnAngle][v], 0, 0, 6);
		         format(text_info, sizeof(text_info), "%s Satilik | Ucret: %d", GetVehicleName(carcreated), CarDealershipInfo[d][cdVehicleCost][v]);
                 CarDealershipInfo[d][cdVehicleLabel][v] = CreateDynamic3DTextLabel(text_info,COLOR_LIGHTBLUE,0.0, 0.0, 0.0,8.0,INVALID_PLAYER_ID,carcreated);
	             CarDealershipInfo[d][cdVehicleId][v] = carcreated;
	             TogglePlayerControllable(playerid, true);
	             new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			     ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
			     SavecDealerships();
			}
			else
			{
                 SendClientMessage(playerid, COLOR_GREY, "Ara bayisinin yeterince yaknnda deilsin.");
                 TogglePlayerControllable(playerid, true);
			}
		}
		else if(response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdvehpos") == 2)
		{
			new Float: x, Float: y, Float: z, Float: a;
			new d;
			GetPlayerPos(playerid,x,y,z);
	        GetPlayerFacingAngle(playerid, a);
			d = GetPVarInt(playerid, "editingcd");
			if(IsPlayerInRangeOfPoint(playerid, CarDealershipInfo[d][cdRadius], CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]))
		    {
			     CarDealershipInfo[d][cdVehicleSpawn][0] = x;
                 CarDealershipInfo[d][cdVehicleSpawn][1] = y;
                 CarDealershipInfo[d][cdVehicleSpawn][2] = z;
                 CarDealershipInfo[d][cdVehicleSpawn][3] = a;
                 SetPVarInt(playerid, "editingcdvehpos", 0);
	             TogglePlayerControllable(playerid, true);
	             new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
			     ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
			     SavecDealerships();
			}
			else
			{
                 SendClientMessage(playerid, COLOR_GREY, "Ara bayisinin yeterince yaknnda deilsin.");
                 TogglePlayerControllable(playerid, true);
			}
		}
		else if(!response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdvehpos") == 1)
		{
            new listitems[] = "1 Modeli Ayarla\n2 Ucreti Ayarla\n3 Park Yeri\n4 Araci Sil";
			ShowPlayerDialogEx(playerid,DIALOG_CDEDITONE,DIALOG_STYLE_LIST,"Arac Bayisi:", listitems,"Se","Iptal");
			TogglePlayerControllable(playerid, true);
			SetPVarInt(playerid, "editingcdvehpos", 0);
		}
		else if(!response && GetPVarInt(playerid, "editingcd") != -1 && GetPVarInt(playerid, "editingcdvehpos") == 2)
		{
            new listitems[] = "1 Arac Spawn Yeri\n2 Cevre\n3 Bayi Adi\n4 Ucret";
		    ShowPlayerDialogEx(playerid,DIALOG_CDUPGRADE,DIALOG_STYLE_LIST,"Devam etmek iin birey sein.", listitems,"Se","Iptal");
			TogglePlayerControllable(playerid, true);
			SetPVarInt(playerid, "editingcdvehpos", 0);
		}
	}
	else if(dialogid == DIALOG_CDNEWVEH)
	{ // car dealership dialog
		if(response && GetPVarInt(playerid, "editingcd") != -1)
		{
			new modelid, d;
			new Float: x, Float: y, Float: z, Float: a;
			new text_info[128];
			d = GetPVarInt(playerid, "editingcd");
			GetPlayerPos(playerid,x,y,z);
	        GetPlayerFacingAngle(playerid, a);
	        if(!IsNumeric(inputtext)) return SendClientMessage(playerid, COLOR_GRAD1, "Hata: Model ID'si numara olmak zorundadr.");
            if(IsPlayerInRangeOfPoint(playerid, CarDealershipInfo[d][cdRadius], CarDealershipInfo[d][cdEntranceX], CarDealershipInfo[d][cdEntranceY], CarDealershipInfo[d][cdEntranceZ]))
	        {
	             modelid = strval(inputtext);
	             if(modelid < 400 || modelid > 611) { SendClientMessage(playerid, COLOR_GREY, "Ara numaras 400'n altnda yada 611'in zerinde olamaz!"); return 1; }
	             new cdvehicleid = CreateCarDealershipVehicle(d, modelid, x, y, z, a, 1337);
	             if(cdvehicleid == -1)
		         {
		             SendClientMessage(playerid, COLOR_GREY, "Hata: Car couldn't be created.");
		         }
	             else
	             {
					 PutPlayerInVehicle(playerid, CarDealershipInfo[d][cdVehicleId][cdvehicleid], 0);
                     format(text_info, sizeof(text_info), "Ara bayisine yeni ara eklendi. Ara ID: %d", cdvehicleid-1);
		             SendClientMessage(playerid, COLOR_GRAD1, text_info);
		             SendClientMessage(playerid, COLOR_GRAD2, "Ltfen yeni aracnz ekleyeceiniz yerde durun.");
				     SendClientMessage(playerid, COLOR_GRAD2, "Hazr olduunda mousenden ate tuuna bas.");
				     SetPVarInt(playerid, "editingcdvehnew", 1);
		             SetPVarInt(playerid, "editingcdveh", cdvehicleid);
	             }
	        }
	        else
	        {
                 SendClientMessage(playerid, COLOR_GREY, "Ara bayisinin yeterince yaknnda deilsin.");
                 TogglePlayerControllable(playerid, true);
	        }
		}
		else
		{
            TogglePlayerControllable(playerid, true);
			SetPVarInt(playerid, "editingcd", -1);
		}
	}
	else if(dialogid == DIALOG_CDBUY)
	{

	    // Account Eating Bug Fix
	    if(!IsPlayerInAnyVehicle(playerid))
		{
		    TogglePlayerControllable(playerid, 1);
			SendClientMessage(playerid,COLOR_GRAD2,"Satn alacan aracn ierisinde olmalsn.");
			return 1;
		}

		new vehicleid = GetPlayerVehicleID(playerid);
		new v = GetCarDealershipVehicleId(vehicleid);
		new d = GetCarDealershipId(vehicleid);
		if(response)
		{
            if(CarDealershipInfo[d][cdVehicleSpawn][0] == 0.0 && CarDealershipInfo[d][cdVehicleSpawn][1] == 0.0 && CarDealershipInfo[d][cdVehicleSpawn][2] == 0.0)
            {
				SendClientMessage(playerid, COLOR_GRAD1, "Hata: Bu ara bayisinin satcs satn alnan aralarn kaca yerleri belirlememi.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				TogglePlayerControllable(playerid, 1);
				return 1;
            }
            if(CarDealershipInfo[d][cdDonator] == 1 && PlayerInfo[playerid][pDonator] < 1)
            {
 				SendClientMessage(playerid, COLOR_GREY, "Bu bayideki aralar yalnzca Yakut VIP'e sahip olanlar iindir.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				TogglePlayerControllable(playerid, 1);
				return 1;
            }
            if(CarDealershipInfo[d][cdDonator] == 2 && PlayerInfo[playerid][pDonator] < 2)
            {
 				SendClientMessage(playerid, COLOR_GREY, "Bu bayideki aralar yalnzca Master VIP'e sahip olanlar iindir.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				TogglePlayerControllable(playerid, 1);
				return 1;
            }
            if(CarDealershipInfo[d][cdDonator] == 3 && PlayerInfo[playerid][pDonator] < 3)
            {
 				SendClientMessage(playerid, COLOR_GREY, "Bu bayideki aralar yalnzca Elmas VIP'e sahip olanlar iindir.");
				RemovePlayerFromVehicle(playerid);
				new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
				TogglePlayerControllable(playerid, 1);
				return 1;
            }

            new playervehicleid = GetPlayerFreeVehicleId(playerid),
				totalvehicles = GetPlayerVehicleCountEx(playerid);
            // (TEMPORARY - ZHAO NOTE) TempDonator not added yet
			if(PlayerInfo[playerid][pDonator] == 0 && totalvehicles >= 5) //PlayerInfo[playerid][pTempDonator] > 0) && carsamount >= 5)
			{
                SendClientMessage(playerid, COLOR_GREY, "Hata: Daha fazla ara satn alamazsn. VIP olmayanlar 5 ara barndrabilirler.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
			}
            if(PlayerInfo[playerid][pDonator] == 1 && totalvehicles >= 7)
            {
                SendClientMessage(playerid, COLOR_GREY, "Hata: Daha fazla ara satn alamazsn. Yakut VIP 'e sahip olanlar 7 ara barndrabilirler.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
            if(PlayerInfo[playerid][pDonator] == 2 && totalvehicles >= 8)
            {
                SendClientMessage(playerid, COLOR_GREY, "Hata: Daha fazla ara satn alamazsn. Master VIP 'e sahip olanlar 8 ara barndrabilirler.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
            if(PlayerInfo[playerid][pDonator] == 3 && totalvehicles >= 10)
            {
                SendClientMessage(playerid, COLOR_GREY, "Hata: Daha fazla ara satn alamazsn. Elmas VIP 'e sahip olanlar 10 ara barndrabilirler.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
            }
		    if(playervehicleid == -1)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Hata: Daha fazla ara satn alamazsn.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
                return 1;
		    }
           	if(PlayerInfo[playerid][pDonator] == 0 && VehicleSpawned[playerid] > 0)
           	{
            	SendClientMessage(playerid, COLOR_GREY, "VIP olmadan ayn anda maksimum 1 ara karabilirsin. Ara satn alabilmek iin dierini sakla.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}
         	if(PlayerInfo[playerid][pDonator] == 1 && VehicleSpawned[playerid] > 1)
         	{
         		SendClientMessage(playerid, COLOR_GREY, "Hata: Yakut VIP olarak ayn anda maksimum 2 ara karabilirsin. Ara satn alabilmek iin bir tanesini sakla.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}
         	if(PlayerInfo[playerid][pDonator] == 2 && VehicleSpawned[playerid] > 2)
         	{
        		SendClientMessage(playerid, COLOR_GREY, "Hata: Master VIP olarak ayn anda maksimum 3 ara karabilirsin. Ara satn alabilmek iin bir tanesini sakla.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}
          	if(PlayerInfo[playerid][pDonator] == 3 && VehicleSpawned[playerid] > 3)
          	{
  				SendClientMessage(playerid, COLOR_GREY, "Hata: Elmas VIP olarak ayn anda maksimum 4 ara karabilirsin. Ara satn alabilmek iin bir tanesini sakla.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}
           	/*if(PlayerInfo[playerid][pDonator] == 4 && VehicleSpawned[playerid] >= 5)
           	{
				SendClientMessage(playerid, COLOR_GREY, "Hata: You can only have 5 vehicles spawned at a time as Undefined Donator. Store one vehicle in order to purchase one.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}
           	if(PlayerInfo[playerid][pDonator] == 5 && VehicleSpawned[playerid] >= 5)
           	{
				SendClientMessage(playerid, COLOR_GREY, "Hata: You can only have 5 vehicles spawned at a time as VIP Moderator. Store one vehicle in order to purchase one.");
                RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}*/
           	if(PlayerInfo[playerid][pDonator] < 0 || PlayerInfo[playerid][pDonator] > 3)
           	{
           	    SendClientMessage(playerid, COLOR_GREY, "Hata: Bilinmeyen VIP leveli.");
            	RemovePlayerFromVehicle(playerid);
                new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(playerid, slx, sly, slz);
				SetPlayerPos(playerid, slx, sly, slz+1.2);
                TogglePlayerControllable(playerid, 1);
				return 1;
           	}
		    new randcolor1 = Random(0, 126);
		    new randcolor2 = Random(0, 126);
		    SetPlayerPos(playerid, CarDealershipInfo[d][cdVehicleSpawn][0], CarDealershipInfo[d][cdVehicleSpawn][1], CarDealershipInfo[d][cdVehicleSpawn][2]+2);
		    TogglePlayerControllable(playerid, 1);
		    new cost;
		    if(PlayerInfo[playerid][pDonator] < 1)
            {
                cost = CarDealershipInfo[d][cdVehicleCost][v];
	            if(PlayerInfo[playerid][pCash] < CarDealershipInfo[d][cdVehicleCost][v])
	            {
					SendClientMessage(playerid, COLOR_GRAD1, "Hata: Bunu satn almak iin paran yok.");
					RemovePlayerFromVehicle(playerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
					return 1;
	            }
                format(string, sizeof(string), "%s'dan aldnz iin teekkrler.", CarDealershipInfo[d][cdMessage]);
		        SendClientMessage(playerid, COLOR_GRAD1, string);
				PlayerInfo[playerid][pCash] -= CarDealershipInfo[d][cdVehicleCost][v];
		        CarDealershipInfo[d][cdTill] += (CarDealershipInfo[d][cdVehicleCost][v] * 40) / (100);
	        }
	        else
	        {
				if(CarDealershipInfo[d][cdDonator] > 0) cost = CarDealershipInfo[d][cdVehicleCost][v];
				else cost = (CarDealershipInfo[d][cdVehicleCost][v] * 80) / (100);
	            if(PlayerInfo[playerid][pCash] < cost)
	            {
					SendClientMessage(playerid, COLOR_GRAD1, "Hata: Bunu satn almak iin paran yok.");
					RemovePlayerFromVehicle(playerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
					return 1;
	            }
       		   	if(AdminDuty[playerid] == 1)
 				{
  					SendClientMessage(playerid, COLOR_GRAD1, "Hata: ba yapm bir adminken ara satn alamazsn.");
					RemovePlayerFromVehicle(playerid);
					new Float:slx, Float:sly, Float:slz;
					GetPlayerPos(playerid, slx, sly, slz);
					SetPlayerPos(playerid, slx, sly, slz+1.2);
					return 1;
				}

                format(string, sizeof(string), "%s'dan aldnz iin teekkrler.", CarDealershipInfo[d][cdMessage]);
		        SendClientMessage(playerid, COLOR_GRAD1, string);
		        PlayerInfo[playerid][pCash] -= cost;
				CarDealershipInfo[d][cdTill] += cost;
     		}

            new car = CreatePlayerVehicle(playerid, playervehicleid, CarDealershipInfo[d][cdVehicleModel][v], CarDealershipInfo[d][cdVehicleSpawn][0], CarDealershipInfo[d][cdVehicleSpawn][1], CarDealershipInfo[d][cdVehicleSpawn][2], CarDealershipInfo[d][cdVehicleSpawn][3], randcolor1, randcolor2, cost);
            SetTimerEx("PutPlayerInVeh", 2000, 0, "dd", playerid, car);
            SavecDealerships();
		}
		else
		{
            RemovePlayerFromVehicle(playerid);
            new Float:slx, Float:sly, Float:slz;
			GetPlayerPos(playerid, slx, sly, slz);
			SetPlayerPos(playerid, slx, sly, slz+1.2);
            TogglePlayerControllable(playerid, 1);
			return 1;
		}
	}
	else if(dialogid == DIALOG_CDSELL)
	{
		if(response)
		{
			if(GetPVarInt(playerid, "editingcd") == -1) return 1;
			PlayerInfo[playerid][pCash] += (CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdPrice] / 2);
			SellCarDealership(GetPVarInt(playerid, "editingcd"));
			PlayerPlayMusic(playerid);
			format(string, sizeof(string), "Ara bayisi baarl bir ekilde %d'a satld.", CarDealershipInfo[GetPVarInt(playerid, "editingcd")][cdPrice] / 2);
			SendClientMessage(playerid, COLOR_WHITE, string);
		}
		else
		{
            SetPVarInt(playerid, "editingcd", -1);
			return 1;
		}
	}
	if(dialogid == FIGHTMENU)
	{
		if(response)
		{
			if(GetPlayerCash(playerid) >= 5000)
			{
				if(listitem == 0)
				{
			    	PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_BOXING;
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_BOXING);
					SendClientMessage(playerid, COLOR_WHITE, "Artk boks dv stilini kullanyorsun.");
					GivePlayerCash(playerid, -5000);
				}
				if(listitem == 1)
				{
					PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_ELBOW;
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_ELBOW);
					SendClientMessage(playerid, COLOR_WHITE, "Artk elbow dv stilini kullanyorsun.");
					GivePlayerCash(playerid, -5000);
				}
				if(listitem == 2)
				{
			    	PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_KNEEHEAD;
				    SetPlayerFightingStyle (playerid, FIGHT_STYLE_KNEEHEAD);
				    SendClientMessage(playerid, COLOR_WHITE, "Artk kneehead dv stilini kullanyorsun.");
					GivePlayerCash(playerid, -5000);

				}
				if(listitem == 3)
				{
   					PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_KUNGFU;
					SetPlayerFightingStyle (playerid, FIGHT_STYLE_KUNGFU);
					SendClientMessage(playerid, COLOR_WHITE, "Artk kungfu dv stilini kullanyorsun.");
					GivePlayerCash(playerid, -5000);
				}
				if(listitem == 4)
				{
					PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_GRABKICK;
	    			SetPlayerFightingStyle (playerid, FIGHT_STYLE_GRABKICK);
			  	  	SendClientMessage(playerid, COLOR_WHITE, "Artk grabkick dv stilini kullanyorsun.");
					GivePlayerCash(playerid, -5000);
				}
			}
			else
			{
				SendClientMessage(playerid, COLOR_GREY, "Bunun iin paran yok!");
				return 1;
			}

			if(listitem == 5)
			{
				PlayerInfo[playerid][pFightStyle] = FIGHT_STYLE_NORMAL;
				SetPlayerFightingStyle (playerid, FIGHT_STYLE_NORMAL);
	  			SendClientMessage(playerid, COLOR_WHITE, "Artk normal dv stilini kullanyorsun!");
				return 1;
			}
		}
	}
	if(dialogid == REMOVEKEYS)
	{
	    if(response)
	    {
	        if(PlayerVehicleInfo[playerid][listitem][pvId] == INVALID_PLAYER_VEHICLE_ID) {
	            SendClientMessage(playerid, COLOR_GRAD2, "Olmayan,balanm yada sakl olan bir anacn anahtarlarn geri alamazsn.");
	            return 1;
			}
	        if(PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid] != PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid])
	        {
	            SendClientMessage(playerid, COLOR_GRAD2, "Bu oyuncu, arabann anahtarlarna sahip deil.");
	            return 1;
	        }
	        if(PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid] == INVALID_PLAYER_ID)
	        {
	            SendClientMessage(playerid, COLOR_GRAD2, "Bu aracn anahtarlarn kimseye vermedin.");
	            return 1;
	        }
			PlayerInfo[PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
			PlayerInfo[PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
			format(string, sizeof(string), "%s adl kii %s model aracnn anahtarlarn geri ald.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
			SendClientMessage(PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid], COLOR_GRAD2, string);
			format(string, sizeof(string), "%s model aracnn anahtarlarn %s'dan geri aldn.", GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]),GetPlayerNameEx(PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid]));
			SendClientMessage(playerid, COLOR_GRAD2, string);
			PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid] = INVALID_PLAYER_ID;
	    }
	}
	if(dialogid == GIVEKEYS)
	{
	    if(response)
	    {
			if(PlayerVehicleInfo[playerid][listitem][pvId] == INVALID_PLAYER_VEHICLE_ID) {
	            SendClientMessage(playerid, COLOR_GRAD2, "Olmayan,balanm yada sakl olan bir aracn anahtarlarn veremezsin.");
	            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	            return 1;
			}
	        if(PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid] != INVALID_PLAYER_ID)
	        {
	            SendClientMessage(playerid, COLOR_GRAD2, "Bu aracn anahtarlarn bakasna vermisin.");
	            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	            return 1;
	        }
	        if(PlayerInfo[GiveKeysTo[playerid]][pVehicleKeysFrom] != INVALID_PLAYER_ID)
	        {
	            SendClientMessage(playerid, COLOR_GRAD2, "Bu kii zaten baka bir aracn anahtarlarna sahip.");
	            GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	            return 1;
	        }
			PlayerVehicleInfo[playerid][listitem][pvAllowedplayerid] = GiveKeysTo[playerid];
			PlayerInfo[GiveKeysTo[playerid]][pVehicleKeys] = listitem;
			PlayerInfo[GiveKeysTo[playerid]][pVehicleKeysFrom] = playerid;
			format(string, sizeof(string), "%s adl kii sana %s model aracnn anahtarlarn verdi.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
			SendClientMessage(GiveKeysTo[playerid], COLOR_GRAD2, string);
			format(string, sizeof(string), "%s adl kiiye %s model aracnn anahtarlarn verdin.", GetPlayerNameEx(GiveKeysTo[playerid]), GetVehicleName(PlayerVehicleInfo[playerid][listitem][pvId]));
			SendClientMessage(playerid, COLOR_GRAD2, string);
			GiveKeysTo[playerid] = INVALID_PLAYER_ID;
	    }
	}
	if(dialogid == MPSPAYTICKETSCOP)
	{
	    if(response)
	    {
			new
				szMessage[128],
				iTargetID = GetPVarInt(playerid, "vRel");

			if(PlayerVehicleInfo[iTargetID][listitem][pvTicket]) {
				format(szMessage, sizeof(szMessage), "%s adl oyuncunun %s model aracnn $%d cezasn dedin.", GetPlayerNameEx(iTargetID), PlayerVehicleInfo[iTargetID][listitem][pvTicket], VehicleName[PlayerVehicleInfo[iTargetID][listitem][pvModelId] - 400]);
				SendClientMessage(playerid, COLOR_GRAD2, szMessage);

				format(szMessage, sizeof(szMessage), "%s adl kii %s model aracnn cezalarn dedi. (%i).", GetPlayerNameEx(playerid), VehicleName[PlayerVehicleInfo[iTargetID][listitem][pvModelId] - 400], PlayerVehicleInfo[iTargetID][listitem][pvTicket]);
				SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);
				PlayerVehicleInfo[iTargetID][listitem][pvTicket] = 0;
			}
			else if(PlayerVehicleInfo[iTargetID][listitem][pvImpounded])
			{
				if(PlayerInfo[iTargetID][pDonator] == 0 && VehicleSpawned[iTargetID] >= 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
				}
				if(PlayerInfo[iTargetID][pDonator] == 1 && VehicleSpawned[iTargetID] >= 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
				}
				if(PlayerInfo[iTargetID][pDonator] == 2 && VehicleSpawned[iTargetID] >= 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
				}
				if(PlayerInfo[iTargetID][pDonator] == 3 && VehicleSpawned[iTargetID] >= 3)
	 			{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
			 	}
				if(PlayerInfo[iTargetID][pDonator] == 4 && VehicleSpawned[iTargetID] >= 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
				}
				if(PlayerInfo[iTargetID][pDonator] == 5 && VehicleSpawned[iTargetID] >= 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
				}
				if(PlayerInfo[iTargetID][pDonator] < 0 || PlayerInfo[iTargetID][pDonator] > 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "Bu oyuncunun ayn anda kard ara says maksimum seviyede. Bu yzden arac karlamyor.");
					return 1;
				}

				format(szMessage, sizeof(szMessage), "%s adl oyuncunun %s model aracn serbest braktn.", GetPlayerNameEx(iTargetID), VehicleName[PlayerVehicleInfo[iTargetID][listitem][pvModelId] - 400]);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);

				format(szMessage, sizeof(szMessage), "%s adl kii balanm olan %s model aracn serbest brakt.", GetPlayerNameEx(playerid), VehicleName[PlayerVehicleInfo[iTargetID][listitem][pvModelId] - 400]);
				SendClientMessage(iTargetID, COLOR_LIGHTBLUE, szMessage);

				format(szMessage, sizeof(szMessage), "Merkez: %, %s adl kiinin %s model balanm aracn serbest brakt.", GetPlayerNameEx(playerid), GetPlayerNameEx(iTargetID), VehicleName[PlayerVehicleInfo[iTargetID][listitem][pvModelId] - 400]);
				SendRadioMessage(PlayerInfo[playerid][pFaction], RADIO, szMessage);

				PlayerVehicleInfo[iTargetID][listitem][pvImpounded] = 0;
				PlayerVehicleInfo[playerid][listitem][pvSpawned] = 1;
				PlayerVehicleInfo[iTargetID][listitem][pvPosX] = 813.8251;
				PlayerVehicleInfo[iTargetID][listitem][pvPosY] = -601.5270;
				PlayerVehicleInfo[iTargetID][listitem][pvPosZ] = 16.0430;
				PlayerVehicleInfo[iTargetID][listitem][pvPosAngle] = 89.0223;
				PlayerVehicleInfo[iTargetID][listitem][pvTicket] = 0;
				VehicleSpawned[iTargetID]++;
				++PlayerCars;

				PlayerVehicleInfo[iTargetID][listitem][pvId] = CreateVehicle(PlayerVehicleInfo[iTargetID][listitem][pvModelId], PlayerVehicleInfo[iTargetID][listitem][pvPosX], PlayerVehicleInfo[iTargetID][listitem][pvPosY], PlayerVehicleInfo[iTargetID][listitem][pvPosZ], PlayerVehicleInfo[iTargetID][listitem][pvPosAngle],PlayerVehicleInfo[iTargetID][listitem][pvColor1], PlayerVehicleInfo[iTargetID][listitem][pvColor2], -1);
				//VehicleFuel[PlayerVehicleInfo[iTargetID][listitem][pvId]] = PlayerVehicleInfo[iTargetID][listitem][pvFuel];
				if(PlayerVehicleInfo[iTargetID][listitem][pvLocked] == 1) LockPlayerVehicle(iTargetID, PlayerVehicleInfo[iTargetID][listitem][pvId], PlayerVehicleInfo[iTargetID][listitem][pvLock]);
				LoadPlayerVehicleMods(iTargetID, listitem);
			}
			else SendClientMessage(playerid, COLOR_GRAD2, "Bu ara mevcut deil, serbest braklmas gerekmiyor veya cezalar denmi.");
	    }
		return 1;
	}
	if(dialogid == MPSPAYTICKETS)
	{
	    if(response)
	    {
			new
				szMessage[128];

			if(PlayerInfo[playerid][pWantedLevel] != 0)
			{
				format(szMessage, sizeof(szMessage), "%s adl sulu %i su ile aracn serbest brakmay yada cezasn demeye alt.", GetPlayerNameEx(playerid), PlayerInfo[playerid][pWantedLevel]);
				SendRadioMessage(1, DEPTRADIO, szMessage);
				SendRadioMessage(2, DEPTRADIO, szMessage);

				return SendClientMessage(playerid, COLOR_YELLOW, "Polis arananlar listesinde olduun hakknda uyarld.");
			}
			if(PlayerVehicleInfo[playerid][listitem][pvTicket]) {
				if(GetPlayerCash(playerid) < PlayerVehicleInfo[playerid][listitem][pvTicket]) {
					return SendClientMessage(playerid, COLOR_GRAD2, "Cezay deyebilmek iin yeterli paran yok.");
				}
				GivePlayerCash(playerid, -PlayerVehicleInfo[playerid][listitem][pvTicket]);
				format(szMessage, sizeof(szMessage), "%s model aracnn $%d'lk cezasn dedin.", PlayerVehicleInfo[playerid][listitem][pvTicket], VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400]);
				SendClientMessage(playerid, COLOR_GRAD2, szMessage);
				PlayerVehicleInfo[playerid][listitem][pvTicket] = 0;
			}
			else if(PlayerVehicleInfo[playerid][listitem][pvImpounded]) {

				new iCost = (PlayerVehicleInfo[playerid][listitem][pvPrice] / 10) + PlayerVehicleInfo[playerid][listitem][pvTicket] + (PlayerInfo[playerid][pLevel] * 10);

		    	if(iCost > 1000)
		    	{
		        	iCost = 1000;
		    	}

				if(GetPlayerCash(playerid) < iCost) {
					return SendClientMessage(playerid, COLOR_GRAD2, "zerinde yeterli para yok.");
				}

    			if(PlayerInfo[playerid][pDonator] == 0 && VehicleSpawned[playerid] > 0)
				{
					SendClientMessage(playerid, COLOR_GREY, "VIP olmadan ayn anda yalnzca 1 ara karabilirsin. Baka karmak iin dierini sakla.");
					return 1;
				}
				if(PlayerInfo[playerid][pDonator] == 1 && VehicleSpawned[playerid] > 1)
				{
					SendClientMessage(playerid, COLOR_GREY, "Yakut VIP'e sahip olduundan dolay ayn anda 2 ara karabilirsin.");
					return 1;
				}
				if(PlayerInfo[playerid][pDonator] == 2 && VehicleSpawned[playerid] > 2)
				{
					SendClientMessage(playerid, COLOR_GREY, "Master VIP'e sahip olduundan dolay ayn anda 3 ara karabilirsin.");
					return 1;
				}
				if(PlayerInfo[playerid][pDonator] == 3 && VehicleSpawned[playerid] > 3)
	 			{
					SendClientMessage(playerid, COLOR_GREY, "Elmas VIP'e sahip olduundan dolay ayn anda 4 ara karabilirsin.");
					return 1;
			 	}
				/*if(PlayerInfo[playerid][pDonator] == 4 && VehicleSpawned[playerid] >= 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "As Undefined Donator you can only have 5 vehicles spawned. You must store a vehicle in order to spawn another one.");
					return 1;
				}
				if(PlayerInfo[playerid][pDonator] == 5 && VehicleSpawned[playerid] >= 5)
				{
					SendClientMessage(playerid, COLOR_GREY, "As VIP Moderator you can only have 5 vehicles spawned. You must store a vehicle in order to spawn another one.");
					return 1;
				}*/
				if(PlayerInfo[playerid][pDonator] < 0 || PlayerInfo[playerid][pDonator] > 3)
				{
					SendClientMessage(playerid, COLOR_GREY, "Geersiz VIP leveline sahipsin.");
					return 1;
				}

				format(szMessage, sizeof(szMessage), "%s model aracn $%i deyerek serbest braktn.", VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400], iCost);
				SendClientMessage(playerid, COLOR_LIGHTBLUE, szMessage);
				GivePlayerCash(playerid, -iCost);

				PlayerVehicleInfo[playerid][listitem][pvImpounded] = 0;
				PlayerVehicleInfo[playerid][listitem][pvSpawned] = 1;
				PlayerVehicleInfo[playerid][listitem][pvPosX] = 813.8251;
				PlayerVehicleInfo[playerid][listitem][pvPosY] = -601.5270;
				PlayerVehicleInfo[playerid][listitem][pvPosZ] = 16.0430;
				PlayerVehicleInfo[playerid][listitem][pvPosAngle] = 89.0223;
				PlayerVehicleInfo[playerid][listitem][pvTicket] = 0;
				VehicleSpawned[playerid]++;
				++PlayerCars;

				PlayerVehicleInfo[playerid][listitem][pvId] = CreateVehicle(PlayerVehicleInfo[playerid][listitem][pvModelId], PlayerVehicleInfo[playerid][listitem][pvPosX], PlayerVehicleInfo[playerid][listitem][pvPosY], PlayerVehicleInfo[playerid][listitem][pvPosZ], PlayerVehicleInfo[playerid][listitem][pvPosAngle],PlayerVehicleInfo[playerid][listitem][pvColor1], PlayerVehicleInfo[playerid][listitem][pvColor2], -1);
				//VehicleFuel[PlayerVehicleInfo[playerid][listitem][pvId]] = PlayerVehicleInfo[playerid][listitem][pvFuel];
				if(PlayerVehicleInfo[playerid][listitem][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvLock]);
				LoadPlayerVehicleMods(playerid, listitem);
			}
			else SendClientMessage(playerid, COLOR_GRAD2, "Bu ara mevcut deil, serbest braklmas gerekmiyor veya cezalar denmi.");
	    }
		return 1;
	}
	if(dialogid == GOTOPLAYERCAR)
	{
	    if(response == 1)
	    {
	        for(new i = 0; i < MAX_PLAYERVEHICLES; i++)
	        {
	            if(listitem == i)
	            {
					new Float: carPos[3], id = GetPVarInt(playerid, "playeraffectedcarTP");
					if(PlayerVehicleInfo[id][i][pvId] > INVALID_PLAYER_VEHICLE_ID)
					{
						GetVehiclePos(PlayerVehicleInfo[id][i][pvId], carPos[0], carPos[1], carPos[2]);
						SetPlayerVirtualWorld(playerid,GetVehicleVirtualWorld(PlayerVehicleInfo[id][i][pvId]));
						SetPlayerInterior(playerid,0);
						SetPlayerPos(playerid, carPos[0], carPos[1], carPos[2]);
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "Bo, kullanlamaz halde yada balanm bir slota teleport olamazsn.");
					}
				}
			}
	    }
	}
	if(dialogid == DELETEPLAYERCAR)
	{
	    if(response == 1)
	    {
			new id = GetPVarInt(playerid, "playeraffectedcarTP");

			if(PlayerVehicleInfo[id][listitem][pvSpawned] == 0) {
				PlayerVehicleInfo[id][listitem][pvSpawned] = 1;
				VehicleSpawned[playerid]++;
				PlayerCars++;
				PlayerVehicleInfo[id][listitem][pvId] = CreateVehicle(PlayerVehicleInfo[id][listitem][pvModelId], PlayerVehicleInfo[id][listitem][pvPosX], PlayerVehicleInfo[id][listitem][pvPosY], PlayerVehicleInfo[id][listitem][pvPosZ], PlayerVehicleInfo[id][listitem][pvPosAngle],PlayerVehicleInfo[id][listitem][pvColor1], PlayerVehicleInfo[id][listitem][pvColor2], -1);
			}
			format(string, sizeof(string), "%s, %s adl oyuncunun %s model aracn yoketti.", GetPlayerNameEx(playerid), GetPlayerNameEx(id), GetVehicleName(PlayerVehicleInfo[id][listitem][pvId]));
			Log("logs/playervehicle.log", string);

			format(string, sizeof(string), "Admin %s, %s model aracn sildi.", GetPlayerNameEx(playerid), GetVehicleName(PlayerVehicleInfo[id][listitem][pvId]));
			SendClientMessage(id, COLOR_WHITE, string);

			format(string, sizeof(string), "%s adl oyuncunun %s model aracn sildin.", GetPlayerNameEx(id), GetVehicleName(PlayerVehicleInfo[id][listitem][pvId]));
			SendClientMessage(playerid, COLOR_WHITE, string);

			new playervehicleid = GetPlayerVehicle(id, PlayerVehicleInfo[id][listitem][pvId]);
			DestroyPlayerVehicle(id, playervehicleid);
	    }
	}
	if(dialogid == VEHICLESTORAGE && response) {
		if(PlayerVehicleInfo[playerid][listitem][pvSpawned])
		{
			if(IsVehicleOccupied(PlayerVehicleInfo[playerid][listitem][pvId]) != INVALID_VEHICLE_ID)
				return SendClientMessage(playerid, COLOR_GREY, "Aracn bakas tarafndan srlyorken aracn saklayamazsn.");

			new
				Float: vehiclehealth;

			GetVehicleHealth(PlayerVehicleInfo[playerid][listitem][pvId], vehiclehealth);

			if(vehiclehealth < 750)
			{
				SendClientMessage(playerid, COLOR_GREY, "Aracn saklamak iin ok hasarl.");
			}
			else {
			    // Tow check
			    new
			        x;
			    foreach(Player, i) {
					if(arr_Towing[i] == PlayerVehicleInfo[playerid][listitem][pvId] && arr_Towing[i] != INVALID_VEHICLE_ID)
					    x++;
				}

				if(x != 0)
				    return SendClientMessage(playerid, COLOR_GREY, "Aracn ekiliyorken bu komutu kullanamazsn.");

				// The rest of the code...
				--PlayerCars;
				VehicleSpawned[playerid]--;
				PlayerVehicleInfo[playerid][listitem][pvSpawned] = 0;
				DestroyVehicle(PlayerVehicleInfo[playerid][listitem][pvId]);
				VehicleRadioStation[PlayerVehicleInfo[playerid][listitem][pvId]] = 0;
				PlayerVehicleInfo[playerid][listitem][pvId] = INVALID_PLAYER_VEHICLE_ID;

				new vstring[128];
				format(vstring, sizeof(vstring), "%s model aracn sakladn. Aracn artk gzkmyor.", VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400]);
				SendClientMessage(playerid, COLOR_WHITE, vstring);
			}
		}
		else if(PlayerVehicleInfo[playerid][listitem][pvModelId] == 0) {
			SendClientMessage(playerid, COLOR_WHITE, "Olmayan bir arac karamazsn.");
		}
		else if(PlayerVehicleInfo[playerid][listitem][pvImpounded]) {
			SendClientMessage(playerid, COLOR_WHITE, "Balanm bir arac karamazsn. Tekrar karmak iin DMV'ye git.");
		}
		else if(PlayerVehicleInfo[playerid][listitem][pvDisabled] == 1) {
			SendClientMessage(playerid, COLOR_WHITE, "Kullanlamaz halde olan bir arac VIP levelin dolaysyla karamazsn. (ara kstlamalar).");
		}
		else if(PlayerVehicleInfo[playerid][listitem][pvSpawned] == 0) {
			if(PlayerInfo[playerid][pDonator] == 0 && VehicleSpawned[playerid] > 0) {
				SendClientMessage(playerid, COLOR_GREY, "VIP olmadan ayn anda yalnzca 1 ara karabilirsin. Baka karmak iin dierini sakla.");
			}
			else if(PlayerInfo[playerid][pDonator] == 1 && VehicleSpawned[playerid] > 1) {
				SendClientMessage(playerid, COLOR_GREY, "Yakut VIP'e sahip olduundan dolay ayn anda 2 ara karabilirsin.");
			}
			else if(PlayerInfo[playerid][pDonator] == 2 && VehicleSpawned[playerid] > 2) {
				SendClientMessage(playerid, COLOR_GREY, "Master VIP'e sahip olduundan dolay ayn anda 3 ara karabilirsin.");
			}
			else if(PlayerInfo[playerid][pDonator] == 3 && VehicleSpawned[playerid] > 3) {
				SendClientMessage(playerid, COLOR_GREY, "Elmas VIP'e sahip olduundan dolay ayn anda 4 ara karabilirsin.");
			}
			/*else if(PlayerInfo[playerid][pDonator] == 4 && VehicleSpawned[playerid] >= 5) {
				SendClientMessage(playerid, COLOR_GREY, "As Undefined Donator you can only have 5 vehicles spawned. You must store a vehicle in order to spawn another one.");
			}
			else if(PlayerInfo[playerid][pDonator] == 5 && VehicleSpawned[playerid] >= 5){
				SendClientMessage(playerid, COLOR_GREY, "As VIP Moderator you can only have 5 vehicles spawned. You must store a vehicle in order to spawn another one.");
			}*/
			else if(!(0 <= PlayerInfo[playerid][pDonator] <= 3)) {
				SendClientMessage(playerid, COLOR_GREY, "Geersiz VIP leveline sahipsin.");
			}
			else {
				++PlayerCars;
				VehicleSpawned[playerid]++;
				PlayerVehicleInfo[playerid][listitem][pvSpawned] = 1;
				PlayerVehicleInfo[playerid][listitem][pvId] = CreateVehicle(PlayerVehicleInfo[playerid][listitem][pvModelId], PlayerVehicleInfo[playerid][listitem][pvPosX], PlayerVehicleInfo[playerid][listitem][pvPosY], PlayerVehicleInfo[playerid][listitem][pvPosZ], PlayerVehicleInfo[playerid][listitem][pvPosAngle],PlayerVehicleInfo[playerid][listitem][pvColor1], PlayerVehicleInfo[playerid][listitem][pvColor2], -1);
				//VehicleFuel[PlayerVehicleInfo[playerid][listitem][pvId]] = PlayerVehicleInfo[playerid][listitem][pvFuel];
				if(PlayerVehicleInfo[playerid][listitem][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvLock]);

				if(strlen(PlayerVehicleInfo[playerid][listitem][pvNumberPlate]) > 0)
					SetVehicleNumberPlate(PlayerVehicleInfo[playerid][listitem][pvId], PlayerVehicleInfo[playerid][listitem][pvNumberPlate]);

				LoadPlayerVehicleMods(playerid, listitem);

				new vstring[128];
				format(vstring, sizeof(vstring), "%s model aracn karttn. Aracn u anda en son park ettiin yerde.", VehicleName[PlayerVehicleInfo[playerid][listitem][pvModelId] - 400]);
				SendClientMessage(playerid, COLOR_WHITE, vstring);
			}
		}
		else SendClientMessage(playerid, COLOR_WHITE, "Bulunmayan bir arac karamazsn.");
	}
	if(dialogid == TRACKCAR && response) {
		new Float: carPos[3];
		if(PlayerVehicleInfo[playerid][listitem][pvId] > INVALID_PLAYER_VEHICLE_ID)
		{
			GetVehiclePos(PlayerVehicleInfo[playerid][listitem][pvId], carPos[0], carPos[1], carPos[2]);
			if(CheckPointCheck(playerid))
			{
				SendClientMessage(playerid, COLOR_WHITE, "Haritanda baka bir krmz nokta var ise /hedefsifirla yazarak sfrladna emin ol. (ya materyal pakedin var, yada baka bir krmz nokta).");
			}
			else
			{
				SetPVarInt(playerid, "TrackCar", 1);

				new zone[MAX_ZONE_NAME];
				Get3DZone(carPos[0], carPos[1], carPos[2], zone, sizeof(zone));
				format(string, sizeof(string), "Aracnn olduu yer: %s.", zone);
				SendClientMessage(playerid, COLOR_YELLOW, string);
				SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
				SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Aracn bulmak iin haritadaki krmz noktaya git.");
			}
		}
		else if(PlayerVehicleInfo[playerid][listitem][pvImpounded]) SendClientMessage(playerid, COLOR_WHITE, "Balanm bir aracn yerini bulamazsn. Tekrar karmak iin DMV'ye git.");
		else if(PlayerVehicleInfo[playerid][listitem][pvDisabled] == 1) SendClientMessage(playerid, COLOR_WHITE, "Kullanlamaz hale gelmi aracn yerini bulma zellii VIP levelin yznden devred. (ara kstlamalar).");
		else if(PlayerVehicleInfo[playerid][listitem][pvSpawned] == 0 && PlayerVehicleInfo[playerid][listitem][pvModelId] != 0) SendClientMessage(playerid, COLOR_WHITE, "Saklam olduun bir aracn yerini bulamazsn. /araclarim komutunu kullanarak aracn kar.");
		else SendClientMessage(playerid, COLOR_WHITE, "Olmayan bir aracn yerini bulamazsn.");
	}
	else if(dialogid == GTRACKCAR)
	{
	    if(response == 1)
	    {
	        for(new i = 0; i < MAX_GANG_VEHICLES; i++)
	        {
	            if(listitem == i)
	            {
	                new Float: carPos[3];
					new Family = PlayerInfo[playerid][pGang];
					if(FamilyVehicleInfo[Family][i][fvId] != INVALID_VEHICLE_ID)
					{
	                	GetVehiclePos(FamilyVehicleInfo[Family][i][fvId], carPos[0], carPos[1], carPos[2]);
	                	if(CheckPointCheck(playerid))
						{
							SendClientMessage(playerid, COLOR_WHITE, "Haritanda baka bir krmz nokta var ise /hedefsifirla yazarak sfrladna emin ol. (ya materyal pakedin var, yada baka bir krmz nokta).");
						}
						else
						{
					    	SetPVarInt(playerid, "TrackCar", 1);

					    	new zone[MAX_ZONE_NAME];
					    	Get3DZone(carPos[0], carPos[1], carPos[2], zone, sizeof(zone));
					    	format(string, sizeof(string), "Aracnn olduu yer: %s.", zone);
					    	SendClientMessage(playerid, COLOR_YELLOW, string);
					    	SetPlayerCheckpoint(playerid, carPos[0], carPos[1], carPos[2], 15.0);
					    	SendClientMessage(playerid, COLOR_WHITE,"IPUCU: Aracn bulmak iin krmz noktaya git!");
						}
					}
					else
					{
					    SendClientMessage(playerid, COLOR_WHITE, "Bo slotdaki bir aracn yerini bulamazsn.");
					}
	            }
	        }
	    }
	}
	if(dialogid == UNMODCARMENU)
	{
	    if(response)
	    {
		    new count = GetPVarInt(playerid, "modCount");
			new d;
			for(new z = 0 ; z < MAX_PLAYERVEHICLES; z++)
			{
				if(IsPlayerInVehicle(playerid, PlayerVehicleInfo[playerid][z][pvId]))
				{
					d = z;
				    break;
				}
			}
            for (new i = 0; i < count; i++)
			{
				if(listitem == i)
				{
				    format(string, sizeof(string), "partList%i", i);
					new partID = GetPVarInt(playerid, string);
					if(partID == 999)
					{
					    for(new f = 0 ; f < MAX_MODS; f++)
						{
							SetPVarInt(playerid, "unMod", 1);
							RemoveVehicleComponent(PlayerVehicleInfo[playerid][d][pvId], GetVehicleComponentInSlot(PlayerVehicleInfo[playerid][d][pvId], f));
							PlayerVehicleInfo[playerid][d][pvMods][f] = 0;
						}
						SendClientMessage(playerid, COLOR_WHITE, "Aracndaki tm modifikasyonlar silindi.");
						return 1;
					}
					SetPVarInt(playerid, "unMod", 1);
     				RemoveVehicleComponent(GetPlayerVehicleID(playerid), partID);
     				PlayerVehicleInfo[playerid][d][pvMods][GetVehicleComponentType(partID)] = 0;
     				SendClientMessage(playerid, COLOR_WHITE, "stediin modifikasyon silindi.");
     				return 1;
				}
        	}
		}
	}
	else if(dialogid == DIALOG_CDLOCKBUY)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetPlayerVehicleCount(playerid) != 0)
				{
				    if(PlayerInfo[playerid][pCash] < 100)
			        {
                        SendClientMessage(playerid, COLOR_GRAD2, " Yeterli paran yok!");
                        return 1;
					}
					SetPVarInt(playerid, "lockmenu", 1);
                    for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	                {
					     if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					     {
		                     format(string, sizeof(string), "Ara %d | sim: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
		                     SendClientMessage(playerid, COLOR_WHITE, string);
					     }
				    }
				    ShowPlayerDialogEx(playerid, DIALOG_CDLOCKMENU, DIALOG_STYLE_INPUT, "24-7;", "Sistemi kuracan bir ara se:", "Se", "Iptal");

				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Hibir aracn yok, bu sistemi nerede kullanacaksn?");
					return 1;
				}
			}
			if(listitem == 1)
			{
				if(GetPlayerVehicleCount(playerid) != 0)
				{
				    if(PlayerInfo[playerid][pCash] < 200)
			        {
                        SendClientMessage(playerid, COLOR_GRAD2, " Yeterli paran yok!");
                        return 1;
					}
					SetPVarInt(playerid, "lockmenu", 2);
				    for(new i=0; i<MAX_PLAYERVEHICLES; i++)
	                {
					     if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID)
					     {
		                     format(string, sizeof(string), "Ara %d | sim: %s.",i+1,GetVehicleName(PlayerVehicleInfo[playerid][i][pvId]));
		                     SendClientMessage(playerid, COLOR_WHITE, string);
					     }
				    }
				    ShowPlayerDialogEx(playerid, DIALOG_CDLOCKMENU, DIALOG_STYLE_INPUT, "24-7;", "Sistemi kuracan bir ara se:", "Se", "Iptal");
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Hibir aracn yok, bu sistemi nerede kullanacaksn?");
					return 1;
				}
			}
		}
	}
	if(dialogid == DIALOG_CDLOCKMENU)
	{
		if(response) {
			if(GetPVarInt(playerid, "lockmenu") == 1) {
	            new pvid;
	            if(IsNumeric(inputtext)) {
					pvid = strval(inputtext)-1;
				    if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
				    {
					    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu slotta herhangi bir aracn yok.");
					    SetPVarInt(playerid, "lockmenu", 0);
					    return 1;
				    }
				    if(PlayerVehicleInfo[playerid][pvid][pvLock] == 1)
				    {
					    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu arata zaten bir kilit sistemi mevcut.");
					    SetPVarInt(playerid, "lockmenu", 0);
					    return 1;
				    }
				    format(string, sizeof(string), "Alarm Kilidi satn aldn.");
				    SendClientMessage(playerid, COLOR_GRAD4, string);
				    SendClientMessage(playerid, COLOR_YELLOW,"IPUCU: Aracn kilitlemek iin /kilit komutunu kullanabilirsin.");
				    PlayerInfo[playerid][pCash] -= 100;
				    PlayerVehicleInfo[playerid][pvid][pvLock] = 1;
				    SetPVarInt(playerid, "lockmenu", 0);
			    }
			}
			else if(GetPVarInt(playerid, "lockmenu") == 2)
			{
			    new pvid;
	            if(IsNumeric(inputtext))
		        {
	                pvid = strval(inputtext)-1;
				    if(PlayerVehicleInfo[playerid][pvid][pvId] == INVALID_PLAYER_VEHICLE_ID)
				    {
					    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu slotta herhangi bir aracn yok.");
					    SetPVarInt(playerid, "lockmenu", 0);
		                return 1;
				    }
				    if(PlayerVehicleInfo[playerid][pvid][pvLock] == 2)
			  	    {
					    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu arata zaten bir kilit sistemi mevcut.");
					    SetPVarInt(playerid, "lockmenu", 0);
					    return 1;
				    }
				    format(string, sizeof(string), "Endstriyel kilit satn aldn!");
				    SendClientMessage(playerid, COLOR_GRAD4, string);
				    SendClientMessage(playerid, COLOR_YELLOW,"IPUCU: Aracn kilitlemek iin /kilit komutunu kullanabilirsin.");
					PlayerInfo[playerid][pCash] -= 200;
				    PlayerVehicleInfo[playerid][pvid][pvLock] = 2;
				    SetPVarInt(playerid, "lockmenu", 0);
			    }
			}
		}
	}
	else if(dialogid == DIALOG_CDGLOCKBUY)
	{
		if(response)
		{
			if(listitem == 0)
			{
				if(GetGangVehicleCount(PlayerInfo[playerid][pGang]) != 0)
				{
				    if(PlayerInfo[playerid][pCash] < 1000)
			        {
                        SendClientMessage(playerid, COLOR_GRAD2, " Yeterli paran yok!");
                        return 1;
					}
					SetPVarInt(playerid, "lockmenu", 1);
                    for(new i=0; i<MAX_GANG_VEHICLES; i++)
	                {
					     if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvId] != INVALID_VEHICLE_ID)
					     {
		                     format(string, sizeof(string), "Ara %d | sim: %s.",i+1,GetVehicleName(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvId]));
		                     SendClientMessage(playerid, COLOR_WHITE, string);
					     }
				    }
				    ShowPlayerDialogEx(playerid, DIALOG_CDGLOCKMENU, DIALOG_STYLE_INPUT, "24-7;", "Sistemi kuracan bir ara se:", "Se", "Iptal");

				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Hibir aracn yok, bu sistemi nerede kullanacaksn?");
					return 1;
				}
			}
			if(listitem == 1)
			{
				if(GetGangVehicleCount(PlayerInfo[playerid][pGang]) != 0)
				{
				    if(PlayerInfo[playerid][pCash] < 5000)
           			{
                        SendClientMessage(playerid, COLOR_GRAD2, " Yeterli paran yok!");
                        return 1;
					}
					SetPVarInt(playerid, "lockmenu", 2);
				    for(new i=0; i<MAX_GANG_VEHICLES; i++)
	                {
					     if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvId] != INVALID_VEHICLE_ID)
					     {
		                     format(string, sizeof(string), "Ara %d | sim: %s.",i+1,GetVehicleName(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][i][fvId]));
		                     SendClientMessage(playerid, COLOR_WHITE, string);
					     }
				    }
				    ShowPlayerDialogEx(playerid, DIALOG_CDGLOCKMENU, DIALOG_STYLE_INPUT, "24-7;", "Sistemi kuracan bir ara se:", "Se", "Iptal");
				}
				else
				{
					SendClientMessage(playerid, COLOR_WHITE, "Hibir aracn yok, bu sistemi nerede kullanacaksn?");
					return 1;
				}
			}
		}
	}
	if(dialogid == DIALOG_CDGLOCKMENU)
	{
		if(response)
		{
		if(GetPVarInt(playerid, "lockmenu") == 1)
		{
            new fvid;
            if(IsNumeric(inputtext))
	        {
				fvid = strval(inputtext)-1;
			    if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][fvid][fvId] == INVALID_VEHICLE_ID)
			    {
				    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu slotta herhangi bir aracn yok.");
				    SetPVarInt(playerid, "lockmenu", 0);
				    return 1;
			    }
			    if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][fvid][fvLock] == 1)
			    {
				    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu arata zaten bir kilit sistemi mevcut.");
				    SetPVarInt(playerid, "lockmenu", 0);
				    return 1;
			    }
			    format(string, sizeof(string), "Alarm Kilidi satn aldn.");
			    SendClientMessage(playerid, COLOR_GRAD4, string);
			    SendClientMessage(playerid, COLOR_YELLOW,"IPUCU: Artk birlik aralarnn kilidini amak iin /gkilit komutunu kullanabilirsin.");
			    PlayerInfo[playerid][pCash] -= 1000;
			    FamilyVehicleInfo[PlayerInfo[playerid][pGang]][fvid][fvLock] = 1;
			    SetPVarInt(playerid, "lockmenu", 0);
		    }
		}
		else if(GetPVarInt(playerid, "lockmenu") == 2)
		{
		    new fvid;
            if(IsNumeric(inputtext))
	        {
                fvid = strval(inputtext)-1;
			    if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][fvid][fvId] == 0)
			    {
				    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu slotta herhangi bir aracn yok.");
				    SetPVarInt(playerid, "lockmenu", 0);
	                return 1;
			    }
			    if(FamilyVehicleInfo[PlayerInfo[playerid][pGang]][fvid][fvLock] == 2)
		  	    {
				    SendClientMessage(playerid, COLOR_GRAD4, "Hata: Bu arata zaten bir kilit sistemi mevcut.");
				    SetPVarInt(playerid, "lockmenu", 0);
				    return 1;
			    }
			    format(string, sizeof(string), "Endstriyel kilit satn aldn!");
			    SendClientMessage(playerid, COLOR_GRAD4, string);
			    SendClientMessage(playerid, COLOR_YELLOW,"IPUCU: Artk birlik aralarnn kilidini amak iin /gkilit komutunu kullanabilirsin.");
			    PlayerInfo[playerid][pCash] -= 5000;
			    FamilyVehicleInfo[PlayerInfo[playerid][pGang]][fvid][fvLock] = 2;
			    SetPVarInt(playerid, "lockmenu", 0);
		    }
		}
		}
	}
	else if(dialogid == DOORLOCK)
	{
		if(response == 1)
		{
		    new i = GetPVarInt(playerid, "Door");
		    if(isnull(inputtext))
		    {
		        SendClientMessage(playerid, COLOR_GREY, "Herhangi birey girmedin.");
		        return 1;
		    }
		    if(strlen(inputtext) > 24)
		    {
		        SendClientMessage(playerid, COLOR_GREY, "ifre maksimum 24 karakter ierebilir.");
		        return 1;
		    }
		    if(strcmp(inputtext, DDoorsInfo[i][ddPass], true) == 0)
		    {
		        if(DDoorsInfo[i][ddLocked] == 0)
		        {
					DDoorsInfo[i][ddLocked] = 1;
					SendClientMessage(playerid, COLOR_WHITE, "ifre kabul edildi, kaplar kilitlendi.");
		        }
		        else
		        {
		            DDoorsInfo[i][ddLocked] = 0;
		            SendClientMessage(playerid, COLOR_WHITE, "ifre kabul edildi, kaplar ald.");
		        }
			}
			else
			{
			    SendClientMessage(playerid, COLOR_WHITE, "ifre reddedildi.");
			}
		}
		else
		{
		    return 1;
		}
	}
	else if(dialogid == DRINKLISTDIALOG)
	{
	    if(response)
	    {
			switch(listitem)
			{
			    case 0:
			    {
			        SetPVarString(playerid, "DrinkName", "Bira");
			        SetPVarInt(playerid, "DrinkPrice", 60);
			        SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_BEER);
			    }
			    case 1:
			    {
			        SetPVarString(playerid, "DrinkName", "Vodka");
			        SetPVarInt(playerid, "DrinkPrice", 100);
			        SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_WINE);
			    }
			    case 2:
			    {
			        SetPVarString(playerid, "DrinkName", "Viski");
			        SetPVarInt(playerid, "DrinkPrice", 100);
			        SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_WINE);
			    }
			    case 3:
			    {
			        SetPVarString(playerid, "DrinkName", "Su");
			        SetPVarInt(playerid, "DrinkPrice", 20);
			        SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_SPRUNK);
			    }
			    case 4:
			    {
			        SetPVarString(playerid, "DrinkName", "Soda");
			        SetPVarInt(playerid, "DrinkPrice", 20);
			        SetPVarInt(playerid, "DrinkSpecialAction", SPECIAL_ACTION_DRINK_SPRUNK);
			    }
			}
			if(GetPlayerCash(playerid) >= GetPVarInt(playerid, "DrinkPrice"))
			{
			    new drinkname[32];
				GetPVarString(playerid, "DrinkName", drinkname, sizeof(drinkname));
			    new drinkprice = GetPVarInt(playerid, "DrinkPrice");
				new dspecialaction = GetPVarInt(playerid, "DrinkSpecialAction");
			    format(string, sizeof(string), "Barmenden $%d'a %s istedin. Barmene bahi vermek ister misin?", drinkprice, drinkname);
			    ShowPlayerDialogEx(playerid, DRINKDIALOG, DIALOG_STYLE_MSGBOX, "ki Satnal", string, "evet", "hayir");
			    format(string, sizeof(string), "Barmen %s, %s adl kiiye bir %s hazirlar ve verir.", GetPlayerNameEx(DrinkOffer[playerid]), GetPlayerNameEx(playerid), drinkname);
				ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "%s adl kiiye %s verdin. Onlarda sana paray uzatt. ($%d)", GetPlayerNameEx(playerid), drinkname, drinkprice);
				SendClientMessage(DrinkOffer[playerid], COLOR_LIGHTBLUE, string);
				GivePlayerCash(DrinkOffer[playerid], drinkprice);
				GivePlayerCash(playerid, -drinkprice);
				SetPlayerSpecialAction(playerid, dspecialaction);
				SetPVarInt(playerid, "DrinkCooledDown", 1);

				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(DrinkOffer[playerid], ipex, sizeof(ipex));
				DrinkWarn[playerid][DrinkOffer[playerid]] += drinkprice;
				if(DrinkWarn[playerid][DrinkOffer[playerid]] >= 2500 && (PlayerInfo[DrinkOffer[playerid]][pLevel] <= 3 || PlayerInfo[DrinkOffer[playerid]][pLevel] <= 3))
				{
					format(string, sizeof(string), "%s (IP:%s), %s (IP:%s) adl barmene $%d bahi verdi.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(DrinkOffer[playerid]), ipex, DrinkWarn[playerid][DrinkOffer[playerid]]);
					ABroadCast(COLOR_YELLOW, string, 1);
				}
			}
			else
			{
			    SendClientMessage(playerid, COLOR_LIGHTBLUE, "* You don't have enough money for this drink!");
			}
	    }
	    else
	    {
	        DrinkOffer[playerid] = INVALID_PLAYER_ID;
	    }
	}
	else if(dialogid == DRINKDIALOG)
	{
	    if(response)
	    {
			ShowPlayerDialogEx(playerid, TIPDIALOG, DIALOG_STYLE_INPUT, "Barmene Bahi Vermek", "Barmene servisinden dolay ne kadarlk bir  bahi vermek istiyorsun?", "Tamam", "Iptal");
		}
		else
		{
		    DrinkOffer[playerid] = INVALID_PLAYER_ID;
		}
	}
	else if(dialogid == TIPDIALOG)
	{
	    if(response)
	    {
			if(GetPlayerCash(playerid) >= strval(inputtext))
			{
			    if(strval(inputtext) < 0 || strval(inputtext) > 1000)
			    {
			    	return ShowPlayerDialogEx(playerid, TIPDIALOG, DIALOG_STYLE_INPUT, "Barmene Bahi Vermek", "Bahiiniz $0 ile $1000 aras olmaldr.\nBarmene servisi iin ne kadarlk bir bahi vermek istiyorsunuz?", "Tamam", "Iptal");
			    }
			    format(string, sizeof(string), "%s, %s adl barmene servisinden dolay bahi verdi.", GetPlayerNameEx(playerid), GetPlayerNameEx(DrinkOffer[playerid]));
				ProxDetector(15.0, playerid, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				format(string, sizeof(string), "%s adl kii sana servisinden dolay $%d bahi verdi.", GetPlayerNameEx(playerid), strval(inputtext));
				SendClientMessage(DrinkOffer[playerid], COLOR_LIGHTBLUE, string);
				GivePlayerCash(DrinkOffer[playerid], strval(inputtext));
				GivePlayerCash(playerid, -strval(inputtext));

				new ip[32], ipex[32];
				GetPlayerIp(playerid, ip, sizeof(ip));
				GetPlayerIp(DrinkOffer[playerid], ipex, sizeof(ipex));
				DrinkWarn[playerid][DrinkOffer[playerid]] += strval(inputtext);
				if(DrinkWarn[playerid][DrinkOffer[playerid]] >= 2500 && (PlayerInfo[DrinkOffer[playerid]][pLevel] <= 3 || PlayerInfo[playerid][pLevel] <= 3))
				{
					format(string, sizeof(string), "%s (IP:%s), %s (IP:%s) adl barmene $%d bahi verdi.", GetPlayerNameEx(playerid), ip, GetPlayerNameEx(DrinkOffer[playerid]), ipex, DrinkWarn[playerid][DrinkOffer[playerid]]);
					ABroadCast(COLOR_YELLOW, string, 1);
				}

				DrinkOffer[playerid] = INVALID_PLAYER_ID;
			}
		}
		else
		{
		    DrinkOffer[playerid] = INVALID_PLAYER_ID;
		}
	}
	return 1;
}

//------------------------------------------------------------------------------
//PLAYER OWNED VEHICLES SYSTEM
//------------------------------------------------------------------------------

LockPlayerVehicle(ownerid, carid, type)
{
	new v = GetPlayerVehicle(ownerid, carid);
	if(PlayerVehicleInfo[ownerid][v][pvId] == carid && type == 2)
	{
	    LockStatus[carid] = 1;
	    vehicle_lock_doors(carid);
	}
}

UnLockPlayerVehicle(ownerid, carid, type)
{
	new v = GetPlayerVehicle(ownerid, carid);
	if(PlayerVehicleInfo[ownerid][v][pvId] == carid && type == 2)
	{
	    LockStatus[carid] = 0;
		vehicle_unlock_doors(carid);
	}
}

forward DisableVehicleAlarm(vehicleid);
public DisableVehicleAlarm(vehicleid)
{
 	GetVehicleParamsEx(vehicleid,engine,lights,alarm,doors,bonnet,boot,objective);
    SetVehicleParamsEx(vehicleid,engine,lights,VEHICLE_PARAMS_OFF,doors,bonnet,boot,objective);
	return 1;
}

forward ReleasePlayer(playerid);
public ReleasePlayer(playerid)
{
	SetPVarInt(playerid, "IsFrozen", 0);
	TogglePlayerControllable(playerid,1);
}

stock CreatePlayerVehicle(playerid, playervehicleid, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, price) {
	if(PlayerVehicleInfo[playerid][playervehicleid][pvId] == INVALID_PLAYER_VEHICLE_ID) {
 		VehicleSpawned[playerid]++;

	    PlayerCars++;

		PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = modelid;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = x;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = y;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = z;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = angle;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = color1;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = color2;
		PlayerVehicleInfo[playerid][playervehicleid][pvPark] = 1;
		PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = price;
		PlayerVehicleInfo[playerid][playervehicleid][pvFuel] = 100.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] = 0;

		for(new m = 0; m < MAX_MODS; m++)
	    	PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = 0;

		new
			carcreated = CreateVehicle(modelid, x, y, z, angle, color1, color2, -1);

		LockStatus[carcreated] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
		PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 1;
		SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvNumberPlate]);

		new
		    szQuery[300];
		format(szQuery, sizeof(szQuery), "INSERT INTO playervehicles (Owner, PosX, PosY, PosZ, PosAngle, ModelID, Color1, Color2, Price, Spawned) VALUES(%d, '%f', '%f', '%f', '%f', %d, %d, %d, %d, 1)", PlayerInfo[playerid][pID], x, y, z, angle, modelid, color1, color2, price);
		mysql_query(szQuery);
		PlayerVehicleInfo[playerid][playervehicleid][pvRealID] = mysql_insert_id();
		return carcreated;
	}
	return INVALID_PLAYER_VEHICLE_ID;
}

stock DestroyPlayerVehicle(playerid, playervehicleid) {
	if(PlayerVehicleInfo[playerid][playervehicleid][pvModelId]) {
	    new
	        szQuery[50];

		format(szQuery, sizeof(szQuery), "DELETE FROM playervehicles WHERE ID = %d", PlayerVehicleInfo[playerid][playervehicleid][pvRealID]);
		mysql_query(szQuery, THREAD_NO_RESULT, 0, g_MySQLConnections[0]);

	    VehicleSpawned[playerid]--;

	    PlayerCars--;

		DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		VehicleRadioStation[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvModelId] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = 0.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] = -1;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor1] = 126;
		PlayerVehicleInfo[playerid][playervehicleid][pvColor2] = 126;
		PlayerVehicleInfo[playerid][playervehicleid][pvPrice] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvFuel] = 100.0;
		PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] = 0;
		PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] = 0;
		LockStatus[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 0;
	    PlayerVehicleInfo[playerid][playervehicleid][pvId] = INVALID_PLAYER_VEHICLE_ID;

	    if(PlayerVehicleInfo[playerid][playervehicleid][pvAllowedplayerid] != INVALID_PLAYER_ID) {
	        PlayerInfo[PlayerVehicleInfo[playerid][playervehicleid][pvAllowedplayerid]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
	        PlayerInfo[PlayerVehicleInfo[playerid][playervehicleid][pvAllowedplayerid]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
	    	PlayerVehicleInfo[playerid][playervehicleid][pvAllowedplayerid] = INVALID_PLAYER_ID;
		}

		PlayerVehicleInfo[playerid][playervehicleid][pvRealID] = 0;
	}
}

stock LoadPlayerVehicles(playerid) {
	switch(PlayerInfo[playerid][pDonator]) {
		case 0: {
			PlayerVehicleInfo[playerid][0][pvDisabled] = 0;
			PlayerVehicleInfo[playerid][1][pvDisabled] = 0;
			PlayerVehicleInfo[playerid][2][pvDisabled] = 0;
			PlayerVehicleInfo[playerid][3][pvDisabled] = 0;
			PlayerVehicleInfo[playerid][4][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][5][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][6][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][7][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][8][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][9][pvDisabled] = 1;
		}
		case 1: {
            PlayerVehicleInfo[playerid][0][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][1][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][2][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][3][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][4][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][5][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][6][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][7][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][8][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][9][pvDisabled] = 1;
		}
		case 2: {
            PlayerVehicleInfo[playerid][0][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][1][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][2][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][3][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][4][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][5][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][6][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][7][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][8][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][9][pvDisabled] = 1;
        }
		case 3: {
            PlayerVehicleInfo[playerid][0][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][1][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][2][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][3][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][4][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][5][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][6][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][7][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][8][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][9][pvDisabled] = 0;
        }
        default: {
        	PlayerVehicleInfo[playerid][0][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][1][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][2][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][3][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][4][pvDisabled] = 0;
            PlayerVehicleInfo[playerid][5][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][6][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][7][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][8][pvDisabled] = 1;
            PlayerVehicleInfo[playerid][9][pvDisabled] = 1;
        }
	}
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++) {
        if(vehicleCountCheck(playerid)) {
			if(PlayerVehicleInfo[playerid][v][pvModelId] != 0 && PlayerVehicleInfo[playerid][v][pvImpounded] == 0 && PlayerVehicleInfo[playerid][v][pvSpawned] == 1) {

				PlayerCars++;
				VehicleSpawned[playerid]++;
				new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][v][pvModelId], PlayerVehicleInfo[playerid][v][pvPosX], PlayerVehicleInfo[playerid][v][pvPosY], PlayerVehicleInfo[playerid][v][pvPosZ], PlayerVehicleInfo[playerid][v][pvPosAngle],PlayerVehicleInfo[playerid][v][pvColor1], PlayerVehicleInfo[playerid][v][pvColor2], -1);
				PlayerVehicleInfo[playerid][v][pvId] = carcreated;
				//VehicleFuel[carcreated] = PlayerVehicleInfo[playerid][v][pvFuel];

				if(PlayerVehicleInfo[playerid][v][pvLocked]) {
					LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][v][pvId], PlayerVehicleInfo[playerid][v][pvLock]);
				}

				if(strlen(PlayerVehicleInfo[playerid][v][pvNumberPlate]) > 0)
					SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][v][pvNumberPlate]);

				LoadPlayerVehicleMods(playerid, v);
			}
			else if(PlayerVehicleInfo[playerid][v][pvModelId] == 0 && PlayerVehicleInfo[playerid][v][pvImpounded] != 0) {
				PlayerVehicleInfo[playerid][v][pvImpounded] = 0;
			}
			else if(PlayerVehicleInfo[playerid][v][pvModelId] == 0 && PlayerVehicleInfo[playerid][v][pvSpawned] != 0) {
				PlayerVehicleInfo[playerid][v][pvSpawned] = 0;
			}
        }
		else PlayerVehicleInfo[playerid][v][pvSpawned] = 0;
    }
    return 1;
}

vehicleCountCheck(playerid) {
	switch(PlayerInfo[playerid][pDonator]) {
		case 0, 1: if(VehicleSpawned[playerid] >= 1) return 0;
		case 2: if(VehicleSpawned[playerid] >= 2) return 0;
		case 3: if(VehicleSpawned[playerid] >= 3) return 0;
		case 4, 5: if(VehicleSpawned[playerid] >= 5) return 0;
		default: return 0;
	}
	return 1;
}

stock UnloadPlayerVehicles(playerid)
{
    new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        if(PlayerVehicleInfo[playerid][v][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][v][pvImpounded] == 0)
        {
            PlayerVehicleInfo[playerid][v][pvSpawned] = 0;
			VehicleSpawned[playerid]--;
            PlayerCars--;
            if(LockStatus[PlayerVehicleInfo[playerid][v][pvId]] != 0) LockStatus[PlayerVehicleInfo[playerid][v][pvId]] = 0;
            UpdatePlayerVehicleMods(playerid, v);
			DestroyVehicle(PlayerVehicleInfo[playerid][v][pvId]);
			VehicleRadioStation[PlayerVehicleInfo[playerid][v][pvId]] = 0;
			PlayerVehicleInfo[playerid][v][pvId] = INVALID_PLAYER_VEHICLE_ID;
			if(PlayerVehicleInfo[playerid][v][pvAllowedplayerid] != INVALID_PLAYER_ID)
	    	{
	    	    PlayerInfo[PlayerVehicleInfo[playerid][v][pvAllowedplayerid]][pVehicleKeys] = INVALID_PLAYER_VEHICLE_ID;
	    	    PlayerInfo[PlayerVehicleInfo[playerid][v][pvAllowedplayerid]][pVehicleKeysFrom] = INVALID_PLAYER_ID;
	    		PlayerVehicleInfo[playerid][v][pvAllowedplayerid] = INVALID_PLAYER_ID;
			}
        }
    }
}

stock UpdatePlayerVehicleParkPosition(playerid, playervehicleid, Float:newx, Float:newy, Float:newz, Float:newangle, Float:health)
{
    new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
	if(PlayerVehicleInfo[playerid][playervehicleid][pvId] != INVALID_PLAYER_VEHICLE_ID)
	{
		 new Float:oldx, Float:oldy, Float:oldz;
		 oldx = PlayerVehicleInfo[playerid][playervehicleid][pvPosX];
		 oldy = PlayerVehicleInfo[playerid][playervehicleid][pvPosY];
		 oldz = PlayerVehicleInfo[playerid][playervehicleid][pvPosZ];
		 if(oldx == newx && oldy == newy && oldz == newz) return 0;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosX] = newx;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosY] = newy;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosZ] = newz;
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle] = newangle;
		 //oldfuel = VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]];
		 //VehicleFuel[PlayerVehicleInfo[playerid][playervehicleid][pvId]] = 100.0;
		 UpdatePlayerVehicleMods(playerid, playervehicleid);
		 DestroyVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvId]);
		 new carcreated = CreateVehicle(PlayerVehicleInfo[playerid][playervehicleid][pvModelId], PlayerVehicleInfo[playerid][playervehicleid][pvPosX], PlayerVehicleInfo[playerid][playervehicleid][pvPosY], PlayerVehicleInfo[playerid][playervehicleid][pvPosZ],
		 PlayerVehicleInfo[playerid][playervehicleid][pvPosAngle],PlayerVehicleInfo[playerid][playervehicleid][pvColor1], PlayerVehicleInfo[playerid][playervehicleid][pvColor2], -1);
         PlayerVehicleInfo[playerid][playervehicleid][pvId] = carcreated;
         //VehicleFuel[carcreated] = oldfuel;
         SetVehicleNumberPlate(carcreated, PlayerVehicleInfo[playerid][playervehicleid][pvNumberPlate]);
         SetVehicleHealth(carcreated, health);
		 if(PlayerVehicleInfo[playerid][playervehicleid][pvLocked] == 1) LockPlayerVehicle(playerid, PlayerVehicleInfo[playerid][playervehicleid][pvId], PlayerVehicleInfo[playerid][playervehicleid][pvLock]);
         LoadPlayerVehicleMods(playerid, playervehicleid);
         return 1;
	}
	return 0;
}

stock UpdatePlayerVehicleMods(playerid, playervehicleid)
{
	if(PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] == 0 || PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] == 1) {
		new playername[MAX_PLAYER_NAME];
		GetPlayerName(playerid, playername, sizeof(playername));
		new carid = PlayerVehicleInfo[playerid][playervehicleid][pvId];
		new exhaust, frontbumper, rearbumper, roof, spoilers, sideskirt1,
			sideskirt2, wheels, hydraulics, nitro, hood, lamps, stereo, ventright, ventleft;
		exhaust = GetVehicleComponentInSlot(carid, CARMODTYPE_EXHAUST);
		frontbumper = GetVehicleComponentInSlot(carid, CARMODTYPE_FRONT_BUMPER);
		rearbumper = GetVehicleComponentInSlot(carid, CARMODTYPE_REAR_BUMPER);
		roof = GetVehicleComponentInSlot(carid, CARMODTYPE_ROOF);
		spoilers = GetVehicleComponentInSlot(carid, CARMODTYPE_SPOILER);
		sideskirt1 = GetVehicleComponentInSlot(carid, CARMODTYPE_SIDESKIRT);
		sideskirt2 = GetVehicleComponentInSlot(carid, CARMODTYPE_SIDESKIRT);
		wheels = GetVehicleComponentInSlot(carid, CARMODTYPE_WHEELS);
		hydraulics = GetVehicleComponentInSlot(carid, CARMODTYPE_HYDRAULICS);
		nitro = GetVehicleComponentInSlot(carid, CARMODTYPE_NITRO);
		hood = GetVehicleComponentInSlot(carid, CARMODTYPE_HOOD);
		lamps = GetVehicleComponentInSlot(carid, CARMODTYPE_LAMPS);
		stereo = GetVehicleComponentInSlot(carid, CARMODTYPE_STEREO);
		ventright = GetVehicleComponentInSlot(carid, CARMODTYPE_VENT_RIGHT);
		ventleft = GetVehicleComponentInSlot(carid, CARMODTYPE_VENT_LEFT);
		if(spoilers >= 1000)    PlayerVehicleInfo[playerid][playervehicleid][pvMods][0] = spoilers;
		if(hood >= 1000)        PlayerVehicleInfo[playerid][playervehicleid][pvMods][1] = hood;
		if(roof >= 1000)        PlayerVehicleInfo[playerid][playervehicleid][pvMods][2] = roof;
		if(sideskirt1 >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][3] = sideskirt1;
		if(lamps >= 1000)       PlayerVehicleInfo[playerid][playervehicleid][pvMods][4] = lamps;
		if(nitro >= 1000)       PlayerVehicleInfo[playerid][playervehicleid][pvMods][5] = nitro;
		if(exhaust >= 1000)     PlayerVehicleInfo[playerid][playervehicleid][pvMods][6] = exhaust;
		if(wheels >= 1000)      PlayerVehicleInfo[playerid][playervehicleid][pvMods][7] = wheels;
		if(stereo >= 1000)      PlayerVehicleInfo[playerid][playervehicleid][pvMods][8] = stereo;
		if(hydraulics >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][9] = hydraulics;
		if(frontbumper >= 1000) PlayerVehicleInfo[playerid][playervehicleid][pvMods][10] = frontbumper;
		if(rearbumper >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][11] = rearbumper;
		if(ventright >= 1000)   PlayerVehicleInfo[playerid][playervehicleid][pvMods][12] = ventright;
		if(ventleft >= 1000)    PlayerVehicleInfo[playerid][playervehicleid][pvMods][13] = ventleft;
		if(sideskirt2 >= 1000)  PlayerVehicleInfo[playerid][playervehicleid][pvMods][14] = sideskirt2;
	}
}

stock LoadPlayerVehicleMods(playerid, playervehicleid)
{
	if(PlayerVehicleInfo[playerid][playervehicleid][pvImpounded] == 0 || PlayerVehicleInfo[playerid][playervehicleid][pvSpawned] == 1) {
		//printf(" Loading player #%d vehicle #%d mods.", playerid, playervehicleid);

		new paintjob = PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob];
		new color1 = PlayerVehicleInfo[playerid][playervehicleid][pvColor1];
		new color2 = PlayerVehicleInfo[playerid][playervehicleid][pvColor2];
		if(PlayerVehicleInfo[playerid][playervehicleid][pvPaintJob] != -1)
		{
			 ChangeVehiclePaintjob(PlayerVehicleInfo[playerid][playervehicleid][pvId], paintjob);
			 ChangeVehicleColor(PlayerVehicleInfo[playerid][playervehicleid][pvId], color1, color2);
		}
		for(new m = 0; m < MAX_MODS; m++)
		{
		    if(PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] >= 1000  && PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] <= 1193)
		    {
				if(InvalidModCheck(GetVehicleModel(PlayerVehicleInfo[playerid][playervehicleid][pvId]),PlayerVehicleInfo[playerid][playervehicleid][pvMods][m]))
				{
					AddVehicleComponent(PlayerVehicleInfo[playerid][playervehicleid][pvId], PlayerVehicleInfo[playerid][playervehicleid][pvMods][m]);
				}
				else
				{
				    //printf("Removing invalid mod %d from %d of %s", PlayerVehicleInfo[playerid][playervehicleid][pvMods][m], GetVehicleModel(PlayerVehicleInfo[playerid][playervehicleid][pvId]), GetPlayerNameEx(playerid));
				    PlayerVehicleInfo[playerid][playervehicleid][pvMods][m] = 0;
				}
			}
		}
	}
}

stock GetPlayerFreeVehicleId(playerid) {
	for(new i; i < MAX_PLAYERVEHICLES; ++i) {
		if(PlayerVehicleInfo[playerid][i][pvModelId] == 0) return i;
	}
	return -1;
}

GetPlayerVehicleCount(playerid)
{
	new cars = 0;
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++) {
	    if(PlayerVehicleInfo[playerid][i][pvRealID] > 0) {
	        if(PlayerVehicleInfo[playerid][i][pvId] != INVALID_PLAYER_VEHICLE_ID && PlayerVehicleInfo[playerid][i][pvImpounded] == 0) {
				if(CheckPlayerVehicleForDesync(playerid, PlayerVehicleInfo[playerid][i][pvId])) return 0;
				cars++;
			}
	    }
	}
	return cars;
}

stock GetPlayerVehicleCountEx(playerid)
{
	new cars;
	for(new i = 0; i < MAX_PLAYERVEHICLES; i++) {
	    if(PlayerVehicleInfo[playerid][i][pvRealID] > 0) cars++;
	}
	return cars;
}

CheckPlayerVehicleForDesync(playerid, vehicleid)
{
	if(GetVehicleModel(vehicleid) < 400 || GetVehicleModel(vehicleid) > 611)
	{
	    //SendClientMessage(playerid, COLOR_WHITE, "A problem with your vehicles has been detected.");
	    UnloadPlayerVehicles(playerid);
	    LoadPlayerVehicles(playerid);
	    //SendClientMessage(playerid, COLOR_WHITE, "This problem has now been resolved.");
	    return 1;
	}
	return 0;
}

stock GetPlayerVehicle(playerid, vehicleid)
{
	if(!IsPlayerConnected(playerid)) return -1;
	if(!GetVehicleModel(vehicleid)) return -1;
    for(new v = 0; v < MAX_PLAYERVEHICLES; v++)
    {
        if(PlayerVehicleInfo[playerid][v][pvId] == vehicleid)
        {
            return v;
        }
    }
    return -1;
}

forward IsAtTruckDeliveryPoint(playerid);
public IsAtTruckDeliveryPoint(playerid)
{
	if(IsPlayerInRangeOfPoint(playerid, 6, 812.287231, -1623.678222, 13.546875) || IsPlayerInRangeOfPoint(playerid, 6, 1204.510375, -920.674499, 43.074016) ||
	IsPlayerInRangeOfPoint(playerid, 6, 2402.169677, -1502.789306, 23.834865) || IsPlayerInRangeOfPoint(playerid, 6, 2110.254394, -1214.892578, 23.485479) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1458.425292, -1140.346069, 23.938444) || IsPlayerInRangeOfPoint(playerid, 6, 500.889678, -1352.339843, 15.463395) ||
	IsPlayerInRangeOfPoint(playerid, 6, 334.012207, -1373.775146, 14.230167) || IsPlayerInRangeOfPoint(playerid, 6, 1317.785522, -870.413818, 39.089378) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1342.577026, -1748.498535, 12.934987) || IsPlayerInRangeOfPoint(playerid, 6, 653.629699, -579.503051, 15.889705) ||
	IsPlayerInRangeOfPoint(playerid, 6, 1634.834716, 757.830017, 10.820312) || IsPlayerInRangeOfPoint(playerid, 6, 2833.109375, 893.754699, 10.757797) ||
	IsPlayerInRangeOfPoint(playerid, 6, -510.522918, -501.250030, 25.523437))
	{ return true; }
	return false;
}

forward CancelTruckDelivery(playerid);
public CancelTruckDelivery(playerid)
{
    new vehicleid = GetPlayerVehicleID(playerid);
	if(GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(IsATruckerCar(vehicleid)) SetVehicleToRespawn(vehicleid);
	}
 	DestroyProgressBar(LoadTruckBar[playerid]);
	LoadTruckBar[playerid] = INVALID_BAR_ID;
	LoadTruckTime[playerid] = 0;
	DeletePVar(playerid, "TruckDeliver");
	TruckContents[TruckUsed[playerid]] = 0;
	TruckUsed[playerid] = INVALID_VEHICLE_ID;
	gPlayerCheckpointStatus[playerid] = CHECKPOINT_NONE;
 	DisablePlayerCheckpoint(playerid);
	return 1;
}

stock InvalidModCheck(model, partid) {
    switch(model) {
		case 430, 446, 452, 453, 454, 472, 473, 484, 493, 595, 573, 556, 557, 539, 471, 432, 406, 444,
		448, 461, 462, 463, 468, 481, 509, 510, 521, 522, 581, 586, 417, 425, 447, 460, 469, 476, 487,
		488, 511, 512, 513, 519, 520, 548, 553, 563, 577, 592, 593: return 0;
		default: switch(GetVehicleComponentType(partid)) {
			case 5: switch(partid) {
				case 1008, 1009, 1010: return 1;
				default: return 0;
			}
			case 7: switch(partid) {
				case 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1096, 1097, 1098, 1025: return 1;
				default: return 0;
			}
			case 8: switch(partid) {
				case 1086: return 1;
				default: return 0;
			}
			case 9: switch(partid) {
				case 1087: return 1;
				default: return 0;
			}
			default: for(new i; i < 4; i++) if(partid == vehicleMods[model - 400][GetVehicleComponentType(partid)][i]) {
				return 1;
			}
		}
	}
	return 0;
}

//------------------------------------------------------------------------------
//arac DEALERSHIP SYSTEM
//------------------------------------------------------------------------------

stock CreateCarDealership(Float: enx, Float: eny, Float: enz, Float: radius, price, message[])
{
	new dealershipid = GetFreeCarDealership();
	if(dealershipid == -1) return -1;
	new text_info[128];
	CarDealershipInfo[dealershipid][cdEntranceX] = enx;
	CarDealershipInfo[dealershipid][cdEntranceY] = eny;
	CarDealershipInfo[dealershipid][cdEntranceZ] = enz;
	CarDealershipInfo[dealershipid][cdRadius] = radius;
	CarDealershipInfo[dealershipid][cdPrice] = price;
	strmid(CarDealershipInfo[dealershipid][cdMessage], message, 0, strlen(message), 255);
	CarDealershipInfo[dealershipid][cdPickupID] = CreatePickup(1272, 1, CarDealershipInfo[dealershipid][cdEntranceX], CarDealershipInfo[dealershipid][cdEntranceY], CarDealershipInfo[dealershipid][cdEntranceZ], -1);
	format(text_info, sizeof(text_info), "% arac bayisi satilik\nUcret: %d\nID: %d", CarDealershipInfo[dealershipid][cdMessage], CarDealershipInfo[dealershipid][cdPrice], dealershipid);
    CarDealershipInfo[dealershipid][cdTextLabel] = CreateDynamic3DTextLabel(text_info,COLOR_YELLOW,CarDealershipInfo[dealershipid][cdEntranceX], CarDealershipInfo[dealershipid][cdEntranceY], CarDealershipInfo[dealershipid][cdEntranceZ]+0.5,3.0,INVALID_PLAYER_ID,INVALID_VEHICLE_ID,1);
    SavecDealerships();
    return dealershipid;
}
stock DestroyCarDealership(dealershipid)
{
	new string[30];
	CarDealershipInfo[dealershipid][cdEntranceX] = 0.0;
	CarDealershipInfo[dealershipid][cdEntranceY] = 0.0;
	CarDealershipInfo[dealershipid][cdEntranceZ] = 0.0;
	CarDealershipInfo[dealershipid][cdRadius] = 0.0;
	CarDealershipInfo[dealershipid][cdTill] = 0;
	CarDealershipInfo[dealershipid][cdOwned] = 0;
	CarDealershipInfo[dealershipid][cdPrice] = 0;
	format(string, sizeof(string), "Yok");
	strmid(CarDealershipInfo[dealershipid][cdOwner], string, 0, strlen(string), 255);
	format(string, sizeof(string), "Yok");
	strmid(CarDealershipInfo[dealershipid][cdMessage], string, 0, strlen(string), 255);
	DestroyDynamic3DTextLabel(CarDealershipInfo[dealershipid][cdTextLabel]);
	DestroyPickup(CarDealershipInfo[dealershipid][cdPickupID]);
	CarDealershipInfo[dealershipid][cdPickupID] = 0;
	CarDealershipInfo[dealershipid][cdTextLabel] = Text3D:INVALID_3DTEXT_ID;
	CarDealershipInfo[dealershipid][cdVehicleSpawn][0] = 0.0;
    CarDealershipInfo[dealershipid][cdVehicleSpawn][1] = 0.0;
    CarDealershipInfo[dealershipid][cdVehicleSpawn][2] = 0.0;
    CarDealershipInfo[dealershipid][cdVehicleSpawn][3] = 0.0;
	for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
	{
		if(CarDealershipInfo[dealershipid][cdVehicleModel][v] != 0)
		{
	        DestroyCarDealershipVehicle(dealershipid, v);
		}
	}
	SavecDealerships();
}
stock GetFreeCarDealership()
{
    new
		i = 0;
	while (i < MAX_CARDEALERSHIPS && CarDealershipInfo[i][cdEntranceX] != 0.0 && CarDealershipInfo[i][cdEntranceY] != 0.0)
	{
		i++;
	}
	if(i == MAX_CARDEALERSHIPS) return -1;
	return i;

}
stock SetPlayerOwnerOfCD(playerid, dealershipid)
{
	new owner[MAX_PLAYER_NAME];
	CarDealershipInfo[dealershipid][cdOwned] = 1;
	GetPlayerName(playerid, owner, sizeof(owner));
	strmid(CarDealershipInfo[dealershipid][cdOwner], owner, 0, strlen(owner), 255);
	new text_info[128];
	format(text_info, sizeof(text_info), "%s arac bayisi\nSahibi: %s\nID: %d", CarDealershipInfo[dealershipid][cdMessage], CarDealershipInfo[dealershipid][cdOwner], dealershipid);
	UpdateDynamic3DTextLabelText(CarDealershipInfo[dealershipid][cdTextLabel], COLOR_LIGHTBLUE, text_info);
	SavecDealerships();
}
stock SellCarDealership(dealershipid)
{
	CarDealershipInfo[dealershipid][cdOwned] = 0;
	CarDealershipInfo[dealershipid][cdVehicleSpawn][0] = 0.0;
	CarDealershipInfo[dealershipid][cdVehicleSpawn][1] = 0.0;
	CarDealershipInfo[dealershipid][cdVehicleSpawn][2] = 0.0;
	CarDealershipInfo[dealershipid][cdVehicleSpawn][3] = 0.0;
	strmid(CarDealershipInfo[dealershipid][cdOwner], "Nobody", 0, MAX_PLAYER_NAME, 255);
	new text_info[128];
	format(text_info, sizeof(text_info), "% arac bayisi satilik\nUcret: %d\nID: %d", CarDealershipInfo[dealershipid][cdMessage], CarDealershipInfo[dealershipid][cdPrice], dealershipid);
	UpdateDynamic3DTextLabelText(CarDealershipInfo[dealershipid][cdTextLabel], COLOR_RED, text_info);
	SavecDealerships();
}
stock IsPlayerOwnerOfCD(playerid)
{
	new owner[MAX_PLAYER_NAME];
	GetPlayerName(playerid, owner, sizeof(owner));
	for(new d = 0; d < MAX_CARDEALERSHIPS; d++)
    {
	    if(strcmp(CarDealershipInfo[d][cdOwner],owner, true) == 0)
	    {
			return d;
		}
	}
	return -1;
}
stock IsPlayerOwnerOfCDEx(playerid, dealershipid)
{
	new owner[MAX_PLAYER_NAME];
	GetPlayerName(playerid, owner, sizeof(owner));
	if(strcmp(CarDealershipInfo[dealershipid][cdOwner],owner, true) == 0)
	{
	    return 1;
	}
	return 0;
}
stock CreateCarDealershipVehicle(dealershipid, modelid, Float: x, Float: y, Float: z, Float: a, price)
{
    new cdvehicleid = GetFreeCarDealershipVehicleId(dealershipid);
    if(cdvehicleid == -1) return -1;
    new text_info[128];
    CarDealershipInfo[dealershipid][cdVehicleModel][cdvehicleid] = modelid;
    CarDealershipInfo[dealershipid][cdVehicleCost][cdvehicleid] = price;
    CarDealershipInfo[dealershipid][cdVehicleSpawnX][cdvehicleid] = x;
    CarDealershipInfo[dealershipid][cdVehicleSpawnY][cdvehicleid] = y;
    CarDealershipInfo[dealershipid][cdVehicleSpawnZ][cdvehicleid] = z;
    CarDealershipInfo[dealershipid][cdVehicleSpawnAngle][cdvehicleid] = a;
    new carcreated = CreateVehicle(modelid, x, y, z, a, 0, 0, 6);
    format(text_info, sizeof(text_info), "%s Satilik | Ucret: %d", GetVehicleName(carcreated), CarDealershipInfo[dealershipid][cdVehicleCost][cdvehicleid]);
    CarDealershipInfo[dealershipid][cdVehicleLabel][cdvehicleid] = CreateDynamic3DTextLabel(text_info,COLOR_LIGHTBLUE,0.0, 0.0, 0.0,5.0,INVALID_PLAYER_ID,carcreated,1);
	CarDealershipInfo[dealershipid][cdVehicleId][cdvehicleid] = carcreated;
	SavecDealerships();
    return cdvehicleid;
}
stock DestroyCarDealershipVehicle(dealershipid, cdvehicleid)
{
    CarDealershipInfo[dealershipid][cdVehicleModel][cdvehicleid] = 0;
    CarDealershipInfo[dealershipid][cdVehicleCost][cdvehicleid] = 0;
    CarDealershipInfo[dealershipid][cdVehicleSpawnX][cdvehicleid] = 0.0;
    CarDealershipInfo[dealershipid][cdVehicleSpawnY][cdvehicleid] = 0.0;
    CarDealershipInfo[dealershipid][cdVehicleSpawnZ][cdvehicleid] = 0.0;
    CarDealershipInfo[dealershipid][cdVehicleSpawnAngle][cdvehicleid] = 0.0;
    DestroyDynamic3DTextLabel(CarDealershipInfo[dealershipid][cdVehicleLabel][cdvehicleid]);
    DestroyVehicle(CarDealershipInfo[dealershipid][cdVehicleId][cdvehicleid]);
    VehicleRadioStation[CarDealershipInfo[dealershipid][cdVehicleId][cdvehicleid]] = 0;
    CarDealershipInfo[dealershipid][cdVehicleLabel][cdvehicleid] = Text3D:INVALID_3DTEXT_ID;
    CarDealershipInfo[dealershipid][cdVehicleId][cdvehicleid] = 0;
}
stock GetFreeCarDealershipVehicleId(dealershipid)
{
    new
		i = 0;
	while (i < MAX_DEALERSHIPVEHICLES && CarDealershipInfo[dealershipid][cdVehicleModel][i] != 0)
	{
		i++;
	}
	if(i == MAX_DEALERSHIPVEHICLES) return -1;
	return i;

}
stock GetCarDealershipVehicleId(vehicleid)
{
    for(new d = 0; d < MAX_CARDEALERSHIPS; d++)
    {
        for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
        {
            if(CarDealershipInfo[d][cdVehicleId][v] == vehicleid)
            {
                return v;
            }
		}
    }
    return -1;
}
stock GetCarDealershipId(vehicleid)
{
    for(new d = 0; d < MAX_CARDEALERSHIPS; d++)
    {
        for(new v = 0; v < MAX_DEALERSHIPVEHICLES; v++)
        {
            if(CarDealershipInfo[d][cdVehicleId][v] == vehicleid)
            {
                return d;
            }
		}
    }
    return -1;
}

//------------------------------------------------------------------------------
//----------------------DYNAMIC GANG VEHICLE SYSTEM-----------------------------
//------------------------------------------------------------------------------

LockGangVehicle(family, carid, type)
{
	new v = GetGangVehicle(family, carid);
	if(FamilyVehicleInfo[family][v][fvId] == carid && type == 2)
	{
	    LockStatus[carid] = 1;
		vehicle_lock_doors(carid);
	}
}

UnLockGangVehicle(family, carid, type)
{
	new v = GetGangVehicle(family, carid);
	if(FamilyVehicleInfo[family][v][fvId] == carid && type == 2)
	{
	    LockStatus[carid] = 0;
		vehicle_unlock_doors(carid);
	}
}

stock CreateGangVehicle(f, fv, modelid, Float: x, Float: y, Float: z, Float: angle, color1, color2, price)
{
	if(FamilyVehicleInfo[f][fv][fvId] == INVALID_VEHICLE_ID)
	{
		FamilyVehicleInfo[f][fv][fvModelId] = modelid;
		FamilyVehicleInfo[f][fv][fvSpawnx] = x;
		FamilyVehicleInfo[f][fv][fvSpawny] = y;
		FamilyVehicleInfo[f][fv][fvSpawnz] = z;
		FamilyVehicleInfo[f][fv][fvSpawna] = angle;
		FamilyVehicleInfo[f][fv][fvColor1] = color1;
		FamilyVehicleInfo[f][fv][fvColor2] = color2;
		FamilyVehicleInfo[f][fv][fvPrice] = price;
		FamilyVehicleInfo[f][fv][fvFuel] = 100.0;
		new carcreated = CreateVehicle(modelid,x,y,z,angle,color1,color2,-1);
		LockStatus[carcreated] = 0;
		FamilyVehicleInfo[f][fv][fvId] = carcreated;
		//printf("Created the gang vehicle for family %d | vehicleid #%d | familyvehicleslot #%d.", f, FamilyVehicleInfo[f][fv][fvId], fv);
		return carcreated;
	}
	return INVALID_VEHICLE_ID;
}

stock DestroyGangVehicle(f, fv)
{
	if(FamilyVehicleInfo[f][fv][fvId] != INVALID_VEHICLE_ID)
	{
		DestroyVehicle(FamilyVehicleInfo[f][fv][fvId]);
		VehicleRadioStation[FamilyVehicleInfo[f][fv][fvId]] = 0;
		FamilyVehicleInfo[f][fv][fvModelId] = 0;
		FamilyVehicleInfo[f][fv][fvSpawnx] = 0.0;
		FamilyVehicleInfo[f][fv][fvSpawny] = 0.0;
		FamilyVehicleInfo[f][fv][fvSpawnz] = 0.0;
		FamilyVehicleInfo[f][fv][fvSpawna] = 0.0;
		FamilyVehicleInfo[f][fv][fvPaintJob] = -1;
		FamilyVehicleInfo[f][fv][fvColor1] = 126;
		FamilyVehicleInfo[f][fv][fvColor2] = 126;
		FamilyVehicleInfo[f][fv][fvPrice] = 0;
		FamilyVehicleInfo[f][fv][fvImpounded] = 0;
		FamilyVehicleInfo[f][fv][fvFuel] = 100.0;
		LockStatus[FamilyVehicleInfo[f][fv][fvId]] = 0;
		//VehicleFuel[FamilyVehicleInfo[f][fv][fvId]] = 100.0;
	    //printf("Family %d vehicle %d(vehicleid %d) has been destroyed.", f,fv,FamilyVehicleInfo[f][fv][fvId]);
	    FamilyVehicleInfo[f][fv][fvId] = INVALID_VEHICLE_ID;
	}
}

stock LoadGangVehicles(f)
{
	//printf(" Loading family %d's vehicles.", f);
	for(new fv = 0; fv < MAX_GANG_VEHICLES; fv++)
    {
        if(FamilyVehicleInfo[f][fv][fvModelId] != 0)
        {
			new carcreated = CreateVehicle(FamilyVehicleInfo[f][fv][fvModelId], FamilyVehicleInfo[f][fv][fvSpawnx], FamilyVehicleInfo[f][fv][fvSpawny], FamilyVehicleInfo[f][fv][fvSpawnz], FamilyVehicleInfo[f][fv][fvSpawna],FamilyVehicleInfo[f][fv][fvColor1], FamilyVehicleInfo[f][fv][fvColor2], -1);
			FamilyVehicleInfo[f][fv][fvId] = carcreated;
			//VehicleFuel[carcreated] = FamilyVehicleInfo[f][fv][fvFuel];
			//if(VehicleFuel[carcreated] == 0) VehicleFuel[carcreated] = 100.0;
			if(FamilyVehicleInfo[f][fv][fvLocked] == 1) LockGangVehicle(f, FamilyVehicleInfo[f][fv][fvId], FamilyVehicleInfo[f][fv][fvLock]);
        }
    }
}

stock UnloadGangVehicles(f)
{
	//printf(" Unloading %s's vehicles.", FamilyInfo[f][FamilyName]);
	for(new fv = 0; fv < MAX_PLAYERVEHICLES; fv++)
    {
        if(FamilyVehicleInfo[f][fv][fvId] != INVALID_VEHICLE_ID)
        {
            if(LockStatus[FamilyVehicleInfo[f][fv][fvId]] != 0) LockStatus[FamilyVehicleInfo[f][fv][fvId]] = 0;
			DestroyVehicle(FamilyVehicleInfo[f][fv][fvId]);
			VehicleRadioStation[FamilyVehicleInfo[f][fv][fvId]] = 0;
			//VehicleFuel[FamilyVehicleInfo[f][fv][fvId]] = 100.0;
			FamilyVehicleInfo[f][fv][fvId] = INVALID_VEHICLE_ID;
        }
    }
}

stock UpdateGangVehicleParkPosition(f, fv, Float:newx, Float:newy, Float:newz, Float:newangle, Float:health, temp = 1)
{
	if(FamilyVehicleInfo[f][fv][fvId] != INVALID_VEHICLE_ID)
	{
	    if(temp == 0)
		{
	 		new Float:oldx, Float:oldy, Float:oldz;
			oldx = FamilyVehicleInfo[f][fv][fvSpawnx];
			oldy = FamilyVehicleInfo[f][fv][fvSpawny];
			oldz = FamilyVehicleInfo[f][fv][fvSpawnz];
			if(oldx == newx && oldy == newy && oldz == newz) return 0;
			FamilyVehicleInfo[f][fv][fvSpawnx] = newx;
			FamilyVehicleInfo[f][fv][fvSpawny] = newy;
			FamilyVehicleInfo[f][fv][fvSpawnz] = newz;
			FamilyVehicleInfo[f][fv][fvSpawna] = newangle;
			DestroyVehicle(FamilyVehicleInfo[f][fv][fvId]);
			new carcreated = CreateVehicle(FamilyVehicleInfo[f][fv][fvModelId], FamilyVehicleInfo[f][fv][fvSpawnx], FamilyVehicleInfo[f][fv][fvSpawny], FamilyVehicleInfo[f][fv][fvSpawnz],
			FamilyVehicleInfo[f][fv][fvSpawna],FamilyVehicleInfo[f][fv][fvColor1], FamilyVehicleInfo[f][fv][fvColor2], -1);
	        FamilyVehicleInfo[f][fv][fvId] = carcreated;
	        SetVehicleHealth(carcreated, health);
	        SaveFamiliesHQ();
        	return 1;
		}
		else
		{
		    new Float:oldx, Float:oldy, Float:oldz;
			oldx = FamilyVehicleInfo[f][fv][fvSpawnxtmp];
			oldy = FamilyVehicleInfo[f][fv][fvSpawnytmp];
			oldz = FamilyVehicleInfo[f][fv][fvSpawnztmp];
			if(oldx == newx && oldy == newy && oldz == newz) return 0;
			FamilyVehicleInfo[f][fv][fvSpawnxtmp] = newx;
			FamilyVehicleInfo[f][fv][fvSpawnytmp] = newy;
			FamilyVehicleInfo[f][fv][fvSpawnztmp] = newz;
			FamilyVehicleInfo[f][fv][fvSpawnatmp] = newangle;
			DestroyVehicle(FamilyVehicleInfo[f][fv][fvId]);
			new carcreated = CreateVehicle(FamilyVehicleInfo[f][fv][fvModelId], FamilyVehicleInfo[f][fv][fvSpawnxtmp], FamilyVehicleInfo[f][fv][fvSpawnytmp], FamilyVehicleInfo[f][fv][fvSpawnztmp],
			FamilyVehicleInfo[f][fv][fvSpawnatmp],FamilyVehicleInfo[f][fv][fvColor1], FamilyVehicleInfo[f][fv][fvColor2], -1);
	        FamilyVehicleInfo[f][fv][fvId] = carcreated;
	        SetVehicleHealth(carcreated, health);
	        SaveFamiliesHQ();
        	return 1;
		}
	}
	return 0;
}

stock GetGangFreeVehicleId(f)
{
    new
		i = 0;
	while (i < MAX_GANG_VEHICLES && FamilyVehicleInfo[f][i][fvId] != INVALID_VEHICLE_ID)
	{
		i++;
	}
	if(i == MAX_GANG_VEHICLES) return -1;
	return i;

}

stock GetGangVehicleCount(f)
{
    new
		i = 0,
		cars = 0;
	while (i < MAX_GANG_VEHICLES && FamilyVehicleInfo[f][i][fvId] != INVALID_VEHICLE_ID)
	{
	    cars++;
		i++;
	}
	return cars;

}

stock GetGangVehicle(f, vehicleid)
{
	if(f == 255) return -1;
	if(vehicleid == -1) return -1;
    for(new v = 0; v < MAX_GANG_VEHICLES; v++)
    {
        if(FamilyVehicleInfo[f][v][fvId] == vehicleid)
        {
            return v;
        }
    }
    return -1;
}

ProxDetector(Float: f_Radius, playerid, string[],col1,col2,col3,col4,col5)
{
    new
        Float: f_playerPos[3];

    GetPlayerPos(playerid, f_playerPos[0], f_playerPos[1], f_playerPos[2]);

    foreach(Player, i) {
        if((InsideShamal[playerid] == GetPlayerVehicleID(i) && GetPlayerState(i) == 2) || (InsideShamal[i] == GetPlayerVehicleID(playerid) && GetPlayerState(playerid) == 2) || (InsideShamal[playerid] != INVALID_VEHICLE_ID && InsideShamal[playerid] == InsideShamal[i])) {
            SendClientMessage(i, col1, string);
        }
        else if(GetPlayerVirtualWorld(i) == GetPlayerVirtualWorld(playerid)) {
            if(IsPlayerInRangeOfPoint(i, f_Radius / 16, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                SendClientMessage(i, col1, string);
            }
            else if(IsPlayerInRangeOfPoint(i, f_Radius / 8, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                SendClientMessage(i, col2, string);
            }
            else if(IsPlayerInRangeOfPoint(i, f_Radius / 4, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                SendClientMessage(i, col3, string);
            }
            else if(IsPlayerInRangeOfPoint(i, f_Radius / 2, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                SendClientMessage(i, col4, string);
            }
            else if(IsPlayerInRangeOfPoint(i, f_Radius, f_playerPos[0], f_playerPos[1], f_playerPos[2])) {
                SendClientMessage(i, col5, string);
            }
        }
    }
    return 1;
}

ProxDetectorS(Float:radi, playerid, targetid) {

	if(Spectating[targetid] != 0 && PlayerInfo[playerid][pAdmin] < 2)
 	{
 		return 0;
 	}

	new
		Float: fp_playerPos[3];

	GetPlayerPos(targetid, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]);

	if(IsPlayerInRangeOfPoint(playerid, radi, fp_playerPos[0], fp_playerPos[1], fp_playerPos[2]) && GetPlayerVirtualWorld(playerid) == GetPlayerVirtualWorld(targetid))
	{
		return 1;
	}
	return 0;
}

IsPlayerInRangeOfVehicle(playerid, vehicleid, Float: radius) {

	new
		Float:Floats[3];

	GetVehiclePos(vehicleid, Floats[0], Floats[1], Floats[2]);
	return IsPlayerInRangeOfPoint(playerid, radius, Floats[0], Floats[1], Floats[2]);
}

forward MoveEMS(playerid);
public MoveEMS(playerid)
{
    new Float:mX, Float:mY, Float:mZ;
    GetPlayerPos(playerid, mX, mY, mZ);

    SetPVarFloat(GetPVarInt(playerid, "MovingStretcher"), "MedicX", mX);
	SetPVarFloat(GetPVarInt(playerid, "MovingStretcher"), "MedicY", mY);
	SetPVarFloat(GetPVarInt(playerid, "MovingStretcher"), "MedicZ", mZ);
	SetPVarInt(GetPVarInt(playerid, "MovingStretcher"), "MedicVW", GetPlayerVirtualWorld(playerid));
	SetPVarInt(GetPVarInt(playerid, "MovingStretcher"), "MedicInt", GetPlayerInterior(playerid));

	Streamer_UpdateEx(GetPVarInt(playerid, "MovingStretcher"), mX, mY, mZ);
	SetPlayerPos(GetPVarInt(playerid, "MovingStretcher"), mX, mY, mZ);
	SetPlayerInterior(GetPVarInt(playerid, "MovingStretcher"), GetPlayerVirtualWorld(playerid));
	SetPlayerVirtualWorld(GetPVarInt(playerid, "MovingStretcher"), GetPlayerVirtualWorld(playerid));

	ClearAnimations(GetPVarInt(playerid, "MovingStretcher"), 1);
	ApplyAnimation(GetPVarInt(playerid, "MovingStretcher"), "SWAT", "gnstwall_injurd", 4.0, 0, 1, 1, 1, 0, 1);

	DeletePVar(GetPVarInt(playerid, "MovingStretcher"), "OnStretcher");
	SetPVarInt(playerid, "MovingStretcher", -1);
}

forward KillEMSQueue(playerid);
public KillEMSQueue(playerid)
{
	if(IsPlayerConnected(GetPVarInt(playerid, "EMSWaiting")) && EMSAccepted[GetPVarInt(playerid, "EMSWaiting")] == playerid) {
		new
			string[126];
		format(string, sizeof(string), "Hastan %, sen onu yetitiremeden ld.!",GetPlayerNameEx(playerid));
		SendClientMessage(GetPVarInt(playerid, "EMSWaiting"), COLOR_LIGHTBLUE, string);
		DisablePlayerCheckpoint(GetPVarInt(playerid, "EMSWaiting"));
		EMSCallTime[GetPVarInt(playerid, "EMSWaiting")] = 0;
		EMSAccepted[GetPVarInt(playerid, "EMSWaiting")] = INVALID_PLAYER_ID;
	}
    DeletePVar(playerid, "Injured");
    DeletePVar(playerid, "EMSAttempt");
    DeletePVar(playerid, "EMSWaiting");
	SetPVarInt(playerid, "DoktorMasrafi", 1);
	DeletePVar(playerid, "MedicCall");

	return 1;
}

forward SendEMSQueue(playerid,type);
public SendEMSQueue(playerid,type)
{
	switch (type)
	{
		case 1:
		{
		    Streamer_UpdateEx(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
			SetPlayerPos(playerid, GetPVarFloat(playerid,"MedicX"), GetPVarFloat(playerid,"MedicY"), GetPVarFloat(playerid,"MedicZ"));
			SetPlayerVirtualWorld(playerid, GetPVarInt(playerid,"MedicVW"));
	  		SetPlayerInterior(playerid, GetPVarInt(playerid,"MedicInt"));

			SetPVarInt(playerid, "EMSAttempt", -1);

			if(GetPlayerInterior(playerid) > 0)
			{
  				LoadObjectsForPlayer(playerid);
			}

			GameTextForPlayer(playerid, "~g~Yaralisin~n~~y~/cagir ambulans ~w~veya ~y~/kabulet olum", 5000, 3);
			ClearAnimations(playerid, 1);
			PreloadAnimLib(playerid,"KNIFE");
			ApplyAnimation(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
			SetPlayerHealth(playerid, 100);
			SetPlayerArmourEx(playerid,0);
			if(GetPVarInt(playerid, "usingfirstaid") == 1)
			    firstaidexpire(playerid);

			SetPVarInt(playerid,"MedicCall",1);
		}
		case 2:
		{
		    SetPVarInt(playerid,"EMSAttempt", 2);
			ClearAnimations(playerid, 1);
		 	ApplyAnimation(playerid, "SWAT", "gnstwall_injurd", 4.0, 0, 1, 1, 1, 0, 1);
			SetPlayerHealth(playerid, 100);
			SetPlayerArmourEx(playerid,0);
		}
	}
	return 1;
}

stock AddAutomatedFlag(playerid, reason[]) {
	new month,day,year;
	getdate(year,month,day);
 	if(!strlen(PlayerInfo[playerid][pFlag]))
	 	format(PlayerInfo[playerid][pFlag],128,"%s - Server (%d/%d/%d)",reason, day, month, year);

	return 1;
}

stock AddFlag(playerid,adminid,reason[])
{
	new month,day,year;
	getdate(year,month,day);
	new playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid, playername, sizeof(playername));
 	format(PlayerInfo[playerid][pFlag],128,"%s - %s (%d/%d/%d)",reason,GetPlayerNameEx(adminid), day, month, year);
}

forward AddReportToken(playerid);
public AddReportToken(playerid)
{
	new
		sz_FileStr[32 + MAX_PLAYER_NAME],
		sz_playerName[MAX_PLAYER_NAME],
		i_timestamp[3],
		File: fPointer;

	GetPlayerName(playerid, sz_playerName, MAX_PLAYER_NAME);
	getdate(i_timestamp[0], i_timestamp[1], i_timestamp[2]);

	format(sz_FileStr, sizeof(sz_FileStr), "admins/rtokens/%s[%d'%d'%d]", sz_playerName, i_timestamp[1], i_timestamp[2], i_timestamp[0]);
	if(fexist(sz_FileStr))
	{
		fPointer = fopen(sz_FileStr, io_read);
		fread(fPointer, sz_playerName);
		fclose(fPointer);

		new
			i_tokenVal = strval(sz_playerName);

		format(sz_playerName, sizeof(sz_playerName), "%i", i_tokenVal + 1);
		fPointer = fopen(sz_FileStr, io_write);
		fwrite(fPointer, sz_playerName);
		fclose(fPointer);
	}
	else {
		fPointer = fopen(sz_FileStr, io_write);
		fwrite(fPointer, "1");
		fclose(fPointer);
	}
	return 1;
}

forward SeeReportToken(playerid,name[],month,day,year);
public SeeReportToken(playerid,name[],month,day,year)
{
	new string[128], rtoken;
	new strFromFile[128];
	format(string,sizeof(string),"admins/rtokens/%s[%d'%d'%d]",name,month,day,year);
	if(fexist(string))
	{
		new File: file = fopen(string, io_read);
		fread(file, strFromFile);
		fclose(file);

		rtoken = strval(strFromFile);
		format(string,sizeof(string),"Adminin %d rapor jetonu var. Tarih: [%d/%d/%d].",rtoken,month,day,year);
		SendClientMessage(playerid, COLOR_YELLOW, string);
	}
	else
	{
		SendClientMessage(playerid, COLOR_YELLOW, "Adminin bu tarihe dair girilmi rapor jetonu bulunmamaktadr.");
		return 0;
	}
	return 1;
}

forward firstaid5(playerid);
public firstaid5(playerid)
{
	if(GetPVarInt(playerid, "usingfirstaid") == 1)
 	{
		new Float:health;
		GetPlayerHealth(playerid, health);
		if(health < 100.0)
		{
		    if((health+5.0) <= 100.0)
		    {
 				SetPlayerHealth(playerid, health+5.0);
			}
		}
	}
}

forward firstaidexpire(playerid);
public firstaidexpire(playerid)
{
	SendClientMessage(playerid, COLOR_GRAD1, "lk yardm kitinin sresi bitti.");
 	KillTimer(GetPVarInt(playerid, "firstaid5"));
  	SetPVarInt(playerid, "usingfirstaid", 0);
}

stock GetClosestPlayer(p1)
{
	new Float:dis,Float:dis2,player;
	player = -1;
	dis = 99999.99;
	foreach(Player, x)
	{
			if(x != p1)
			{
				dis2 = GetDistanceBetweenPlayers(x,p1);
				if(dis2 < dis && dis2 != -1.00)
				{
					dis = dis2;
					player = x;
				}
			}
	}
	return player;
}

forward rccam(playerid);
public rccam(playerid)
{
	DestroyVehicle(GetPVarInt(playerid, "rcveh"));
	VehicleRadioStation[GetPVarInt(playerid, "rcveh")] = 0;
 	SetPlayerPos(playerid, GetPVarFloat(playerid, "rcX"), GetPVarFloat(playerid, "rcY"), GetPVarFloat(playerid, "rcZ"));
  	SendClientMessage(playerid, COLOR_GRAD1, "Yerletirilebilir kamerann bateryas bitti.");
   	SetPVarInt(playerid, "rccam", 0);
}

forward SyncTime();
public SyncTime()
{
	new
		string[64],
		tmphour,
		tmpminute,
		tmpsecond;

	gettime(tmphour, tmpminute, tmpsecond);
	FixHour(tmphour);
	tmphour = shifthour;
	if((tmphour > ghour) || (tmphour == 0 && ghour == 24))
	{
		format(string, sizeof(string), "uanda saat %d:00.",tmphour);
		SendClientMessageToAllEx(COLOR_WHITE,string);
		ghour = tmphour;
		TotalUptime += 1;
		SetWorldTime(tmphour);
		PayDay();

		SaveFamilies();
	}
}


PayDay()
{
	new
		string[128];

 	foreach(Player, i) {
		if(PlayerInfo[i][pLevel] > 0) {
			if(PlayerInfo[i][pPayReady] >= 6) {
				new code = Random(100000, 999999);
				PayCheckCode[i] = code;
				SendClientMessage(i, COLOR_GREY,"_______________________________________________________________");
				SendClientMessage(i, COLOR_WHITE,"Maa hakknda bilgi iin: {33CCFF}/maasyardim {FFFFFF}or {33CCFF}/vergiyardim");
				SendClientMessage(i, COLOR_GREY,"_______________________________________________________________");
				SendClientMessage(i, COLOR_WHITE,"Maan alabilmek iin maa kodunu gir.");
				SendClientMessage(i, COLOR_LIGHTBLUE, "/maas yazin");
				SendClientMessage(i, COLOR_WHITE,"Maa kodunun sresi bitmeden maan alabilmen iin 5 dakikan var.");
				SendClientMessage(i, COLOR_GREY,"_______________________________________________________________");
				GameTextForPlayer(i, "~w~/maas yazin", 2500, 1);
				if(MP3Station[i] == 0 && BoomBoxSet[i] == 0) {
					PlayerPlaySound(i,SOUND_MUSIC1,2050.1995, 1344.5500, 13.2378);
					PayMusic(i);
			}
				WasHereForPaycheck[i] = 1;
				SetTimer("LastAlertPayCheck", 240000, false);
			} else SendClientMessage(i, COLOR_LIGHTRED, "Maan alabilmek iin yeterince oyunda kalmadn.");

			if(GetPVarType(i, "debtMsg")) {
				if(PlayerInfo[i][pJailed] < 1 && !IsACop(i) && PlayerInfo[i][pWantedLevel] < 6) {
					format(string,sizeof(string),"Devlete olan $%d borcunu demedin. Polis seni aryor.",GetPlayerCash(i));
					SendClientMessage(i, COLOR_LIGHTRED, string);
					PlayerInfo[i][pCrimes]++;
					SetPlayerWantedLevel(i, ++PlayerInfo[i][pWantedLevel]);
				}
			}
			if(PlayerInfo[i][pRenting] != INVALID_HOUSE_ID) {
				if(HouseInfo[PlayerInfo[i][pRenting]][hRentFee] > PlayerInfo[i][pBank]) {
					PlayerInfo[i][pRenting] = INVALID_HOUSE_ID;
					SendClientMessage(i, COLOR_WHITE, "Kira cretini demediin iin kiraclktan karldn.");
				} else {
					HouseInfo[PlayerInfo[i][pRenting]][hSafeMoney] += HouseInfo[PlayerInfo[i][pRenting]][hRentFee];
					PlayerInfo[i][pBank] -= HouseInfo[PlayerInfo[i][pRenting]][hRentFee];
				}
			}
		}
	}
	Misc_Save();
	return 1;
}

forward LastAlertPayCheck();
public LastAlertPayCheck()
{
    foreach(Player, i)
    {
        if(WasHereForPaycheck[i] == 1 && SignedPaycheck[i] == 0)
        {
            if(GetPVarInt(i, "LAPCReceived") != 1)
            {
            	GameTextForPlayer(i, "~w~/maas yazin", 2500, 1);
            	SendClientMessage(i, COLOR_WHITE, "Maas kodunuzun sresinin sona ermesi iin son 1 dakikan kaldi. Maan almak iin /maas yazmalsn.");
            	SetPVarInt(i, "LAPCReceived", 1);
			}
        }
    }
	SetTimer("DestroyChecks", 60000, false);
}

forward DestroyChecks();
public DestroyChecks()
{
    foreach(Player, i)
    {
        PayCheckCode[i] = 0;

        if(WasHereForPaycheck[i] == 1 && SignedPaycheck[i] == 0)
        {
            SendClientMessage(i, COLOR_WHITE, "Maas kodunuzun sresi bitti. Bir dahaki sefere /maas yazmay unutmayn");

			if(AdminDuty[i] == 0)
			{
            	MissedPaychecks[i]++;
			}

            if(MissedPaychecks[i] >= 2 && AdminDuty[i] == 0)
            {
                new string[128];
          		format(string, sizeof(string), "{AA3333}AdminUyar{FFFF00}: %s adl oyuncu st ste 2 defa maa almad iin otomatik olarak kicklendi.", GetPlayerNameEx(i));
				ABroadCast(COLOR_YELLOW, string, 1);
                format(string, sizeof(string), "AdminUyar: %s adl oyuncu st ste 2 defa maa almad iin otomatik olarak kicklendi.", GetPlayerNameEx(i));
                Log("logs/payfarming.log", string);
                Kick(i);
            }
        }

        WasHereForPaycheck[i] = 0;
        SignedPaycheck[i] = 0;
        DeletePVar(i, "LAPCReceived");
    }
}

forward TutorialProgression(playerid);
public TutorialProgression(playerid)
{
	Streamer_Update(playerid);

	if (TutorialProgress[playerid] == 1)
	{
	    DeletePVar(playerid, "IsFrozen");
		for(new t = 0; t < 54; t++)
		{
			TextDrawHideForPlayer(playerid, TutTxtDraw[t]);
		}

		SetPlayerInterior(playerid, 0);
		SetPlayerVirtualWorld(playerid, 0);
		SetPlayerPos(playerid, 2095.3206, -1866.8722, 13.5422);
		SetPlayerFacingAngle(playerid, 89.8642);
		SetCameraBehindPlayer(playerid);
        ShowModelSelectionMenu(playerid, SkinList, "Skin Menu");
		InsideTut[playerid] = 0;
		DeletePVar(playerid, "DoktorMasrafi");
		SetPlayerColor(playerid,TEAM_HIT_COLOR);
		PlayerInfo[playerid][pTut] = 1;

     if(PlayerInfo[playerid][pSex] == 1) {
	        SetPlayerSkin(playerid, 26);
     } else {
         SetPlayerSkin(playerid, 216);
     }

		ClearChatbox(playerid);
		new string[128];
		format(string, sizeof(string), "Master RPG'ye hogeldiniz, %s.", GetPlayerNameEx(playerid));
		SendClientMessage(playerid, COLOR_NEWS, string);

		format(string, sizeof(string), "~w~Hosgeldiniz~n~~w~%s", GetPlayerNameEx(playerid));
		GameTextForPlayer(playerid, string, 5000, 1);

		SendClientMessage(playerid, COLOR_WHITE, "Uak yolculuun sonunda Amerika'ya geldin !");

		new motdstring[128];
		format(motdstring, sizeof(motdstring), "Haberler: %s", GlobalMOTD);
		SendClientMessage(playerid, COLOR_WHITE, motdstring);

		TextDrawShowForPlayer(playerid, TDEditor_TD[0]);
		TextDrawShowForPlayer(playerid, TDEditor_TD[1]);
		TextDrawShowForPlayer(playerid, TDEditor_TD[2]);
		TutorialProgress[playerid] = 0;
		TogglePlayerControllable(playerid, true);
	}
}

forward SafeLoadObjects(playerid);
public SafeLoadObjects(playerid)
{
	Streamer_Update(playerid);
	if(GetPVarType(playerid, "LoadingObjects"))
	{
		DeletePVar(playerid, "LoadingObjects");
		TogglePlayerControllable(playerid, 1);

		TextDrawHideForPlayer(playerid, ObjectsLoadingTD[5]);
		TextDrawShowForPlayer(playerid, ObjectsLoadingTD[7]);

		SetTimerEx("SafeLoadObjectsClear", 500, 0, "d", playerid);
	}
	if(GetPVarType(playerid, "MedicCall")) {
	    ClearAnimations(playerid, 1);
		ApplyAnimation(playerid, "KNIFE", "KILL_Knife_Ped_Die", 4.0, 0, 1, 1, 1, 0, 1);
	}
}

forward SafeLoadObjectsClear(playerid);
public SafeLoadObjectsClear(playerid)
{
	for(new o = 0; o < 8; o++)
	{
		TextDrawHideForPlayer(playerid, ObjectsLoadingTD[o]);
	}
}

stock ClearMarriage(playerid)
{
	if(IsPlayerConnected(playerid)) {
		new string[MAX_PLAYER_NAME];
		format(string, sizeof(string), "Nobody");
		strmid(PlayerInfo[playerid][pMarriedTo], string, 0, strlen(string), 255);
		PlayerInfo[playerid][pMarried] = 0;
	}
	return 1;
}

forward VehicleBombDelay(playerid);
public VehicleBombDelay(playerid)
{
	new
		string[128],
		name2[MAX_PLAYER_NAME],
		name[MAX_PLAYER_NAME];

	new Float:boomx, Float:boomy, Float:boomz;
	GetPlayerPos(playerid,boomx, boomy, boomz);
	CreateExplosion(boomx, boomy , boomz, 7, 1);
	PlacedVehicleBomb[GetChased[playerid]] = INVALID_VEHICLE_ID;
	new takemoney = PlayerInfo[playerid][pHeadValue] / 4 * 2;
	name = GetPlayerNameEx(playerid);
	GivePlayerCash(GetChased[playerid], takemoney);
	GivePlayerCash(playerid, -takemoney);
	format(string,sizeof(string),"Hitman %s, %s zerindeki kontrakt iini halletti ve $%d kazand.",GetPlayerNameEx(GetChased[playerid]),GetPlayerNameEx(playerid),PlayerInfo[playerid][pHeadValue] / 4 * 2);
	SendFamilyMessage(4, COLOR_YELLOW, string);
	format(string,sizeof(string),"Hitman tarafndan ciddi bir ekilde yaralandn ve $%d kaybettin!.",takemoney);
	ResetPlayerWeaponsEx(playerid);
	// SpawnPlayer(playerid);
	SendClientMessage(playerid, COLOR_YELLOW, string);

	foreach(Player, i) {
 		name2 = GetPlayerNameEx(i);
   		if(!strcmp(PlayerInfo[playerid][pContractBy], name2, true)) {
     		if(!IsPlayerStreamedIn(i, playerid)) {
      			format(string, sizeof(string), "SMS: (%s) zerindeki eylem baaryla tamamland. Gnderen: OZELMESAJ (555)", name);
				SendClientMessage(i, COLOR_YELLOW, string);
			}
		}
	}

	PlayerInfo[playerid][pHeadValue] = 0;
	strcpy(PlayerInfo[playerid][pContractBy], "Nobody", 64);
	strcpy(PlayerInfo[playerid][pContractDetail], "Yok", 64);
	PlayerInfo[GetChased[playerid]][pCHits] += 1;
	SetPlayerHealth(playerid, 0.0);
	// KillEMSQueue(playerid);
	GoChase[GetChased[playerid]] = 999;
	PlayerInfo[GetChased[playerid]][pC4Used] = 0;
	PlayerInfo[GetChased[playerid]][pC4] = 0;
	GotHit[playerid] = 0;
	GetChased[playerid] = 999;
	return 1;
}


/*forward MenuCamFix(playerid);
public MenuCamFix(playerid)
{
    SetCameraBehindPlayer(playerid);
}*/

forward OtherTimerEx(playerid, type);
public OtherTimerEx(playerid, type)
{
	if(type == TYPE_TPMATRUNTIMER)
	{
    	if(GetPVarInt(playerid, "tpMatRunTimer") > 0)
		{
			SetPVarInt(playerid, "tpMatRunTimer", GetPVarInt(playerid, "tpMatRunTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPMATRUNTIMER);
		}
	}
	else if(type == TYPE_TPDRUGRUNTIMER)
	{
    	if(GetPVarInt(playerid, "tpDrugRunTimer") > 0)
		{
			SetPVarInt(playerid, "tpDrugRunTimer", GetPVarInt(playerid, "tpDrugRunTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPDRUGRUNTIMER);
		}
	}
	else if(type == TYPE_ARMSTIMER)
	{
	    if(GetPVarInt(playerid, "ArmsTimer") > 0)
		{
			SetPVarInt(playerid, "ArmsTimer", GetPVarInt(playerid, "ArmsTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_ARMSTIMER);
		}
	}
	else if(type == TYPE_GUARDTIMER)
	{
	    if(GetPVarInt(playerid, "GuardTimer") > 0)
	    {
	        SetPVarInt(playerid, "GuardTimer", GetPVarInt(playerid, "GuardTimer")-1);
	        SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GUARDTIMER);
	    }
	}
	else if(type == TYPE_GIVEWEAPONTIMER)
	{
	    if(GetPVarInt(playerid, "GiveWeaponTimer") > 0)
		{
			SetPVarInt(playerid, "GiveWeaponTimer", GetPVarInt(playerid, "GiveWeaponTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_GIVEWEAPONTIMER);
		}
	}
	else if(type == TYPE_SELLMATSTIMER)
	{
	    if(GetPVarInt(playerid, "SellMatsTimer") > 0)
		{
			SetPVarInt(playerid, "SellMatsTimer", GetPVarInt(playerid, "SellMatsTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_SELLMATSTIMER);
		}
	}
	else if(type == TYPE_TPTRUCKRUNTIMER)
	{
    	if(GetPVarInt(playerid, "tpTruckRunTimer") > 0)
		{
			SetPVarInt(playerid, "tpTruckRunTimer", GetPVarInt(playerid, "tpTruckRunTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPTRUCKRUNTIMER);
		}
	}
	else if(type == TYPE_HOSPITALTIMER)
	{
	    if(GetPVarInt(playerid, "HospitalTimer") > 0)
		{
		    new Float:curhealth;
			GetPlayerHealth(playerid, curhealth);
			SetPVarInt(playerid, "HospitalTimer", GetPVarInt(playerid, "HospitalTimer")-1);
			SetPlayerHealth(playerid, curhealth+1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_HOSPITALTIMER);
			if(GetPVarInt(playerid, "HospitalTimer") == 0)
			{
				HospitalSpawn(playerid);
			}
		}
	}
	else if(type == TYPE_FLOODPROTECTION)
	{
 		if(CommandSpamUnmute[playerid] >= 1)
 		{
  			CommandSpamUnmute[playerid]--;
  			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
    	}
 		if(TextSpamUnmute[playerid] >= 1)
 		{
  			TextSpamUnmute[playerid]--;
  			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_FLOODPROTECTION);
    	}
	}
	else if(type == TYPE_TPPIZZARUNTIMER)
	{
		if(GetPVarInt(playerid, "tpPizzaTimer") > 0 && GetPVarInt(playerid, "Pizza"))
		{
			SetPVarInt(playerid, "tpPizzaTimer", GetPVarInt(playerid, "tpPizzaTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_TPPIZZARUNTIMER);
		}
	}
	else if(type == TYPE_PIZZATIMER)
	{
	    if(GetPVarInt(playerid, "pizzaTimer") == 0)
		{
            SendClientMessage(playerid, COLOR_WHITE, "Pizzayi mteriye soumadan teslim edemedin!");
            SetPVarInt(playerid, "Pizza", 0);
            DestroyProgressBar(PizzaBar[playerid]);
            DisablePlayerCheckpoint(playerid);
	    }
	    else if(GetPVarInt(playerid, "Pizza") == 0)
	    {
	        DestroyProgressBar(PizzaBar[playerid]);
            DisablePlayerCheckpoint(playerid);
	    }
	    else if(GetPVarInt(playerid, "pizzaTimer") > 0 && GetPVarInt(playerid, "Pizza") > 0)
	    {
			SetPVarInt(playerid, "pizzaTimer", GetPVarInt(playerid, "pizzaTimer")-1);
	        SetProgressBarValue(PizzaBar[playerid], (GetPVarInt(playerid, "pizzaTimer") * 100.0 / GetPVarInt(playerid, "pizzaTotal")));
	        UpdateProgressBar(PizzaBar[playerid], playerid);
	        SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_PIZZATIMER);
	    }
	}
	else if(type == TYPE_SELLMYTIMER)
	{
    	if(GetPVarInt(playerid, "SellMyTimer") > 0)
		{
			SetPVarInt(playerid, "SellMyTimer", GetPVarInt(playerid, "SellMyTimer")-1);
			SetTimerEx("OtherTimerEx", 1000, false, "ii", playerid, TYPE_SELLMYTIMER);
		}
	}
}

stock VehicleToPoint(Float:radi, vehicleid, Float:x, Float:y, Float:z)
{
	new Float:oldposx, Float:oldposy, Float:oldposz;
	new Float:tempposx, Float:tempposy, Float:tempposz;
	GetVehiclePos(vehicleid, oldposx, oldposy, oldposz);
	tempposx = (oldposx -x);
	tempposy = (oldposy -y);
	tempposz = (oldposz -z);
	if(((tempposx < radi) && (tempposx > -radi)) && ((tempposy < radi) && (tempposy > -radi)) && ((tempposz < radi) && (tempposz > -radi)))
	{
		return 1;
	}
	return 0;
}

encode_tires(tire1, tire2, tire3, tire4)
{
	return tire1 | (tire2 << 1) | (tire3 << 2) | (tire4 << 3);
}

forward AFKick(playerid);
public AFKick(playerid)
{
	if(playerTabbed[playerid] != 0)
	{
 		playerTabbedTime[playerid]++;
 		if(playerTabbedTime[playerid] > 3600 && GetPVarType(playerid, "tabbedVW") == 0) {
			SetPVarInt(playerid, "tabbedVW", GetPlayerVirtualWorld(playerid));
            SetPlayerVirtualWorld(playerid, playerid+1); // so player ID 0 will never be in VW 0, +1.
		}
 		SetTimerEx("AFKick",1000,false,"d",playerid);
	}
	return 1;
}

forward ReportTimer(reportid);
public ReportTimer(reportid)
{
	if(Reports[reportid][BeingUsed] == 1)
	{
	    if(Reports[reportid][TimeToExpire] > 0)
	    {
	        Reports[reportid][TimeToExpire]--;
	        if(Reports[reportid][TimeToExpire] == 0)
	        {
	            SendClientMessage(Reports[reportid][ReportFrom], COLOR_GRAD2, "Raporunuzun sresi bitti. sterseniz tekrar gnderebilirsiniz.");
	            SendClientMessage(Reports[reportid][ReportFrom], COLOR_GRAD2, "Eer online admin yoksa, ayn destei Master forumlarndanda alabilirsiniz.");
	            Reports[reportid][BeingUsed] = 0;
	            Reports[reportid][ReportFrom] = 999;
	            return 1;
	        }
  			Reports[reportid][ReportExpireTimer] = SetTimerEx("ReportTimer", 60000, 0, "d", reportid);
		}
	}
	return 1;
}

forward ReplyTimer(reportid);
public ReplyTimer(reportid)
{
    Reports[reportid][BeingUsed] = 0;
	Reports[reportid][ReportFrom] = 999;
    Reports[reportid][CheckingReport] = 999;
}

forward CaptureTimer(point);
public CaptureTimer(point)
{
	new string[128];
	new fam;
	if(Points[point][ClaimerId] != INVALID_PLAYER_ID && Points[point][TimeToClaim])
	{
		new claimer = Points[point][ClaimerId];
		new Float: x, Float: y, Float: z;
		GetPlayerPos(claimer, x, y, z);
		if(Points[point][Capturex] != x || Points[point][Capturey] != y || Points[point][Capturez] != z || GetPVarInt(Points[point][ClaimerId],"Injured") == 1)
		{
			SendClientMessage(Points[point][ClaimerId], COLOR_LIGHTBLUE, "Pointi ele geiremedin. Ele geirme esnasnda ya kprdadn, yada ldn.");
			Points[point][ClaimerId] = INVALID_PLAYER_ID;
			Points[point][TimeToClaim] = 0;
		}
		else
		{
			if(Points[point][Vulnerable] > 0)
			{
			    SendClientMessage(Points[point][ClaimerId], COLOR_LIGHTBLUE, "Pointi ele geiremedin. Point zaten ele geirildi.");
				Points[point][ClaimerId] = INVALID_PLAYER_ID;
				Points[point][TimeToClaim] = 0;
				return 1;
			}
			if(playerTabbed[claimer] != 0)
			{
			    SendClientMessage(Points[point][ClaimerId], COLOR_LIGHTBLUE, "Pointi ele geiremedin nki ele geirme esnasnda  ALT-TAB yaptn.");
			    format(string, sizeof(string), "{AA3333}AdminUyar{FFFF00}: %s (ID %d) adl oyuncu point esnasnda ALT-TAB yapyor olabilir.", GetPlayerNameEx(claimer), claimer);
				ABroadCast(COLOR_YELLOW, string, 1);

				format(string, sizeof(string), "%s adl oyuncu point ele geirme esnasnda alt-tab yapyor olabilir.", GetPlayerNameEx(claimer));
				AddAutomatedFlag(claimer, string);

   				Points[point][ClaimerId] = INVALID_PLAYER_ID;
				Points[point][TimeToClaim] = 0;
			    return 1;
			}
			fam = PlayerInfo[claimer][pGang];
            Points[point][PlayerNameCapping] = GetPlayerNameEx(claimer);
		   	format(string, sizeof(string), "%s, %s adl yeri %s iin ele geirmeye alyor. %d dakika ierisinde onlarn olacak.", Points[point][PlayerNameCapping], Points[point][Name], FamilyInfo[fam][FamilyName], TIME_TO_TAKEOVER);
			SendClientMessageToAllEx(COLOR_YELLOW, string);
			if(Points[point][CaptureProccessEx] >= 1)
			{
				Points[point][CaptureProccessEx] = 2;
			}
			Points[point][TakeOverTimerStarted] = 1;
			Points[point][TakeOverTimer] = TIME_TO_TAKEOVER;
			Points[point][ClaimerId] = INVALID_PLAYER_ID;
			Points[point][ClaimerTeam] = fam;
			Points[point][TimeToClaim] = 0;
			if(Points[point][CaptureTimerEx2] != -1) KillTimer(Points[point][CaptureTimerEx2]);
			Points[point][CaptureTimerEx2] = SetTimerEx("CaptureTimerEx", 60000, 1, "d", point);
		}
	}
	return 1;
}

forward OnQueryError();

forward ProgressTimer(point);
public ProgressTimer(point)
{
	if(Points[point][ClaimerId] != INVALID_PLAYER_ID && Points[point][TimeToClaim])
	{
	    Points[point][TimeLeft]--;
		SetProgressBarValue(Points[point][PointBarID], GetProgressBarValue(Points[point][PointBarID])-10.0);
		UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
		if(Points[point][TimeLeft] >= 1) SetTimerEx("ProgressTimer", 1000, 0, "d", point);
		new string[128];
		format(string, sizeof(string), "%s adl kii pointi ele geirmeye alyor, kalan sre: %d", GetPlayerNameEx(Points[point][ClaimerId]), Points[point][TimeLeft]);
		if(Points[point][TimeLeft] == 9) Points[point][CaptureProgress] = CreateDynamic3DTextLabel(string, COLOR_RED, Points[point][Pointx], Points[point][Pointy], Points[point][Pointz]+1.0, 10.0);
			else if(Points[point][TimeLeft] < 9 && Points[point][TimeLeft] >= 0) UpdateDynamic3DTextLabelText(Points[point][CaptureProgress], COLOR_RED, string);

		if(Points[point][TimeLeft] == 5)
		{
		    SetProgressBarColor(Points[point][PointBarID], COLOR_YELLOW);
		    UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
		}
		else if(Points[point][TimeLeft] == 2)
		{
		    SetProgressBarColor(Points[point][PointBarID], COLOR_RED);
		    UpdateProgressBar(Points[point][PointBarID], Points[point][ClaimerId]);
		}
		else if(Points[point][TimeLeft] <= 0)
		{
		    CaptureTimer(point);
		    Points[point][TimeLeft] = 0;
		    DestroyProgressBar(Points[point][PointBarID]);
		    DestroyDynamic3DTextLabel(Points[point][CaptureProgress]);
		}
	}
	else
	{
	    DestroyProgressBar(Points[point][PointBarID]);
	    DestroyDynamic3DTextLabel(Points[point][CaptureProgress]);
	    Points[point][ClaimerId] = INVALID_PLAYER_ID;
		Points[point][TimeToClaim] = 0;
	}
	return 1;
}

forward CaptureTimerEx(point);
public CaptureTimerEx(point)
{
	new string[128];
	new fam;
	if(Points[point][TakeOverTimerStarted])
	{
		fam = Points[point][ClaimerTeam];
		if(Points[point][TakeOverTimer] > 0)
		{
			Points[point][TakeOverTimer]--;
			//format(string, sizeof(string), "%s has successfully attempted to take over of %s for %s, it will be theirs in %d minutes!",
			//pointler[point][PlayerNameCapping], Points[point][Name], FamilyInfo[fam][FamilyName], Points[point][TakeOverTimer]);
			//UpdateDynamic3DTextLabelText(Points[point][CaptureProccess], COLOR_YELLOW, string);
		}
		else
		{
			Points[point][ClaimerTeam] = INVALID_PLAYER_ID;
			Points[point][TakeOverTimer] = 0;
			Points[point][TakeOverTimerStarted] = 0;
			Points[point][Announced] = 0;
			Points[point][Vulnerable] = NEW_VULNERABLE;
			//DestroyDynamic3DTextLabel(Points[point][CaptureProccess]);
			Points[point][CaptureProccessEx] = 0;
			strmid(Points[point][Owner], FamilyInfo[fam][FamilyName], 0, 32, 32);
			strmid(Points[point][CapperName], Points[point][PlayerNameCapping], 0, 32, 32);
			format(string, sizeof(string), "%s adl kii %s adl yeri %s iin ele geirdi.", Points[point][CapperName], Points[point][Name], Points[point][Owner]);
			SendClientMessageToAllEx(COLOR_YELLOW, string);
			UpdatePoints();
			KillTimer(Points[point][CaptureTimerEx2]);
			Points[point][CaptureTimerEx2] = -1;
		}
	}
}

stock SurfingCheck(vehicleid)
{
	foreach(Player, p)
	{
		if(GetPlayerSurfingVehicleID(p) == vehicleid)
		{
			new Float:x, Float:y, Float:z;
			GetPlayerPos(p, x, y, z);
		    SetPVarFloat(p, "tempPosX", x);
			SetPVarFloat(p, "tempPosY", x);
			SetPVarFloat(p, "tempPosZ", x);

			SetTimerEx("SurfingFix", 2000, 0, "i", p);
		}
	}
}

forward SurfingFix(playerid);
public SurfingFix(playerid)
{
	SetPlayerPos(playerid, GetPVarFloat(playerid, "tmpPosX"), GetPVarFloat(playerid, "tmpPosY"), GetPVarFloat(playerid, "tmpPosZ"));
	DeletePVar(playerid, "tmpPosX");
	DeletePVar(playerid, "tmpPosY");
	DeletePVar(playerid, "tmpPosZ");

	return 1;
}

forward PutPlayerInVeh(playerid, car);
public PutPlayerInVeh(playerid, car)
{
	PutPlayerInVehicle(playerid, car, 0);
	return 1;
}


forward DrinkCooldown(playerid);
public DrinkCooldown(playerid)
{
    SetPVarInt(playerid, "DrinkCooledDown", 1);
    return 1;
}

public AdminFly(playerid)
{
	if(!IsPlayerConnected(playerid))
		return flying[playerid] = false;

	if(flying[playerid])
	{
	    if(!IsPlayerInAnyVehicle(playerid))
	    {
			new
			    keys,
				ud,
				lr,
				Float:x[2],
				Float:y[2],
				Float:z;

			GetPlayerKeys(playerid, keys, ud, lr);
			GetPlayerVelocity(playerid, x[0], y[0], z);
			if(ud == KEY_UP)
			{
				GetPlayerCameraPos(playerid, x[0], y[0], z);
				GetPlayerCameraFrontVector(playerid, x[1], y[1], z);
    			ApplyAnimation(playerid, "PARACHUTE", "FALL_SkyDive_Accel", 4.1, 0, 0, 0, 0, 0);
				SetPlayerToFacePos(playerid, x[0] + x[1], y[0] + y[1]);
				SetPlayerVelocity(playerid, x[1], y[1], z);
			}
			else
			SetPlayerVelocity(playerid, 0.0, 0.0, 0.01);
		}
		SetTimerEx("AdminFly", 100, 0, "d", playerid);
	}
	return 0;
}

public Float:SetPlayerToFacePos(playerid, Float:X, Float:Y)
{
	new
		Float:pX1,
		Float:pY1,
		Float:pZ1,
		Float:ang;

	if(!IsPlayerConnected(playerid)) return 0.0;

	GetPlayerPos(playerid, pX1, pY1, pZ1);

	if( Y > pY1 ) ang = (-acos((X - pX1) / floatsqroot((X - pX1)*(X - pX1) + (Y - pY1)*(Y - pY1))) - 90.0);
	else if( Y < pY1 && X < pX1 ) ang = (acos((X - pX1) / floatsqroot((X - pX1)*(X - pX1) + (Y - pY1)*(Y - pY1))) - 450.0);
	else if( Y < pY1 ) ang = (acos((X - pX1) / floatsqroot((X - pX1)*(X - pX1) + (Y - pY1)*(Y - pY1))) - 90.0);

	if(X > pX1) ang = (floatabs(floatabs(ang) + 180.0));
	else ang = (floatabs(ang) - 180.0);

	ang += 180.0;

	SetPlayerFacingAngle(playerid, ang);

 	return ang;
}

forward RadarCooldown(playerid);
public RadarCooldown(playerid)
{
   DeletePVar(playerid, "RadarTimeout");
   return 1;
}

forward HidePlayerAnimTextdraw(playerid);
public HidePlayerAnimTextdraw(playerid)
{
	TextDrawHideForPlayer(playerid,txtAnimHelper);
	return 1;
}

forward ShowPlayerAnimTextdraw(playerid);
public ShowPlayerAnimTextdraw(playerid)
{
	TextDrawShowForPlayer(playerid,txtAnimHelper);
	return 1;
}

Delay:UnfreezeDelay[4000, i](playerid)
{
	TogglePlayerControllable(playerid, 1);
	return 1;
}

// Timer Name: PayMusic(playerid)
Delay:PayMusic[3000, i](playerid)
{
	PlayerPlaySound(playerid,SOUND_OFF,2050.1995, 1344.5500, 13.2378); //muzik Off
	return 1;
}

// Timer Name: SkinDelay(playerid)
Delay:SkinDelay[1000, i](playerid)
{
	if(PlayerInfo[playerid][pJailed] == 3 || PlayerInfo[playerid][pJailed] == 4)
	{
	    SetPlayerSkin(playerid, 50);
    	ClearAnimations(playerid, 1);
 		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
	    return 1;
	}
	SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	ClearAnimations(playerid, 1);
 	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);

 	// SetPVarFloat(extraid, "realX", floatstr(szReturn));

 	if(GetPVarType(playerid, "realX") != 0 && GetPVarType(playerid, "realY") != 0 && GetPVarType(playerid, "realZ") != 0 && GetPVarInt(playerid, "Hospital") == 0 && PlayerInfo[playerid][pHospital] == 0 && PlayerInfo[playerid][pJailTime] == 0) {
		if(GetDistance(GetPVarFloat(playerid, "realX"), GetPVarFloat(playerid, "realY"), GetPVarFloat(playerid, "realZ"), PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]) > 15) {
	 	    SetPlayerPos(playerid, GetPVarFloat(playerid, "realX"), GetPVarFloat(playerid, "realY"), GetPVarFloat(playerid, "realZ"));
	 	    SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVW]);
	 	    SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);

	 	    DeletePVar(playerid, "realX");
	 	    DeletePVar(playerid, "realY");
	 	    DeletePVar(playerid, "realZ");
 	    }
 	}
 	TogglePlayerControllable(playerid, 1);
 	/*
 	if(!IsPlayerInRangeOfPoint(playerid, 30, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z])) {
 	    printf("[debug - coordinate problem] %f, %f, %f", PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);

 	    // I've noticed some problems with the spawn positions in the MySQL version where players fall from Glen Park, this should prevent this.
 	    SendClientMessage(playerid, COLOR_YELLOW, "[debug] Your coordinates have not been set properly.");
 	    SetPlayerPos(playerid, PlayerInfo[playerid][pPos_x], PlayerInfo[playerid][pPos_y], PlayerInfo[playerid][pPos_z]);
 	    SetPlayerVirtualWorld(playerid, PlayerInfo[playerid][pVW]);
 	    SetPlayerInterior(playerid, PlayerInfo[playerid][pInt]);
 	    SendClientMessage(playerid, COLOR_YELLOW, "[debug] Your coordinates should now be fine.");

 	    new
 	        Float: fPos[3];

		GetPlayerPos(playerid, fPos[0], fPos[1], fPos[2]);
		printf("[debug - coordinate problem] Real coordinates: %f, %f, %f", fPos[0], fPos[1], fPos[2]);
 	} else SendClientMessage(playerid, COLOR_YELLOW, "[debug] Your coordinates have been set properly.");*/
	return 1;
}

// Timer Name: NOPCheck(playerid)
Delay:NOPCheck[5000, i](playerid)
{
	if(GetPlayerState(playerid) != 2) NOPTrigger[playerid] = 0;
	new newcar = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pAdmin] > 4 || GetPlayerState(playerid) != 2) return 1;
	else if(IsACopCar(newcar) && PlayerInfo[playerid][pFaction] != 1 && PlayerInfo[playerid][pLeader] != 1) ExecuteNOPAction(playerid);
	else if(IsAFBICar(newcar) && PlayerInfo[playerid][pFaction] != 2 && PlayerInfo[playerid][pLeader] != 2) ExecuteNOPAction(playerid);
	else if(IsAnAmbulance(newcar) && PlayerInfo[playerid][pFaction] != 3 && PlayerInfo[playerid][pLeader] != 3) ExecuteNOPAction(playerid);
    else if(IsAGovCar(newcar) && PlayerInfo[playerid][pFaction] != 5 && PlayerInfo[playerid][pLeader] != 5) ExecuteNOPAction(playerid);
    else if(IsANewsVeh(newcar) && PlayerInfo[playerid][pFaction] != 9 && PlayerInfo[playerid][pLeader] != 9) ExecuteNOPAction(playerid);
	else if(IsATruckerCar(newcar) && PlayerInfo[playerid][pJob] != 20 && PlayerInfo[playerid][pJob2] != 20) ExecuteNOPAction(playerid);
	else if(IsAPizzaCar(newcar) && PlayerInfo[playerid][pJob] != 21 && PlayerInfo[playerid][pJob2] != 21) ExecuteNOPAction(playerid);
	else if(IsAPlane(newcar) && (PlayerInfo[playerid][pFlyLic] != 1)) ExecuteNOPAction(playerid);
	return 1;
}

Timer:VehicleUpdate[10000]()
{
    for(new v = 0; v < MAX_VEHICLES; v++) if(GetVehicleModel(v)) {
	    GetVehicleParamsEx(v,engine,lights,alarm,doors,bonnet,boot,objective);
	    if(engine == VEHICLE_PARAMS_ON) {
   			if(!IsATruckerCar(v) && Fuel[v] > 0.0) {
				Fuel[v] -= 0.1;
				if(Fuel[v] <= 0.0) SetVehicleParamsEx(v,VEHICLE_PARAMS_OFF,lights,alarm,doors,bonnet,boot,objective);
			}
	    }
	}
}

// Timer Name: ServerMicrobeat()
// TickRate: 400 Milliseconds
Timer:ServerMicrobeat[400]()
{
    new
        Float: fCurrentSpeed,
		iVehicle,
		arrDamage[4],
		szSpeed[42];

	foreach(Player, i)
	{
	    if(GetPlayerState(i) == PLAYER_STATE_DRIVER)
		{
			if(arr_Towing[i] != INVALID_VEHICLE_ID) {
				if(GetVehicleModel(arr_Towing[i]) && IsVehicleStreamedIn(arr_Towing[i], i)) AttachTrailerToVehicle(arr_Towing[i], GetPlayerVehicleID(i));
				else arr_Towing[i] = INVALID_VEHICLE_ID;
			}
            fCurrentSpeed = player_get_speed(i);
			if(PlayerInfo[i][pSpeedo] != 0 && FindTimePoints[i] == 0) {
				format(szSpeed, sizeof(szSpeed),"~n~~n~~n~~n~~n~~n~~n~~n~~n~~w~%.0f MPH", fCurrentSpeed);
				GameTextForPlayer(i, szSpeed, 1500, 3);
			}
			iVehicle = GetPlayerVehicleID(i);
  			for(new x = 0; x < sizeof(SpikeStrips); ++x) if(SpikeStrips[x][sX] != 0 && GetVehicleDistanceFromPoint(iVehicle, SpikeStrips[x][sX], SpikeStrips[x][sY], SpikeStrips[x][sZ]) <= 3.5) {
				GetVehicleDamageStatus(iVehicle, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
				arrDamage[3] = encode_tires(1, 1, 1, 1);
				UpdateVehicleDamageStatus(iVehicle, arrDamage[0], arrDamage[1], arrDamage[2], arrDamage[3]);
	   		}
	   		new vehicleid = GetPlayerVehicleID(i);
			if(!IsABicycle(vehicleid) && !IsATruckerCar(vehicleid) && Fuel[vehicleid] > 0)
			{
				Fuel[vehicleid] -= GetPlayerSpeed(i)/7000.0;
				if(Fuel[vehicleid] <= 0)
				{
					ToggleEngine(vehicleid, VEHICLE_PARAMS_OFF);
					GameTextForPlayer(i, "~r~Benzin yok", 3000, 3);
					SendClientMessage(i, COLOR_RED, "Bu aracn benzini bitmi!");
				}
			}
		}
	}
}

Timer:Paintball[1000]()
{
    for(new f = 0; f < 7; f++) {
        if(gaPaintballGameTimeRemaining[f] > 0) {
            gaPaintballGameTimeRemaining[f]--;

			new
				//szScoreText[512],
				szWinner[128],
				szMessage[128];

            if(gaPaintballGameTimeRemaining[f] == 1) {
                new
					iHighestScore,
					iScore,
                    iHighestScorer = INVALID_PLAYER_ID;

				foreach(Player, x) {
				    iScore = GetPVarInt(x, "PBMS");

				    if(iScore > iHighestScore && GetPVarInt(x, "PBM") == f) {
				        iHighestScore = iScore;
				        iHighestScorer = x;
				    }
				}

				if(iHighestScorer != INVALID_PLAYER_ID) { // just in case no valid player won
				    	format(szWinner, sizeof(szWinner), "Bu roundun kazanani %d sKor ile %s. (%d ldrme, %d lm)", GetPlayerNameEx(iHighestScorer), iHighestScore, GetPVarInt(iHighestScorer, "PBMK"), GetPVarInt(iHighestScorer, "PBMD"));
				} else {
				    format(szWinner, sizeof(szWinner), "Bu sefer kazanan yok!");
				}

				/*new
				    scIt;

				foreach(Player, x) {
				    PlayerRatio[scIt][iKills] = GetPVarInt(x, "PBMK");
				    PlayerRatio[scIt][iplayerid] = x;
				    scIt++;
				}

				HighScores(PlayerRatio, 0, MAX_PLAYERS);

				new
				    iterator,
				    iterator2;

				format(szScoreText, sizeof(szScoreText), "The scoreboard is as follows:\n\n");
				foreach(Player, x) {
				    SendClientMessageToAll(COLOR_YELLOW, szScoreText);
				    print(szScoreText);
				    iterator2++;
					if(GetPVarInt(x, "PBM") == f) {
					    iterator++;
						format(szScoreText, sizeof(szScoreText), "%s%d. %s - %d kills, %d deaths\n", szScoreText, iterator, GetPlayerNameEx(PlayerRatio[iterator][iplayerid]), PlayerRatio[iterator][iKills], GetPVarInt(PlayerRatio[iterator][iplayerid], "PBMD"));
					}
				}*/
            }

			foreach(Player, playerid) {
			    if(GetPVarInt(playerid, "PBM") == f) {
		            switch(gaPaintballGameTimeRemaining[f]) {
		                case 6: {
							GameTextForPlayer(playerid, "~r~ Oyun bitiyor...~n~ ~g~ 5", 1000, 3);
							TogglePlayerControllable(playerid, false);
						}
						case 5: GameTextForPlayer(playerid, "~r~ Oyun bitiyor...~n~ ~g~ 4", 1000, 3);
		                case 4: GameTextForPlayer(playerid, "~r~ Oyun bitiyor...~n~ ~g~ 3", 1000, 3);
		                case 3: GameTextForPlayer(playerid, "~r~ Oyun bitiyor...~n~ ~g~ 2", 1000, 3);
		                case 2: GameTextForPlayer(playerid, "~r~ Oyun bitiyor...~n~ ~y~ 1", 1000, 3);
		                case 1: {
		                    GameTextForPlayer(playerid, "~r~ Oyun ~r~bitti!", 2000, 3);
		                    SendClientMessage(playerid, COLOR_RED, "Oyun Bitti!");

		                    SetPlayerPos(playerid, 1782.8229, -1565.8177, 13.3472);
		                    SetPlayerInterior(playerid, 0);
		                    SetPlayerVirtualWorld(playerid, 0);

							LoadObjectsForPlayer(playerid);

						    //ShowPlayerDialogEx(playerid, 0, DIALOG_STYLE_MSGBOX, "Scoreboard (in order of kills)", szScoreText, "Tamam", "");

						    SendClientMessage(playerid, COLOR_ORANGE, szWinner);

						    format(szMessage, sizeof(szMessage), "%d kere adam ldrdn ve %d kere ldn. (Skor: %d).", GetPVarInt(playerid, "PBMK"), GetPVarInt(playerid, "PBMD"), GetPVarInt(playerid, "PBMS"));
						    SendClientMessage(playerid, COLOR_WHITE, szMessage);

							DeletePVar(playerid, "PBM");
							DeletePVar(playerid, "PBMK");
							DeletePVar(playerid, "PBMD");
							DeletePVar(playerid, "PBMS");
							if(PaintballTeam[playerid] != 0) {
							    SetPlayerToTeamColor(playerid);
							    PaintballTeam[playerid] = 0;
							}

							SetPlayerHealth(playerid, GetPVarFloat(playerid, "pbhealth"));
							SetPlayerArmourEx(playerid, GetPVarFloat(playerid, "pbarmour"));
							SetPlayerTeam(playerid, -1);
							ResetPlayerWeapons(playerid);
							PlayerInfo[playerid][pAGuns][0] = 0;
							PlayerInfo[playerid][pAGuns][1] = 0;
							PlayerInfo[playerid][pAGuns][2] = 0;
							PlayerInfo[playerid][pAGuns][3] = 0;
							PlayerInfo[playerid][pAGuns][4] = 0;
							PlayerInfo[playerid][pAGuns][5] = 0;
							PlayerInfo[playerid][pAGuns][6] = 0;
							PlayerInfo[playerid][pAGuns][7] = 0;
							PlayerInfo[playerid][pAGuns][8] = 0;
							PlayerInfo[playerid][pAGuns][9] = 0;
							PlayerInfo[playerid][pAGuns][10] = 0;
							PlayerInfo[playerid][pAGuns][11] = 0;
							SetPlayerWeapons(playerid);

							DeletePVar(playerid, "pbhealth");
							DeletePVar(playerid, "pbarmour");
		                }
		            }
	            }
            }
        }
	}
}

Timer:SpeedRadarTimer[3000]()
{
	foreach(Player, i) {
		if(playerTabbed[i] != 1 && IsACop(i) && RadarActive[i] == 1) {
			new Float:x, Float:y, Float:z, targetvehicle, string[68];
			foreach(Player, j) {
				if(IsPlayerInAnyVehicle(j) && j != i && GetPlayerVehicleSeat(j) == 0) {
					targetvehicle = GetPlayerVehicleID(j);
					if(IsVehicleStreamedIn(targetvehicle, i)) {
						GetPlayerPos(j, x, y, z);
						if(IsPlayerAimingAt(i, x, y, z, 10)) {
							RadarWarning[i] = 0;
							format(string, sizeof(string), "%s (ID: %i) ~n~Hiz: %.0f MPH", GetVehicleName(targetvehicle), j, fVehSpeed[j]);
//							TextDrawSetString(RadarContext[i], string);
						}
					}
				}
			}
			if(RadarWarning[i] >= 2) { // 6 seconds
		//		TextDrawSetString(RadarContext[i], "Hiz Araniyor...");
			} else RadarWarning[i] ++;
		}
	}
}

// Timer Name: ServerHeartbeat()
// TickRate: 1 secs.
Timer:ServerHeartbeat[1000]()
{
	foreach(Player, i)
	{
		if(playerTabbed[i] != 1) switch(PlayerInfo[i][pLevel])
		{
			case 0 .. 2: PlayerInfo[i][pPayCheck] += 1;
			case 3 .. 4: PlayerInfo[i][pPayCheck] += 2;
			case 5 .. 6: PlayerInfo[i][pPayCheck] += 3;
			case 7 .. 8: PlayerInfo[i][pPayCheck] += 4;
			case 9 .. 10: PlayerInfo[i][pPayCheck] += 5;
			case 11 .. 12: PlayerInfo[i][pPayCheck] += 6;
			case 13 .. 14: PlayerInfo[i][pPayCheck] += 7;
			case 15 .. 16: PlayerInfo[i][pPayCheck] += 8;
			case 17 .. 18: PlayerInfo[i][pPayCheck] += 9;
			case 19 .. 20: PlayerInfo[i][pPayCheck] += 10;
			default: PlayerInfo[i][pPayCheck] += 11;
		}

		if(GetPVarType(i, "DistortAim") != 0) {
		    if(GetPlayerSurfingVehicleID(i) == INVALID_VEHICLE_ID) {
				DeletePVar(i, "DistortAim");
				SetPlayerDrunkLevel(i, 0);
			}
		}

		if(GetPlayerSurfingVehicleID(i) != INVALID_VEHICLE_ID && AdminDuty[i] == 0) {
		    if(GetVehicleSpeedByVehicleID(GetPlayerSurfingVehicleID(i)) > 7) {
			    if(GetPVarType(i, "DistortAim") == 0) {
					switch(GetVehicleModel(GetPlayerSurfingVehicleID(i))) {
					    case 422, 478, 543, 554, 600, 605, 607, 472, 473, 493, 595, 484, 430, 453, 452, 446, 454: {
							SetPVarInt(i, "DistortAim", 1);
							SetPlayerDrunkLevel(i, 35000);
						}
						default: {
						    GetPlayerPos(i, PlayerInfo[i][pPos_x], PlayerInfo[i][pPos_y], PlayerInfo[i][pPos_z]);
						    SetPlayerPos(i, PlayerInfo[i][pPos_x], PlayerInfo[i][pPos_y]+1.5, PlayerInfo[i][pPos_z]);
						    GameTextForPlayer(i, "~g~ Kaydin ve dustun", 1500, 3);
						}
					}
				}
			}
		}

		if(PlayerInfo[i][pJailed] > 0)
		{
			if(PlayerInfo[i][pJailTime] > 0)
			{
				if(playerTabbed[i] != 1)
				{
					PlayerInfo[i][pJailTime]--;
				}
			}
			if(PlayerInfo[i][pJailTime] <= 0)
			{
				PlayerInfo[i][pJailTime] = 0;
				if(PlayerInfo[i][pJailed] == 1)
				{
					SetPlayerInterior(i, 6);
					PlayerInfo[i][pInt] = 6;
					SetPlayerPos(i, 246.3764, 69.6958, 1003.6406);
					SetPlayerVirtualWorld(i, 20002);
					PlayerInfo[i][pVW] = 20002;
					SetPlayerFacingAngle(i, 180.0);
				}
				else if(PlayerInfo[i][pJailed] == 2)
				{
					SetPlayerInterior(i, 0);
					PlayerInfo[i][pInt] = 0;
					SetPlayerVirtualWorld(i, 0);
					PlayerInfo[i][pVW] = 0;
					SetPlayerPos(i,343.1081,-1521.4404,33.2985);
				}
				else if(PlayerInfo[i][pJailed] == 3)
				{
					SetPlayerInterior(i, 0);
					PlayerInfo[i][pInt] = 0;
					SetPlayerVirtualWorld(i, 0);
					PlayerInfo[i][pVW] = 0;
					SetPlayerPos(i,1529.6,-1691.2,13.3);

					strcpy(PlayerInfo[i][pPrisonedBy], "Nobody", 64);
					strcpy(PlayerInfo[i][pPrisonReason], "Yok", 64);
				}
				else if(PlayerInfo[i][pJailed] == 4)
				{
					SetPlayerInterior(i, 0);
					PlayerInfo[i][pInt] = 0;
					SetPlayerVirtualWorld(i, 0);
					PlayerInfo[i][pVW] = 0;
					SetPlayerPos(i,1529.6,-1691.2,13.3);
				}
				PlayerInfo[i][pJailed] = 0;
				PhoneOnline[i] = 0;
				SendClientMessage(i, COLOR_GRAD1,"Topluma olan borcunu dedin.");
				GameTextForPlayer(i, "~g~Ozgursun!~n~~w~Daha iyi bir sivil olmay dene.", 5000, 1);
				ClearCrime(i);
				SetPlayerToTeamColor(i);
			}
		}

		if(CommandSpamTimes[i] != 0)
		{
			CommandSpamTimes[i]--;
		}
		if(TextSpamTimes[i] != 0)
		{
			TextSpamTimes[i]--;
		}

		if(PlayerDragged[i] == 1) {
			if (PlayerDraggedBy[i] != INVALID_PLAYER_ID && IsCopDragging[PlayerDraggedBy[i]] == i) {
				if (!IsPlayerInAnyVehicle(i) && !IsPlayerInAnyVehicle(PlayerDraggedBy[i])) {
					new Float:gx,Float:gy,Float:gz;
					GetPlayerPos(PlayerDraggedBy[i], gx, gy, gz);
					Streamer_UpdateEx(i, gx, gy, gz);
					if (GetPlayerVirtualWorld(i) != GetPlayerVirtualWorld(PlayerDraggedBy[i])) {
						SetPlayerVirtualWorld(i,GetPlayerVirtualWorld(PlayerDraggedBy[i]));
						PlayerInfo[i][pVW] = GetPlayerVirtualWorld(PlayerDraggedBy[i]);
					}
					if (GetPlayerInterior(i) != GetPlayerInterior(PlayerDraggedBy[i])) {
						SetPlayerInterior(i,GetPlayerInterior(PlayerDraggedBy[i]));
						PlayerInfo[i][pInt] = GetPlayerInterior(PlayerDraggedBy[i]);
					}
					SetPlayerPos(i, gx, gy+1, gz);
					GameTextForPlayer(i, "SURUKLENIYORSUN...", 5000, 3);
				} else PlayerDragged[i] = 0;
			} else PlayerDragged[i] = 0;
		}

		if(IsPlayerInAnyVehicle(i))
		{
			if(GetPlayerState(i) == PLAYER_STATE_DRIVER) SetPlayerArmedWeapon(i, 0);
			else if(PlayerInfo[i][pGuns][4] == 0) SetPlayerArmedWeapon(i, 0);
			else SetPlayerArmedWeapon(i, 29);
		}

		if(InsideMainMenu[i] == 1) {
		    new string[128];
		    format(string, sizeof(string), "Online Oyuncular: %d", Iter_Count(Player));
		}

		if(GetPlayerSpecialAction(i) == SPECIAL_ACTION_USEJETPACK && JetPack[i] == 0 && AdminDuty[i] != 1) {
			new string[74 + MAX_PLAYER_NAME];
		    format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d)  adl oyuncu jetpack hilesi kullanyor olabilir.", GetPlayerNameEx(i), i);
			ABroadCast(COLOR_YELLOW, string, 2);
			SetPVarInt(i, "jphW", GetPVarInt(i, "jphW")+1);

			if(GetPVarInt(i, "jphW") >= 3) {
				format(string, sizeof(string), "%s adl oyuncu hile ile jetpack alm olabilir.", GetPlayerNameEx(i));
				AddAutomatedFlag(i, string);
				Log("logs/hack.log", string);
			}
		}

		if(GetPlayerState(i) == PLAYER_STATE_DRIVER && AdminDuty[i] != 1 && !IsAPlane(GetPlayerVehicleID(i))) {
  			new Float:fCurrentSpeed;
  			fCurrentSpeed = player_get_speed(i);
  			fVehSpeed[i] = fCurrentSpeed;
			if(fCurrentSpeed > 200) {
				new string[74 + MAX_PLAYER_NAME];
   				format(string, sizeof(string), "{AA3333}AdminUyars{FFFF00}: %s (ID %d) adl oyuncu hz hilesi kullanyor olabilir.(hz %d MPH'e kadar kt).", GetPlayerNameEx(i), i, fCurrentSpeed);
   				ABroadCast(COLOR_YELLOW, string, 2);
   				Log("logs/hizhilesi.log", string);
   				SetPVarInt(i, "shW", GetPVarInt(i, "shW")+1);

   				if(GetPVarInt(i, "shW") >= 3) {
	   				format(string, sizeof(string), "%s adl oyuncu hiz hilesi olabilir.(hz %d MPH'e kadar kt).", GetPlayerNameEx(i), fCurrentSpeed);
	   				AddAutomatedFlag(i, string);
   				}
			}
		}

		if(UsedFind[i] >= 1)
			--UsedFind[i];

		if(FindTime[i] >= 1) {
			if(FindTime[i] == FindTimePoints[i]) {
				FindTime[i] = 0;
				FindTimePoints[i] = 0;
				SetPlayerMarkerForPlayer(i, FindingPlayer[i], 0xFFFFFF00);
				SetPlayerToTeamColor(FindingPlayer[i]);
				FindingPlayer[i] = -1;
				PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0);
				GameTextForPlayer(i, "~r~Kirmizi ikon kayboldu", 2500, 1);
			} else {
			    new string[32];
				format(string, sizeof(string), "%d", FindTimePoints[i] - FindTime[i]);
				GameTextForPlayer(i, string, 1500, 6);
				FindTime[i] += 1;
			}
		}

		if(CalledCops[i] >= 1)
		{
			if(CopsCallTime[i] < 1) { CopsCallTime[i] = 0; HidePlayerBeaconForCops(i); CalledCops[i] = 0; }
			else
			{
				CopsCallTime[i]--;
			}
		}
		if(CalledMedics[i] >= 1)
		{
			if(MedicsCallTime[i] < 1) { MedicsCallTime[i] = 0; HidePlayerBeaconForMedics(i); CalledMedics[i] = 0; }
			else
			{
				MedicsCallTime[i]--;
			}
		}

		if(NewbieTimer[i] > 0)
		{
			NewbieTimer[i]--;
		}
		if(GlobalChatTimer[i] > 0)
		{
			GlobalChatTimer[i]--;
		}
		if(JustReported[i] > 0)
		{
			JustReported[i]--;
		}
		if(TaxiCallTime[i] > 0)
		{
			if(TaxiAccepted[i] < 999)
			{
				if(IsPlayerConnected(TaxiAccepted[i]))
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(TaxiAccepted[i], X, Y, Z);
					SetPlayerCheckpoint(i, X, Y, Z, 5);
				}
			}
		}
		if(EMSCallTime[i] > 0)
		{
			if(EMSAccepted[i] < INVALID_PLAYER_ID)
			{
				if(IsPlayerConnected(EMSAccepted[i]))
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(EMSAccepted[i], X, Y, Z);
					new zone[MAX_ZONE_NAME];
					Get3DZone(X, Y, Z, zone, sizeof(zone));
					new string[128];
					format(string, sizeof(string), "Hastann u anda olduu yer %s.", zone);
					SetPlayerCheckpoint(i, X, Y, Z, 5);
				}
			}
		}

		if(BusCallTime[i] > 0)
		{
			if(BusAccepted[i] < 999)
			{
				if(IsPlayerConnected(BusAccepted[i]))
				{
					new Float:X,Float:Y,Float:Z;
					GetPlayerPos(BusAccepted[i], X, Y, Z);
					SetPlayerCheckpoint(i, X, Y, Z, 5);
				}
			}
		}
		if(MedicCallTime[i] > 0)
		{
			if(MedicCallTime[i] == 45) { MedicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Kirmizi ikon kayboldu", 2500, 1); }
			else
			{
			    new string[128];
				format(string, sizeof(string), "%d", 45 - MedicCallTime[i]);
				new Float:X,Float:Y,Float:Z;
				GetPlayerPos(MedicAccepted[i], X, Y, Z);
				SetPlayerCheckpoint(i, X, Y, Z, 5);
				GameTextForPlayer(i, string, 1500, 6);
				MedicCallTime[i] += 1;
			}
		}
		if(MechanicCallTime[i] > 0)
		{
			if(MechanicCallTime[i] == 30) { MechanicCallTime[i] = 0; DisablePlayerCheckpoint(i); PlayerPlaySound(i, 1056, 0.0, 0.0, 0.0); GameTextForPlayer(i, "~r~Kirmizi ikon kayboldu", 2500, 1); }
			else
			{
			    new string[128];
				format(string, sizeof(string), "%d", 30 - MechanicCallTime[i]);
				GameTextForPlayer(i, string, 1500, 6);
				MechanicCallTime[i] += 1;
			}
		}

		if(PlayerInfo[i][pMechTime] > 0) PlayerInfo[i][pMechTime]--;
		if(PlayerInfo[i][pLawyerTime] > 0) PlayerInfo[i][pLawyerTime]--;
		if(PlayerInfo[i][pLawyerFreeTime] > 0) PlayerInfo[i][pLawyerFreeTime]--;
		if(PlayerInfo[i][pDrugsTime] > 0) PlayerInfo[i][pDrugsTime]--;


		if(PlayerInfo[i][pGCMuted] == 2 && PlayerInfo[i][pGCMutedTime] < 1)
		{
		    PlayerInfo[i][pGCMuted] = 0;
		}
		if(PlayerInfo[i][pGCMuted] > 1) PlayerInfo[i][pGCMutedTime]--;


		if(PlayerInfo[i][pRMuted] == 2 && PlayerInfo[i][pRMutedTime] < 1)
		{
		    PlayerInfo[i][pRMuted] = 0;
		}
		if(PlayerInfo[i][pRMuted] > 1) PlayerInfo[i][pRMutedTime]--;


		if(PlayerInfo[i][pCarTime] > 0)
		{
  			if(PlayerInfo[i][pCarTime] <= 0)
   			{
      			PlayerInfo[i][pCarTime] = 0;
		    }
		    else
		    {
      			PlayerInfo[i][pCarTime] -= 1;
		    }
		}

		if(PlayerInfo[i][pSexTime] > 0)
		{
			if(PlayerInfo[i][pSexTime] <= 0)
			{
				PlayerInfo[i][pSexTime] = 0;
			}
			else
			{
				PlayerInfo[i][pSexTime] -= 1;
			}
		}

		if(WantLawyer[i] >= 1)
		{
			CallLawyer[i] = 111;
			if(WantLawyer[i] == 1)
			{
				SendClientMessage(i, COLOR_LIGHTRED, "Avukat istiyor musun? (evet yada hayir yaz");
			}
			WantLawyer[i] ++;
			if(WantLawyer[i] == 8)
			{
				SendClientMessage(i, COLOR_LIGHTRED, "Avukat istiyor musun? (evet yada hayir yaz");
			}
			if(WantLawyer[i] == 15)
			{
				SendClientMessage(i, COLOR_LIGHTRED, "Avukat istiyor musun? (evet yada hayir yaz");
			}
			if(WantLawyer[i] == 20)
			{
				SendClientMessage(i, COLOR_LIGHTRED, "Senin iin artk avukat izni yok.");
				WantLawyer[i] = 0;
				CallLawyer[i] = 0;
			}
		}

		if(PlayerStoned[i] >= 3)
		{
			PlayerStoned[i] += 1;
			SetPlayerDrunkLevel(i, 40000);
			if(PlayerStoned[i] == 50)
			{
				PlayerStoned[i] = 0;
				SetPlayerDrunkLevel(i, 0);
				SendClientMessage(i, COLOR_GRAD1, "Artik sarhos degilsin!");
			}
		}

		if(BoxWaitTime[i] > 0)
		{
			if(BoxWaitTime[i] >= BoxDelay)
			{
				BoxDelay = 0;
				BoxWaitTime[i] = 0;
				PlayerPlaySound(i, 1057, 0.0, 0.0, 0.0);
				GameTextForPlayer(i, "~g~Mac Basladi", 5000, 1);
				TogglePlayerControllable(i, 1);
				RoundStarted = 1;
			}
			else
			{
				new string[32];
				format(string, sizeof(string), "%d", BoxDelay - BoxWaitTime[i]);
				GameTextForPlayer(i, string, 1500, 6);
				BoxWaitTime[i] += 1;
			}
		}
		if(RoundStarted > 0)
		{
			if(PlayerBoxing[i] > 0)
			{
				new trigger = 0;
				new Lost = 0;
				new Float:angle;
				new Float:health;
				GetPlayerHealth(i, health);
				if(health < 12)
				{
					if(i == Boxer1) { Lost = 1; trigger = 1; }
					else if(i == Boxer2) { Lost = 2; trigger = 1; }
				}
				if(health < 28) { GetPlayerFacingAngle(i, angle); SetPlayerFacingAngle(i, angle + 85); }
				if(trigger)
				{
					new string[128];
					new winner[MAX_PLAYER_NAME];
					new loser[MAX_PLAYER_NAME];
					if(Lost == 1)
					{
						if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
						{
							if(IsPlayerInRangeOfPoint(Boxer1,25.0,765.952270, 4.167977, 1000.719238) || IsPlayerInRangeOfPoint(Boxer2,25.0,765.952270, 4.167977, 1000.719238))
							{
								SetPlayerPos(Boxer1, 765.952270, 4.167977, 1000.719238); SetPlayerPos(Boxer2, 765.952270, 4.167977, 1000.719238);
								SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
								GetPlayerName(Boxer1, loser, sizeof(loser));
								GetPlayerName(Boxer2, winner, sizeof(winner));
								SetPlayerWeapons(Boxer1);
								SetPlayerWeapons(Boxer2);
								if(PlayerInfo[Boxer1][pJob] == 12 || PlayerInfo[Boxer1][pJob2] == 12) { PlayerInfo[Boxer1][pLoses] += 1; }
								if(PlayerInfo[Boxer2][pJob] == 12 || PlayerInfo[Boxer1][pJob2] == 12) { PlayerInfo[Boxer2][pWins] += 1; }
								format(string, sizeof(string), "%s ile yaptn ma kaybettin.", winner);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~r~Kaybettin", 3500, 1);
								format(string, sizeof(string), "%s ile yaptn ma kazandn.", loser);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~You won", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
									SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "Matan dolay kendini bitkin hissediyorsun, git bireyler i.");
									SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
									SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "Ma yapm olsan bile, kendini ok iyi hissediyorsun.");
									SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
									SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "Matan dolay kendini bitkin hissediyorsun, git bireyler i.");
									SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
									SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "Ma yapm olsan bile, kendini ok iyi hissediyorsun.");
									SetPlayerHealth(Boxer2, 50.0);
								}
								GameTextForPlayer(Boxer1, "~g~Mac sona erdi", 5000, 1); GameTextForPlayer(Boxer2, "~g~Mac sona erdi", 5000, 1);

								if(PlayerInfo[Boxer2][pJob] == 12 || PlayerInfo[Boxer2][pJob2] == 12) {
								    #if defined DOUBLE_EXP_ENABLED
										new hour,minuite,second;
										gettime(hour,minuite,second);
										if(DoubleEXPcheck(hour))
										{
	 							 			PlayerInfo[Boxer2][pBoxSkill] += 2;
	    									SendClientMessage(Boxer2, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
										}
										else
										{
											SendClientMessage(Boxer2, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
											PlayerInfo[Boxer2][pBoxSkill]++;
										}
									#else
									    PlayerInfo[Boxer2][pBoxSkill]++;
									#endif
								}

								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
						}
					}
					else if(Lost == 2)
					{
						if(IsPlayerConnected(Boxer1) && IsPlayerConnected(Boxer2))
						{
							if(IsPlayerInRangeOfPoint(Boxer1,25.0,765.952270, 4.167977, 1000.719238) || IsPlayerInRangeOfPoint(Boxer2,25.0, 765.952270, 4.167977, 1000.719238))
							{
								SetPlayerPos(Boxer1, 765.952270, 4.167977, 1000.719238); SetPlayerPos(Boxer2, 765.952270, 4.167977, 1000.719238);
								SetPlayerInterior(Boxer1, 5); SetPlayerInterior(Boxer2, 5);
								GetPlayerName(Boxer1, winner, sizeof(winner));
								GetPlayerName(Boxer2, loser, sizeof(loser));
								SetPlayerWeapons(Boxer1);
								SetPlayerWeapons(Boxer2);
								if(PlayerInfo[Boxer2][pJob] == 12 || PlayerInfo[Boxer2][pJob2] == 12) { PlayerInfo[Boxer2][pLoses] += 1; }
								if(PlayerInfo[Boxer1][pJob] == 12 || PlayerInfo[Boxer1][pJob2] == 12) { PlayerInfo[Boxer1][pWins] += 1; }
								format(string, sizeof(string), "%s ile yaptn ma kaybettin.", winner);
								SendClientMessage(Boxer2, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer2, "~r~Kaybettin", 3500, 1);
								format(string, sizeof(string), "%s ile yaptn ma kazandn.", loser);
								SendClientMessage(Boxer1, COLOR_LIGHTBLUE, string);
								GameTextForPlayer(Boxer1, "~g~Kazandin", 3500, 1);
								if(GetPlayerHealth(Boxer1, health) < 20)
								{
									SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "Matan dolay kendini bitkin hissediyorsun, git bireyler i.");
									SetPlayerHealth(Boxer1, 30.0);
								}
								else
								{
									SendClientMessage(Boxer1, COLOR_LIGHTBLUE, "Ma yapm olsan bile, kendini ok iyi hissediyorsun.");
									SetPlayerHealth(Boxer1, 50.0);
								}
								if(GetPlayerHealth(Boxer2, health) < 20)
								{
									SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "Matan dolay kendini bitkin hissediyorsun, git bireyler i.");
									SetPlayerHealth(Boxer2, 30.0);
								}
								else
								{
									SendClientMessage(Boxer2, COLOR_LIGHTBLUE, "Ma yapm olsan bile, kendini ok iyi hissediyorsun.");
									SetPlayerHealth(Boxer2, 50.0);
								}
								GameTextForPlayer(Boxer1, "~g~Mac sona erdi", 5000, 1); GameTextForPlayer(Boxer2, "~g~Mac sona erdi", 5000, 1);

					   			#if defined DOUBLE_EXP_ENABLED
									new hour,minuite,second;
									gettime(hour,minuite,second);
									if(DoubleEXPcheck(hour)){
										PlayerInfo[Boxer1][pBoxSkill] += 2;
	    								SendClientMessage(Boxer2, COLOR_YELLOW, "ki kat exp etkinliinden dolay 2 Yetenek Puan kazandnz.");
									}
									else {
										SendClientMessage(Boxer2, COLOR_YELLOW, "ki kat exp etkinlii saatinde deilseniz yalnzca 1 Yetenek Puan kazanrsnz.");
										PlayerInfo[Boxer1][pBoxSkill]++;
									}
								#else
								    PlayerInfo[Boxer1][pBoxSkill]++;
								#endif

								PlayerBoxing[Boxer1] = 0;
								PlayerBoxing[Boxer2] = 0;
							}
						}
					}
					InRing = 0;
					RoundStarted = 0;
					Boxer1 = INVALID_PLAYER_ID;
					Boxer2 = INVALID_PLAYER_ID;
					trigger = 0;
				}
			}
		}

		if(PlayerCuffed[i] == 1)
		{
			if(PlayerCuffedTime[i] <= 0)
			{
				//Frozen[i] = 0;
				SetPVarInt(i, "IsFrozen", 0);
				TogglePlayerControllable(i, 1);
				PlayerCuffed[i] = 0;
				SetPVarInt(i, "PlayerCuffed", 0);
				PlayerCuffedTime[i] = 0;
				ClearAnimations(i, 1);
				SetPlayerSkin(i, GetPlayerSkin(i));
				SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(i, X, Y, Z);
				SetPlayerPos(i, X, Y, Z);
				if(PlayerDraggedBy[i] != INVALID_PLAYER_ID) {
					IsCopDragging[PlayerDraggedBy[i]] = INVALID_PLAYER_ID;
					PlayerDragged[i] = 0;
					PlayerDraggedBy[i] = INVALID_PLAYER_ID;
				}
				if(IsPlayerAttachedObjectSlotUsed(i, 0))
					RemovePlayerAttachedObject(i, 0);
			}
			else
			{
				PlayerCuffedTime[i] -= 1;
			}
		}
		if(PlayerCuffed[i] == 2)
		{
			if(PlayerCuffedTime[i] <= 0)
			{
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(i, X, Y, Z);
				new copinrange;
				foreach(Player, j)
				{
					if(IsPlayerInRangeOfPoint(j, 30, X, Y, Z) && IsACop(j))
					{
						copinrange = 1;
					}
				}

				if(copinrange == 0)
				{
					//Frozen[i] = 0;
					ClearAnimations(i, 1);
					SetPlayerSpecialAction(i, SPECIAL_ACTION_NONE);
					DeletePVar(i, "IsFrozen");
					GameTextForPlayer(i, "~r~Kelepceden kurtuldun, ozgursun!", 2500, 3);

				 	if(IsPlayerAttachedObjectSlotUsed(i, 0))
						RemovePlayerAttachedObject(i, 0);

					TogglePlayerControllable(i, 1);
					PlayerCuffed[i] = 0;
					DeletePVar(i, "PlayerCuffed");
					PlayerCuffedTime[i] = 0;
					if(PlayerDraggedBy[i] != INVALID_PLAYER_ID) {
						IsCopDragging[PlayerDraggedBy[i]] = INVALID_PLAYER_ID;
						PlayerDragged[i] = 0;
						PlayerDraggedBy[i] = INVALID_PLAYER_ID;
					}

					new string[76];
					format(string, sizeof(string), "%s adl kii kelepelerinden kurtulmay baard.", GetPlayerNameEx(i));
					ProxDetector(30.0, i, string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
				else
				{
					PlayerCuffedTime[i] = 60;
				}
			}
			else
			{
				PlayerCuffedTime[i] -= 1;
			}
		}

		if(TransportDriver[i] < 999 && AdminDuty[i] == 0)
		{
			if(GetPlayerVehicleID(i) != GetPlayerVehicleID(TransportDriver[i]) || !TransportDuty[TransportDriver[i]])
			{
				if(IsPlayerConnected(TransportDriver[i]))
				{
					TransportMoney[TransportDriver[i]] += TransportCost[i];
					TransportTime[TransportDriver[i]] = 0;
					TransportCost[TransportDriver[i]] = 0;
					new string[36];
					format(string, sizeof(string), "~w~Musteri ayrildi~n~~g~$%d kazanildi",TransportCost[i]);
					GameTextForPlayer(TransportDriver[i], string, 5000, 1);
					TransportDriver[i] = 999;
				}
			}
			else if(TransportTime[i] >= 16 && AdminDuty[i] == 0)
			{
				TransportTime[i] = 1;
				if(TransportDriver[i] < 999)
				{
					if(IsPlayerConnected(TransportDriver[i]))
					{
	  					TransportCost[i] += TransportValue[TransportDriver[i]];
						TransportCost[TransportDriver[i]] = TransportCost[i];
					}
				}
			}
			TransportTime[i] += 1;
			new string[24];
			format(string, sizeof(string), "~r~%d ~w~: ~g~$%d",TransportTime[i],TransportCost[i]);
			GameTextForPlayer(i, string, 15000, 6);
			if(TransportCost[i] > GetPlayerCash(i))
			{
			    RemovePlayerFromVehicle(i);
			    new Float:slx, Float:sly, Float:slz;
				GetPlayerPos(i, slx, sly, slz);
				SetPlayerPos(i, slx, sly, slz + 2);
			    GameTextForPlayer(i, "~r~Paran kalmadi", 4000, 4);
			}
		}
	// end
	}
}

// Timer Name: ServerHeartbeatTwo()
// TickRate: 1 secs.
Timer:ServerHeartbeatTwo[1000]()
{
	foreach(Player, i)
	{
		if(CellTime[i] > 0)
		{
			if(CellTime[i] == cchargetime)
			{
				CellTime[i] = 1;
				if(Mobile[Mobile[i]] == i)
				{
					CallCost[i] += callcost;
				}
			}
			CellTime[i]++;
			if(Mobile[Mobile[i]] == INVALID_PLAYER_ID && CellTime[i] == 5)
			{
				if(IsPlayerConnected(Mobile[i]))
				{
				    new Float:rX, Float:rY, Float:rZ;
				    GetPlayerPos(i, rX, rY, rZ);
					new string[18 + MAX_PLAYER_NAME];
					format(string, sizeof(string), "%s adl kiinin telefonu alyor.", GetPlayerNameEx(Mobile[i]));
					ProxDetector(30.0, Mobile[i], string, COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE,COLOR_PURPLE);
				}
			}
		}
		if(CellTime[i] == 0 && CallCost[i] > 0)
		{
			new string[28];
			format(string, sizeof(string), "~w~Cagri Ucreti~n~~r~$%d",CallCost[i]);
			GivePlayerCash(i, -CallCost[i]);
			GameTextForPlayer(i, string, 5000, 1);
			CallCost[i] = 0;
		}
  		if(GetPVarType(i, "Injured"))
	    {
	        SetPlayerArmedWeapon(i, 0);
	        if(GetPVarInt(i, "EMSAttempt") == -1 || GetPVarInt(i, "EMSAttempt") == 1 || GetPVarInt(i, "EMSAttempt") == 2)
	        {
				if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
				{
					SendClientMessage(i, COLOR_WHITE, "Kendinden gemi bir ekildeydin, acilen hastaneye getirildin.");
 					KillEMSQueue(i);
					SpawnPlayer(i);
				}
			}
		}
		if(GetPVarInt(i, "rccam") == 0)
 		{
			if(GetVehicleModel(GetPlayerVehicleID(i)) != 594)
			{
	 			DestroyVehicle(GetPVarInt(i, "rcveh"));
	 			VehicleRadioStation[GetPVarInt(i, "rcveh")] = 0;
	     		KillTimer(GetPVarInt(i, "rccamtimer"));
			}
		}
		if(IsPlayerInRangeOfPoint(i,2.0,1544.2,-1353.4,329.4))
		{ // Startower parachute
            if(PlayerInfo[i][pGuns][11] != 46)
            {
		    	GivePlayerValidWeapon(i, 46, 99999);
			}
		}
		if(GetPlayerState(i) == PLAYER_STATE_ONFOOT) for(new h = 0; h < sizeof(FamilyInfo); h++)
		{
			if(IsPlayerInRangeOfPoint(i, 2.0, FamilyInfo[h][FamilySafe][0], FamilyInfo[h][FamilySafe][1], FamilyInfo[h][FamilySafe][2]))
			{
				if(FamilyInfo[h][FamilyUSafe] == 1)
				{
					GameTextForPlayer(i, "~y~Aile kasasi~w~~n~Bilgi almak icin ~r~/ailekasayardim~w~ yaz", 5000, 3);
				}
			}
		}
		for(new h = 0; h < sizeof(Points); h++)
		{
			if(IsPlayerInRangeOfPoint(i, 2.0, Points[h][Pointx], Points[h][Pointy], Points[h][Pointz]))
			{
				if(Points[h][Type] == 1 && GetPVarInt(i, "Packages") == 0)
				{
					GameTextForPlayer(i, "~w~Materyal pakedi satin almak icin a ~n~~r~/paketal yaz", 5000, 5);
				}
				else if(Points[h][Type] == 3 && PlayerInfo[i][pPot] < 3)
				{
					GameTextForPlayer(i, "~w~Tohum satin almak icin ~r~/tohumal yaz", 5000, 5);
				}
				else if(Points[h][Type] == 4)
				{
					GameTextForPlayer(i, "~w~Crack satin almak icin ~r~/crackal yaz", 5000, 5);
				}
				else if(Points[h][Type] == 5)
				{
					GameTextForPlayer(i, "~w~Kutu satin almak icin ~r~/kasaal yaz.", 5000, 5);
				}
			}
		}
	}
}

// Timer Name: playerTabbedLoop()
// TickRate: 1 secs.
Timer:playerTabbedLoop[1000]()
{
	foreach(Player, x)
	{
	    playerConnectedS[x]++;
	    if(playerSeconds[x] < gettime()-1 && playerTabbed[x] != 1 && playerConnectedS[x] >= 5 && 1 <= GetPlayerState(x) <= 3)
	    {
	        playerTabbed[x] = 1;
	        SetTimerEx("AFKick",1000,false,"d", x);
	    }
		playerLastTyped[x]++;
		GetPlayerPos(x, PlayerPos[x][0], PlayerPos[x][1], PlayerPos[x][2]);
		if(PlayerPos[x][0] == PlayerPos[x][3] && PlayerPos[x][1] == PlayerPos[x][4] && PlayerPos[x][2] == PlayerPos[x][5] && playerTabbed[x] != 1)
		{
		    if(playerLastTyped[x] < playerAFKTime[x]) playerAFKTime[x] = playerLastTyped[x];
		    if(playerAFK[x] != 0) playerAFKTime[x]++;
		    else playerAFK[x] = 1;
		    if(playerAFKTime[x] >= 900 && PlayerInfo[x][pAdmin] < 5)
			{
			    SendClientMessage(x, COLOR_WHITE, "15 dakikadan fazla AFK olduundan dolay otomatik olarak kicklendin.");
				Kick(x);
			}
		}
		else
		{
		    if(playerAFK[x] != 0) playerAFK[x] = 0, playerAFKTime[x] = 0;
		}
		PlayerPos[x][3] = PlayerPos[x][0];
		PlayerPos[x][4] = PlayerPos[x][1];
		PlayerPos[x][5] = PlayerPos[x][2];
	}
}

// Timer Name: EMSUpdate()
// TickRate: 5 secs.
Timer:EMSUpdate[5000]()
{
	foreach(Player, i)
	{
		new Float:posX, Float:posY, Float:posZ;
 		GetPlayerPos(i, posX, posY, posZ);

		new Float:iArmor;
		GetPlayerArmour(i, iArmor);
		if(iArmor > ValidArmor[i] && AdminDuty[i] == 0)
		{
		    new string[128];
			format(string, sizeof(string), "%s adli oyuncu armor hack olabilir.", GetPlayerNameEx(i));
			AddAutomatedFlag(i, string);
			format(string, sizeof(string), "{AA3333}AdminKomutu{FFFF00}: %s (ID %d) adl oyuncu zirh hilesi olabilir", GetPlayerNameEx(i), i);
			ABroadCast(COLOR_YELLOW, string, 2);
		}

	    if(GetPVarType(i, "Injured"))
	    {
	        if(GetPVarInt(i, "EMSAttempt") != 0)
			{

				new Float:health;
 				GetPlayerHealth(i,health);
				SetPlayerHealth(i, health-1);
				if(GetPVarInt(i, "EMSAttempt") == -1)
				{
    				if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
	        			SendClientMessage(i, COLOR_WHITE, "Kendinden gemi bir ekildeydin, acilen hastaneye getirildin.");
	        			KillEMSQueue(i);
						SpawnPlayer(i);
	    			}
					GameTextForPlayer(i, "~g~Yaralisin~n~~y~ /cagir ambulans ~w~veya ~y~/kabulet olum", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 1)
				{
	    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
	        			SendClientMessage(i, COLOR_WHITE, "Kendinden gemi bir ekildeydin, acilen hastaneye getirildin.");
	        			KillEMSQueue(i);
						SpawnPlayer(i);
	    			}
					GameTextForPlayer(i, "~g~Yaralisin~n~~w~Ambulans gelmesini bekliyorsun.", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 2)
				{
	    			if(!IsPlayerInRangeOfPoint(i, 3.0, GetPVarFloat(i,"MedicX"), GetPVarFloat(i,"MedicY"), GetPVarFloat(i,"MedicZ")))
	    			{
	        			SendClientMessage(i, COLOR_WHITE, "Kendinden gemi bir ekildeydin, acilen hastaneye getirildin.");
	        			KillEMSQueue(i);
						SpawnPlayer(i);
	    			}
	    			GameTextForPlayer(i, "~g~Kurtarildin~n~~w~Tedavi edilmeyi bekliyorsun.", 5000, 3);
				}
				if(GetPVarInt(i, "EMSAttempt") == 3)
				{
	    			if(IsPlayerInAnyVehicle(i))
	    			{
	        			new ambmodel = GetPlayerVehicleID(i);
	        			if(IsAnAmbulance(ambmodel))
	        			{
	    					GameTextForPlayer(i, "~g~Kurtarildin~n~~w~Ambulansin seni hastaneye goturmesini bekliyorsun.", 5000, 3);
						}
						else
						{
		    				SendClientMessage(i, COLOR_WHITE, "Can destei olmad iin baygn dtn, acilen hastaneye gnderildin.");
	        				KillEMSQueue(i);
							SpawnPlayer(i);
						}
					}
					else
					{
		    			SendClientMessage(i, COLOR_WHITE, "Aratan dtn ve acil olarak hastaneye gnderildin.");
	        			KillEMSQueue(i);
						SpawnPlayer(i);
					}
				}

				GetPlayerHealth(i, health);
				if(health <= 5)
				{
	    			SendClientMessage(i, COLOR_WHITE, "Kendinden gemi bir ekildeydin, acilen hastaneye getirildin.");
	    			KillEMSQueue(i);
					SpawnPlayer(i);
				}
	        }
	    }
	}
}

// Timer Name: ProductionUpdate()
// TickRate: 5 Minutes.
Timer:ProductionUpdate[300000]()
{
	foreach(Player, i)
	{
		if(playerTabbed[i] != 1)
		{
			if(PlayerInfo[i][pPayReady] < 6) { PlayerInfo[i][pPayReady] += 1; } //+ 5 min to PayDay anti-abuse
		}
	}
	SaveFamilies();
}

// Timer Name: SyncUp()
// TickRate: 1 Minute.
Timer:SyncUp[60000]()
{
	new string[128];
	new hour,minuite,second;

	SyncTime();
	ScoreUpdate();

	gettime(hour,minuite,second);
	FixHour(hour);
	hour = shifthour;
	if(minuite < 10)
	{
		format(string, sizeof(string), "%d:0%d", hour, minuite);
	}
	else
	{
		format(string, sizeof(string), "%d:%d", hour, minuite);
	}

	foreach(Player, i)
	{
		if(IsValidDynamicObject(PlayerInfo[i][pWeedObject]) && PlayerInfo[i][pWeedGrowth] < 45) switch(PlayerInfo[i][pDrugsSkill])
		{
			case 0 .. 50: PlayerInfo[i][pWeedGrowth] += 1;
			case 51 .. 100: PlayerInfo[i][pWeedGrowth] += 2;
			case 101 .. 200: PlayerInfo[i][pWeedGrowth] += 3;
			case 201 .. 400: PlayerInfo[i][pWeedGrowth] += 4;
			default: PlayerInfo[i][pWeedGrowth] += 5;
		}
		switch(GetPVarInt(i, "STD"))
		{
			case 1:
			{
				new Float: health;
				GetPlayerHealth(i, health);
				SetPlayerHealth(i, health - 5.0);
				SendClientMessage(i, COLOR_LIGHTBLUE, "AIDS yznden 4 can kaybettin.");
			}
			case 2:
			{
				new Float: health;
				GetPlayerHealth(i, health);
				SetPlayerHealth(i, health - 12.0);
				SendClientMessage(i, COLOR_LIGHTBLUE, "AIDS yznden 8 can kaybettin.");
			}
			case 3:
			{
				new Float: health;
				GetPlayerHealth(i, health);
				SetPlayerHealth(i, health - 20.0);
				SendClientMessage(i, COLOR_LIGHTBLUE, "AIDS yznden 12 can kaybettin.");
			}
		}
		if(GetPlayerCash(i) < 0)
		{
			if(!GetPVarType(i, "debtMsg"))
			{
				format(string, sizeof(string), "Devlete $%d borcun var, eer demezsen tutuklanacaksn.", GetPlayerCash(i));
				SendClientMessage(i, COLOR_LIGHTRED, string);
				SetPVarInt(i, "debtMsg", 1);
			}
		}
		else DeletePVar(i, "debtMsg");
	}
}

// Timer Name: MoneyUpdate()
// Tickrate: 1 secs.
Timer:MoneyUpdate[1000]()
{
	new
		iTempVar;

	if(iAdverTimer >= 1)
		--iAdverTimer;

	new hour,minuite,second;
	gettime(hour,minuite,second);
	FixHour(hour);
	hour = shifthour;
	new tstring[7];
	if(minuite < 10)
	{
		format(tstring, sizeof(tstring), "%d:0%d", hour, minuite);
	}
	else
	{
		format(tstring, sizeof(tstring), "%d:%d", hour, minuite);
	}

	foreach(Player, i)
	{
   		if(PlayerInfo[i][pCash] != GetPlayerMoney(i))
		{
			ResetPlayerMoney(i);
			GivePlayerMoney(i, PlayerInfo[i][pCash]);
		}

		if((iTempVar = GetPVarInt(i, "adT")) != 0)
		{
			if(--iTempVar <= 0) DeletePVar(i, "adT");
			else SetPVarInt(i, "adT", iTempVar);
		}

		if(PlayerInfo[i][pTriageTime] != 0)
		{
			PlayerInfo[i][pTriageTime]--;
  		}
		if(PlayerInfo[i][pTicketTime] != 0)
		{
			PlayerInfo[i][pTicketTime]--;
		}
		if(ServiceTime[i] != 0)
		{
			ServiceTime[i]--;
		}

		if(PlayerInfo[i][pGPS] > 0 && GetPVarType(i, "gpsonoff"))
		{
			new zone[28];
			GetPlayer2DZone(i, zone, MAX_ZONE_NAME);
//			TextDrawSetString(GPS[i], zone);
		}
		if(GetPVarInt(i, "fuelonoff") == 1)
		{
			if(IsPlayerInAnyVehicle(i))
 			{
    			SetProgressBarValue(FuelBar[i], Fuel[GetPlayerVehicleID(i)]);
 		    	UpdateProgressBar(FuelBar[i], i);
     		}
     		else
     		{
     			HideProgressBarForPlayer(i, FuelBar[i]);
 		    	DeletePVar(i, "fuelonoff");
	    		DestroyProgressBar(FuelBar[i]);
	   		 	FuelBar[i] = INVALID_BAR_ID;
  			}
		}
	}
}
// Timer Name: SpecUpdate()
// TickRate: 3 secs.
Timer:SpecUpdate[3000]()
{
	foreach(Player, i)
	{
	    if(PlayerInfo[i][pAdmin] >= 2)
	    {
		    if(Spectating[i] >= 1)
		    {
				if(Spectate[i] < 553)
				{
					new targetid = Spectate[i];
					if(!IsPlayerConnected(targetid))
					{
    					SendClientMessage(i, COLOR_WHITE, "zlediin oyuncu oyundan ayrld.");
			    		GettingSpectated[Spectate[i]] = 999;
			    		Spectating[i] = 0;
						Spectate[i] = 999;
						SetPVarInt(i, "SpecOff", 1);
						TogglePlayerSpectating(i, false);
						SetCameraBehindPlayer(i);
					}
				}
				if(Spectate[i] == 553)
				{
					TogglePlayerControllable(i, 1);
					TogglePlayerSpectating(i, 0);
					DeletePVar(i, "DoktorMasrafi");
					SpawnPlayer(i);
					Spectate[i] = 999;
					Spectating[i] = 0;
				}
				if(Spectate[i] == 556)
				{
					SetPlayerToTeamColor(i);
					Spectate[i] = 999;
				}
			}
		}
	}
}

// Timer Name: SaveUpdate()
// Tickrate: 3 Minutes.
Timer:SaveUpdate[180000]()
{
	foreach(Player, i)
	{
		if(GetPVarInt(i, "TempName") != 1 && gPlayerLogged[i] && GetPVarInt(i, "PBM") == 0 && GetPVarInt(i, "EventToken") == 0 && AdminDuty[i] == 0)
		{
			PlayerInfo[i][pInt] = GetPlayerInterior(i);
			new Float: fArmour;
			if(GetPVarType(i, "tabbedVW") != 0) {
				PlayerInfo[i][pVW] = GetPVarInt(i, "tabbedVW");
			} else PlayerInfo[i][pVW] = GetPlayerVirtualWorld(i);
			GetPlayerIp(i, PlayerInfo[i][pIP], 32);
			GetPlayerPos(i, PlayerInfo[i][pPos_x], PlayerInfo[i][pPos_y], PlayerInfo[i][pPos_z]);
			GetPlayerFacingAngle(i, PlayerInfo[i][pPos_r]);
			if(GetPlayerArmour(i, fArmour) < ValidArmor[i])	GetPlayerArmour(i, PlayerInfo[i][pArmor]);
			else PlayerInfo[i][pArmor] = ValidArmor[i];
			GetPlayerHealth(i, PlayerInfo[i][pHealth]);
		}
	}
	SaveFamilies();
	SaveFamiliesHQ();
	SaveHouses();
}

// Timer Name: ForceSaveTimer()
// Tickrate: 1 Minutes.
Timer:ForceSaveTimer[60000]()
{
	foreach(Player, i)
	{
		SaveAccount(i);
	}
	print("[ForceSaveTimer] All player accounts updated successfully.");
    UpdatePoints();
    print("[ForceSaveTimer] All points updated successfully.");
}

// Timer Name: ServerTime()
// Tickrate: 1 Second.
Timer:ServerTime[1000]()
{
    if(PSeconds > TimeFactor && (TimeFactor < -5))
 	{
		PSeconds = 1;
		PMinutes = PMinutes+10;
 	}
	if(PSeconds > TimeFactor && (TimeFactor < -4))
 	{
		PSeconds = 1;
		PMinutes = PMinutes+5;
 	}
	if(PSeconds > TimeFactor && (TimeFactor < -3))
 	{
		PSeconds = 1;
		PMinutes = PMinutes+1;
 	}
	if(PSeconds > TimeFactor && (TimeFactor < -2))
 	{
		PSeconds = 1;
		PMinutes = PMinutes+1;
 	}
	if(PSeconds > TimeFactor && (TimeFactor < -1))
 	{
		PSeconds = 1;
		PMinutes = PMinutes+1;
 	}
	if(PSeconds > TimeFactor && (TimeFactor < 1))
 	{
		PSeconds = 1;
		PMinutes = PMinutes+1;
 	}
	if(PSeconds > TimeFactor)
 	{
		PSeconds = 1;
		PMinutes = PMinutes+1;
 	}
	else
	{
		PSeconds = PSeconds+1;
	}
	if(PMinutes > 59)
	{
		PMinutes = 0;
		if(PHours > 23)
		{
			PHours = 0;
		}
		else
		{
			PHours = PHours+1;
		}
 	}
	foreach(Player, i)
	{
		SetPlayerTime(i,PHours,PMinutes);
	}
	return true;
}

public OnPlayerModelSelection(playerid, response, listid, modelid)
{
    if(listid == SkinList)
    {
        if(response)
        {
           	if(modelid < 0 || modelid > 299 || modelid == 0 || modelid == 265 || modelid == 266 || modelid == 267 || modelid == 274 || modelid == 275 || modelid == 276 || modelid == 277  || modelid == 278 || modelid == 279 || modelid == 280 || modelid == 281 || modelid == 282 || modelid == 283
			|| modelid == 284 || modelid == 285 || modelid == 286 || modelid == 287 || modelid == 288) return SendClientMessage(playerid, COLOR_GREY, "Bu skini alma yetkiniz yok!");
			if(modelid == 294) return SendClientMessage(playerid, COLOR_GREY, "Bu skini sadece VIP'ler alabilir");
			if(PlayerInfo[playerid][pCash] < 100) return SendClientMessage(playerid, COLOR_GREY, "Yeterli miktarda paranz bulunmamaktadr.");
            PlayerInfo[playerid][pSkin] = modelid;
            SetPlayerSkin(playerid, modelid);
			GivePlayerCash(playerid, -250);
        }
        else
		{
		}
    }
    return 1;
}


public KontrolEdiver(playerid) {
	new Float:x, Float:y, Float:z;
	GetPlayerCameraFrontVector(playerid, x, y, z);
	#pragma unused x
	#pragma unused y
	if(z < -0.8) {
	TogglePlayerControllable(playerid,1);
	KontrolEdildi[playerid] = 2;
	Kick(playerid);
	}
	TogglePlayerControllable(playerid,1);
	return 1;
	}
